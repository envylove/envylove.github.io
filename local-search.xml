<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>搭建Kubernetes集群</title>
    <link href="/2023/03/21/%E6%90%AD%E5%BB%BAKubernetes%E9%9B%86%E7%BE%A4/"/>
    <url>/2023/03/21/%E6%90%AD%E5%BB%BAKubernetes%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="部署前提"><a href="#部署前提" class="headerlink" title="部署前提"></a>部署前提</h1><ul><li>使用kubeadm部署Kubernetes集群的前提条件</li><li>支持Kubernetes运行的Linux主机，例如Debian、RedHat及其变体等</li><li>每主机2GB以上的内存，以及2颗以上的CPU</li><li>各主机间能够通过网络无障碍通信</li><li>独占的hostname、MAC地址以及product_uuid，主机名能够正常解析</li><li>放行由Kubernetes使用到的各端口，或直接禁用iptables</li><li>禁用各主机的上的Swap设备</li><li>各主机时间同步</li></ul><h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><ul><li>OS: Ubuntu 20.04.2 LTS</li><li>Docker：20.10.10，CGroup Driver: systemd</li><li>Kubernetes：v1.26.3, CRI: containerd, CNI: Flannel</li><li>主机</li></ul><table><thead><tr><th>主机IP</th><th>主机名称</th><th>角色</th></tr></thead><tbody><tr><td>192.168.32.200</td><td>k8s-master01.org</td><td>master</td></tr><tr><td>192.168.32.203</td><td>k8s-node01.org</td><td>node01</td></tr><tr><td>192.168.32.204</td><td>k8s-node02.org</td><td>node02</td></tr><tr><td>192.168.32.205</td><td>k8s-node03.org</td><td>node03</td></tr></tbody></table><h1 id="修改主机名称"><a href="#修改主机名称" class="headerlink" title="修改主机名称"></a>修改主机名称</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 修改192.168.32.200的主机名称为k8s-master01.org</span><br><span class="hljs-comment"># 修改192.168.32.203的主机名称为k8s-node01.org</span><br><span class="hljs-comment"># 修改192.168.32.204的主机名称为k8s-node02.org</span><br><span class="hljs-comment"># 修改192.168.32.205的主机名称为k8s-node03.org</span><br></code></pre></td></tr></table></figure><h1 id="主机时间同步"><a href="#主机时间同步" class="headerlink" title="主机时间同步"></a>主机时间同步</h1><p>在所有主机上安装 chrony </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 所有主机上执行</span><br>root@k8s-master01:~<span class="hljs-comment"># apt install -y chrony</span><br></code></pre></td></tr></table></figure><p>建议用户配置使用本地的的时间服务器，在节点数量众多时尤其如此。存在可用的本地时间服务器时，修改节点的&#x2F;etc&#x2F;chrony&#x2F;chrony.conf配置文件，并将时间服务器指向相应的主机即可，配置格式如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">server CHRONY-SERVER-NAME-OR-IP iburst<br></code></pre></td></tr></table></figure><h1 id="主机名称解析"><a href="#主机名称解析" class="headerlink" title="主机名称解析"></a>主机名称解析</h1><p>出于简化配置步骤的目的，本测试环境使用hosts文件进行各节点名称解析，文件内容如下所示。其中，我们使用kubeapi主机名作为API Server在高可用环境中的专用接入名称，也为控制平面的高可用配置留下便于配置的余地。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 编辑/etc/hosts文件加入如下内容</span><br>root@k8s-master01:~<span class="hljs-comment"># vim /etc/hosts</span><br>192.168.32.200 k8s-master01.org<br>192.168.32.203 k8s-node01.org<br>192.168.32.204 k8s-node02.org<br>192.168.32.205 k8s-node03.org<br></code></pre></td></tr></table></figure><h1 id="禁用Swap设备"><a href="#禁用Swap设备" class="headerlink" title="禁用Swap设备"></a>禁用Swap设备</h1><p>部署集群时，kubeadm默认会预先检查当前主机是否禁用了Swap设备，并在未禁用时强制终止部署过程。因此，在主机内存资源充裕的条件下，需要禁用所有的Swap设备，否则，就需要在后文的kubeadm init及kubeadm join命令执行时额外使用相关的选项忽略检查错误。</p><p>关闭Swap设备，需要分两步完成。首先是关闭当前已启用的所有Swap设备：</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 临时关闭，所有机器执行</span><br>root@k8s-master01:~<span class="hljs-comment"># swapoff -a</span><br></code></pre></td></tr></table></figure><p>而后编辑&#x2F;etc&#x2F;fstab配置文件，注释用于挂载Swap设备的所有行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 所有机器执行</span><br>root@k8s-master01:~<span class="hljs-comment">#vim /etc/fstab</span><br><span class="hljs-comment"># 注释如下一行</span><br><span class="hljs-comment">#/swap.img      none    swap    sw      0       0</span><br></code></pre></td></tr></table></figure><h4 id="禁用默认的防火墙服务"><a href="#禁用默认的防火墙服务" class="headerlink" title="禁用默认的防火墙服务"></a>禁用默认的防火墙服务</h4><p>Ubuntu和Debian等Linux发行版默认使用ufw（Uncomplicated FireWall）作为前端来简化 iptables的使用，处于启用状态时，它默认会生成一些规则以加强系统安全。出于降低配置复杂度之目的，本文选择直接将其禁用。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># ufw disable</span><br>Firewall stopped and disabled on system startup<br>root@k8s-master01:~<span class="hljs-comment"># ufw status</span><br>Status: inactive<br>root@k8s-master01:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h1 id="安装程序包"><a href="#安装程序包" class="headerlink" title="安装程序包"></a>安装程序包</h1><p> 提示：以下操作需要在本示例中的所有四台主机上分别进行。 </p><h2 id="安装并启动docker"><a href="#安装并启动docker" class="headerlink" title="安装并启动docker"></a>安装并启动docker</h2><p> 首先，生成docker-ce相关程序包的仓库，这里以阿里云的镜像服务器为例进行说明： </p><p> <a href="https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.3e221b11ewAl2r">docker-ce镜像_docker-ce下载地址_docker-ce安装教程-阿里巴巴开源镜像站 (aliyun.com)</a> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># step 1: 安装必要的一些系统工具</span><br>sudo apt-get update<br>sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common<br><span class="hljs-comment"># step 2: 安装GPG证书</span><br>curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-comment"># Step 3: 写入软件源信息</span><br>sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span><br><span class="hljs-comment"># Step 4: 更新并安装Docker-CE</span><br>sudo apt-get -y update<br>sudo apt-get -y install docker-ce<br><br><span class="hljs-comment"># 安装指定版本的Docker-CE:</span><br><span class="hljs-comment"># Step 1: 查找Docker-CE的版本:</span><br><span class="hljs-comment"># apt-cache madison docker-ce</span><br><span class="hljs-comment">#   docker-ce | 17.03.1~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="hljs-comment">#   docker-ce | 17.03.0~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="hljs-comment"># Step 2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.1~ce-0~ubuntu-xenial)</span><br><span class="hljs-comment"># sudo apt-get -y install docker-ce=[VERSION]</span><br></code></pre></td></tr></table></figure><p>本文以为20.10.10版本为例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-node3:~<span class="hljs-comment"># apt install docker-ce=5:20.10.10~3-0~ubuntu-focal docker-ce-cli=5:20.10.10~3-0~ubuntu-focal</span><br></code></pre></td></tr></table></figure><p> kubelet需要让docker容器引擎使用systemd作为CGroup的驱动，其默认值为cgroupfs，因而，我们还需要编辑docker的配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json，添加如下内容，其中的registry-mirrors用于指明使用的镜像加速服务。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">vim /etc/docker/daemon.json<br>&#123;<br><span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>  <span class="hljs-string">&quot;https://ung2thfc.mirror.aliyuncs.com&quot;</span>,<br>  <span class="hljs-string">&quot;https://mirror.ccs.tencentyun.com&quot;</span>,<br>  <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br>  <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br>  <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>],<br><span class="hljs-string">&quot;exec-opts&quot;</span>: [<span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span>]<br>&#125;<br><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure><h1 id="安装cri-dockerd"><a href="#安装cri-dockerd" class="headerlink" title="安装cri-dockerd"></a>安装cri-dockerd</h1><p>Kubernetes自v1.24移除了对docker-shim的支持，而Docker Engine默认又不支持CRI规范，因而二者将无法直接完成整合。为此，Mirantis和Docker联合创建了cri-dockerd项目，用于为Docker Engine提供一个能够支持到CRI规范的垫片，从而能够让Kubernetes基于CRI控制Docker 。</p><blockquote><p>项目地址：<a href="https://github.com/Mirantis/cri-dockerd">https://github.com/Mirantis/cri-dockerd</a></p></blockquote><p>cri-dockerd项目提供了预制的二进制格式的程序包，用户按需下载相应的系统和对应平台的版本即可完成安装，这里以Ubuntu 2004 64bits系统环境，以及cri-dockerd目前最新的程序版本v0.3.0为例。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.0/cri-dockerd_0.3.0.3-0.ubuntu-focal_amd64.deb<br><br>dpkg -i cri-dockerd_0.3.0.3-0.ubuntu-focal_amd64.deb<br></code></pre></td></tr></table></figure><p>完成安装后，相应的服务cri-dockerd.service便会自动启动。我们也可以使用如下命令进行验证，若服务处于Running状态即可进行后续步骤 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># systemctl status cri-docker.service</span><br>● cri-docker.service - CRI Interface <span class="hljs-keyword">for</span> Docker Application Container Engine<br>     Loaded: loaded (/lib/systemd/system/cri-docker.service; enabled; vendor preset: enabled)<br>     Active: active (running) since Tue 2023-03-21 10:59:57 CST; 1min 20s ago<br>TriggeredBy: ● cri-docker.socket<br>       Docs: https://docs.mirantis.com<br>   Main PID: 17591 (cri-dockerd)<br>      Tasks: 7<br>     Memory: 11.9M<br>     CGroup: /system.slice/cri-docker.service<br>             └─17591 /usr/bin/cri-dockerd --container-runtime-endpoint fd://<br><br>Mar 21 10:59:57 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start docker client with request timeout 0s&quot;</span><br>Mar 21 10:59:57 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Hairpin mode is set to none&quot;</span><br>Mar 21 10:59:57 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Loaded network plugin cni&quot;</span><br>Mar 21 10:59:57 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Docker cri networking managed by network plugin cni&quot;</span><br>Mar 21 10:59:57 k8s-master01.org systemd[1]: Started CRI Interface <span class="hljs-keyword">for</span> Docker Application Container Engine.<br>Mar 21 10:59:58 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Docker Info: &amp;&#123;ID:WQBA:P7R2:H6ZI:KWU3:FVFW:MHLC:QTT7:CJCX&gt;</span><br><span class="hljs-string">Mar 21 10:59:58 k8s-master01.org cri-dockerd[17591]: time=&quot;</span>2023-03-21T10:59:57+08:00<span class="hljs-string">&quot; level=info msg=&quot;</span>Setting cgroupDriver cgroupfs<span class="hljs-string">&quot;</span><br><span class="hljs-string">Mar 21 10:59:58 k8s-master01.org cri-dockerd[17591]: time=&quot;</span>2023-03-21T10:59:57+08:00<span class="hljs-string">&quot; level=info msg=&quot;</span>Docker cri received runtime config &amp;RuntimeConfig&#123;Network&gt;<br>Mar 21 10:59:58 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Starting the GRPC backend for the Docker CRI interface.&quot;</span><br>Mar 21 10:59:58 k8s-master01.org cri-dockerd[17591]: time=<span class="hljs-string">&quot;2023-03-21T10:59:57+08:00&quot;</span> level=info msg=<span class="hljs-string">&quot;Start cri-dockerd grpc backend&quot;</span><br>lines 1-21/21 (END)<br></code></pre></td></tr></table></figure><h1 id="安装kubelet、kubeadm和kubectl"><a href="#安装kubelet、kubeadm和kubectl" class="headerlink" title="安装kubelet、kubeadm和kubectl"></a>安装kubelet、kubeadm和kubectl</h1><p> 首先，在各主机上生成kubelet和kubeadm等相关程序包的仓库，这里以阿里云的镜像服务为例： </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">apt-get update &amp;&amp; apt-get install -y apt-transport-https<br>curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - <br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="hljs-string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="hljs-string">EOF</span><br>apt-get update<br>apt-get install -y kubelet kubeadm kubectl<br></code></pre></td></tr></table></figure><p> 安装完成后，要确保kubeadm等程序文件的版本，这将也是后面初始化Kubernetes集群时需要明确指定的版本号。 </p><h3 id="整合kubelet和cri-dockerd"><a href="#整合kubelet和cri-dockerd" class="headerlink" title="整合kubelet和cri-dockerd"></a>整合kubelet和cri-dockerd</h3><p>仅支持CRI规范的kubelet需要经由遵循该规范的cri-dockerd完成与docker-ce的整合。</p><h4 id="配置cri-dockerd"><a href="#配置cri-dockerd" class="headerlink" title="配置cri-dockerd"></a>配置cri-dockerd</h4><p> 配置cri-dockerd，确保其能够正确加载到CNI插件。编辑&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;cri-docker.service文件，确保其[Service]配置段中的ExecStart的值类似如下内容。 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd:// --network-plugin=cni --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.7 --cni-bin-dir=/opt/cni/bin --cni-cache-dir=/var/lib/cni/cache --cni-conf-dir=/etc/cni/net.d<br></code></pre></td></tr></table></figure><p>需要添加的各配置参数（各参数的值要与系统部署的CNI插件的实际路径相对应）：</p><ul><li>–network-plugin：指定网络插件规范的类型，这里要使用CNI；</li><li>–cni-bin-dir：指定CNI插件二进制程序文件的搜索目录；</li><li>–cni-cache-dir：CNI插件使用的缓存目录；</li><li>–cni-conf-dir：CNI插件加载配置文件的目录；</li></ul><p>配置完成后，重载并重启cri-docker.service服务。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># systemctl daemon-reload;systemctl restart cri-docker</span><br></code></pre></td></tr></table></figure><h1 id="配置kubelet"><a href="#配置kubelet" class="headerlink" title="配置kubelet"></a>配置kubelet</h1><p>配置kubelet，为其指定cri-dockerd在本地打开的Unix Sock文件的路径，该路径一般默认为“&#x2F;run&#x2F;cri-dockerd.sock“。编辑文件&#x2F;etc&#x2F;sysconfig&#x2F;kubelet，为其添加 如下指定参数。</p><blockquote><p>提示：若&#x2F;etc&#x2F;sysconfig目录不存在，则需要先创建该目录。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">KUBELET_KUBEADM_ARGS=<span class="hljs-string">&quot;--container-runtime=remote --container-runtime-endpoint=/run/cri-dockerd.sock&quot;</span><br></code></pre></td></tr></table></figure><p>需要说明的是，该配置也可不进行，而是直接在后面的各kubeadm命令上使用“–cri-socket unix:&#x2F;&#x2F;&#x2F;run&#x2F;cri-dockerd.sock”选项。</p><h3 id="初始化第一个主节点"><a href="#初始化第一个主节点" class="headerlink" title="初始化第一个主节点"></a>初始化第一个主节点</h3><p>该步骤开始尝试构建Kubernetes集群的master节点，配置完成后，各worker节点直接加入到集群中的即可。需要特别说明的是，由kubeadm部署的Kubernetes集群上，集群核心组件kube-apiserver、kube-controller-manager、kube-scheduler和etcd等均会以静态Pod的形式运行，它们所依赖的镜像文件默认来自于registry.k8s.io这一Registry服务之上。但我们无法直接访问该服务，常用的解决办法有如下两种</p><ul><li>使用能够到达该服务的代理服务；</li><li>使用国内的镜像服务器上的服务，例如registry.aliyuncs.com&#x2F;google_containers等。</li></ul><h4 id="初始化master节点（在k8s-master01上完成如下操作）"><a href="#初始化master节点（在k8s-master01上完成如下操作）" class="headerlink" title="初始化master节点（在k8s-master01上完成如下操作）"></a>初始化master节点（在k8s-master01上完成如下操作）</h4><p> 运行如下命令完成k8s-master01节点的初始化： </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">kubeadm init --image-repository registry.aliyuncs.com/google_containers --kubernetes-version=v1.26.3 --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12 --token-ttl=0 --cri-socket unix:///run/cri-dockerd.sock<br></code></pre></td></tr></table></figure><p>命令中的各选项简单说明如下：</p><ul><li>–image-repository：指定要使用的镜像仓库，默认为registry.k8s.io；</li><li>–kubernetes-version：kubernetes程序组件的版本号，它必须要与安装的kubelet程序包的版本号相同；</li><li>–control-plane-endpoint：控制平面的固定访问端点，可以是IP地址或DNS名称，会被用于集群管理员及集群组件的kubeconfig配置文件的API Server的访问地址；单控制平面部署时可以不使用该选项；</li><li>–pod-network-cidr：Pod网络的地址范围，其值为CIDR格式的网络地址，通常，Flannel网络插件的默认为10.244.0.0&#x2F;16，Project Calico插件的默认值为192.168.0.0&#x2F;16；</li><li>–service-cidr：Service的网络地址范围，其值为CIDR格式的网络地址，默认为10.96.0.0&#x2F;12；通常，仅Flannel一类的网络插件需要手动指定该地址；</li><li>–apiserver-advertise-address：apiserver通告给其他组件的IP地址，一般应该为Master节点的用于集群内部通信的IP地址，0.0.0.0表示节点上所有可用地址；</li><li>–token-ttl：共享令牌（token）的过期时长，默认为24小时，0表示永不过期；为防止不安全存储等原因导致的令牌泄露危及集群安全，建议为其设定过期时长。未设定该选项时，在token过期后，若期望再向集群中加入其它节点，可以使用如下命令重新创建token，并生成节点加入命令。</li></ul><h5 id="初始化完成后的操作步骤"><a href="#初始化完成后的操作步骤" class="headerlink" title="初始化完成后的操作步骤"></a>初始化完成后的操作步骤</h5><p>对于Kubernetes系统的新用户来说，无论使用上述哪种方法，命令运行结束后，请记录最后的kubeadm join命令输出的最后提示的操作步骤。下面的内容是需要用户记录的一个命令输出示例，它提示了后续需要的操作步骤。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 下面是成功完成第一个控制平面节点初始化的提示信息及后续需要完成的步骤</span><br>Your Kubernetes control-plane has initialized successfully!<br><br><span class="hljs-comment"># 为了完成初始化操作，管理员需要额外手动完成几个必要的步骤</span><br>To start using your cluster, you need to run the following as a regular user:<br><br><span class="hljs-comment"># 第1个步骤提示， Kubernetes集群管理员认证到Kubernetes集群时使用的kubeconfig配置文件</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br><br><span class="hljs-comment"># 我们也可以不做上述设定，而使用环境变量KUBECONFIG为kubectl等指定默认使用的kubeconfig；</span><br>Alternatively, <span class="hljs-keyword">if</span> you are the root user, you can run:<br><br><span class="hljs-built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf<br><br><span class="hljs-comment"># 第2个步骤提示，为Kubernetes集群部署一个网络插件，具体选用的插件则取决于管理员；</span><br>You should now deploy a pod network to the cluster.<br>Run <span class="hljs-string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:<br>https://kubernetes.io/docs/concepts/cluster-administration/addons/<br><br><span class="hljs-comment"># 第3个步骤提示，向集群添加额外的控制平面节点，但本文会略过该步骤，并将在其它文章介绍其实现方式。</span><br>You can now <span class="hljs-built_in">join</span> any number of the control-plane node running the following <span class="hljs-built_in">command</span> on each as root:<br><br><span class="hljs-comment"># 第4个步骤提示，向集群添加工作节点</span><br>Then you can <span class="hljs-built_in">join</span> any number of worker nodes by running the following on each as root:<br><br><span class="hljs-comment"># 在部署好kubeadm等程序包的各工作节点上以root用户运行类似如下命令；</span><br><span class="hljs-comment"># 提示：与cri-dockerd结合使用docker-ce作为container runtime时，通常需要为下面的命令</span><br><span class="hljs-comment">#     额外附加“--cri-socket unix:///run/cri-dockerd.sock”选项；</span><br>kubeadm <span class="hljs-built_in">join</span> 192.168.32.200:6443 --token ivu3t7.pogk70dd5pualoz2 \<br>--discovery-token-ca-cert-hash sha256:3edb3c8e3e6c944afe65b2616d46b49305c1420e6967c1fab966ddf8f149502d<br></code></pre></td></tr></table></figure><h4 id="设定kubectl"><a href="#设定kubectl" class="headerlink" title="设定kubectl"></a>设定kubectl</h4><p>kubectl是kube-apiserver的命令行客户端程序，实现了除系统部署之外的几乎全部的管理操作，是kubernetes管理员使用最多的命令之一。kubectl需经由API server认证及授权后方能执行相应的管理操作，kubeadm部署的集群为其生成了一个具有管理员权限的认证配置文件&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf，它可由kubectl通过默认的“$HOME&#x2F;.kube&#x2F;config”的路径进行加载。当然，用户也可在kubectl命令上使用–kubeconfig选项指定一个别的位置。</p><p>下面复制认证为Kubernetes系统管理员的配置文件至目标用户（例如当前用户root）的家目录下：</p><p>~# mkdir ~&#x2F;.kube</p><p>~# cp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf  ~&#x2F;.kube&#x2F;config</p><h4 id="部署网络插件"><a href="#部署网络插件" class="headerlink" title="部署网络插件"></a>部署网络插件</h4><p>Kubernetes系统上Pod网络的实现依赖于第三方插件进行，这类插件有近数十种之多，较为著名的有flannel、calico、canal和kube-router等，简单易用的实现是为CoreOS提供的flannel项目。下面的命令用于在线部署flannel至Kubernetes系统之上：</p><p>首先，下载适配系统及硬件平台环境的flanneld至每个节点，并放置于&#x2F;opt&#x2F;bin&#x2F;目录下。我们这里选用flanneld-amd64，目前最新的版本为v0.21.3，因而，我们需要在集群的每个节点上执行如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">~<span class="hljs-comment"># mkdir /opt/cni/bin/</span><br><br>~<span class="hljs-comment"># curl -L https://github.com/flannel-io/flannel/releases/download/v0.20.2/flanneld-amd64  -o /opt/cni/bin/flanneld</span><br><br>~<span class="hljs-comment"># chmod +x /opt/cni/bin/flanneld</span><br><br>提示：下载flanneld的地址为 https://github.com/flannel-io/flannel/releases<br></code></pre></td></tr></table></figure><p> 随后，在初始化的第一个master节点k8s-master01上运行如下命令，向Kubernetes部署kube-flannel。 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.21.3/Documentation/kube-flannel.yml<br></code></pre></td></tr></table></figure><p>而后使用如下命令确认其输出结果中Pod的状态为“Running”，类似如下命令及其输入的结果所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment">#  kubectl get pods -n kube-flannel</span><br>NAME                    READY   STATUS    RESTARTS   AGE<br>kube-flannel-ds-jgkxd   1/1     Running   0          2m59s<br>root@k8s-master01:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h4 id="验证master节点已经就绪"><a href="#验证master节点已经就绪" class="headerlink" title="验证master节点已经就绪"></a>验证master节点已经就绪</h4><p>kubectl get nodes</p><p>上述命令应该会得到类似如下输出，这表示k8s-master01节点已经就绪</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># kubectl get nodes</span><br>NAME               STATUS   ROLES           AGE   VERSION<br>k8s-master01.org   Ready    control-plane   62m   v1.26.3<br>root@k8s-master01:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h4 id="添加节点到集群中"><a href="#添加节点到集群中" class="headerlink" title="添加节点到集群中"></a>添加节点到集群中</h4><p>下面的两个步骤，需要分别在k8s-node01、k8s-node02和k8s-node03上各自完成。</p><p>1、若未禁用Swap设备，编辑kubelet的配置文件&#x2F;etc&#x2F;default&#x2F;kubelet，设置其忽略Swap启用的状态错误，内容如下：KUBELET_EXTRA_ARGS&#x3D;”–fail-swap-on&#x3D;false”</p><p>2、将节点加入第二步中创建的master的集群中，要使用主节点初始化过程中记录的kubeadm join命令；</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-node01:/opt/cni/bin<span class="hljs-comment"># kubeadm join 192.168.32.200:6443 --token ivu3t7.pogk70dd5pualoz2 --discovery-token-ca-cert-hash sha256:3edb3c8e3e6c944afe65b2616d46b49305c1420e6967c1fab966ddf8f149502d --cri-socket unix:///run/cri-dockerd.sock</span><br></code></pre></td></tr></table></figure><h4 id="验证节点添加结果"><a href="#验证节点添加结果" class="headerlink" title="验证节点添加结果"></a>验证节点添加结果</h4><p>在每个节点添加完成后，即可通过kubectl验证添加结果。下面的命令及其输出是在所有的三个节点均添加完成后运行的，其输出结果表明三个Worker Node已经准备就绪。</p><p>~# kubectl get nodes</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># kubectl get nodes</span><br>NAME               STATUS   ROLES           AGE    VERSION<br>k8s-master01.org   Ready    control-plane   80m    v1.26.3<br>k8s-node01.org     Ready    &lt;none&gt;          15m    v1.26.3<br>k8s-node2.org      Ready    &lt;none&gt;          114s   v1.26.3<br>k8s-node3.org      Ready    &lt;none&gt;          11m    v1.26.3<br>root@k8s-master01:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>root@k8s-master01:<del># kubectl get nodes<br>NAME               STATUS   ROLES           AGE    VERSION<br>k8s-master01.org   Ready    control-plane   80m    v1.26.3<br>k8s-node01.org     Ready    <none>          15m    v1.26.3<br>k8s-node2.org      Ready    <none>          114s   v1.26.3<br>k8s-node3.org      Ready    <none>          11m    v1.26.3<br>root@k8s-master01:</del># </p><h4 id="测试应用编排及服务访问"><a href="#测试应用编排及服务访问" class="headerlink" title="测试应用编排及服务访问"></a>测试应用编排及服务访问</h4><p>到此为止，一个master，并附带有三个worker的kubernetes集群基础设施已经部署完成，用户随后即可测试其核心功能。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># kubectl create deployment test-nginx --image=nginx:latest --replicas=3</span><br>deployment.apps/test-nginx created<br>root@k8s-master01:~<span class="hljs-comment"># </span><br>root@k8s-master01:~<span class="hljs-comment"># kubectl create service nodeport test-nginx --tcp=80:80</span><br>service/test-nginx created<br>root@k8s-master01:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p> 而后，使用如下命令了解Service对象test-nginx使用的NodePort，以便于在集群外部进行访问： </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@k8s-master01:~<span class="hljs-comment"># kubectl get svc -l app=test-nginx</span><br>NAME         TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE<br>test-nginx   NodePort   10.100.229.239   &lt;none&gt;        80:31888/TCP   50s<br>root@k8s-master01:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p> 因此，用户可以于集群外部通过“<a href="http://NodeIP:31888”这个URL访问web应用，例如于集群外通过浏览器访问“http://192.168.32.203:31888”。">http://NodeIP:31888”这个URL访问web应用，例如于集群外通过浏览器访问“http://192.168.32.203:31888”。</a> </p><p><img src="/../image.assets/1679388005874.png" alt="1679388005874"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>本文给出了部署Kubernetes分布式集群的具体步骤，并在最后测试了将应用部署并运行于Kubernetes系统上的结果。在读者朋友们自行测试时，cri-dockerd、docker-ce、flannel、kubeadm、kubectl和kubelet的版本均可能存在版本上的不同，也因此可能会存在一定程度上的配置差异，具体调整方式请大家自行参考相关的文档进行。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Zookeeper离线安装脚本</title>
    <link href="/2023/03/18/Zookeeper%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <url>/2023/03/18/Zookeeper%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author:            yuankun</span><br><span class="hljs-comment">#Date:              2023-03-18</span><br><span class="hljs-comment">#FileName：         install_zookeeper.sh</span><br><span class="hljs-comment">#Description：      The test script</span><br><span class="hljs-comment">#Copyright (C):     2023 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>JDK_FILE=<span class="hljs-string">&quot;jdk-8u321-linux-x64.tar.gz&quot;</span><br><span class="hljs-comment">#JDK_FILE=&quot;jdk-11.0.12_linux-x64_bin.tar.gz&quot;</span><br>ZOOKEEPER_FILE=apache-zookeeper-3.7.1-bin<br>TAR=tar.gz<br>ZOOKEEPER_DIR=/usr/local/src<br>DIR=`<span class="hljs-built_in">pwd</span>`<br>JDK_DIR=<span class="hljs-string">&quot;/usr/local&quot;</span><br><br><span class="hljs-function"><span class="hljs-title">color</span></span> () &#123;<br>    RES_COL=60<br>    MOVE_TO_COL=<span class="hljs-string">&quot;echo -en \\033[<span class="hljs-variable">$&#123;RES_COL&#125;</span>G&quot;</span><br>    SETCOLOR_SUCCESS=<span class="hljs-string">&quot;echo -en \\033[1;32m&quot;</span><br>    SETCOLOR_FAILURE=<span class="hljs-string">&quot;echo -en \\033[1;31m&quot;</span><br>    SETCOLOR_WARNING=<span class="hljs-string">&quot;echo -en \\033[1;33m&quot;</span><br>    SETCOLOR_NORMAL=<span class="hljs-string">&quot;echo -en \E[0m&quot;</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> &amp;&amp; <span class="hljs-variable">$MOVE_TO_COL</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;[&quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> = <span class="hljs-string">&quot;success&quot;</span> -o <span class="hljs-variable">$1</span> = <span class="hljs-string">&quot;0&quot;</span> ] ;<span class="hljs-keyword">then</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_SUCCESS&#125;</span><br>        <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;  OK  &quot;</span>    <br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> = <span class="hljs-string">&quot;failure&quot;</span> -o <span class="hljs-variable">$1</span> = <span class="hljs-string">&quot;1&quot;</span>  ] ;<span class="hljs-keyword">then</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_FAILURE&#125;</span><br>        <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;FAILED&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_WARNING&#125;</span><br>        <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;WARNING&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-variable">$&#123;SETCOLOR_NORMAL&#125;</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;]&quot;</span><br>    <span class="hljs-built_in">echo</span>                                                                                                                              <br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">install_jdk</span></span>()&#123;<br><span class="hljs-keyword">if</span> !  [  -f <span class="hljs-string">&quot;<span class="hljs-variable">$DIR</span>/<span class="hljs-variable">$JDK_FILE</span>&quot;</span> ];<span class="hljs-keyword">then</span><br>color 1  <span class="hljs-string">&quot;<span class="hljs-variable">$JDK_FILE</span> 文件不存在&quot;</span> <br><span class="hljs-built_in">exit</span>; <br><span class="hljs-keyword">elif</span> [ -d <span class="hljs-variable">$JDK_DIR</span>/jdk ];<span class="hljs-keyword">then</span><br>        color 1  <span class="hljs-string">&quot;JDK 已经安装&quot;</span> <br><span class="hljs-built_in">exit</span><br><span class="hljs-keyword">else</span> <br>        [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$JDK_DIR</span>&quot;</span> ] || <span class="hljs-built_in">mkdir</span> -pv <span class="hljs-variable">$JDK_DIR</span><br><span class="hljs-keyword">fi</span><br>tar xvf <span class="hljs-variable">$DIR</span>/<span class="hljs-variable">$JDK_FILE</span>  -C <span class="hljs-variable">$JDK_DIR</span><br><span class="hljs-built_in">cd</span>  <span class="hljs-variable">$JDK_DIR</span> &amp;&amp; <span class="hljs-built_in">ln</span> -s jdk* jdk <br><br><span class="hljs-built_in">cat</span> &gt;  /etc/profile.d/jdk.sh &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">export JAVA_HOME=$JDK_DIR/jdk</span><br><span class="hljs-string">#export JRE_HOME=\$JAVA_HOME/jre</span><br><span class="hljs-string">#export CLASSPATH=.:\$JAVA_HOME/lib/:\$JRE_HOME/lib/</span><br><span class="hljs-string">export PATH=\$PATH:\$JAVA_HOME/bin</span><br><span class="hljs-string">EOF</span><br>.  /etc/profile.d/jdk.sh<br>java -version &amp;&amp; color 0  <span class="hljs-string">&quot;JDK 安装完成&quot;</span> || &#123; color 1  <span class="hljs-string">&quot;JDK 安装失败&quot;</span> ; <span class="hljs-built_in">exit</span>; &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">install_zookeeper</span></span>()&#123;<br>    <span class="hljs-built_in">cd</span> <span class="hljs-variable">$&#123;DIR&#125;</span><br>    <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ZOOKEEPER_FILE&#125;</span>.<span class="hljs-variable">$&#123;TAR&#125;</span>&quot;</span> ]<br>    <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;正在安装zookeeper,请稍等......&#x27;</span><br>        <span class="hljs-built_in">mv</span> <span class="hljs-variable">$&#123;ZOOKEEPER_FILE&#125;</span>.<span class="hljs-variable">$&#123;TAR&#125;</span> <span class="hljs-variable">$&#123;ZOOKEEPER_DIR&#125;</span>;<span class="hljs-built_in">cd</span> <span class="hljs-variable">$&#123;ZOOKEEPER_DIR&#125;</span><br>        tar xf <span class="hljs-variable">$&#123;ZOOKEEPER_FILE&#125;</span>.<span class="hljs-variable">$&#123;TAR&#125;</span>;<span class="hljs-built_in">ln</span> -s <span class="hljs-variable">$&#123;ZOOKEEPER_DIR&#125;</span>/<span class="hljs-variable">$&#123;ZOOKEEPER_FILE&#125;</span> <span class="hljs-variable">$&#123;ZOOKEEPER_DIR&#125;</span>/zookeeper<br><span class="hljs-built_in">rm</span> -rf <span class="hljs-variable">$&#123;ZOOKEEPER_FILE&#125;</span>.<span class="hljs-variable">$&#123;TAR&#125;</span><br>        <span class="hljs-built_in">mkdir</span> -p /data/zookeeper;<span class="hljs-built_in">cd</span> <span class="hljs-variable">$&#123;ZOOKEEPER_DIR&#125;</span>/zookeeper/conf<br>        <span class="hljs-built_in">cp</span> zoo_sample.cfg zoo.cfg;sed -i <span class="hljs-string">&#x27;s/dataDir=\/tmp\/zookeeper/dataDir=\/data\/zookeeper/&#x27;</span> zoo.cfg<br>        <span class="hljs-built_in">cat</span> &gt; /usr/lib/systemd/system/zookeeper.service &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">[Unit]</span><br><span class="hljs-string">Description=Zookeeper Service unit Configuration</span><br><span class="hljs-string">After=network.target</span><br><span class="hljs-string"></span><br><span class="hljs-string">[Service]</span><br><span class="hljs-string">Type=forking</span><br><span class="hljs-string">Environment=JAVA_HOME=$&#123;JDK_DIR&#125;/jdk</span><br><span class="hljs-string">ExecStart=$&#123;ZOOKEEPER_DIR&#125;/zookeeper/bin/zkServer.sh start $&#123;ZOOKEEPER_DIR&#125;/zookeeper/conf/zoo.cfg</span><br><span class="hljs-string">ExecStop=$&#123;ZOOKEEPER_DIR&#125;/zookeeper/bin/zkServer.sh stop</span><br><span class="hljs-string">KillMode=none</span><br><span class="hljs-string">Restart=on-failure</span><br><span class="hljs-string">[Install]</span><br><span class="hljs-string">WantedBy=multi-user.target</span><br><span class="hljs-string">EOF</span><br>        systemctl daemon-reload;systemctl <span class="hljs-built_in">enable</span> --now zookeeper<br><span class="hljs-keyword">if</span> [ $? -eq 0 ]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;zookeeper启动成功!安装完成&#x27;</span><br><br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;zookeeper启动失败!安装失败&#x27;</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;文件不存在,退出安装!&#x27;</span><br>        <span class="hljs-built_in">exit</span>;<br><br>    <span class="hljs-keyword">fi</span><br>&#125;<br>install_jdk<br>install_zookeeper<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>shell脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenVPN安装和使用</title>
    <link href="/2023/03/17/OpenVPN%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/03/17/OpenVPN%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="准备部署OpenVPN环境"><a href="#准备部署OpenVPN环境" class="headerlink" title="准备部署OpenVPN环境"></a>准备部署OpenVPN环境</h1><h2 id="部署环境如下"><a href="#部署环境如下" class="headerlink" title="部署环境如下"></a>部署环境如下</h2><p>共四台主机<br>1 openvpn server：<br>CentOS 7.9<br>ens33:192.168.1.110&#x2F;24 NAT模式,模拟公网IP<br>ens36:172.30.0.1&#x2F;24 仅主机模式,私网IP<br>2 内网主机两台<br>第一台主机<br>ens33172.30.0.100&#x2F;24 仅主机模式,私网IP，无需网关<br>第二台主机<br>ens33172.30.0.200&#x2F;24 仅主机模式,私网IP，无需网关</p><p>3 Windows 客户端<br>Windows 10&#x2F;11</p><h2 id="安装-OpenVPN"><a href="#安装-OpenVPN" class="headerlink" title="安装 OpenVPN"></a>安装 OpenVPN</h2><h3 id="安装-OpenVPN-和证书工具"><a href="#安装-OpenVPN-和证书工具" class="headerlink" title="安装 OpenVPN 和证书工具"></a>安装 OpenVPN 和证书工具</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#OpenVPN服务器端</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment">#yum -y install openvpn</span><br><span class="hljs-comment">#证书管理工具</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment">#yum -y install easy-rsa</span><br><br><span class="hljs-comment"># 安装版本</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment"># yum list openvpn</span><br>Loaded plugins: fastestmirror<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.ustc.edu.cn<br> * epel: ftp.riken.jp<br> * extras: mirrors.163.com<br> * updates: mirrors.ustc.edu.cn<br>Installed Packages<br>openvpn.x86_64                                                           2.4.12-1.el7                                                            @epel<br></code></pre></td></tr></table></figure><h3 id="准备相关配置文件"><a href="#准备相关配置文件" class="headerlink" title="准备相关配置文件"></a>准备相关配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 生成服务器配置文件</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment"># cp /usr/share/doc/openvpn-2.4.12/sample/sample-config-files/server.conf /etc/openvpn</span><br><br><span class="hljs-comment"># 准备证书颁发相关文件</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment"># cp -r /usr/share/easy-rsa/ /etc/openvpn/easy-rsa-server</span><br><br><span class="hljs-comment"># 准备颁发证书相关变量的配置文件</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment"># cp /usr/share/doc/easy-rsa-3.0.8/vars.example /etc/openvpn/easy-rsa-server/3/vars</span><br><br><span class="hljs-comment"># 建议修改给CA和OpenVPN服务器颁发的证书的有效期,可适当加长</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment"># vim /etc/openvpn/easy-rsa-server/3/vars </span><br><span class="hljs-comment">#CA的证书默认有效期为10年,可以适当延长,比如:36500天</span><br><span class="hljs-comment">#set_var EASYRSA_CA_EXPIRE 3650</span><br>set_var EASYRSA_CA_EXPIRE 36500<br><span class="hljs-comment">#服务器证书默为为825天,可适当加长,比如:3650天</span><br><span class="hljs-comment">#set_var EASYRSA_CERT_EXPIRE 825</span><br><span class="hljs-comment">#将上面行修改为下面</span><br>set_var EASYRSA_CERT_EXPIRE 3650<br></code></pre></td></tr></table></figure><h2 id="准备证书相关文件"><a href="#准备证书相关文件" class="headerlink" title="准备证书相关文件"></a>准备证书相关文件</h2><h3 id="初始化PKI和CA颁发机构环境"><a href="#初始化PKI和CA颁发机构环境" class="headerlink" title="初始化PKI和CA颁发机构环境"></a>初始化PKI和CA颁发机构环境</h3><h4 id="初始化PKI生成PKI相关目录和文件"><a href="#初始化PKI生成PKI相关目录和文件" class="headerlink" title="初始化PKI生成PKI相关目录和文件"></a>初始化PKI生成PKI相关目录和文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 进入该目录下</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/easy-rsa-server/3<br><br><span class="hljs-comment">#初始化数据,在当前目录下生成pki目录及相关文件</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa init-pki</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br><br>init-pki complete; you may now create a CA or requests.<br>Your newly created PKI <span class="hljs-built_in">dir</span> is: /etc/openvpn/easy-rsa-server/3/pki<br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki  <span class="hljs-comment">#生成一个新目录及相关文件</span><br>│   ├── openssl-easyrsa.cnf<br>│   ├── private<br>│   ├── reqs<br>│   └── safessl-easyrsa.cnf<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── client<br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── server<br>    └── serverClient<br><br>4 directories, 13 files<br></code></pre></td></tr></table></figure><h3 id="创建-CA-机构环境"><a href="#创建-CA-机构环境" class="headerlink" title="创建 CA 机构环境"></a>创建 CA 机构环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 进入该目录下</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/easy-rsa-server/3<br>[root@openvpn-centos7 3]<span class="hljs-comment"># tree pki/</span><br>pki/<br>├── openssl-easyrsa.cnf<br>├── private<br>├── reqs<br>└── safessl-easyrsa.cnf<br><br>2 directories, 2 files<br><br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa build-ca nopass   # nopass 不需要密码</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br>Generating RSA private key, 2048 bit long modulus<br>....+++<br>......+++<br>e is 65537 (0x10001)<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br>-----<br>Common Name (eg: your user, host, or server name) [Easy-RSA CA]: <span class="hljs-comment"># 回车接受默认值</span><br><br>CA creation complete and you may now import and sign cert requests.<br>Your new CA certificate file <span class="hljs-keyword">for</span> publishing is at:<br>/etc/openvpn/easy-rsa-server/3/pki/ca.crt <span class="hljs-comment">#生成自签名的证书文件</span><br><br><br>[root@openvpn-centos7 3]<span class="hljs-comment">#tree pki</span><br>pki<br>├── ca.crt <span class="hljs-comment">#生成的自签名的证书文件</span><br>├── certs_by_serial<br>├── index.txt<br>├── index.txt.attr<br>├── issued<br>├── openssl-easyrsa.cnf<br>├── private<br>│ └── ca.key <span class="hljs-comment">#生成的私钥文件</span><br>├── renewed<br>│ ├── certs_by_serial<br>│ ├── private_by_serial<br>│ └── reqs_by_serial<br>├── reqs<br>├── revoked<br>│ ├── certs_by_serial<br>│ ├── private_by_serial<br>│ └── reqs_by_serial<br>├── safessl-easyrsa.cnf<br>└── serial<br>12 directories, 7 files<br><br></code></pre></td></tr></table></figure><h3 id="创建服务端证书申请"><a href="#创建服务端证书申请" class="headerlink" title="创建服务端证书申请"></a>创建服务端证书申请</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 进入该目录</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/easy-rsa-server/3<br>[root@openvpn-centos7 3]<span class="hljs-comment"># </span><br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa gen-req server nopass</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br>Generating a 2048 bit RSA private key<br>..........................................................................................................................................................+++<br>......................+++<br>writing new private key to <span class="hljs-string">&#x27;/etc/openvpn/easy-rsa-server/3/pki/easy-rsa-1605.nDSXm1/tmp.2RnHiQ&#x27;</span><br>-----<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br>-----<br>Common Name (eg: your user, host, or server name) [server]: <span class="hljs-comment">#接受Common Name的默认</span><br>值,直接回车<br><br>Keypair and certificate request completed. Your files are:<br>req: /etc/openvpn/easy-rsa-server/3/pki/reqs/server.req <span class="hljs-comment">#生成请求文件</span><br>key: /etc/openvpn/easy-rsa-server/3/pki/private/server.key <span class="hljs-comment">#生成私钥文件</span><br><br>[root@openvpn-centos7 3]<span class="hljs-comment">#tree pki</span><br>pki<br>├── ca.crt<br>├── certs_by_serial<br>├── index.txt<br>├── index.txt.attr<br>├── issued<br>├── openssl-easyrsa.cnf<br>├── private<br>│ ├── ca.key<br>│ └── server.key <span class="hljs-comment">#生成私钥文件</span><br>├── renewed<br>│ ├── certs_by_serial<br>│ ├── private_by_serial<br>│ └── reqs_by_serial<br>├── reqs<br>│ └── server.req <span class="hljs-comment">#生成请求文件</span><br>├── revoked<br>│ ├── certs_by_serial<br>│ ├── private_by_serial<br>│ └── reqs_by_serial<br>├── safessl-easyrsa.cnf<br>└── serial<br>12 directories, 9 files<br><br></code></pre></td></tr></table></figure><h3 id="颁发服务端证书"><a href="#颁发服务端证书" class="headerlink" title="颁发服务端证书"></a>颁发服务端证书</h3><h4 id="颁发服务端证书-1"><a href="#颁发服务端证书-1" class="headerlink" title="颁发服务端证书"></a>颁发服务端证书</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#将上面server.req的申请,颁发server类型的证书</span><br>[root@openvpn-centos7 3]<span class="hljs-comment">#cd /etc/openvpn/easy-rsa-server/3</span><br><span class="hljs-comment">#第一个server表示证书的类型,第二个server表示请求文件名的前缀</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa sign server server</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br><br><br>You are about to sign the following certificate.<br>Please check over the details shown below <span class="hljs-keyword">for</span> accuracy. Note that this request<br>has not been cryptographically verified. Please be sure it came from a trusted<br><span class="hljs-built_in">source</span> or that you have verified the request checksum with the sender.<br><br>Request subject, to be signed as a server certificate <span class="hljs-keyword">for</span> 3650 days:<br><br>subject=<br>    commonName                = server<br><br><br>Type the word <span class="hljs-string">&#x27;yes&#x27;</span> to <span class="hljs-built_in">continue</span>, or any other input to abort.<br>  Confirm request details: <span class="hljs-built_in">yes</span>  <span class="hljs-comment"># 输入yes</span><br>Using configuration from /etc/openvpn/easy-rsa-server/3/pki/easy-rsa-1634.ZCYI5M/tmp.2SsU9O<br>Check that the request matches the signature<br>Signature ok<br>The Subject<span class="hljs-string">&#x27;s Distinguished Name is as follows</span><br><span class="hljs-string">commonName            :ASN.1 12:&#x27;</span>server<span class="hljs-string">&#x27;</span><br><span class="hljs-string">Certificate is to be certified until Mar 15 01:27:03 2033 GMT (3650 days)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Write out database with 1 new entries</span><br><span class="hljs-string">Data Base Updated</span><br><span class="hljs-string"></span><br><span class="hljs-string">Certificate created at: /etc/openvpn/easy-rsa-server/3/pki/issued/server.crt #生</span><br><span class="hljs-string">成服务器证书文件</span><br></code></pre></td></tr></table></figure><h4 id="验证结果"><a href="#验证结果" class="headerlink" title="验证结果"></a>验证结果</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 3]<span class="hljs-comment"># tree pki/</span><br>pki/<br>├── ca.crt<br>├── certs_by_serial<br>│   └── EAD7A4786FA803EDD9A7166D0EC694C3.pem      <span class="hljs-comment">#生成的服务器证书文件</span><br>├── index.txt<br>├── index.txt.attr<br>├── index.txt.attr.old<br>├── index.txt.old<br>├── issued<br>│   └── server.crt        <span class="hljs-comment">#生成的服务器证书文件</span><br>├── openssl-easyrsa.cnf<br>├── private<br>│   ├── ca.key<br>│   └── server.key<br>├── renewed<br>│   ├── certs_by_serial<br>│   ├── private_by_serial<br>│   └── reqs_by_serial<br>├── reqs<br>│   └── server.req<br>├── revoked<br>│   ├── certs_by_serial<br>│   ├── private_by_serial<br>│   └── reqs_by_serial<br>├── safessl-easyrsa.cnf<br>├── serial<br>└── serial.old<br><br>12 directories, 14 files<br></code></pre></td></tr></table></figure><h3 id="创建-Diffie-Hellman-密钥"><a href="#创建-Diffie-Hellman-密钥" class="headerlink" title="创建 Diffie-Hellman 密钥"></a>创建 Diffie-Hellman 密钥</h3><h4 id="创建-Diffie-Hellman-密钥-1"><a href="#创建-Diffie-Hellman-密钥-1" class="headerlink" title="创建 Diffie-Hellman 密钥"></a>创建 Diffie-Hellman 密钥</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa gen-dh</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br>Generating DH parameters, 2048 bit long safe prime, generator 2<br>This is going to take a long time<br>...............................................................................................................................................................................+.  <span class="hljs-comment"># 得等一会</span><br>DH parameters of size 2048 created at /etc/openvpn/easy-rsa-server/3/pki/dh.pem<br><br><span class="hljs-comment">#查看生成的文件</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ll pki/dh.pem </span><br>-rw------- 1 root root 424 Mar 18 09:34 pki/dh.pem<br>[root@openvpn-centos7 3]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="准备客户端证书环境"><a href="#准备客户端证书环境" class="headerlink" title="准备客户端证书环境"></a>准备客户端证书环境</h3><p>上面服务端证书配置完成，下面是配置客户端证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 /]<span class="hljs-comment"># cp -a /usr/share/easy-rsa/ /etc/openvpn/easy-rsa-client</span><br><span class="hljs-comment"># 进入该目录下</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/easy-rsa-client/3<br><br><span class="hljs-comment">#生成证书申请所需目录pki和文件</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa init-pki</span><br><br>init-pki complete; you may now create a CA or requests.<br>Your newly created PKI <span class="hljs-built_in">dir</span> is: /etc/openvpn/easy-rsa-client/3/pki<br></code></pre></td></tr></table></figure><h3 id="创建客户端证书申请"><a href="#创建客户端证书申请" class="headerlink" title="创建客户端证书申请"></a>创建客户端证书申请</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 进入该目录下</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/easy-rsa-client/3<br><br><span class="hljs-comment">#生成客户端用户的证书申请,dev用户</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa gen-req dev nopass</span><br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br>Generating a 2048 bit RSA private key<br>......................................................+++<br>.........................................................................................................................................................................................................+++<br>writing new private key to <span class="hljs-string">&#x27;/etc/openvpn/easy-rsa-client/3/pki/easy-rsa-1749.UROzYa/tmp.HqONRu&#x27;</span><br>-----<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br>-----<br>Common Name (eg: your user, host, or server name) [dev]: <span class="hljs-comment"># 回车接受默认值</span><br><br>Keypair and certificate request completed. Your files are:<br>req: /etc/openvpn/easy-rsa-client/3/pki/reqs/dev.req  <span class="hljs-comment">#私钥文件</span><br>key: /etc/openvpn/easy-rsa-client/3/pki/private/dev.key  <span class="hljs-comment">#证书申请文件</span><br><br><span class="hljs-comment">#生成两个新文件</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── openssl-easyrsa.cnf<br>│   ├── private<br>│   │   └── dev.key  <span class="hljs-comment">#私钥文件</span><br>│   ├── reqs<br>│   │   └── dev.req   <span class="hljs-comment">#证书申请文件</span><br>│   └── safessl-easyrsa.cnf<br>└── x509-types<br>    ├── ca<br>    ├── client<br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── server<br>    └── serverClient<br><br>4 directories, 14 files<br></code></pre></td></tr></table></figure><h3 id="颁发客户端证书"><a href="#颁发客户端证书" class="headerlink" title="颁发客户端证书"></a>颁发客户端证书</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 进入该目录下</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/easy-rsa-server/3<br>[root@openvpn-centos7 3]<span class="hljs-comment">#</span><br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa import-req /etc/openvpn/easy-rsa-client/3/pki/reqs/dev.req dev</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br><br>The request has been successfully imported with a short name of: dev<br>You may now use this name to perform signing operations on this request.<br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># tree pki/</span><br>pki/<br>├── ca.crt<br>├── certs_by_serial<br>│   └── EAD7A4786FA803EDD9A7166D0EC694C3.pem<br>├── dh.pem<br>├── index.txt<br>├── index.txt.attr<br>├── index.txt.attr.old<br>├── index.txt.old<br>├── issued<br>│   └── server.crt<br>├── openssl-easyrsa.cnf<br>├── private<br>│   ├── ca.key<br>│   └── server.key<br>├── renewed<br>│   ├── certs_by_serial<br>│   ├── private_by_serial<br>│   └── reqs_by_serial<br>├── reqs<br>│   ├── dev.req<span class="hljs-comment"># 导入的文件</span><br>│   └── server.req<br>├── revoked<br>│   ├── certs_by_serial<br>│   ├── private_by_serial<br>│   └── reqs_by_serial<br>├── safessl-easyrsa.cnf<br>├── serial<br>└── serial.old<br><br>12 directories, 16 files<br><br><span class="hljs-comment">#修改给客户端颁发的证书的有效期</span><br>[root@openvpn-centos7 3]<span class="hljs-comment">##vim vars</span><br><span class="hljs-comment">#建议修改给客户端颁发证书的有效期,可适当减少,比如:90天</span><br><span class="hljs-comment">#set_var EASYRSA_CERT_EXPIRE 825</span><br><span class="hljs-comment">#将上面行修改为下面</span><br>set_var EASYRSA_CERT_EXPIRE 90<br><br><span class="hljs-comment">#颁发客户端证书</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ./easyrsa sign client dev</span><br><br>Note: using Easy-RSA configuration from: /etc/openvpn/easy-rsa-server/3.0.8/vars<br>Using SSL: openssl OpenSSL 1.0.2k-fips  26 Jan 2017<br><br><br>You are about to sign the following certificate.<br>Please check over the details shown below <span class="hljs-keyword">for</span> accuracy. Note that this request<br>has not been cryptographically verified. Please be sure it came from a trusted<br><span class="hljs-built_in">source</span> or that you have verified the request checksum with the sender.<br><br>Request subject, to be signed as a client certificate <span class="hljs-keyword">for</span> 3650 days:<br><br>subject=<br>    commonName                = dev<br><br><br>Type the word <span class="hljs-string">&#x27;yes&#x27;</span> to <span class="hljs-built_in">continue</span>, or any other input to abort.<br>  Confirm request details: <span class="hljs-built_in">yes</span>   <span class="hljs-comment"># 输入yes</span><br>Using configuration from /etc/openvpn/easy-rsa-server/3/pki/easy-rsa-1998.yxi0PJ/tmp.IJUwSd<br>Check that the request matches the signature<br>Signature ok<br>The Subject<span class="hljs-string">&#x27;s Distinguished Name is as follows</span><br><span class="hljs-string">commonName            :ASN.1 12:&#x27;</span>dev<span class="hljs-string">&#x27;</span><br><span class="hljs-string">Certificate is to be certified until Mar 15 01:51:32 2033 GMT (3650 days)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Write out database with 1 new entries</span><br><span class="hljs-string">Data Base Updated</span><br><span class="hljs-string"></span><br><span class="hljs-string">Certificate created at: /etc/openvpn/easy-rsa-server/3/pki/issued/dev.crt  #证书文件</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h3 id="将CA和服务器证书相关文件复制到服务器相应的目录"><a href="#将CA和服务器证书相关文件复制到服务器相应的目录" class="headerlink" title="将CA和服务器证书相关文件复制到服务器相应的目录"></a>将CA和服务器证书相关文件复制到服务器相应的目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 3]<span class="hljs-comment"># mkdir /etc/openvpn/certs</span><br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># cp /etc/openvpn/easy-rsa-server/3/pki/ca.crt /etc/openvpn/certs/</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># cp /etc/openvpn/easy-rsa-server/3/pki/issued/server.crt /etc/openvpn/certs/</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># cp /etc/openvpn/easy-rsa-server/3/pki/private/server.key</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># cp /etc/openvpn/easy-rsa-server/3/pki/dh.pem /etc/openvpn/certs/</span><br><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ll /etc/openvpn/certs/</span><br>total 20<br>-rw------- 1 root root 1176 Mar 18 09:54 ca.crt<br>-rw------- 1 root root  424 Mar 18 09:57 dh.pem<br>-rw------- 1 root root 4552 Mar 18 09:56 server.crt<br>-rw------- 1 root root 1704 Mar 18 09:55 server.key<br></code></pre></td></tr></table></figure><h3 id="将客户端私钥与证书相关文件复制到服务器相关的目录"><a href="#将客户端私钥与证书相关文件复制到服务器相关的目录" class="headerlink" title="将客户端私钥与证书相关文件复制到服务器相关的目录"></a>将客户端私钥与证书相关文件复制到服务器相关的目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 3]<span class="hljs-comment"># mkdir /etc/openvpn/client/dev</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># cp /etc/openvpn/easy-rsa-server/3/pki/ca.crt /etc/openvpn/easy-rsa-server/3/pki/issued/dev.crt /etc/openvpn/easy-rsa-server/3/pki/reqs/dev.req /etc/openvpn/client/dev/</span><br>[root@openvpn-centos7 3]<span class="hljs-comment"># ll /etc/openvpn/client/dev/</span><br>total 16<br>-rw------- 1 root root 1176 Mar 18 10:01 ca.crt<br>-rw------- 1 root root 4425 Mar 18 10:01 dev.crt<br>-rw------- 1 root root  883 Mar 18 10:01 dev.req<br>[root@openvpn-centos7 3]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="准备-OpenVPN-服务器配置文件"><a href="#准备-OpenVPN-服务器配置文件" class="headerlink" title="准备 OpenVPN 服务器配置文件"></a>准备 OpenVPN 服务器配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs sh">;<span class="hljs-built_in">local</span> a.b.c.d <span class="hljs-comment">#本机监听IP,默认为本机所有IP</span><br>port 1194 <span class="hljs-comment">#端口</span><br>;proto tcp <span class="hljs-comment">#协议,生产推荐使用TCP</span><br>proto udp <span class="hljs-comment">#默认协议udp</span><br>;dev tap <span class="hljs-comment">#创建以太网隧道设备，tap设备实现以太网帧通过Openvpn隧道，可提供非IP协议如</span><br>IPX和AppleTalk等的支持，tap等当于一个以太网设备，它操作第二层数据包如以太网数据帧。<br>dev tun <span class="hljs-comment">#创建IP路由隧道，生产推存使用tun.互联网使用tun,一个tun设备大多时候被用于基</span><br>于IP协议的通讯。tun模拟了网络层设备，操作第三层数据包比如IP数据封包。<br>;dev-node MyTap <span class="hljs-comment">#TAP-Win32的设备驱动。非windows系统不需要</span><br>ca ca.crt <span class="hljs-comment">#ca证书文件</span><br>cert server.crt <span class="hljs-comment">#服务器证书文件</span><br>key server.key <span class="hljs-comment">#服务器私钥文件</span><br>dh dh2048.pem <span class="hljs-comment">#dh参数文件</span><br>;topology subnet<br>server 10.8.0.0 255.255.255.0 <span class="hljs-comment">#客户端连接后自动分配的IP网段，默认会给服务器分配此网段的第</span><br>一个IP将做为客户端的网关,注意不要和内网网段相同<br>ifconfig-pool-persist ipp.txt <span class="hljs-comment">#记录客户端和虚拟ip地址分配的文件</span><br>;server-bridge 10.8.0.4 255.255.255.0 10.8.0.50 10.8.0.100 <span class="hljs-comment">#配置网桥模式，无需配置,</span><br>建议注释<br>;server-bridge<br>;push <span class="hljs-string">&quot;route 192.168.10.0 255.255.255.0&quot;</span> <span class="hljs-comment">#推送给客户端的到达服务器后面网段的静态路由，</span><br>网关是服务器地址10.8.0.1<br>;push <span class="hljs-string">&quot;route 192.168.10.100 255.255.255.255&quot;</span> <span class="hljs-comment">#用255.255.255.255可实现只能访问内网单个</span><br>主机的功能,比如:jumpserver<br>;push <span class="hljs-string">&quot;route 192.168.20.0 255.255.255.0&quot;</span> <span class="hljs-comment">#推送路由信息到客户端，以允许客户端能够连接到</span><br>服务器背后的其它私有网络<br>;client-config-dir ccd <span class="hljs-comment">#为特定客户端添加路由信息，此路由是客户端后面的网段而非服务端的网</span><br>段，无需设置<br>;route 192.168.40.128 255.255.255.248<br>;client-config-dir ccd<br>;route 10.9.0.0 255.255.255.252<br>;learn-address ./script <span class="hljs-comment">#指定外部脚本文件，实现创建不同组的iptables规</span><br>则，无需配置<br>;push <span class="hljs-string">&quot;redirect-gateway def1 bypass-dhcp&quot;</span> <span class="hljs-comment">#启用此配置后客户端所有流量都将通过VPN服务器进</span><br>行转发，因此生产一般无需配置此项<br>;push <span class="hljs-string">&quot;dhcp-option DNS 208.67.222.222&quot;</span> <span class="hljs-comment">#推送DNS服务器地址，无需配置</span><br>;push <span class="hljs-string">&quot;dhcp-option DNS 208.67.220.220&quot;</span><br>;client-to-client <span class="hljs-comment">#允许不同的客户端直接通信,不安全,生产环境一般无</span><br>需配置<br>;duplicate-cn <span class="hljs-comment">#多个用户共用一个证书，一般用于测试环境，生产环境建议一个用户一个证</span><br>书,无需开启<br>keepalive 10 120 <span class="hljs-comment">#设置服务端活动的检测的间隔和超时时间，每隔10秒ping一次，120秒没有</span><br>回应则认为已经断线<br>tls-auth ta.key 0 <span class="hljs-comment">#访止DoS等攻击的安全增强配置,服务器和每个客户端都需要拥有此密钥文</span><br>件。第二个参数在服务器端为0，客户端为1<br>cipher AES-256-CBC <span class="hljs-comment">#加密算法</span><br>;compress lz4-v2 <span class="hljs-comment">#启用Openvpn2.4.X新版压缩算法</span><br>;push <span class="hljs-string">&quot;compress lz4-v2&quot;</span> <span class="hljs-comment">#推送客户端使用新版压缩算法,和下面的comp-lzo不要同时使用</span><br>;comp-lzo <span class="hljs-comment">#旧户端兼容的压缩配置，需要客户端配置开启压缩,openvpn2.4.X等新版可以不</span><br>用开启<br>;max-clients 100 <span class="hljs-comment">#最多支持的客户端数量</span><br>;user nobody <span class="hljs-comment">#指定openvpn服务的用户</span><br>;group nobody <span class="hljs-comment">#指定openvpn服务的组</span><br>persist-key <span class="hljs-comment">#重启服务时默认会重新读取key文件，开启此配置后保持使用第一次的key文件,</span><br>生产环境无需开启<br>persist-tun <span class="hljs-comment">#Don’t close and reopen TUN/TAP device or run up/down</span><br>scripts across SIGUSR1 or --ping-restart restarts,生产环境建议无需开启<br>status openvpn-status.log <span class="hljs-comment">#服务器状态记录文件，每分钟记录一次相关信息</span><br>;<span class="hljs-built_in">log</span> openvpn.log <span class="hljs-comment">#第一种日志记录方式,并指定日志路径，log会在openvpn启动的时候清</span><br>空日志文件,不建议使用<br>;log-append openvpn.log <span class="hljs-comment">#第二种日志记录方式,并指定日志路径，重启openvpn后在之前的日志后</span><br>面追加新的日志,生产环境建议使用<br>verb 3 <span class="hljs-comment">#设置日志级别，0-9，级别越高记录的内容越详细,0 表示静默运行，只记</span><br>录致命错误,4 表示合理的常规用法,5 和 6 可以帮助调试连接错误。9 表示极度冗余，输出非常详细的日志<br>信息<br>;mute 20 <span class="hljs-comment">#对相同类别的信息只记录前20条到日志文件中</span><br>explicit-exit-notify 1 <span class="hljs-comment">#当服务端重启后通知客户端自动重新连接服务器，此项配置仅能用于udp模</span><br>式，tcp模式无需配置即能实现重新连接功能,且开启此项后tcp配置后将导致openvpn服务无法启动,所以<br>tcp时必须不能开启此项<br>script-security 3 <span class="hljs-comment"># 允许使用自定义脚本</span><br>auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env <span class="hljs-comment">#指定自定义脚本路径</span><br>username-as-common-name <span class="hljs-comment">#开启用户密码验证</span><br>client-cert-not-required <span class="hljs-comment">#只支持用户和密码方式验证,不支持证书,无此配置表示需要证书和用户密</span><br>码多种验证<br></code></pre></td></tr></table></figure><h4 id="修改服务器端配置文件"><a href="#修改服务器端配置文件" class="headerlink" title="修改服务器端配置文件"></a>修改服务器端配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 openvpn]<span class="hljs-comment"># grep &#x27;^[a-Z].*&#x27; /etc/openvpn/server.conf</span><br>port 1194<br>proto tcp<br>dev tun<br>ca /etc/openvpn/certs/ca.crt<br>cert /etc/openvpn/certs/server.crt<br>key /etc/openvpn/certs/server.key  <span class="hljs-comment"># This file should be kept secret</span><br>dh /etc/openvpn/certs/dh.pem<br>server 10.8.0.0 255.255.255.0<br>ifconfig-pool-persist ipp.txt<br>push <span class="hljs-string">&quot;route 172.30.0.0 255.255.255.0&quot;</span><br>keepalive 10 120<br>tls-auth ta.key 0 <span class="hljs-comment"># This file is secret</span><br>cipher AES-256-CBC<br>compress lz4-v2<br>push <span class="hljs-string">&quot;compress lz4-v2&quot;</span><br>max-clients 2048<br>user openvpn<br>group openvpn<br>persist-key<br>persist-tun<br>status /var/log/openvpn/openvpn-status.log<br>log-append  /var/log/openvpn/openvpn.log<br>verb 3<br>mute 20<br>explicit-exit-notify 1<br>[root@openvpn-centos7 openvpn]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#准备目志相关目录</span><br>[root@openvpn-centos7 openvpn]<span class="hljs-comment"># getent passwd openvpn</span><br>openvpn:x:998:996:OpenVPN:/etc/openvpn:/sbin/nologin<br>[root@openvpn-centos7 openvpn]<span class="hljs-comment"># mkdir /var/log/openvpn</span><br>[root@openvpn-centos7 openvpn]<span class="hljs-comment"># chown openvpn.openvpn /var/log/openvpn</span><br>[root@openvpn-centos7 openvpn]<span class="hljs-comment"># ll -d /var/log/openvpn</span><br>drwxr-xr-x 2 openvpn openvpn 6 Mar 18 10:16 /var/log/openvpn<br>[root@openvpn-centos7 openvpn]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="启动-OpenVPN-服务"><a href="#启动-OpenVPN-服务" class="headerlink" title="启动 OpenVPN 服务"></a>启动 OpenVPN 服务</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 server]<span class="hljs-comment"># systemctl enable --now openvpn@server</span><br><span class="hljs-comment"># 启动报如下错误请在终端执行该命令</span><br>openvpn --genkey --secret /etc/openvpn/ta.key<br><br>Sat Mar 18 11:05:32 2023 WARNING: cannot <span class="hljs-built_in">stat</span> file <span class="hljs-string">&#x27;ta.key&#x27;</span>: No such file or directory (errno=2)<br>Options error: --tls-auth fails with <span class="hljs-string">&#x27;ta.key&#x27;</span>: No such file or directory (errno=2)<br>Options error: Please correct these errors.<br>Use --<span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span> more information.<br><br><span class="hljs-comment"># 查看状态</span><br>[root@openvpn-centos7 server]<span class="hljs-comment"># systemctl status openvpn@server</span><br>● openvpn@server.service - OpenVPN Robust And Highly Flexible Tunneling Application On server<br>   Loaded: loaded (/usr/lib/systemd/system/openvpn@.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Sat 2023-03-18 11:23:23 CST; 1min 59s ago<br> Main PID: 2769 (openvpn)<br>   Status: <span class="hljs-string">&quot;Initialization Sequence Completed&quot;</span><br>   CGroup: /system.slice/system-openvpn.slice/openvpn@server.service<br>           └─2769 /usr/sbin/openvpn --<span class="hljs-built_in">cd</span> /etc/openvpn/ --config server.conf<br><br>Mar 18 11:23:23 openvpn-centos7 systemd[1]: Starting OpenVPN Robust And Highly Flexible Tunneling Application On server...<br>Mar 18 11:23:23 openvpn-centos7 systemd[1]: Started OpenVPN Robust And Highly Flexible Tunneling Application On server<br></code></pre></td></tr></table></figure><h2 id="准备-OpenVPN-客户端配置文件"><a href="#准备-OpenVPN-客户端配置文件" class="headerlink" title="准备 OpenVPN 客户端配置文件"></a>准备 OpenVPN 客户端配置文件</h2><h3 id="客户端默认范例配置文件说明"><a href="#客户端默认范例配置文件说明" class="headerlink" title="客户端默认范例配置文件说明"></a>客户端默认范例配置文件说明</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 server]<span class="hljs-comment">#grep &#x27;^[[:alpha:]].*&#x27; /usr/share/doc/openvpn/sample/sample-</span><br>config-files/client.conf<br>client <span class="hljs-comment">#指明客户端</span><br>dev tun <span class="hljs-comment">#指定和服务端一致的接口类型</span><br>proto udp <span class="hljs-comment">#指定和服务端一致的协议类型</span><br>remote my-server-1 1194 <span class="hljs-comment">#服务器端的ip或FQDN及端口</span><br>resolv-retry infinite <span class="hljs-comment">#指定服务器端FQDN而非IP时，当客户端重新连接后会重新解FQDN对应的IP</span><br>nobind <span class="hljs-comment">#客户端不绑定监听端口，随机打开端口连接到服务端的端口</span><br>persist-key<br>persist-tun<br>ca ca.crt<br>cert client.crt<br>key client.key<br>remote-cert-tls server <span class="hljs-comment">#使用服务器证书校验方式</span><br>tls-auth ta.key 1 <span class="hljs-comment">#安全加强</span><br>cipher AES-256-CBC<br>verb 3<br></code></pre></td></tr></table></figure><h3 id="生成客户端用户的配置文件"><a href="#生成客户端用户的配置文件" class="headerlink" title="生成客户端用户的配置文件"></a>生成客户端用户的配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#生成客户端文件,文件后缀必须为.ovpn</span><br>[root@openvpn-centos7 server]<span class="hljs-comment">#grep &#x27;^[[:alpha:]].*&#x27; /usr/share/doc/openvpn/sample/sample-</span><br>config-files/client.conf &gt; /etc/openvpn/client/wangxiaochun/client.ovpn<br><span class="hljs-comment">#修改配置文件,内容如下</span><br>[root@openvpn-centos7 server]<span class="hljs-comment">#vim /etc/openvpn/client/wangxiaochun/client.ovpn</span><br>[root@openvpn-centos7 server]<span class="hljs-comment">#cat /etc/openvpn/client/wangxiaochun/client.ovpn</span><br>client<br>dev tun<br>proto tcp<br>remote 192.1681.110 1194 <span class="hljs-comment">#生产中为OpenVPN公网IP或者FQDN</span><br>resolv-retry infinite<br>nobind<br><span class="hljs-comment">#persist-key</span><br><span class="hljs-comment">#persist-tun</span><br>ca ca.crt<br>cert dev.crt<br>key dev.key<br>remote-cert-tls server<br><span class="hljs-comment">#tls-auth ta.key 1</span><br>cipher AES-256-CBC<br>verb 3 <span class="hljs-comment">#此值不能随意指定,否则无法通信</span><br>compress lz4-v2 <span class="hljs-comment">#此项在OpenVPN2.4.X版本使用,需要和服务器端保持一致,如不指定,默认使用</span><br>comp-lz压缩<br></code></pre></td></tr></table></figure><h2 id="实现-OpenVPN-客户端"><a href="#实现-OpenVPN-客户端" class="headerlink" title="实现 OpenVPN 客户端"></a>实现 OpenVPN 客户端</h2><h3 id="Windows-客户端安装省略"><a href="#Windows-客户端安装省略" class="headerlink" title="Windows 客户端安装省略"></a>Windows 客户端安装省略</h3><h3 id="Windows-客户端配置准备"><a href="#Windows-客户端配置准备" class="headerlink" title="Windows 客户端配置准备"></a>Windows 客户端配置准备</h3><p>保存证书到openvpn 客户端安装目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在服务器打包证书并下载发送给windows客户端</span><br>[root@openvpn-centos7 dev]<span class="hljs-comment"># pwd</span><br>/etc/openvpn/client/dev<br>[root@openvpn-centos7 dev]<span class="hljs-comment"># ll</span><br>total 20<br>-rw------- 1 root root 1176 Mar 18 10:01 ca.crt<br>-rw------- 1 root root 4425 Mar 18 10:01 dev.crt<br>-rw-r--r-- 1 root root  235 Mar 18 11:35 dev.ovpn<br>-rw------- 1 root root  883 Mar 18 10:01 dev.req<br>[root@openvpn-centos7 dev]<span class="hljs-comment">#</span><br><br><span class="hljs-comment"># 放置到windows客户端默认安装目录下 C:\Program Files\OpenVPN\config 目录</span><br></code></pre></td></tr></table></figure><h2 id="实现访问VPN服务器的内网主机"><a href="#实现访问VPN服务器的内网主机" class="headerlink" title="实现访问VPN服务器的内网主机"></a>实现访问VPN服务器的内网主机</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在服务器开启ip_forward转发功能</span><br>[root@openvpn-centos7 dev]<span class="hljs-comment">#echo net.ipv4.ip_forward = 1 &gt;&gt; /etc/sysctl.conf</span><br>[root@openvpn-centos7 dev]<span class="hljs-comment">#sysctl -p</span><br>net.ipv4.ip_forward = 1<br></code></pre></td></tr></table></figure><h2 id="配置实现内网服务器回应外网的请求的路由"><a href="#配置实现内网服务器回应外网的请求的路由" class="headerlink" title="配置实现内网服务器回应外网的请求的路由"></a>配置实现内网服务器回应外网的请求的路由</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#阿里云服务器不支持修改路由</span><br>[root@web1 ~]<span class="hljs-comment">#route add -net 10.8.0.0/24 gw 172.30.0.1</span><br></code></pre></td></tr></table></figure><h2 id="在OpenVPN服务器配置-iptables-规则"><a href="#在OpenVPN服务器配置-iptables-规则" class="headerlink" title="在OpenVPN服务器配置 iptables 规则"></a>在OpenVPN服务器配置 iptables 规则</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#添加SNAT规则</span><br><span class="hljs-comment">#方法1</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment">#echo &#x27;iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE&#x27; &gt;&gt; /etc/rc.d/rc.local</span><br><span class="hljs-comment">#方法2</span><br>[root@openvpn-centos7 ~]<span class="hljs-comment">#echo &#x27;iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to-source 172.30.0.1&#x27; &gt;&gt; /etc/rc.d/rc.local</span><br></code></pre></td></tr></table></figure><h2 id="吊销指定的用户的证书"><a href="#吊销指定的用户的证书" class="headerlink" title="吊销指定的用户的证书"></a>吊销指定的用户的证书</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@openvpn-centos7 ~]<span class="hljs-comment"># cd /etc/openvpn/easy-rsa-server/3</span><br>[root@openvpn-centos7 3]<span class="hljs-comment">#./easyrsa revoke dev</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker镜像加速</title>
    <link href="/2023/03/07/Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/"/>
    <url>/2023/03/07/Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker-镜像加速配置"><a href="#Docker-镜像加速配置" class="headerlink" title="Docker 镜像加速配置"></a>Docker 镜像加速配置</h1><p>国内从DockerHub拉取镜像有时会遇到困难，此时可以配置镜像加速器。</p><p>Docker官方和国内很多云服务商都提供了国内加速器服务，建议根据运行docker的云平台选择对应的镜像加速服务。</p><p>下面列出国内常用的加速站点，排名不分先后,总体来说阿里云速度较稳定。</p><p>docker中国区官方镜像加速：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://registry.docker-cn.com<br></code></pre></td></tr></table></figure><p>网易镜像加速：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://hub-mirror.c.163.com<br></code></pre></td></tr></table></figure><p>中国科技大学镜像加速：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://docker.mirrors.ustc.edu.cn<br></code></pre></td></tr></table></figure><p>腾讯云镜像加速：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://mirror.ccs.tencentyun.com<br></code></pre></td></tr></table></figure><p>阿里云镜像加速：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://ung2thfc.mirror.aliyuncs.com<br></code></pre></td></tr></table></figure><p>修改daemon配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json来使用加速器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">/etc/docker/daemon.json<br></code></pre></td></tr></table></figure><p>加入如下内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>  <span class="hljs-string">&quot;https://ung2thfc.mirror.aliyuncs.com&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;https://mirror.ccs.tencentyun.com&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>加载重启docker</p><p>在终端输入以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl daemon-reload<br><br>systemctl restart docker<br></code></pre></td></tr></table></figure><p> 打开终端执行docker info命令，可见下面信息 </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dts">....<br><span class="hljs-symbol">Labels:</span><br><span class="hljs-symbol">Experimental:</span> false<br>Insecure Registries:<br> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">8</span><br>Registry Mirrors:<br><span class="hljs-symbol"> https:</span><span class="hljs-comment">//ung2thfc.mirror.aliyuncs.com/</span><br><span class="hljs-symbol"> https:</span><span class="hljs-comment">//mirror.ccs.tencentyun.com/</span><br><span class="hljs-symbol"> https:</span><span class="hljs-comment">//registry.docker-cn.com/</span><br><span class="hljs-symbol"> http:</span><span class="hljs-comment">//hub-mirror.c.163.com/</span><br><span class="hljs-symbol"> https:</span><span class="hljs-comment">//docker.mirrors.ustc.edu.cn/</span><br>Live Restore Enabled: false<br></code></pre></td></tr></table></figure><p>还可以使用如下脚本进行设置，执行前检查自己的环境,下列脚本可以用于新装Docker环境的机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br><span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>  <span class="hljs-string">&quot;https://ung2thfc.mirror.aliyuncs.com&quot;</span>,<br>  <span class="hljs-string">&quot;https://mirror.ccs.tencentyun.com&quot;</span>,<br>  <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br>  <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br>  <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]<br>&#125;<br>EOF<br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Docker安装部署</title>
    <link href="/2023/03/07/docker-install/"/>
    <url>/2023/03/07/docker-install/</url>
    
    <content type="html"><![CDATA[<h1 id="安装和删除方法"><a href="#安装和删除方法" class="headerlink" title="安装和删除方法"></a>安装和删除方法</h1><p>官方文档 : <a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a><br>阿里云文档: <a href="https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.3e221b11gu">https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.3e221b11gu</a></p><h2 id="Ubuntu-安装和删除Docker"><a href="#Ubuntu-安装和删除Docker" class="headerlink" title="Ubuntu 安装和删除Docker"></a>Ubuntu 安装和删除Docker</h2><p>官方文档: <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></p><h2 id="CentOS-安装和删除Docker"><a href="#CentOS-安装和删除Docker" class="headerlink" title="CentOS 安装和删除Docker"></a>CentOS 安装和删除Docker</h2><p>官方文档: <a href="https://docs.docker.com/install/linux/docker-ce/centos/">https://docs.docker.com/install/linux/docker-ce/centos/</a><br>CentOS 6 因内核太旧，即使支持安装docker，但会有各种问题，不建议安装<br>CentOS 7 的 extras 源虽然可以安装docker，但包比较旧，建议从官方源或镜像源站点下载安装docker<br>CentOS 8 有新技术 podman 代替 docker<br>因此建议在CentOS 7 上安装 docker<br>参考阿里云文档: <a href="https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.3e221b11gu">https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.3e221b11gu</a></p><h2 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h2><p>本方法适用于无法上网或无法通过包安装方式安装的主机上安装docker<br>安装文档: <a href="https://docs.docker.com/install/linux/docker-ce/binaries/">https://docs.docker.com/install/linux/docker-ce/binaries/</a></p><h3 id="二进制安装下载路径"><a href="#二进制安装下载路径" class="headerlink" title="二进制安装下载路径"></a>二进制安装下载路径</h3><p><a href="https://download.docker.com/linux/">https://download.docker.com/linux/</a><br><a href="https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/">https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/</a></p><p>范例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/docker-20.10.10.tgz?spm=a2c6h.25603864.0.0.1caf15acK1B2NZ<br><br><span class="hljs-comment"># 解压</span><br>[root@centos7 src]<span class="hljs-comment"># tar xf docker-20.10.10.tgz</span><br><br><span class="hljs-comment"># tree</span><br>[root@centos7 src]<span class="hljs-comment"># tree</span><br>.<br>├── docker<br>│   ├── containerd<br>│   ├── containerd-shim<br>│   ├── containerd-shim-runc-v2<br>│   ├── ctr<br>│   ├── docker<br>│   ├── dockerd<br>│   ├── docker-init<br>│   ├── docker-proxy<br>│   └── runc<br>└── docker-20.10.10.tgz<br><br>1 directory, 10 files<br>[root@centos7 src]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 添加环境变量</span><br>[root@centos7 src]<span class="hljs-comment"># ln -s /usr/local/src/docker/* /usr/bin/</span><br><span class="hljs-comment">#启动dockerd服务</span><br>[root@centos7 src]<span class="hljs-comment">#dockerd &amp;&gt;/dev/null &amp;</span><br><br><span class="hljs-comment"># 编写service文件</span><br>[root@centos7 ~]<span class="hljs-comment"># cat /lib/systemd/system/docker.service</span><br><br>[Unit]<br>Description=Docker Application Container Engine<br>Documentation=https://docs.docker.com<br>After=network-online.target docker.socket firewalld.service containerd.service time-set.target<br>Wants=network-online.target containerd.service<br><br>[Service]<br>Type=notify<br>ExecStart=/usr/bin/dockerd -H unix://var/run/docker.sock<br>ExecReload=/bin/kill -s HUP <span class="hljs-variable">$MAINPID</span><br>TimeoutStartSec=0<br>RestartSec=2<br>Restart=always<br>StartLimitBurst=3<br>StartLimitInterval=60s<br><br><span class="hljs-comment"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class="hljs-comment"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br>LimitNOFILE=infinity<br>LimitNPROC=infinity<br>LimitCORE=infinity<br><br><span class="hljs-comment"># Comment TasksMax if your systemd version does not support it.</span><br><span class="hljs-comment"># Only systemd 226 and above support this option.</span><br>TasksMax=infinity<br><br><span class="hljs-comment"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br>Delegate=<span class="hljs-built_in">yes</span><br><br><span class="hljs-comment"># kill only the docker process, not all processes in the cgroup</span><br>KillMode=process<br>OOMScoreAdjust=-500<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Zabbix介绍和部署</title>
    <link href="/2023/03/02/Zabbix/"/>
    <url>/2023/03/02/Zabbix/</url>
    
    <content type="html"><![CDATA[<h1 id="常见监控方案"><a href="#常见监控方案" class="headerlink" title="常见监控方案"></a>常见监控方案</h1><p>开源监控软件：cacti、nagios、zabbix、smokeping、open-falcon等</p><h1 id="Zabbix使用场景及系统概述"><a href="#Zabbix使用场景及系统概述" class="headerlink" title="Zabbix使用场景及系统概述"></a>Zabbix使用场景及系统概述</h1><p>Zabbix是一个企业级解决方案，支持实时监控数千台服务器，虚拟机和网络设备，采集百万级监控指标，适用于任何IT基础架构、服务、应用程序和资源的解决方案。</p><h2 id="zabbix使用场景"><a href="#zabbix使用场景" class="headerlink" title="zabbix使用场景"></a>zabbix使用场景</h2><p><img src="/../image.assets/1677742555473.png" alt="1677742555473"></p><h2 id="zabbix系统概述"><a href="#zabbix系统概述" class="headerlink" title="zabbix系统概述"></a>zabbix系统概述</h2><p><img src="/../image.assets/1677742581882.png" alt="1677742581882"></p><p><strong>数据采集：</strong></p><p>周期性时序数据</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs armasm">主机/对象：服务器、路由器、交换机、存储、防火墙、<span class="hljs-built_in">IP</span>、PORT、URL、自定义监控对象...<br>采集目标：监控项，指标数据（metrics <span class="hljs-meta">data</span>）<br></code></pre></td></tr></table></figure><p><strong>数据存储：</strong></p><p>监控数据存储系统</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">SQL</span>: <span class="hljs-variable">MySQL</span>/<span class="hljs-function"><span class="hljs-title">MariaDB</span>(<span class="hljs-variable">Zabbix</span>)</span><br><span class="hljs-variable">NoSQL</span>：<span class="hljs-function"><span class="hljs-title">Redis</span>(<span class="hljs-variable">Open</span>-<span class="hljs-variable">falcon</span>)</span><br><span class="hljs-variable">rrd</span>: <span class="hljs-variable">Round</span> <span class="hljs-variable">Robin</span> <span class="hljs-function"><span class="hljs-title">Database</span>(<span class="hljs-variable">Cacti</span>)</span><br></code></pre></td></tr></table></figure><p><strong>数据类型：</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">历史数据: 每个监控项采集到的每个监控值</span><br><span class="hljs-section">趋势数据: 趋势表里主要保留某个监控项一个小时内历史数据的最大值、最小值和平均值以及该监控项一个小时内所采</span><br>集到的数据个数。<br></code></pre></td></tr></table></figure><p><strong>阈值：</strong><br>可按照预定义的阈值等级实现分层报警<br><strong>告警机制：</strong><br>email,短信,微信,语音,故障自治愈</p><h2 id="zabbix-核心任务："><a href="#zabbix-核心任务：" class="headerlink" title="zabbix 核心任务："></a>zabbix 核心任务：</h2><p><strong>数据采集：</strong></p><p>数据采集方式：zabbix-server，zabbix-proxy，zabbix-agent</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sqf">Agentless：SNMP,Telnet,ssh, IPMI, JMX,<br><span class="hljs-built_in">Agent</span>：zabbix <span class="hljs-built_in">agent</span><br></code></pre></td></tr></table></figure><p><strong>数据存储：</strong><br>zabbix database<br><strong>数据展示：</strong><br>zabbix web</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">graph</span> -&gt;</span> <span class="hljs-function"><span class="hljs-title">screen</span> -&gt;</span> slideshow(将多个screen以幻灯片的方式进行轮流展示)<br></code></pre></td></tr></table></figure><p>grafana:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">以zabbix为数据源展示更绚丽的界面<br></code></pre></td></tr></table></figure><p><strong>告警通知：</strong></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">host (host groups) &lt;- templates #从模板继承告警配置<br>host -&gt; items -&gt; triggers -&gt; action (条件-conditions, 操作-operations) #自定义告警配置<br></code></pre></td></tr></table></figure><h1 id="规划部署"><a href="#规划部署" class="headerlink" title="规划部署"></a>规划部署</h1><h2 id="部署环境："><a href="#部署环境：" class="headerlink" title="部署环境："></a>部署环境：</h2><ul><li>服务器系统：centos7.9，ubuntu20.04</li></ul><h2 id="yum安装zabbix"><a href="#yum安装zabbix" class="headerlink" title="yum安装zabbix"></a>yum安装zabbix</h2><p> <a href="https://www.zabbix.com/cn/download?zabbix=5.0&os_distribution=centos&os_version=7&components=server_frontend_agent&db=mysql&ws=nginx">安装说明</a> </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># Install Zabbix repository</span><br>wget https:<span class="hljs-regexp">//</span>repo.zabbix.com<span class="hljs-regexp">/zabbix/</span><span class="hljs-number">5.0</span><span class="hljs-regexp">/rhel/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>zabbix-release-<span class="hljs-number">5.0</span>-<span class="hljs-number">1</span>.el7.noarch.rpm<br><br>yum install zabbix-release-<span class="hljs-number">5.0</span>-<span class="hljs-number">1</span>.el7.noarch.rpm<br><br>yum clean all<br><br><span class="hljs-comment"># 安装Zabbix server，Web前端，agent</span><br><br>yum install zabbix-server-mysql zabbix-agent<br><br><span class="hljs-comment"># Install Zabbix frontend</span><br><span class="hljs-comment"># Enable Red Hat Software Collections</span><br>yum install centos-release-scl<br><br><span class="hljs-comment"># 编辑配置文件 /etc/yum.repos.d/zabbix.repo and enable zabbix-frontend repository.</span><br>[zabbix-frontend]<br>...<br>enabled=<span class="hljs-number">1</span><br>...<br><br><span class="hljs-comment"># Install Zabbix frontend packages.</span><br>yum install zabbix-web-mysql-scl zabbix-nginx-conf-scl<br><br><br><span class="hljs-comment"># 安装数据库</span><br><span class="hljs-comment"># 在线一键安装脚本地址</span><br>https:<span class="hljs-regexp">//i</span>tshare.work<span class="hljs-regexp">/2022/</span><span class="hljs-number">09</span><span class="hljs-regexp">/30/</span>MySQLinstallScript/<br><br><span class="hljs-comment"># 创建初始数据库</span><br><span class="hljs-comment"># Make sure you have database server up and running.</span><br><span class="hljs-comment"># 在数据库主机上运行以下代码</span><br>mysql -uroot -p<br><br>mysql&gt; create database zabbix character set utf8 collate utf8_bin;<br>Query OK, <span class="hljs-number">1</span> row affected (<span class="hljs-number">0.01</span> sec)<br><br>mysql&gt; create user zabbix@localhost identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; grant all privileges on zabbix.* to zabbix@localhost;<br>Query OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; set global log_bin_trust_function_creators = <span class="hljs-number">1</span>;<br>Query OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; quit;<br><br><span class="hljs-comment"># 导入初始架构和数据，系统将提示您输入新创建的密码。</span><br>[root@centos7 ~]<span class="hljs-comment"># zcat /usr/share/doc/zabbix-server-mysql-5.0.31/create.sql.gz | mysql -uzabbix -p123456 zabbix</span><br><br><br><span class="hljs-comment">#Disable log_bin_trust_function_creators option after importing database schema.</span><br><span class="hljs-comment"># mysql -uroot -p</span><br>password<br>mysql&gt; set global log_bin_trust_function_creators = <span class="hljs-number">0</span>;<br>mysql&gt; quit;<br><br><span class="hljs-comment">#为Zabbix server配置数据库</span><br><span class="hljs-comment">#编辑配置文件 /etc/zabbix/zabbix_server.conf</span><br>DBPassword=<span class="hljs-number">12456</span><br><br><span class="hljs-comment"># 为 Zabbix前端配置PHP</span><br><span class="hljs-comment"># 编辑配置文件 /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf uncomment and set &#x27;listen&#x27; and &#x27;server_name&#x27; directives.</span><br><span class="hljs-comment"># listen 80;</span><br><span class="hljs-comment"># server_name example.com;</span><br><br><span class="hljs-comment"># 编辑配置文件 /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf add nginx to listen.acl_users directive.</span><br>listen.acl_users = apache,nginx<br><br><span class="hljs-comment"># Then uncomment and set the right timezone for you.(取消注释，设置时区)</span><br>php_value[date.timezone] = Asia/Shanghai<br><br><span class="hljs-comment"># 启动Zabbix server和agent进程</span><br><span class="hljs-comment"># 启动Zabbix server和agent进程，并为它们设置开机自启：</span><br><span class="hljs-comment"># systemctl restart zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="hljs-comment"># systemctl enable zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br></code></pre></td></tr></table></figure><ul><li>开始使用</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//i</span>p:port<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1677747113512.png" alt="1677747113512"></p><p><img src="/../image.assets/1677747122483.png" alt="1677747122483"></p><p><img src="/../image.assets/1677747141707.png" alt="1677747141707"></p><p><img src="/../image.assets/1677747204306.png" alt="1677747204306"></p><p><img src="/../image.assets/1677747218962.png" alt="1677747218962"></p><p><img src="/../image.assets/1677747236290.png" alt="1677747236290"></p><p><img src="/../image.assets/1677747305904.png" alt="1677747305904"></p><p><img src="/../image.assets/1677747322004.png" alt="1677747322004"></p><h2 id="apt安装"><a href="#apt安装" class="headerlink" title="apt安装"></a>apt安装</h2><p> <a href="https://www.zabbix.com/cn/download?zabbix=5.0&os_distribution=ubuntu&os_version=20.04&components=server_frontend_agent&db=mysql&ws=apache">Zabbix 5.0 LTS for Ubuntu 20.04 (Focal), MySQL, Apache</a> </p><p><img src="/../image.assets/1677748010282.png" alt="1677748010282"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># Install and configure Zabbix for your platform</span><br><span class="hljs-comment"># a. Install Zabbix repository</span><br>wget https://repo.zabbix.com/zabbix/5.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.0-1%2Bfocal_all.deb<br>dpkg -i zabbix-release_5.0-1+focal_all.deb<br>apt update<br><br><span class="hljs-comment"># 安装Zabbix server，Web前端，agent</span><br>apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-agent<br><br><span class="hljs-comment"># 安装数据库</span><br>apt install mysql-server -y<br><br><span class="hljs-comment"># 创建初始数据库</span><br><span class="hljs-comment"># Make sure you have database server up and running.</span><br><span class="hljs-comment"># 在数据库主机上运行以下代码。</span><br><span class="hljs-comment"># mysql -uroot -p</span><br>password<br>mysql&gt; create database zabbix character <span class="hljs-built_in">set</span> utf8 collate utf8_bin;<br>mysql&gt; create user zabbix@localhost identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; grant all privileges on zabbix.* to zabbix@localhost;<br>mysql&gt; <span class="hljs-built_in">set</span> global log_bin_trust_function_creators = 1;<br>mysql&gt; quit;<br><br><span class="hljs-comment"># 导入初始架构和数据，系统将提示您输入新创建的密码。</span><br>zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p123456 zabbix<br><br><span class="hljs-comment"># Disable log_bin_trust_function_creators option after importing database schema.</span><br><span class="hljs-comment"># mysql -uroot -p</span><br>password<br>mysql&gt; <span class="hljs-built_in">set</span> global log_bin_trust_function_creators = 0;<br>mysql&gt; quit;<br><br><span class="hljs-comment"># 为Zabbix server配置数据库</span><br><span class="hljs-comment"># 编辑配置文件 /etc/zabbix/zabbix_server.conf</span><br>DBPassword=123456<br><br><span class="hljs-comment"># 为Zabbix前端配置PHP</span><br><span class="hljs-comment"># 编辑配置文件 /etc/zabbix/apache.conf uncomment and set the right timezone for you.</span><br>php_value date.timezone Asia/Shanghai<br><br><span class="hljs-comment"># 动Zabbix server和agent进程</span><br><span class="hljs-comment"># 启动Zabbix server和agent进程，并为它们设置开机自启：</span><br>systemctl restart zabbix-server zabbix-agent apache2<br>systemctl <span class="hljs-built_in">enable</span> zabbix-server zabbix-agent apache2<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Zabbix</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>运维自动化工具Ansible(二)</title>
    <link href="/2023/02/25/Ansible2/"/>
    <url>/2023/02/25/Ansible2/</url>
    
    <content type="html"><![CDATA[<h1 id="Playbook"><a href="#Playbook" class="headerlink" title="Playbook"></a>Playbook</h1><h2 id="playbook介绍"><a href="#playbook介绍" class="headerlink" title="playbook介绍"></a>playbook介绍</h2><p>官方链接</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/user_guide/</span>playbooks_intro.html<br></code></pre></td></tr></table></figure><h3 id="Playbook-组成"><a href="#Playbook-组成" class="headerlink" title="Playbook 组成"></a>Playbook 组成</h3><p><img src="/../image.assets/1677299110747.png" alt="1677299110747"></p><ul><li>一个 playbook(剧本)文件是一个YAML语言编写的文本文件</li><li>通常一个playbook只包括一个play</li><li>一个 play的主要包括两部分: 主机和tasks. 即实现在指定一组主机上执行一个tasks定义好的任务列表。</li><li>一个tasks中可以有一个或多个task任务</li><li>每一个Task本质上就是调用ansible的一个module</li><li>在复杂场景中,一个playbook中也可以包括多个play，实现对多组不同的主机执行不同的任务</li></ul><h3 id="Playbook-与-Ad-Hoc-对比"><a href="#Playbook-与-Ad-Hoc-对比" class="headerlink" title="Playbook 与 Ad-Hoc 对比"></a>Playbook 与 Ad-Hoc 对比</h3><ul><li>Playbook是对多个 AD-Hoc 的一种编排组合的实现方式</li><li>Playbook能控制任务执行的先后顺序</li><li>Playbook可以持久保存到文件中从而方便多次调用运行，而Ad-Hoc只能临时运行。</li><li>Playbook适合复杂的重复性的任务，而Ad-Hoc适合做快速简单的一次性任务</li></ul><h2 id="YAML-语言"><a href="#YAML-语言" class="headerlink" title="YAML 语言"></a>YAML 语言</h2><h3 id="YAML-语言介绍"><a href="#YAML-语言介绍" class="headerlink" title="YAML 语言介绍"></a>YAML 语言介绍</h3><p>YAML：YAML Ain’t Markup Language，即YAML不是标记语言。不过，在开发的这种语言时，YAML的<br>意思其实是：”Yet Another Markup Language”（仍是一种标记语言）<br>YAML是一个可读性高的用来表达资料序列的格式。<br>YAML参考了其他多种语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822等。<br>Clark Evans在2001年在首次发表了这种语言，另外Ingy döt Net与Oren Ben-Kiki也是这语言的共同设计者<br>目前很多最新的软件比较流行采用此格式的文件存放配置信息，如:ubuntu，anisble，docker，kubernetes等<br>YAML 官方网站：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">http:</span>//www.yaml<span class="hljs-meta">.org</span><br></code></pre></td></tr></table></figure><p>ansible 官网:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/reference_appendices/</span>YAMLSyntax.html<br></code></pre></td></tr></table></figure><h3 id="YAML-语言特性"><a href="#YAML-语言特性" class="headerlink" title="YAML 语言特性"></a>YAML 语言特性</h3><ul><li>YAML的可读性好</li><li>YAML和脚本语言的交互性好</li><li>YAML使用实现语言的数据类型</li><li>YAML有一个一致的信息模型</li><li>YAML易于实现</li><li>YAML可以基于流来处理</li><li>YAML表达能力强，扩展性好</li></ul><h3 id="YAML语法简介"><a href="#YAML语法简介" class="headerlink" title="YAML语法简介"></a>YAML语法简介</h3><ul><li>在单一文件第一行，用连续三个连字号”-“ 开始，还有选择性的连续三个点号( … )用来表示文件结尾</li><li>次行开始正常写Playbook的内容，一般建议写明该Playbook的功能</li><li>使用#号注释代码</li><li>缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判别配置的级别是通过缩进结行来实现的</li><li>缩进不支持tab,必须使用空格进行缩进</li><li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li><li>YAML文件内容是区别大小写的，key&#x2F;value的值均需大小写敏感</li><li>多个key&#x2F;value可同行写也可换行写，同行使用，分隔</li><li>key后面冒号要加一个空格 比如: key: value</li><li>value可是个字符串，也可是另一个列表</li><li>YAML文件扩展名通常为yml或yaml</li></ul><h3 id="支持的数据类型"><a href="#支持的数据类型" class="headerlink" title="支持的数据类型"></a>支持的数据类型</h3><p>YAML 支持以下常用几种数据类型：</p><ul><li>标量：单个的、不可再分的值</li><li>对象：键值对的集合，又称为: 字典（dictionary）&#x2F; 哈希（hashes） &#x2F; 映射（mapping）</li><li>数组：一组按次序排列的值，又称为: 列表（list）&#x2F; 序列（sequence）</li></ul><h4 id="scalar-标量"><a href="#scalar-标量" class="headerlink" title="scalar 标量"></a>scalar 标量</h4><p>key对应value</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">name:</span> wang<br><span class="hljs-symbol">age:</span> <span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><p>使用缩进的方式</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">name:</span><br>wang<br><span class="hljs-symbol">age:</span><br><span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><p>标量是最基本的，不可再分的值，包括：</p><ul><li>字符串 </li><li>布尔值</li><li>整数</li><li>浮点数</li><li>Null</li><li>时间</li><li>日期</li></ul><h4 id="Dictionary-字典"><a href="#Dictionary-字典" class="headerlink" title="Dictionary 字典"></a>Dictionary 字典</h4><p>一个字典是由一个或多个key与value构成<br>key和value之间用冒号 ：分隔<br>冒号 : 后面有一个空格<br>所有 k&#x2F;v 可以放在一行，,每个 k&#x2F;v 之间用逗号分隔<br>所有每个 k&#x2F;v 也可以分别放在不同行,一对k&#x2F;v放在独立的一行<br>格式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">account:</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">wang</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">30</span> &#125;<br></code></pre></td></tr></table></figure><p>使用缩进方式</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">account:</span><br><span class="hljs-symbol">name:</span> wang<br><span class="hljs-symbol">age:</span> <span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta">#不同行</span><br><span class="hljs-meta"># An employee record</span><br><span class="hljs-symbol">name:</span> Example Developer<br><span class="hljs-symbol">job:</span> Developer<br><span class="hljs-symbol">skill:</span> Elite(社会精英)<br><span class="hljs-meta">#同一行,也可以将key:value放置于&#123;&#125;中进行表示，用,分隔多个key:value</span><br><span class="hljs-meta"># An employee record</span><br>&#123;name: <span class="hljs-string">&quot;Example Developer&quot;</span>, job: <span class="hljs-string">&quot;Developer&quot;</span>, skill: <span class="hljs-string">&quot;Elite&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="List-列表"><a href="#List-列表" class="headerlink" title="List 列表"></a>List 列表</h4><p>列表由多个元素组成<br>每个元素放在不同行，每个元素一行,且元素前均使用中横线 - 开头，并且中横线 - 和元素之间有一个空格<br>也可以将所有元素用 [ ] 括起来放在同一行,每个元素之间用逗号分隔<br>格式</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">course</span>:<span class="hljs-meta"> [ linux , golang , python ]</span><br></code></pre></td></tr></table></figure><p>也可以写成以 - 开头的多行</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">course</span><span class="hljs-punctuation">:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">linux</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">golang</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">python</span><br><span class="hljs-attribute">course</span><span class="hljs-punctuation">:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">linux: manjaro</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">golang: gin</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">python: django</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">#不同行,行以-开头,后面有一个空格</span><br><span class="hljs-section"># A list of tasty fruits</span><br><span class="hljs-bullet">-</span> Apple<br><span class="hljs-bullet">-</span> Orange<br><span class="hljs-bullet">-</span> Strawberry<br><span class="hljs-bullet">-</span> Mango<br><span class="hljs-section">#同一行</span><br>[Apple,Orange,Strawberry,Mango]<br></code></pre></td></tr></table></figure><p>范例：YAML 表示一个家庭</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">John</span> <span class="hljs-string">Smith</span><br><span class="hljs-attr">age:</span> <span class="hljs-number">41</span><br><span class="hljs-attr">gender:</span> <span class="hljs-string">Male</span><br><span class="hljs-attr">spouse:</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">Jane</span> <span class="hljs-string">Smith</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">37</span>, <span class="hljs-attr">gender:</span> <span class="hljs-string">Female</span> &#125; <span class="hljs-comment"># 写在一行里</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">Jane</span> <span class="hljs-string">Smith</span> <span class="hljs-comment">#也可以写成多行</span><br><span class="hljs-attr">age:</span> <span class="hljs-number">37</span><br><span class="hljs-attr">gender:</span> <span class="hljs-string">Female</span><br><span class="hljs-attr">children:</span> [ &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">Jimmy</span> <span class="hljs-string">Smith</span>,<span class="hljs-attr">age:</span> <span class="hljs-number">17</span>, <span class="hljs-attr">gender:</span> <span class="hljs-string">Male</span>&#125;, &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">Jenny</span> <span class="hljs-string">Smith</span>, <span class="hljs-string">age:13</span>, <span class="hljs-attr">gender:</span> <span class="hljs-string">Female</span>&#125;, &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">hao</span> <span class="hljs-string">Smith</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">20</span>, <span class="hljs-attr">gender:</span> <span class="hljs-string">Male</span> &#125; ] <span class="hljs-comment">#写在一行</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Jimmy</span> <span class="hljs-string">Smith</span> <span class="hljs-comment">#写在多行,更为推荐的写法</span><br><span class="hljs-attr">age:</span> <span class="hljs-number">17</span><br><span class="hljs-attr">gender:</span> <span class="hljs-string">Male</span><br><span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">Jenny</span> <span class="hljs-string">Smith</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">13</span>, <span class="hljs-attr">gender:</span> <span class="hljs-string">Female</span>&#125;<br><span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">hao</span> <span class="hljs-string">Smith</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">20</span>, <span class="hljs-attr">gender:</span> <span class="hljs-string">Male</span> &#125;<br></code></pre></td></tr></table></figure><h3 id="三种常见的数据格式"><a href="#三种常见的数据格式" class="headerlink" title="三种常见的数据格式"></a>三种常见的数据格式</h3><ul><li>XML：Extensible Markup Language，可扩展标记语言，可用于数据交换和配置</li><li>JSON：JavaScript Object Notation, JavaScript 对象表记法，主要用来数据交换或配置，不支持注释</li><li>YAML：YAML Ain’t Markup Language YAML 不是一种标记语言， 主要用来配置，大小写敏感，不支持tab</li></ul><p><img src="/../image.assets/1677310138888.png" alt="1677310138888"></p><p>可以用工具互相转换，参考网站：<br><a href="https://www.json2yaml.com/">https://www.json2yaml.com/</a><br><a href="http://www.bejson.com/json/json2yaml/">http://www.bejson.com/json/json2yaml/</a></p><h2 id="Playbook-核心组件"><a href="#Playbook-核心组件" class="headerlink" title="Playbook 核心组件"></a>Playbook 核心组件</h2><p>官方文档</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/reference_appendices/</span>playbooks_keywords.html<span class="hljs-comment">#playbook-keywords</span><br></code></pre></td></tr></table></figure><p>一个playbook 中由多个组件组成,其中所用到的常见组件类型如下:</p><ul><li>Hosts 执行的远程主机列表</li><li>Tasks 任务集,由多个task的元素组成的列表实现,每个task是一个字典,一个完整的代码块功能需少元素需包括 name 和 task,一个name只能包括一个task</li><li>Variables 内置变量或自定义变量在playbook中调用</li><li>Templates 模板，可替换模板文件中的变量并实现一些简单逻辑的文件</li><li>Handlers 和 notify 结合使用，由特定条件触发的操作，满足条件方才执行，否则不执行</li><li>tags 标签 指定某条任务执行，用于选择运行playbook中的部分代码。ansible具有幂等性，因此 会自动跳过没有变化的部分，即便如此，有些代码为测试其确实没有发生变化的时间依然会非常地长。此时，如果确信其没有变化，就可以通过tags跳过此些代码片断</li></ul><h3 id="hosts-组件"><a href="#hosts-组件" class="headerlink" title="hosts 组件"></a>hosts 组件</h3><p>Hosts：playbook中的每一个play的目的都是为了让特定主机以某个指定的用户身份执行任务。hosts用于指定要执行指定任务的主机，须事先定义在主机清单中</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">one.example.com<br><span class="hljs-symbol">one.example.com:</span>two.example.com<br><span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.50</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.1</span>.*<br><span class="hljs-symbol">Websrvs:</span>dbsrvs <span class="hljs-meta">#或者，两个组的并集</span><br><span class="hljs-symbol">Websrvs:</span>&amp;dbsrvs <span class="hljs-meta">#与，两个组的交集</span><br><span class="hljs-symbol">webservers:</span>!dbsrvs <span class="hljs-meta">#在websrvs组，但不在dbsrvs组</span><br></code></pre></td></tr></table></figure><p>案例：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>hosts: websrvs:appsrvs<br></code></pre></td></tr></table></figure><h3 id="remote-user-组件"><a href="#remote-user-组件" class="headerlink" title="remote_user 组件"></a>remote_user 组件</h3><p>remote_user: 可用于Host和task中。也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务；此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test</span> <span class="hljs-string">connection</span><br>    <span class="hljs-attr">ping:</span><br>    <span class="hljs-attr">remote_user:</span> <span class="hljs-string">magedu</span><br>    <span class="hljs-attr">sudo:</span> <span class="hljs-literal">yes</span> <span class="hljs-comment">#默认sudo为root</span><br>    <span class="hljs-string">sudo_user:wang</span> <span class="hljs-comment">#sudo为wang</span><br></code></pre></td></tr></table></figure><h3 id="task列表和action组件"><a href="#task列表和action组件" class="headerlink" title="task列表和action组件"></a>task列表和action组件</h3><p>play的主体部分是task list，task list中有一个或多个task,各个task 按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个task后，再开始第二个task<br>task的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。模块执行是幂等的，这意味着多次执行是安全的，因为其结果均一致<br>每个task都应该有其name，用于playbook的执行结果输出，建议其内容能清晰地描述任务执行步骤。<br>如果未提供name，则action的结果将用于输出<br>task两种格式：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">action: <span class="hljs-keyword">module</span> arguments #示例: action: shell wall hello<br><span class="hljs-keyword">module</span>: arguments #建议使用 #示例: shell: wall hello<br></code></pre></td></tr></table></figure><p>注意：shell和command模块后面跟命令，而非key&#x3D;value<br>范例:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@ansible</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment">#cat hello.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment">#first yaml文件</span><br><span class="hljs-comment">#</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">task1</span><br>      <span class="hljs-attr">debug:</span> <span class="hljs-string">msg=&quot;task1</span> <span class="hljs-string">running&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">task2</span><br>      <span class="hljs-attr">debug:</span> <span class="hljs-string">msg=&quot;task2</span> <span class="hljs-string">running&quot;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">appsrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">task3</span><br>      <span class="hljs-attr">debug:</span> <span class="hljs-string">msg=&quot;task3</span> <span class="hljs-string">running&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">task4</span><br>      <span class="hljs-attr">debug:</span> <span class="hljs-string">msg=&quot;task4</span> <span class="hljs-string">running&quot;</span><br></code></pre></td></tr></table></figure><h3 id="其它组件说明"><a href="#其它组件说明" class="headerlink" title="其它组件说明"></a>其它组件说明</h3><p>某任务的状态在运行后为changed时，可通过”notify”通知给相应的handlers任务<br>还可以通过”tags”给task 打标签，可在ansible-playbook命令上使用-t指定进行调用</p><h3 id="ShellScripts-VS-Playbook-案例"><a href="#ShellScripts-VS-Playbook-案例" class="headerlink" title="ShellScripts VS Playbook 案例"></a>ShellScripts VS Playbook 案例</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#SHELL脚本实现</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment"># 安装Apache</span><br>yum install --quiet -y httpd<br><span class="hljs-comment"># 复制配置文件</span><br>cp <span class="hljs-regexp">/tmp/</span>httpd.conf <span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf/</span>httpd.conf<br>cp<span class="hljs-regexp">/tmp/</span>vhosts.conf <span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf.d/</span><br><span class="hljs-comment"># 启动Apache，并设置开机启动</span><br>systemctl enable --now httpd<br><span class="hljs-comment">#Playbook实现</span><br>---<br>- hosts: websrvs<br>  remote_user: root<br>  gather_facts: no<br>  tasks:<br>  - name: <span class="hljs-string">&quot;安装Apache&quot;</span><br>    yum: name=httpd<br>  - name: <span class="hljs-string">&quot;复制配置文件&quot;</span><br>copy: src=<span class="hljs-regexp">/tmp/</span>httpd.conf dest=<span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf/</span><br>  - name: <span class="hljs-string">&quot;复制配置文件&quot;</span><br>copy: src=<span class="hljs-regexp">/tmp/</span>vhosts.conf dest=<span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf.d/</span><br>  - name: <span class="hljs-string">&quot;启动Apache，并设置开机启动&quot;</span><br>service: name=httpd state=started enabled=yes<br></code></pre></td></tr></table></figure><h2 id="playbook-命令"><a href="#playbook-命令" class="headerlink" title="playbook 命令"></a>playbook 命令</h2><p>格式</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">ansible-playbook &lt;<span class="hljs-keyword">filename</span>.yml&gt; ... [<span class="hljs-keyword">options</span>]<br></code></pre></td></tr></table></figure><p>选项</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-params">--syntax</span>,<span class="hljs-params">--syntax-check</span> <span class="hljs-comment">#语法检查,功能相当于bash -n</span><br>-C <span class="hljs-params">--check</span> <span class="hljs-comment">#模拟执行dry run ,只检测可能会发生的改变，但不真正执行操作</span><br><span class="hljs-params">--list-hosts</span> <span class="hljs-comment">#列出运行任务的主机</span><br><span class="hljs-params">--list-tags</span> <span class="hljs-comment">#列出tag</span><br><span class="hljs-params">--list-tasks</span> <span class="hljs-comment">#列出task</span><br><span class="hljs-params">--limit</span> 主机列表 <span class="hljs-comment">#只针对主机列表中的特定主机执行</span><br>-i INVENTORY, <span class="hljs-params">--inventory</span> INVENTORY <span class="hljs-comment">#指定主机清单文件,通常一个项对应一个主机清单文件</span><br><span class="hljs-params">--start-at-task</span> START_AT_TASK <span class="hljs-comment">#从指定task开始执行,而非从头开始,START_AT_TASK为任务的name</span><br>-v -vv -vvv <span class="hljs-comment">#显示过程</span><br></code></pre></td></tr></table></figure><p>范例: 一个简单的 playbook</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@ansible</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment">#cat hello.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">hello</span><br>      <span class="hljs-attr">command:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;hello ansible&quot;</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment">#ansible-playbook hello.yml</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment">#ansible-playbook -v hello.yml</span><br></code></pre></td></tr></table></figure><p>范例: 检查和限制主机</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">ansible-playbook <span class="hljs-built_in">file</span>.yml <span class="hljs-comment">--check #只检测</span><br>ansible-playbook <span class="hljs-built_in">file</span>.yml<br>ansible-playbook <span class="hljs-built_in">file</span>.yml <span class="hljs-comment">--limit websrvs</span><br></code></pre></td></tr></table></figure><p>范例: 一个playbook 多个play</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cat</span> <span class="hljs-string">test_plays.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">localhost</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">play1</span><br>      <span class="hljs-attr">command:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;play1&quot;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">play2</span><br>      <span class="hljs-attr">command:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;play2&quot;</span><br></code></pre></td></tr></table></figure><h2 id="忽略错误-ignore-errors"><a href="#忽略错误-ignore-errors" class="headerlink" title="忽略错误 ignore_errors"></a>忽略错误 ignore_errors</h2><p>如果一个task出错,默认将不会继续执行后续的其它task<br>利用 ignore_errors: yes 可以忽略此task的错误,继续向下执行playbook其它task</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@ansible</span> <span class="hljs-string">ansible</span>]<span class="hljs-comment">#cat test_ignore.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">error</span><br>      <span class="hljs-attr">command:</span> <span class="hljs-string">/bin/false</span><br>      <span class="hljs-attr">ignore_errors:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">continue</span><br>      <span class="hljs-attr">command:</span> <span class="hljs-string">wall</span> <span class="hljs-string">continue</span><br></code></pre></td></tr></table></figure><h2 id="ansible-playbook案例"><a href="#ansible-playbook案例" class="headerlink" title="ansible-playbook案例"></a>ansible-playbook案例</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ymal">---<br>- hosts: centos7<br># yum install nginx<br>  remote_user: root<br>  gather_facts: no<br>  tasks:<br>    - name: install nginx<br>      yum: name=nginx state=present<br>    - name:<br>      service: name=nginx state=started enabled=yes<br></code></pre></td></tr></table></figure><h3 id="卸载httpd"><a href="#卸载httpd" class="headerlink" title="卸载httpd"></a>卸载httpd</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment">#remove_httpd.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">webservers</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">remove</span> <span class="hljs-string">httpd</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=httpd</span> <span class="hljs-string">state=absent</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">remove</span> <span class="hljs-string">apache</span> <span class="hljs-string">user</span><br>    <span class="hljs-attr">user:</span> <span class="hljs-string">name=apache</span> <span class="hljs-string">state=absent</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">remove</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">file:</span> <span class="hljs-string">name=/etc/httpd</span> <span class="hljs-string">state=absent</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">remove</span> <span class="hljs-string">web</span> <span class="hljs-string">html</span><br>    <span class="hljs-attr">file:</span> <span class="hljs-string">name=/data/html/</span> <span class="hljs-string">state=absent</span><br></code></pre></td></tr></table></figure><h2 id="Playbook中使用handlers和notify"><a href="#Playbook中使用handlers和notify" class="headerlink" title="Playbook中使用handlers和notify"></a>Playbook中使用handlers和notify</h2><h3 id="handlers和notify"><a href="#handlers和notify" class="headerlink" title="handlers和notify"></a>handlers和notify</h3><p>Handlers本质是task list ，类似于MySQL中的触发器触发的行为，其中的task与前述的task并没有本质上的不同，只有在关注的资源发生变化时，才会采取一定的操作。<br>Notify对应的action 在所有task都执行完才会最后被触发，这样可避免多个task多次改变发生时每次都触发执行指定的操作，Handlers仅在所有的变化发生完成后一次性地执行指定操作。<br>在notify中列出的操作称为handler，也即notify中调用handler中定义的操作<br>注意:</p><ul><li>如果多个task通知了相同的handlers， 此handlers仅会在所有task结束后运行一 次。</li><li>只有notify对应的task发生改变了才会通知handlers， 没有改变则不会触发handlers</li><li>handlers 是在所有前面的tasks都成功执行才会执行,如果前面任何一个task失败,会导致handle跳过执行</li></ul><p>案例:</p><p><img src="/../image.assets/1677315798458.png" alt="1677315798458"></p><p><img src="/../image.assets/1677315812687.png" alt="1677315812687"></p><p>案例：</p><p><img src="/../image.assets/1677315839869.png" alt="1677315839869"></p><p>案例：</p><p><img src="/../image.assets/1677315862982.png" alt="1677315862982"></p><p><img src="/../image.assets/1677315872464.png" alt="1677315872464"></p><p>范例: 部署haproxy</p><p><img src="/../image.assets/1677315902745.png" alt="1677315902745"></p><h3 id="force-handlers"><a href="#force-handlers" class="headerlink" title="force_handlers"></a>force_handlers</h3><p>如果不论前面的task成功与否,都希望handlers能执行, 可以使用force_handlers: yes 强制执行handler<br>范例: 强制调用handlers</p><p><img src="/../image.assets/1677315975960.png" alt="1677315975960"></p><h2 id="Playbook中使用tags组件"><a href="#Playbook中使用tags组件" class="headerlink" title="Playbook中使用tags组件"></a>Playbook中使用tags组件</h2><p>官方文档:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/user_guide/</span>playbooks_tags.html<br></code></pre></td></tr></table></figure><p>默认情况下， Ansible 在执行一个 playbook 时，会执行 playbook 中所有的任务，在playbook文件中，可以利用tags组件，为特定 task 指定标签，当在执行playbook时，可以只执行特定tags的task,而非整个playbook文件<br>可以一个task对应多个tag,也可以多个task对应同一个tag<br>还有另外3个特殊关键字用于标签, tagged, untagged 和 all,它们分别是仅运行已标记，只有未标记和所有任务。<br>tags 主要用于调试环境<br>范例： tag 标签</p><p><img src="/../image.assets/1677316033321.png" alt="1677316033321"></p><h2 id="Playbook中使用变量"><a href="#Playbook中使用变量" class="headerlink" title="Playbook中使用变量"></a>Playbook中使用变量</h2><p>Playbook中同样也支持变量<br>变量名：仅能由字母、数字和下划线组成，且只能以字母开头<br>变量定义：</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ceylon"><span class="hljs-keyword">variable</span>=<span class="hljs-keyword">value</span><br><span class="hljs-keyword">variable</span>: <span class="hljs-keyword">value</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http_port</span>=<span class="hljs-number">80</span><br><span class="hljs-attribute">http_port</span>: <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><p>通过  调用变量，且变量名前后建议加空格，有时用”“才生效<br>变量来源：</p><ol><li>ansible 的 setup facts 远程主机的所有变量都可直接调用</li><li>通过命令行指定变量，优先级最高</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ansible-playbook -e <span class="hljs-attribute">varname</span>=value test.yml<br></code></pre></td></tr></table></figure><p>3.在playbook文件中定义</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">vars:</span><br><span class="hljs-symbol">var1:</span> value1<br><span class="hljs-symbol">var2:</span> value2<br></code></pre></td></tr></table></figure><p>4.在独立的变量YAML文件中定义</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span> hosts: all<br><span class="hljs-attribute">vars_files</span>:<br><span class="hljs-literal">-</span> vars.yml<br></code></pre></td></tr></table></figure><ol start="5"><li>在主机清单文件中定义<br>主机（普通）变量：主机组中主机单独定义，优先级高于公共变量<br>组（公共）变量：针对主机组中所有主机定义统一变量</li><li>在项目中针对主机和主机组定义<br>在项目目录中创建 host_vars和group_vars目录</li><li>在role中定义</li></ol><p>变量的优先级从高到低如下</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">-<span class="hljs-function"><span class="hljs-title">e</span> 选项定义变量 --&gt;</span><span class="hljs-function"><span class="hljs-title">playbook</span>中vars_files --&gt;</span> <span class="hljs-function"><span class="hljs-title">playbook</span>中vars变量定义 --&gt;</span><span class="hljs-function"><span class="hljs-title">host_vars</span>/主机名文件 --&gt;</span>主机清单中主机变量--&gt; <span class="hljs-function"><span class="hljs-title">group_vars</span>/主机组名文件--&gt;</span><span class="hljs-function"><span class="hljs-title">group_vars</span>/all文件--&gt;</span> 主机清单组变量<br></code></pre></td></tr></table></figure><h3 id="使用-setup-模块中变量"><a href="#使用-setup-模块中变量" class="headerlink" title="使用 setup 模块中变量"></a>使用 setup 模块中变量</h3><h4 id="使用-facts-变量"><a href="#使用-facts-变量" class="headerlink" title="使用 facts 变量"></a>使用 facts 变量</h4><p>本模块自动在playbook调用，生成的系统状态信息, 并将之存放在facts变量中<br>facts 包括的信息很多,如: 主机名,IP,CPU,内存,网卡等<br>facts 变量的实际使用场景案例</p><ul><li>通过facts变量获取被控端CPU的个数信息,从而生成不同的Nginx配置文件</li><li>通过facts变量获取被控端内存大小信息,从而生成不同的memcached的配置文件</li><li>通过facts变量获取被控端主机名称信息,从而生成不同的Zabbix配置文件</li><li>通过facts变量获取被控端网卡信息,从而生成不同的主机名</li></ul><p>案例：使用setup变量</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@ansible</span> ~]<span class="hljs-meta"># ansible localhost -m setup -a <span class="hljs-string">&#x27;filter=&quot;ansible_default_ipv4&quot;&#x27;</span></span><br>localhost | SUCCESS =&gt; &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;ansible_default_ipv4&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;address&quot;</span>: <span class="hljs-string">&quot;192.168.32.133&quot;</span>,<br>            <span class="hljs-string">&quot;alias&quot;</span>: <span class="hljs-string">&quot;ens160&quot;</span>,<br>            <span class="hljs-string">&quot;broadcast&quot;</span>: <span class="hljs-string">&quot;192.168.32.255&quot;</span>,<br>            <span class="hljs-string">&quot;gateway&quot;</span>: <span class="hljs-string">&quot;192.168.32.2&quot;</span>,<br>            <span class="hljs-string">&quot;interface&quot;</span>: <span class="hljs-string">&quot;ens160&quot;</span>,<br>            <span class="hljs-string">&quot;macaddress&quot;</span>: <span class="hljs-string">&quot;00:0c:29:7c:80:cd&quot;</span>,<br>            <span class="hljs-string">&quot;mtu&quot;</span>: <span class="hljs-number">1500</span>,<br>            <span class="hljs-string">&quot;netmask&quot;</span>: <span class="hljs-string">&quot;255.255.255.0&quot;</span>,<br>            <span class="hljs-string">&quot;network&quot;</span>: <span class="hljs-string">&quot;192.168.32.0&quot;</span>,<br>            <span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;24&quot;</span>,<br>            <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;ether&quot;</span><br>        &#125;<br>    &#125;,<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br>[root<span class="hljs-symbol">@ansible</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><p>范例：显示ens33的网卡的IP地址</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus">---<br>- hosts: centos7<br>  tasks:<br>    - name: show ens33 ip<br>      debug:<br>        msg: IP <span class="hljs-selector-tag">address</span> &#123;&#123; ansible_ens33<span class="hljs-selector-class">.ipv4</span><span class="hljs-selector-class">.address</span> &#125;&#125;<br>        <span class="hljs-selector-id">#msg</span>: IP <span class="hljs-selector-tag">address</span> &#123;&#123; ansible_facts<span class="hljs-selector-attr">[<span class="hljs-string">&quot;ens33&quot;</span>]</span><span class="hljs-selector-attr">[<span class="hljs-string">&quot;ipv4&quot;</span>]</span><span class="hljs-selector-attr">[<span class="hljs-string">&quot;address&quot;</span>]</span> &#125;&#125;<br>        <span class="hljs-selector-id">#msg</span>: IP <span class="hljs-selector-tag">address</span> &#123;&#123; ansible_facts<span class="hljs-selector-class">.ens33</span><span class="hljs-selector-class">.ipv4</span><span class="hljs-selector-class">.address</span> &#125;&#125;<br>        <span class="hljs-selector-id">#msg</span>: IP <span class="hljs-selector-tag">address</span> &#123;&#123; ansible_default_ipv4<span class="hljs-selector-class">.address</span> &#125;&#125;<br>        <span class="hljs-selector-id">#msg</span>: IP <span class="hljs-selector-tag">address</span> &#123;&#123; ansible_ens33<span class="hljs-selector-class">.ipv4</span><span class="hljs-selector-class">.address</span> &#125;&#125;<br>        <span class="hljs-selector-id">#msg</span>: IP <span class="hljs-selector-tag">address</span> &#123;&#123; ansible_ens33<span class="hljs-selector-class">.ipv4</span><span class="hljs-selector-class">.address</span><span class="hljs-selector-class">.split</span>(<span class="hljs-string">&#x27;.&#x27;</span>)<span class="hljs-selector-attr">[-1]</span> &#125;&#125;  #取IP中的最后一个数字<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@ansible ansible]# ansible-playbook -v show<span class="hljs-emphasis">_ip.yml </span><br><span class="hljs-emphasis">Using /etc/ansible/ansible.cfg as config file</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">PLAY [centos7] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">TASK [Gathering Facts] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis">ok: [192.168.32.179]</span><br><span class="hljs-emphasis">ok: [192.168.32.178]</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">TASK [show ens33 ip] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">***</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [192.168.32.178] =&gt; &#123;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">    &quot;msg&quot;: &quot;IP address 192.168.32.178&quot;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&#125;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [192.168.32.179] =&gt; &#123;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">    &quot;msg&quot;: &quot;IP address 192.168.32.179&quot;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&#125;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis"></span></span><br><span class="hljs-strong"><span class="hljs-emphasis">PLAY RECAP **</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">***</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">192.168.32.178             : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span></span><br><span class="hljs-strong"><span class="hljs-emphasis">192.168.32.179             : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span></span><br><span class="hljs-strong"><span class="hljs-emphasis"></span></span><br><span class="hljs-strong"><span class="hljs-emphasis">[root@ansible ansible]# </span></span><br></code></pre></td></tr></table></figure><p>范例：修改主机名称为web-IP</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">- hosts: centos7</span><br><span class="language-xml">  tasks:</span><br><span class="language-xml">  - name: 打印facts变量</span><br><span class="language-xml">    debug: msg=</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">ansible_ens33.ipv4.address</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">  - name: 修改主机名</span><br><span class="language-xml">    hostname: name=web-</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">ansible_ens33.ipv4.address</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">  #- name: 获取facts变量提取IP地址，以.结尾的最后一列,修改主机名为web-hostid</span><br><span class="language-xml">    #hostname: name=web-</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">ansible_ens33.ipv4.address.split</span>(<span class="hljs-name">&#x27;.&#x27;</span>)[-1] &#125;&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@ansible ansible]# ansible-playbook change<span class="hljs-emphasis">_hostname.yml </span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">PLAY [centos7] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">TASK [Gathering Facts] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis">ok: [192.168.32.178]</span><br><span class="hljs-emphasis">ok: [192.168.32.179]</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">TASK [打印facts变量] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">***</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [192.168.32.178] =&gt; &#123;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">    &quot;msg&quot;: &quot;192.168.32.178&quot;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&#125;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [192.168.32.179] =&gt; &#123;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">    &quot;msg&quot;: &quot;192.168.32.179&quot;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&#125;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis"></span></span><br><span class="hljs-strong"><span class="hljs-emphasis">TASK [修改主机名] **</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis">changed: [192.168.32.179]</span><br><span class="hljs-emphasis">changed: [192.168.32.178]</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">PLAY RECAP <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis">192.168.32.178             : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="hljs-emphasis">192.168.32.179             : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">[root@ansible ansible]# </span><br></code></pre></td></tr></table></figure><h4 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h4><p>每次执行playbook,默认会收集每个主机的所有facts变量,将会导致速度很慢,可以采用下面方法加速<br>方法1<br>关闭facts采集加速执行,此方法将导致无法使用facts变量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br></code></pre></td></tr></table></figure><p>方法2<br>当使用 gather_facts: no 关闭 facts，确实能加速 Ansible 执行，但是有时候又需要使用 facts 中的内容，还希望执行的速度快，这时候可以设置facts 的缓存,将facts变量信息存在redis服务器中</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@ansible ~]</span><span class="hljs-comment"># cat /etc/ansible/ansible.cfg</span><br><span class="hljs-section">[defaults]</span><br><span class="hljs-comment"># smart 表示默认收集 facts，但 facts 已有的情况下不会收集，即使用缓存 facts</span><br><span class="hljs-comment"># implicit 表示默认收集 facts，要禁止收集，必须使用 gather_facts: False</span><br><span class="hljs-comment"># explicit 则表示默认不收集，要显式收集，必须使用gather_facts: True</span><br><span class="hljs-attr">gathering</span> = smart <span class="hljs-comment">#在使用 facts 缓存时设置为smart</span><br><span class="hljs-attr">fact_caching_timeout</span> = <span class="hljs-number">86400</span> <span class="hljs-comment">#缓存时长</span><br><span class="hljs-attr">fact_caching</span> = redis <span class="hljs-comment">#缓存存在redis中</span><br><span class="hljs-attr">fact_caching_connection</span> = <span class="hljs-number">10.0</span>.<span class="hljs-number">0.100</span>:<span class="hljs-number">6379</span>:<span class="hljs-number">0</span> <span class="hljs-comment">#0表示redis的0号数据库</span><br><span class="hljs-comment">#若redis设置了密码</span><br><span class="hljs-attr">fact_caching_connection</span> = <span class="hljs-number">10.0</span>.<span class="hljs-number">0.100</span>:<span class="hljs-number">6379</span>:<span class="hljs-number">0</span>:password<br></code></pre></td></tr></table></figure><h3 id="register-注册变量"><a href="#register-注册变量" class="headerlink" title="register 注册变量"></a>register 注册变量</h3><p>在playbook中可以使用register将捕获命令的输出保存在临时变量中，方便后续调用此变量,比如可以使用debug模块进行显示输出<br>范例: 利用debug 模块输出变量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">get</span> <span class="hljs-string">variable</span><br>      <span class="hljs-attr">shell:</span> <span class="hljs-string">hostname</span><br>      <span class="hljs-attr">register:</span> <span class="hljs-string">name</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">print</span> <span class="hljs-string">variable</span><br>      <span class="hljs-attr">debug:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; name &#125;&#125;</span>&quot;</span> <span class="hljs-comment">#输出register注册的name变量的全部信息,注意变量要加&quot; &quot;引起来</span><br>         <span class="hljs-comment">#msg: &quot;&#123;&#123; name.cmd &#125;&#125;&quot; #显示命令</span><br>         <span class="hljs-comment">#msg: &quot;&#123;&#123; name.rc &#125;&#125;&quot; #显示命令成功与否</span><br> <span class="hljs-comment">#msg: &quot;&#123;&#123; name.stdout &#125;&#125;&quot; #显示命令的输出结果为字符串形式,所有结果都放在一行里显示,适合于结果是单行输出</span><br>    <span class="hljs-comment">#msg: &quot;&#123;&#123; name.stdout_lines &#125;&#125;&quot; #显示命令的输出结果为列表形式,逐行标准输出,适用于多行显示</span><br><span class="hljs-comment">#msg: &quot;&#123;&#123; name[&#x27;stdout_lines&#x27;] &#125;&#125;&quot; #显示命令的执行结果为列表形式,和效果上面相同</span><br><span class="hljs-comment">#msg: &quot;&#123;&#123; name.stdout_lines[0] &#125;&#125;&quot; #显示命令的输出结果的列表中的第一个元素</span><br><span class="hljs-comment">#说明 第一个 task 中，使用了 register 注册变量名为 name ；当 shell 模块执行完毕后，会将数据放到该变量中。第二给 task 中，使用了 debug 模块，并从变量name中获取数据。</span><br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@ansible ansible]# ansible-playbook -C register.yml <br><br>PLAY [centos7] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">*</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">TASK [Gathering Facts] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br>ok: [192.168.32.179]<br>ok: [192.168.32.178]<br><br>TASK [get variable] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br>skipping: [192.168.32.179]<br>skipping: [192.168.32.178]<br><br>TASK [print variable] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span><br><span class="hljs-strong">ok: [192.168.32.178] =&gt; &#123;</span><br><span class="hljs-strong">    &quot;msg&quot;: &#123;</span><br><span class="hljs-strong">        &quot;changed&quot;: false,</span><br><span class="hljs-strong">        &quot;cmd&quot;: &quot;hostname&quot;,</span><br><span class="hljs-strong">        &quot;delta&quot;: null,</span><br><span class="hljs-strong">        &quot;end&quot;: null,</span><br><span class="hljs-strong">        &quot;failed&quot;: false,</span><br><span class="hljs-strong">        &quot;msg&quot;: &quot;Command would have run if not in check mode&quot;,</span><br><span class="hljs-strong">        &quot;rc&quot;: 0,</span><br><span class="hljs-strong">        &quot;skipped&quot;: true,</span><br><span class="hljs-strong">        &quot;start&quot;: null,</span><br><span class="hljs-strong">        &quot;stderr&quot;: &quot;&quot;,</span><br><span class="hljs-strong">        &quot;stderr<span class="hljs-emphasis">_lines&quot;: [],</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">        &quot;stdout&quot;: &quot;&quot;,</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">        &quot;stdout_</span>lines&quot;: []</span><br><span class="hljs-strong">    &#125;</span><br><span class="hljs-strong">&#125;</span><br><span class="hljs-strong">ok: [192.168.32.179] =&gt; &#123;</span><br><span class="hljs-strong">    &quot;msg&quot;: &#123;</span><br><span class="hljs-strong">        &quot;changed&quot;: false,</span><br><span class="hljs-strong">        &quot;cmd&quot;: &quot;hostname&quot;,</span><br><span class="hljs-strong">        &quot;delta&quot;: null,</span><br><span class="hljs-strong">        &quot;end&quot;: null,</span><br><span class="hljs-strong">        &quot;failed&quot;: false,</span><br><span class="hljs-strong">        &quot;msg&quot;: &quot;Command would have run if not in check mode&quot;,</span><br><span class="hljs-strong">        &quot;rc&quot;: 0,</span><br><span class="hljs-strong">        &quot;skipped&quot;: true,</span><br><span class="hljs-strong">        &quot;start&quot;: null,</span><br><span class="hljs-strong">        &quot;stderr&quot;: &quot;&quot;,</span><br><span class="hljs-strong">        &quot;stderr<span class="hljs-emphasis">_lines&quot;: [],</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">        &quot;stdout&quot;: &quot;&quot;,</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">        &quot;stdout_</span>lines&quot;: []</span><br><span class="hljs-strong">    &#125;</span><br><span class="hljs-strong">&#125;</span><br><span class="hljs-strong"></span><br><span class="hljs-strong">PLAY RECAP **</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">192.168.32.178             : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   </span></span><br><span class="hljs-emphasis"><span class="hljs-strong">192.168.32.179             : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   </span></span><br><span class="hljs-emphasis"><span class="hljs-strong"></span></span><br><span class="hljs-emphasis"><span class="hljs-strong">[root@ansible ansible]# </span></span><br></code></pre></td></tr></table></figure><p>范例: 安装启动服务并检查</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">package_name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">service_name:</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> &#123;&#123; <span class="hljs-string">package_name</span> &#125;&#125;<br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">package_name</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> &#123;&#123; <span class="hljs-string">service_name</span> &#125;&#125;<br>    <span class="hljs-attr">service:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">service_name</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=started</span> <span class="hljs-string">enabled=yes</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">check</span><br>    <span class="hljs-attr">shell:</span> <span class="hljs-string">ps</span> <span class="hljs-string">axu|grep</span> &#123;&#123; <span class="hljs-string">service_name</span> &#125;&#125;<br>    <span class="hljs-attr">register:</span> <span class="hljs-string">check_service</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; check_service.stdout_lines &#125;&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><p>范例: 修改主机名形式为 web_&lt;随机字符&gt;</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">genarate</span> <span class="hljs-string">random</span><br>    <span class="hljs-attr">shell:</span><br>      <span class="hljs-attr">cmd:</span> <span class="hljs-string">openssl</span> <span class="hljs-string">rand</span> <span class="hljs-string">-base64</span> <span class="hljs-number">12</span> <span class="hljs-string">|tr</span> <span class="hljs-string">-dc</span> <span class="hljs-string">&#x27;[:alnum:]&#x27;</span><br>    <span class="hljs-attr">register:</span><br>      <span class="hljs-string">num</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">show</span> <span class="hljs-string">random</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; num &#125;&#125;</span>&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">change</span> <span class="hljs-string">hostname</span><br>    <span class="hljs-attr">hostname:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">web-&#123;&#123;</span> <span class="hljs-string">num.stdout</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>范例: 修改主机名形式为 web_随机数</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-bullet">-</span> <span class="hljs-string">hosts: centos7</span><br>  <span class="hljs-attribute">tasks</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">name: 定义一个随机数，设定为变量，然后后续调用</span><br>    <span class="hljs-attribute">shell</span><span class="hljs-punctuation">:</span> <span class="hljs-string">echo $((RANDOM%255))</span><br>    <span class="hljs-attribute">register</span><span class="hljs-punctuation">:</span> <span class="hljs-string">web_number</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">name: 使用debug输出变量结果</span><br>    <span class="hljs-attribute">debug</span><span class="hljs-punctuation">:</span> <span class="hljs-string">msg=&#123;&#123; web_number &#125;&#125;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">name: 使用hostname模块将主机名修改为web_随机数</span><br>    <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">name=web_&#123;&#123; web_number.stdout &#125;&#125;</span><br></code></pre></td></tr></table></figure><p>范例: 批量修改主机名为随机字符</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">web</span><br>    <span class="hljs-attr">domain:</span> <span class="hljs-string">wang.org</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">get</span> <span class="hljs-string">variable</span><br>    <span class="hljs-attr">shell:</span> <span class="hljs-string">echo</span> <span class="hljs-string">$RANDOM</span> <span class="hljs-string">|</span> <span class="hljs-string">md5sum</span> <span class="hljs-string">|</span> <span class="hljs-string">cut</span> <span class="hljs-string">-c</span> <span class="hljs-number">1</span><span class="hljs-number">-8</span><br>    <span class="hljs-attr">register:</span> <span class="hljs-string">get_random</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">print</span> <span class="hljs-string">variable</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; get_random.stdout &#125;&#125;</span>&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">set</span> <span class="hljs-string">hostname</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">host</span> <span class="hljs-string">&#125;&#125;-&#123;&#123;</span> <span class="hljs-string">get_random.stdout</span> <span class="hljs-string">&#125;&#125;.&#123;&#123;</span> <span class="hljs-string">domain</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>范例: 批量修改主机名为IP最后1位数字</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">- hosts: centos7</span><br><span class="language-xml">  vars:</span><br><span class="language-xml">    host: web</span><br><span class="language-xml">    domain: wang.org</span><br><span class="language-xml">  tasks:</span><br><span class="language-xml">    - name: get variable</span><br><span class="language-xml">      shell: hostname -I | awk &#x27;&#123;print $1&#125;&#x27;</span><br><span class="language-xml">      register: get_ip</span><br><span class="language-xml">    - name: print variable</span><br><span class="language-xml">      debug:</span><br><span class="language-xml">        msg: &quot;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">get_ip.stdout.split</span>(<span class="hljs-name">&#x27;.&#x27;</span>)[3] &#125;&#125;</span><span class="language-xml">&quot;</span><br><span class="language-xml">    - name: set hostname</span><br><span class="language-xml">      hostname: name=</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">host</span> &#125;&#125;</span><span class="language-xml">-</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">get_ip.stdout.split</span>(<span class="hljs-name">&#x27;.&#x27;</span>)[3] &#125;&#125;</span><span class="language-xml">.</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">domain</span> &#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="在-Playbook-命令行中定义变量"><a href="#在-Playbook-命令行中定义变量" class="headerlink" title="在 Playbook 命令行中定义变量"></a>在 Playbook 命令行中定义变量</h3><p>范例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">pkname</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=present</span><br>    <br>    <br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#ansible-playbook -e pkname=nginx var2.yml</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#也可以将多个变量放在一个文件中</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#cat vars</span><br><span class="hljs-attr">pkname1:</span> <span class="hljs-string">memcached</span><br><span class="hljs-attr">pkname2:</span> <span class="hljs-string">vsftpd</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#vim var2.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span> &#123;&#123; <span class="hljs-string">pkname1</span> &#125;<br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=<span class="hljs-template-variable">&#123;&#123; pkname1 &#125;&#125;</span></span> <span class="hljs-string">state=present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span> &#123;&#123; <span class="hljs-string">pkname2</span> &#125;<br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=<span class="hljs-template-variable">&#123;&#123; pkname2 &#125;&#125;</span></span> <span class="hljs-string">state=present</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#ansible-playbook -e pkname1=memcached -e pkname2=httpd var2.yml</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#ansible-playbook -e &#x27;@vars&#x27; var2.yml</span><br></code></pre></td></tr></table></figure><h3 id="在playbook文件中定义变量"><a href="#在playbook文件中定义变量" class="headerlink" title="在playbook文件中定义变量"></a>在playbook文件中定义变量</h3><p>此方式定义的是私有变量,即只能在当前playbook中使用,不能被其它Playbook共用<br>范例：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pf">- hosts: webservers<br>  remote_user: root<br>  vars:<br>    username: user1<br>    groupname: group1<br>  tasks:<br>  - name: create <span class="hljs-keyword">group</span> &#123;&#123; groupname &#125;&#125;<br>    <span class="hljs-keyword">group</span>: name=&#123;&#123; groupname &#125;&#125; <span class="hljs-keyword">state</span>=present<br>  - name: create <span class="hljs-keyword">user</span> &#123;&#123; username &#125;&#125;<br>    <span class="hljs-keyword">user</span>: name=&#123;&#123; username &#125;&#125; <span class="hljs-keyword">group</span>=&#123;&#123; groupname &#125;&#125; <span class="hljs-keyword">state</span>=present<br>    <br>[root@ansible ~]<span class="hljs-comment">#ansible-playbook -e &quot;username=user2 groupname=group2&quot; var3.yml</span><br></code></pre></td></tr></table></figure><p>范例：变量的相互调用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">collect_info:</span> <span class="hljs-string">&quot;/data/test/<span class="hljs-template-variable">&#123;&#123;ansible_default_ipv4[&#x27;address&#x27;]&#125;&#125;</span>/&quot;</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">IP</span> <span class="hljs-string">directory</span><br>    <span class="hljs-attr">file:</span> <span class="hljs-string">name=&quot;&#123;&#123;collect_info&#125;&#125;&quot;</span> <span class="hljs-string">state=directory</span><br></code></pre></td></tr></table></figure><h3 id="使用专用的公共的变量文件"><a href="#使用专用的公共的变量文件" class="headerlink" title="使用专用的公共的变量文件"></a>使用专用的公共的变量文件</h3><p>可以在一个独立的playbook文件中定义公共变量，在其它的playbook文件中可以引用变量文件中的变量<br>此方式比playbook中定义的变量优化级高</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">vars.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># variables file</span><br><span class="hljs-attr">package_name:</span> <span class="hljs-string">mariadb-server</span><br><span class="hljs-attr">service_name:</span> <span class="hljs-string">mariadb</span><br><br><span class="hljs-string">vim</span> <span class="hljs-string">var5.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment">#install package and start service</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">dbsrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars_files:</span><br>  <span class="hljs-comment"># 指定变量文件名</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">vars.yml</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">package_name</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-string">install</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">service_name</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=started</span> <span class="hljs-string">enabled=yes</span><br></code></pre></td></tr></table></figure><h3 id="在主机清单中定义主机和主机组的变量"><a href="#在主机清单中定义主机和主机组的变量" class="headerlink" title="在主机清单中定义主机和主机组的变量"></a>在主机清单中定义主机和主机组的变量</h3><h4 id="所有项目的主机变量"><a href="#所有项目的主机变量" class="headerlink" title="所有项目的主机变量"></a>所有项目的主机变量</h4><p>在inventory 主机清单文件中为指定的主机定义变量以便于在playbook中使用<br>范例：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[webservers]<br>www1.wang.org <span class="hljs-attribute">http_port</span>=80 <span class="hljs-attribute">maxRequestsPerChild</span>=808<br>www2.wang.org <span class="hljs-attribute">http_port</span>=8080 <span class="hljs-attribute">maxRequestsPerChild</span>=909<br></code></pre></td></tr></table></figure><h4 id="所有项目的组（公共）变量"><a href="#所有项目的组（公共）变量" class="headerlink" title="所有项目的组（公共）变量"></a>所有项目的组（公共）变量</h4><p>在inventory 主机清单文件中赋予给指定组内所有主机上的在playbook中可用的变量，如果和主机变是同名，优先级低于主机变量</p><p>案例：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[webservers:vars]</span><br><span class="hljs-attr">http_port</span>=<span class="hljs-number">80</span><br><span class="hljs-attr">ntp_server</span>=ntp.wang.org<br><span class="hljs-attr">nfs_server</span>=nfs.wang.org<br><span class="hljs-section">[all:vars]</span><br><span class="hljs-comment"># --------- Main Variables ---------------</span><br><span class="hljs-comment"># Cluster container-runtime supported: docker, containerd</span><br><span class="hljs-attr">CONTAINER_RUNTIME</span>=<span class="hljs-string">&quot;docker&quot;</span><br><span class="hljs-comment"># Network plugins supported: calico, flannel, kube-router, cilium, kube-ovn</span><br><span class="hljs-attr">CLUSTER_NETWORK</span>=<span class="hljs-string">&quot;calico&quot;</span><br><span class="hljs-comment"># Service proxy mode of kube-proxy: &#x27;iptables&#x27; or &#x27;ipvs&#x27;</span><br><span class="hljs-attr">PROXY_MODE</span>=<span class="hljs-string">&quot;ipvs&quot;</span><br><span class="hljs-comment"># K8S Service CIDR, not overlap with node(host) networking</span><br><span class="hljs-attr">SERVICE_CIDR</span>=<span class="hljs-string">&quot;192.168.0.0/16&quot;</span><br><span class="hljs-comment"># Cluster CIDR (Pod CIDR), not overlap with node(host) networking</span><br><span class="hljs-attr">CLUSTER_CIDR</span>=<span class="hljs-string">&quot;172.16.0.0/16&quot;</span><br><span class="hljs-comment"># NodePort Range</span><br><span class="hljs-attr">NODE_PORT_RANGE</span>=<span class="hljs-string">&quot;20000-60000&quot;</span><br><span class="hljs-comment"># Cluster DNS Domain</span><br><span class="hljs-attr">CLUSTER_DNS_DOMAIN</span>=<span class="hljs-string">&quot;magedu.local.&quot;</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">[root@ansible ~]#vim /etc/ansible/hosts</span><br><span class="language-xml">[webservers]</span><br><span class="language-xml">10.0.0.8 hname=www1 domain=magedu.io</span><br><span class="language-xml">10.0.0.7 hname=www2</span><br><span class="language-xml">[webservers:vars]</span><br><span class="language-xml">mark=&quot;-&quot;</span><br><span class="language-xml">[all:vars]</span><br><span class="language-xml">domain=wang.org</span><br><span class="language-xml">[root@ansible ~]#ansible webservers -m hostname -a &#x27;name=</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">hname</span> &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">mark</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">domain</span> &#125;&#125;</span><span class="language-xml">&#x27;</span><br><span class="language-xml">#命令行指定变量：</span><br><span class="language-xml">[root@ansible ~]#ansible webservers -e domain=magedu.cn -m hostname -a &#x27;name=</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">hname</span> &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">mark</span> &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">domain</span> &#125;&#125;</span><span class="language-xml">&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="针对当前项目的主机和主机组的变量"><a href="#针对当前项目的主机和主机组的变量" class="headerlink" title="针对当前项目的主机和主机组的变量"></a>针对当前项目的主机和主机组的变量</h3><p>上面的方式是针对所有项目都有效,而官方更建议的方式是使用ansible特定项目的主机变量和组变量.生产建议在每个项目对应的目录中创建额外的两个变量目录,分别是host_vars和group_vars</p><ul><li>host_vars下面的文件名和主机清单主机名一致,针对单个主机进行变量定义格式:host_vars&#x2F;hostname</li><li>group_vars下面的文件名和主机清单中组名一致, 针对单个组进行变量定义格式: group_vars&#x2F;groupname</li><li>group_vars&#x2F;all文件内定义的变量对所有组都有效</li></ul><p>范例: 特定项目的主机和组变量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@ansible ansible]#pwd<br>/data/ansible<br>[root@ansible ansible]#mkdir host<span class="hljs-emphasis">_vars</span><br><span class="hljs-emphasis">[root@ansible ansible]#mkdir group_</span>vars<br>[root@ansible ansible]#cat host<span class="hljs-emphasis">_vars/10.0.0.8</span><br><span class="hljs-emphasis">id: 2</span><br><span class="hljs-emphasis">[root@ansible ansible]#cat host_</span>vars/10.0.0.7<br>id: 1<br>[root@ansible ansible]#cat group<span class="hljs-emphasis">_vars/webservers</span><br><span class="hljs-emphasis">name: web</span><br><span class="hljs-emphasis">[root@ansible ansible]#cat group_</span>vars/all<br>domain: wang.org<br>[root@ansible ansible]#tree host<span class="hljs-emphasis">_vars/ group_</span>vars/<br>host<span class="hljs-emphasis">_vars/</span><br><span class="hljs-emphasis">├── 10.0.0.7</span><br><span class="hljs-emphasis">└── 10.0.0.8</span><br><span class="hljs-emphasis">group_</span>vars/<br>├── all<br>└── webservers<br>0 directories, 4 files<br>[root@ansible ansible]#cat test.yml<br><span class="hljs-bullet">-</span> hosts: webservers<br>tasks:<br><span class="hljs-bullet">-</span> name: get variable<br>command: echo &quot;&#123;&#123;name&#125;&#125;&#123;&#123;id&#125;&#125;.&#123;&#123;domain&#125;&#125;&quot;<br>register: result<br><span class="hljs-bullet">-</span> name: print variable<br>debug:<br>msg: &quot;&#123;&#123;result.stdout&#125;&#125;&quot;<br>[root@ansible ansible]#ansible-playbook test.yml<br>PLAY [webservers]<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">TASK [Gathering Facts]</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">*</span>**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">*</span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">***</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [10.0.0.7]</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [10.0.0.8]</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">TASK [get variable]</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis">changed: [10.0.0.7]</span><br><span class="hljs-emphasis">changed: [10.0.0.8]</span><br><span class="hljs-emphasis">TASK [print variable]</span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis">ok: [10.0.0.7] =&gt; &#123;</span><br><span class="hljs-emphasis">&quot;msg&quot;: &quot;web1.wang.org&quot;</span><br><span class="hljs-emphasis">&#125;</span><br><span class="hljs-emphasis">ok: [10.0.0.8] =&gt; &#123;</span><br><span class="hljs-emphasis">&quot;msg&quot;: &quot;web2.wang.org&quot;</span><br><span class="hljs-emphasis">&#125;</span><br><span class="hljs-emphasis">PLAY RECAP</span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">***</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">10.0.0.7 : ok=3 changed=1 unreachable=0 failed=0</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">skipped=0 rescued=0 ignored=0</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">10.0.0.8 : ok=3 changed=1 unreachable=0 failed=0</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">skipped=0 rescued=0 ignored=0</span></span><br></code></pre></td></tr></table></figure><h2 id="Template-模板"><a href="#Template-模板" class="headerlink" title="Template 模板"></a>Template 模板</h2><p>模板是一个文本文件，可以用于根据每个主机的不同环境而为生成不同的文件<br>模板文件中支持嵌套jinja2语言的指令,来实现变量,条件判断,循环等功能<br>需要使用template模块实现文件的复制到远程主机,但和copy模块不同,复制过去的文件每个主机可以会有所不同</p><h3 id="jinja2语言"><a href="#jinja2语言" class="headerlink" title="jinja2语言"></a>jinja2语言</h3><p><img src="/../image.assets/1677662324156.png" alt="1677662324156"></p><p>Jinja2 是一个现代的，设计者友好的，仿照 Django 模板的 Python 模板语言。 它速度快，被广泛使用，并且提供了可选的沙箱模板执行环境保证安全:<br>特性:</p><ul><li>沙箱中执行</li><li>强大的 HTML 自动转义系统保护系统免受 XSS</li><li>模板继承</li><li>及时编译最优的 python 代码</li><li>可选提前编译模板的时间</li><li>易于调试。异常的行数直接指向模板中的对应行。</li><li>可配置的语法</li></ul><p>官方网站：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>jinja.pocoo.org/<br>https:<span class="hljs-regexp">//</span>jinja.palletsprojects.com<span class="hljs-regexp">/en/</span><span class="hljs-number">2.11</span>.x/<br></code></pre></td></tr></table></figure><p>官方中文文档</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>docs.jinkan.org<span class="hljs-regexp">/docs/</span>jinja2/<br>https:<span class="hljs-regexp">//</span>www.w3cschool.cn<span class="hljs-regexp">/yshfid/</span><br></code></pre></td></tr></table></figure><p>jinja2 语言支持多种数据类型和操作:<br>字面量，如: 字符串：使用单引号或双引号,数字：整数，浮点数<br>列表：[item1, item2, …]<br>元组：(item1, item2, …)<br>字典：{key1:value1, key2:value2, …}<br>布尔型：true&#x2F;false<br>算术运算：+, -, *, &#x2F;, &#x2F;&#x2F;, %, **<br>比较操作：&#x3D;&#x3D;, !&#x3D;, &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;</p><p>逻辑运算：and，or，not<br>流表达式：For，If，When</p><p><strong>字面量：</strong><br>表达式最简单的形式就是字面量。字面量表示诸如字符串和数值的 Python 对象。如”Hello World”<br>双引号或单引号中间的一切都是字符串。无论何时你需要在模板中使用一个字符串（比如函数调用、过滤器或只是包含或继承一个模板的参数），如42，42.23<br>数值可以为整数和浮点数。如果有小数点，则为浮点数，否则为整数。在 Python 里， 42 和 42.0 是不一样的</p><p><strong>算术运算：</strong><br>Jinja 允许用计算值。支持下面的运算符<br>+：把两个对象加到一起。通常对象是素质，但是如果两者是字符串或列表，你可以用这 种方式来衔接<br>它们。无论如何这不是首选的连接字符串的方式！连接字符串见 ~ 运算符。 2 等于 2<br>-：用第一个数减去第二个数。 1 等于 1<br>&#x2F;：对两个数做除法。返回值会是一个浮点数。 0.5 等于 0.5<br>&#x2F;&#x2F;：对两个数做除法，返回整数商。 2 等于 2<br>%：计算整数除法的余数。 4 等于 4<br>*：用右边的数乘左边的操作数。 4 会返回 4 。也可以用于重 复一个字符串多次。 NaN<br>会打印 80 个等号的横条<br>**：取左操作数的右操作数次幂。 8 会返回 8</p><p><strong>比较操作符</strong></p><p>&#x3D;&#x3D; 比较两个对象是否相等<br>!&#x3D; 比较两个对象是否不等</p><blockquote><p>如果左边大于右边，返回 true<br>&#x3D; 如果左边大于等于右边，返回 true<br>&lt; 如果左边小于右边，返回 true<br>&lt;&#x3D; 如果左边小于等于右边，返回 true<br>逻辑运算符</p></blockquote><p>对于 if 语句，在 for 过滤或 if 表达式中，它可以用于联合多个表达式<br>and 如果左操作数和右操作数同为真，返回 true<br>or 如果左操作数和右操作数有一个为真，返回 true<br>not 对一个表达式取反<br>(expr)表达式组<br>true &#x2F; false true 永远是 true ，而 false 始终是 false</p><h3 id="template"><a href="#template" class="headerlink" title="template"></a>template</h3><p>template功能：可以根据和参考模块文件，动态生成相类似的配置文件<br>template文件存建议放于templates目录下，且命名为 .j2 结尾</p><p>yaml&#x2F;yml 文件和templates目录平级，此时playbook中指定模版文件时可不用指定路径, 目录结构如下<br>示例：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">./<br>├── temnginx<span class="hljs-selector-class">.yml</span><br>└── templates<br>   └── nginx<span class="hljs-selector-class">.conf</span>.j2<br></code></pre></td></tr></table></figure><p>范例：利用template 同步nginx配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#准备templates/nginx.conf.j2文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#vim temnginx.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">template</span> <span class="hljs-string">config</span> <span class="hljs-string">to</span> <span class="hljs-string">remote</span> <span class="hljs-string">hosts</span><br>    <span class="hljs-attr">template:</span> <span class="hljs-string">src=nginx.conf.j2</span> <span class="hljs-string">dest=/etc/nginx/nginx.conf</span><br>    <br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#ansible-playbook temnginx.yml</span><br></code></pre></td></tr></table></figure><p>template变更替换<br>范例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#修改文件nginx.conf.j2</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#mkdir templates</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#vim templates/nginx.conf.j2</span><br><span class="hljs-string">......</span><br><span class="hljs-string">worker_processes</span> &#123;&#123; <span class="hljs-string">ansible_processor_vcpus</span> &#125;&#125;<span class="hljs-string">;</span><br><span class="hljs-string">......</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#vim temnginx2.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">yum:</span> <span class="hljs-string">name=nginx</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">template</span> <span class="hljs-string">config</span> <span class="hljs-string">to</span> <span class="hljs-string">remote</span> <span class="hljs-string">hosts</span><br>    <span class="hljs-attr">template:</span> <span class="hljs-string">src=nginx.conf.j2</span> <span class="hljs-string">dest=/etc/nginx/nginx.conf</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=started</span> <span class="hljs-string">enabled=yes</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#ansible-playbook temnginx2.yml</span><br></code></pre></td></tr></table></figure><h2 id="Roles-角色"><a href="#Roles-角色" class="headerlink" title="Roles 角色"></a>Roles 角色</h2><p>角色是ansible自1.2版本引入的新特性，用于层次性、结构化地组织playbook。roles能够根据层次型结构自动装载变量文件、tasks以及handlers等。要使用roles只需要在playbook中使用include指令即可。简单来讲，roles就是通过分别将变量、文件、任务、模板及处理器放置于单独的目录中，并可以便捷地include它们的一种机制。角色一般用于基于主机构建服务的场景中，但也可以是用于构建守护进程等场景中<br>运维复杂的场景：建议使用 roles，代码复用度高<br>roles：多个角色的集合目录， 可以将多个的role，分别放至roles目录下的独立子目录中,如下示例</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs">roles/<br>mysql/<br>nginx/<br>tomcat/<br>redis/<br></code></pre></td></tr></table></figure><p>默认roles存放路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/root/</span>.ansible/roles<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/ansible/</span>roles<br><span class="hljs-regexp">/etc/</span>ansible/roles<br></code></pre></td></tr></table></figure><p>官方文档:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/user_guide/</span>playbooks_reuse_roles.html<br></code></pre></td></tr></table></figure><h3 id="Ansible-Roles目录编排"><a href="#Ansible-Roles目录编排" class="headerlink" title="Ansible Roles目录编排"></a>Ansible Roles目录编排</h3><p>roles目录结构如下所示</p><p><img src="/../image.assets/1677664119238.png" alt="1677664119238"></p><p>每个角色，以特定的层级目录结构进行组织<br>roles目录结构：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">playbook1.yml<br>playbook2.yml<br>roles/<br>project1/<br>tasks/<br>files/<br>vars/<br>templates/<br>handlers/<br><span class="hljs-keyword">default</span>/<br>meta/<br>project2/<br>tasks/<br>files/<br>vars/<br>templates/<br>handlers/<br><span class="hljs-keyword">default</span>/<br>meta/<br></code></pre></td></tr></table></figure><p>Roles各目录作用<br>roles&#x2F;project&#x2F; :项目名称,有以下子目录</p><ul><li>files&#x2F; ：存放由copy或script模块等调用的文件</li><li>templates&#x2F;：template模块查找所需要模板文件的目录</li><li>tasks&#x2F;：定义task,role的基本元素，至少应该包含一个名为main.yml的文件；其它的文件需要在此文件中通过include进行包含</li><li>handlers&#x2F;：至少应该包含一个名为main.yml的文件；此目录下的其它的文件需要在此文件中通过include进行包含</li><li>vars&#x2F;：定义变量，至少应该包含一个名为main.yml的文件；此目录下的其它的变量文件需要在此文件中通过include进行包含,也可以通过项目目录中的group_vars&#x2F;all定义变量,从而实现角色通用代码和项目数据的分离</li><li>meta&#x2F;：定义当前角色的特殊设定及其依赖关系,至少应该包含一个名为main.yml的文件，其它文件需在此文件中通过include进行包含</li><li>default&#x2F;：设定默认变量时使用此目录中的main.yml文件，比vars的优先级低</li></ul><h3 id="创建-role"><a href="#创建-role" class="headerlink" title="创建 role"></a>创建 role</h3><p>创建role的步骤</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">1 创建role的目录结构.在以roles命名的目录下分别创建以各角色名称命名的目录，如mysql等,在每个角色命名的目录中分别创建相关的目录和文件,比如tasks、files、handlers、templates和vars等目录；用不到的目录可以创建为空目录，也可以不创建<br>2 编写和准备指定role的功能文件,包括: tasks,templates,vars等相关文件<br>3 编写playbook文件调用上面定义的role,应用到指定的主机<br></code></pre></td></tr></table></figure><p>针对大型项目使用Roles进行编排<br>范例: 利用 ansible-galaxy 创建角色目录的结构</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#创建初始化目录结构<br><span class="hljs-selector-attr">[root@ansible roles]</span><span class="hljs-selector-id">#ansible-galaxy</span> role init test_role<br>- Role test_role was created successfully<br><span class="hljs-selector-attr">[root@ansible roles]</span><span class="hljs-selector-id">#tree</span> test_role/<br>test_role/<br>├── defaults<br>│ └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── files<br>├── handlers<br>│ └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── meta<br>│ └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── README<span class="hljs-selector-class">.md</span><br>├── tasks<br>│ └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── templates<br>├── tests<br>│ ├── inventory<br>│ └── test<span class="hljs-selector-class">.yml</span><br>└── vars<br>└── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br><span class="hljs-number">8</span> directories, <span class="hljs-number">8</span> files<br></code></pre></td></tr></table></figure><p>范例：roles的目录结构</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stylus">nginx-role<span class="hljs-selector-class">.yml</span><br>roles/<br>└── nginx<br>├── files<br>│ └── nginx<span class="hljs-selector-class">.conf</span><br>├── tasks<br>│ ├── groupadd<span class="hljs-selector-class">.yml</span><br>│ ├── install<span class="hljs-selector-class">.yml</span><br>│ ├── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>│ ├── restart<span class="hljs-selector-class">.yml</span><br>│ └── useradd<span class="hljs-selector-class">.yml</span><br>└── vars<br>└── <span class="hljs-selector-tag">main</span>.yml<br></code></pre></td></tr></table></figure><h3 id="Playbook-调用角色"><a href="#Playbook-调用角色" class="headerlink" title="Playbook 调用角色"></a>Playbook 调用角色</h3><p>调用角色方法1：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">webservers</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mysql</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">memcached</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br></code></pre></td></tr></table></figure><p>调用角色方法2：<br>键role用于指定角色名称，后续的k&#x2F;v用于传递变量给角色</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">role:</span> <span class="hljs-string">mysql</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">mysql</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">role:</span> <span class="hljs-string">nginx</span>, <span class="hljs-attr">username:</span> <span class="hljs-string">nginx</span> &#125;<br></code></pre></td></tr></table></figure><p>调用角色方法3：<br>还可基于条件测试实现角色调用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>   <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">role:</span> <span class="hljs-string">nginx</span>, <span class="hljs-attr">username:</span> <span class="hljs-string">nginx</span>, <span class="hljs-attr">when:</span> <span class="hljs-string">ansible_distribution_major_version</span> <span class="hljs-string">==</span> <span class="hljs-string">&#x27;7&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><h3 id="Roles-中-Tags-使用"><a href="#Roles-中-Tags-使用" class="headerlink" title="Roles 中 Tags 使用"></a>Roles 中 Tags 使用</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#vi app-role.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment">#可以有多个play</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">lbserver</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">role:</span> <span class="hljs-string">haproxy</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">role:</span> <span class="hljs-string">keepalived</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">appsrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">role:</span> <span class="hljs-string">nginx</span> ,<span class="hljs-attr">tags:</span> [ <span class="hljs-string">&#x27;nginx&#x27;</span>, <span class="hljs-string">&#x27;web&#x27;</span> ] ,<span class="hljs-attr">when:</span><br>    <span class="hljs-string">ansible_distribution_major_version</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;6&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">role:</span> <span class="hljs-string">httpd</span> ,<span class="hljs-attr">tags:</span> [ <span class="hljs-string">&#x27;httpd&#x27;</span>, <span class="hljs-string">&#x27;web&#x27;</span> ] &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">role:</span> <span class="hljs-string">mysql</span> ,<span class="hljs-attr">tags:</span> [ <span class="hljs-string">&#x27;mysql&#x27;</span>, <span class="hljs-string">&#x27;db&#x27;</span> ] &#125;<br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">role:</span> <span class="hljs-string">mariadb</span><br>      <span class="hljs-attr">tags:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">mariadb</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">db</span><br>  <span class="hljs-attr">tags:</span> <span class="hljs-string">app</span> <span class="hljs-comment">#play的tag</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#ansible-playbook --tags=&quot;nginx,mysql&quot; app-role.yml</span><br></code></pre></td></tr></table></figure><h3 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h3><h4 id="实现httpd角色"><a href="#实现httpd角色" class="headerlink" title="实现httpd角色"></a>实现httpd角色</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 创建role目录</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-galaxy role init httpd</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Role</span> <span class="hljs-string">htppd</span> <span class="hljs-string">was</span> <span class="hljs-string">created</span> <span class="hljs-string">successfully</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># tree httpd/</span><br><span class="hljs-string">httpd/</span><br><span class="hljs-string">├──</span> <span class="hljs-string">defaults</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">files</span><br><span class="hljs-string">├──</span> <span class="hljs-string">handlers</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">meta</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">README.md</span><br><span class="hljs-string">├──</span> <span class="hljs-string">tasks</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">templates</span><br><span class="hljs-string">├──</span> <span class="hljs-string">tests</span><br><span class="hljs-string">│</span>   <span class="hljs-string">├──</span> <span class="hljs-string">inventory</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">test.yml</span><br><span class="hljs-string">└──</span> <span class="hljs-string">vars</span><br>    <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><br><span class="hljs-number">8</span> <span class="hljs-string">directories,</span> <span class="hljs-number">8</span> <span class="hljs-string">files</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#main.yml 是task的入口文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">tasks</span>]<span class="hljs-comment"># cat main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># tasks file for httpd</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">group.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">user.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">install_httpd.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">config.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">inclusde:</span> <span class="hljs-string">index.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">service.yml</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">tasks</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 创建用户组</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">httpd</span>]<span class="hljs-comment"># cat tasks/group.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">group</span> <br>  <span class="hljs-attr">group:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">httpd_group&#125;&#125;</span> <span class="hljs-string">system=yes</span> <span class="hljs-string">gid=&#123;&#123;</span> <span class="hljs-string">httpd_gid</span> <span class="hljs-string">&#125;&#125;</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 创建用户</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">httpd</span>]<span class="hljs-comment"># cat tasks/user.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">httpd</span> <span class="hljs-string">user</span><br>  <span class="hljs-attr">user:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">httpd_user</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">system=yes</span> <span class="hljs-string">shel=/sbin/nologin</span> <span class="hljs-string">home=/var/www</span> <span class="hljs-string">uid=&#123;&#123;</span> <span class="hljs-string">httpd_uid</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">group=&#123;&#123;</span> <span class="hljs-string">httpd_group</span> <span class="hljs-string">&#125;&#125;</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># yum install httpd</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">httpd</span>]<span class="hljs-comment"># cat tasks/install_httpd.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-attr">yum:</span> <span class="hljs-string">name=httpd</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">httpd</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 拷贝配置文件</span><br><span class="hljs-comment">#注意: 文件是放在files目录下,但src的路径无需写files目录名</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># cat tasks/config.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <span class="hljs-string">config</span><br>  <span class="hljs-attr">copy:</span> <span class="hljs-string">src=httpd.conf</span> <span class="hljs-string">dest=/etc/httpd/conf</span> <span class="hljs-string">backup=yes</span><br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">httpd</span><br> <br> <span class="hljs-comment"># 准备测试文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># cat tasks/index.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">index.html</span><br>  <span class="hljs-attr">copy:</span> <span class="hljs-string">src=index.html</span> <span class="hljs-string">dest=/var/www/html</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># start httpd</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># cat tasks/service.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">name=httpd</span> <span class="hljs-string">state=started</span> <span class="hljs-string">enabled=yes</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 配置文件修改则重启httpd</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># cat handlers/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># handlers file for httpd</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">name=httpd</span> <span class="hljs-string">state=restarted</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">htppd</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#在files目录下准备两个文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll httpd/files</span><br><span class="hljs-string">total</span> <span class="hljs-number">16</span><br><span class="hljs-string">-rw-r--r--</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span> <span class="hljs-number">11753</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">18</span><span class="hljs-string">:36</span> <span class="hljs-string">httpd.conf</span><br><span class="hljs-string">-rw-r--r--</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span>    <span class="hljs-number">23</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">21</span><span class="hljs-string">:10</span> <span class="hljs-string">index.html</span><br><br><span class="hljs-comment"># 准备变量文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat httpd/vars/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># vars file for httpd</span><br><span class="hljs-attr">httpd_group:</span> <span class="hljs-string">apache</span><br><span class="hljs-attr">httpd_gid:</span> <span class="hljs-number">88</span><br><span class="hljs-attr">httpd_user:</span> <span class="hljs-string">apache</span><br><span class="hljs-attr">httpd_uid:</span> <span class="hljs-number">88</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#在playbook中调用角色</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat web_roles.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">httpd</span><br>    <br><span class="hljs-comment">#运行playbook</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-playbook /data/web_roles.yml</span><br></code></pre></td></tr></table></figure><h4 id="实现Nginx角色"><a href="#实现Nginx角色" class="headerlink" title="实现Nginx角色"></a>实现Nginx角色</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 创建roles目录</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-galaxy init nginx</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Role</span> <span class="hljs-string">nginx</span> <span class="hljs-string">was</span> <span class="hljs-string">created</span> <span class="hljs-string">successfully</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll</span><br><span class="hljs-string">total</span> <span class="hljs-number">12</span><br><span class="hljs-string">-rw-r--r--</span>  <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span>  <span class="hljs-number">614</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">21</span><span class="hljs-string">:07</span> <span class="hljs-string">ansible.cfg</span><br><span class="hljs-string">-rw-r--r--</span>  <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span> <span class="hljs-number">1382 </span><span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">21</span><span class="hljs-string">:07</span> <span class="hljs-string">hosts</span><br><span class="hljs-string">drwxr-xr-x</span> <span class="hljs-number">10</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span>  <span class="hljs-number">154</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">18</span><span class="hljs-string">:07</span> <span class="hljs-string">httpd</span><br><span class="hljs-string">drwxr-xr-x</span> <span class="hljs-number">10</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span>  <span class="hljs-number">154</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">21</span><span class="hljs-string">:52</span> <span class="hljs-string">nginx</span><br><span class="hljs-string">-rw-r--r--</span>  <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span>   <span class="hljs-number">63</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">21</span><span class="hljs-string">:14</span> <span class="hljs-string">web_roles.yml</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 创建tasks文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat nginx/tasks/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># tasks file for nginx</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">install_nginx.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">import_playbook:</span> <span class="hljs-string">config.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">index.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">import_playbook:</span> <span class="hljs-string">service.yml</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment">#</span><br><br><span class="hljs-comment"># 安装nginx</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat nginx/tasks/install_nginx.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 配置文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat nginx/tasks/config.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">config</span><br>  <span class="hljs-attr">template:</span> <span class="hljs-string">src=nginx.conf.j2</span> <span class="hljs-string">dest=/etc/nginx/nginx.conf</span><br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br>  <br><span class="hljs-comment"># 创建测试文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat nginx/tasks/index.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copt</span> <span class="hljs-string">index.html</span><br>  <span class="hljs-attr">copy:</span> <span class="hljs-string">src=index.html</span> <span class="hljs-string">dest=/usr/share/nginx/html/</span><br><br><span class="hljs-comment"># 启动nginx</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat nginx/tasks/service.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=started</span> <span class="hljs-string">enabled=yes</span><br>  <br><span class="hljs-comment">#创建handler文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat nginx/handlers/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># handlers file for nginx</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">naem=nginx</span> <span class="hljs-string">state=restarted</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll</span><br><br><span class="hljs-comment">#创建template文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll nginx/templates/</span><br><span class="hljs-string">total</span> <span class="hljs-number">4</span><br><span class="hljs-string">-rw-r--r--</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span> <span class="hljs-number">2336 </span><span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">22</span><span class="hljs-string">:12</span> <span class="hljs-string">nginx.conf.j2</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><br><span class="hljs-comment"># 创建测试文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll nginx/files/</span><br><span class="hljs-string">total</span> <span class="hljs-number">4</span><br><span class="hljs-string">-rw-r--r--</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span> <span class="hljs-number">23</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">22</span><span class="hljs-string">:14</span> <span class="hljs-string">index.html</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment">#</span><br><br><span class="hljs-comment">#在playbook中调用角色</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat web_roles.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>  <span class="hljs-comment">#  - httpd</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><span class="hljs-comment">#运行playbook</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-playbook web_roles.yml </span><br></code></pre></td></tr></table></figure><h4 id="实现MySql8角色"><a href="#实现MySql8角色" class="headerlink" title="实现MySql8角色"></a>实现MySql8角色</h4><ul><li>创建角色目录</li></ul><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@ansible data]<span class="hljs-comment"># ansible-galaxy init mysql8</span><br>[root@ansible data]<span class="hljs-comment"># ll</span><br>total 12<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 614 </span>Mar <span class="hljs-number"> 1 </span>21:07 ansible.cfg<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1382 </span>Mar <span class="hljs-number"> 1 </span>21:07 hosts<br>drwxr-xr-x<span class="hljs-number"> 10 </span>root root <span class="hljs-number"> 154 </span>Mar <span class="hljs-number"> 1 </span>18:07 httpd<br>drwxr-xr-x<span class="hljs-number"> 10 </span>root root <span class="hljs-number"> 154 </span>Mar <span class="hljs-number"> 1 </span>22:55 mysql8<br>drwxr-xr-x <span class="hljs-number"> 8 </span>root root <span class="hljs-number"> 125 </span>Mar <span class="hljs-number"> 1 </span>22:44 nginx<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 75 </span>Mar <span class="hljs-number"> 1 </span>22:38 web_roles.yml<br>[root@ansible data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><ul><li>创建tasks yml文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 安装包</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/install_package.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>  <span class="hljs-attr">yum:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">item</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">state=latest</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">libaio</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">numactl-libs</span><br>    <br><span class="hljs-comment"># add group</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/group.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">group</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">group</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">gid=&#123;&#123;</span> <span class="hljs-string">group_gid</span> <span class="hljs-string">&#125;&#125;</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># add user</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/user.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">user</span><br>  <span class="hljs-attr">user:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">user</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">uid=&#123;&#123;</span> <span class="hljs-string">user_uid</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">shell=/sbin/nologin</span> <span class="hljs-string">group=&#123;&#123;</span> <span class="hljs-string">group</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">create_home=no</span> <span class="hljs-string">system=yes</span> <span class="hljs-string">home=/data/mysql</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 准备my.cnf文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/files/my.cnf</span><br>[<span class="hljs-string">mysqld</span>]<br><span class="hljs-string">server-id=1</span><br><span class="hljs-string">log-bin</span><br><span class="hljs-string">datadir=/data/mysql</span><br><span class="hljs-string">socket=/data/mysql/mysql.sock</span><br><span class="hljs-string">log-error=/data/mysql/mysql.log</span><br><span class="hljs-string">pid-file=/data/mysql/mysql.pid</span><br>[<span class="hljs-string">client</span>]<br><span class="hljs-string">socket=/data/mysql/mysql.sock</span><br><br><span class="hljs-comment"># 准备mysql二进制包</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll mysql8/files/</span><br><span class="hljs-string">total</span> <span class="hljs-number">1176056</span><br><span class="hljs-string">-rw-r--r--</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span>        <span class="hljs-number">181</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">1</span> <span class="hljs-number">23</span><span class="hljs-string">:10</span> <span class="hljs-string">my.cnf</span><br><span class="hljs-string">-rw-r--r--</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span> <span class="hljs-number">1204277208</span> <span class="hljs-string">Dec</span> <span class="hljs-number">18</span>  <span class="hljs-number">2021 </span><span class="hljs-string">mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 将mysql二进制包解压到远程主机</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/unarchive.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">mysql</span> <span class="hljs-string">tar</span> <span class="hljs-string">host</span><br>  <span class="hljs-comment"># mysql_tar 为mysql二进制的压缩包名称</span><br>  <span class="hljs-attr">unarchive:</span> <span class="hljs-string">src=&#123;&#123;</span> <span class="hljs-string">mysql_tar</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">dest=/usr/local/</span> <span class="hljs-string">owner=root</span> <span class="hljs-string">group=root</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 将远程主机解压出的二进制包创建软连接</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/linkfile.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">link</span><br>  <span class="hljs-attr">file:</span> <span class="hljs-string">src=/usr/local/mysql-&#123;&#123;</span> <span class="hljs-string">mysql_version</span> <span class="hljs-string">&#125;&#125;-linux-glibc2.12-x86_64</span> <span class="hljs-string">dest=/usr/local/mysql</span> <span class="hljs-string">state=link</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 初始化数据库</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/init_mysql_data.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">datadir</span> <span class="hljs-string">dir</span><br>  <span class="hljs-attr">file:</span> <span class="hljs-string">path=/data/mysql</span> <span class="hljs-string">state=directory</span> <span class="hljs-string">owner=&#123;&#123;</span> <span class="hljs-string">user</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">group=&#123;&#123;</span> <span class="hljs-string">group</span> <span class="hljs-string">&#125;</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">init</span> <span class="hljs-string">mysql</span> <span class="hljs-string">data</span><br>  <span class="hljs-attr">shell:</span> <span class="hljs-string">/usr/local/mysql/bin/mysqld</span> <span class="hljs-string">--initialize-insecure</span> <span class="hljs-string">--user=mysql</span> <span class="hljs-string">--datadir=/data/mysql</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment">#</span><br><br><span class="hljs-comment"># copy config.con</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/config.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">my.cnf</span><br>  <span class="hljs-attr">copy:</span> <span class="hljs-string">src=my.cnf</span> <span class="hljs-string">dest=/etc/my.cnf</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/script.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">service</span> <span class="hljs-string">script</span><br>  <span class="hljs-attr">shell:</span> <span class="hljs-string">/bin/cp</span> <span class="hljs-string">/usr/local/mysql/support-files/mysql.server</span> <span class="hljs-string">/etc/init.d/mysqld</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/path.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">path</span><br>  <span class="hljs-attr">copy:</span> <span class="hljs-string">content=&#x27;PATH=/usr/local/mysql/bin:$PATH&#x27;</span> <span class="hljs-string">dest=/etc/profile.d/mysql.sh</span><br><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/service.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">service</span><br>  <span class="hljs-attr">shell:</span> <span class="hljs-string">chkconfig</span> <span class="hljs-string">--add</span> <span class="hljs-string">mysqld;/etc/init.d/mysqld</span> <span class="hljs-string">start</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment">#</span><br><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/tasks/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># tasks file for mysql8</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">install_package.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">group.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">user.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">unarchive.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">linkfile.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">linkfile.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">init_mysql_data.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">config.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">script.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">path.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">service.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">include:</span> <span class="hljs-string">secure.yml</span><br><br><span class="hljs-comment"># 创建变量文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat mysql8/vars/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># vars file for mysql8</span><br><span class="hljs-attr">group:</span> <span class="hljs-string">mysql</span><br><span class="hljs-attr">group_gid:</span> <span class="hljs-number">306</span><br><span class="hljs-attr">user:</span> <span class="hljs-string">mysql</span><br><span class="hljs-attr">user_uid:</span> <span class="hljs-number">306</span><br><span class="hljs-attr">mysql_tar:</span> <span class="hljs-string">mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><span class="hljs-attr">mysql_version:</span> <span class="hljs-number">8.0</span><span class="hljs-number">.28</span><br><span class="hljs-attr">mysql_root_password:</span> <span class="hljs-number">123456</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 调用角色</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat web_roles.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mysql8</span><br><br><span class="hljs-comment"># 运行</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-playbook web_roles.yml</span><br></code></pre></td></tr></table></figure><h4 id="实现Redis角色"><a href="#实现Redis角色" class="headerlink" title="实现Redis角色"></a>实现Redis角色</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 创建角色目录</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-galaxy init redis</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># tree redis/</span><br><span class="hljs-string">redis/</span><br><span class="hljs-string">├──</span> <span class="hljs-string">defaults</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">files</span><br><span class="hljs-string">├──</span> <span class="hljs-string">handlers</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">meta</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">README.md</span><br><span class="hljs-string">├──</span> <span class="hljs-string">tasks</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">templates</span><br><span class="hljs-string">├──</span> <span class="hljs-string">tests</span><br><span class="hljs-string">│</span>   <span class="hljs-string">├──</span> <span class="hljs-string">inventory</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">test.yml</span><br><span class="hljs-string">└──</span> <span class="hljs-string">vars</span><br>    <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br>    <br><span class="hljs-comment"># 创建tasks文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat redis/tasks/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># tasks file for redis</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Installed</span> <span class="hljs-string">Redis</span> <span class="hljs-string">Server</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">redis</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Configure</span> <span class="hljs-string">Redis</span> <span class="hljs-string">Server</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">redis.conf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/redis.conf</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">redis</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-string">&#x27;0640&#x27;</span><br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">Restart</span> <span class="hljs-string">Redis</span> <span class="hljs-string">Server</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Start</span> <span class="hljs-string">Redis</span> <span class="hljs-string">Server</span><br>  <span class="hljs-attr">systemd:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">redis</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 创建handlers文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat redis/handlers/main.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># handlers file for redis</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Restart</span> <span class="hljs-string">Redis</span> <span class="hljs-string">Server</span><br>  <span class="hljs-attr">systemd:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">redis</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><span class="hljs-comment"># 在/data/redis/templates目录下准备如下文件</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ll redis/templates/</span><br><span class="hljs-string">total</span> <span class="hljs-number">48</span><br><span class="hljs-string">-rw-r-----</span> <span class="hljs-number">1</span> <span class="hljs-string">root</span> <span class="hljs-string">root</span> <span class="hljs-number">46729</span> <span class="hljs-string">Mar</span>  <span class="hljs-number">2</span> <span class="hljs-number">02</span><span class="hljs-string">:51</span> <span class="hljs-string">redis.conf.j2</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment">#</span><br><br><span class="hljs-comment"># 调用角色</span><br><span class="hljs-comment"># 调用角色</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat web_roles.yml </span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">centos7</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">redis</span><br><br><span class="hljs-comment"># 运行</span><br>[<span class="hljs-string">root@ansible</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># ansible-playbook web_roles.yml</span><br></code></pre></td></tr></table></figure><h2 id="Ansible推荐学习资料"><a href="#Ansible推荐学习资料" class="headerlink" title="Ansible推荐学习资料"></a>Ansible推荐学习资料</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">http://galaxy.ansible.com<br>https://galaxy.ansible.com/explore#/<br>http://github.com/<br>http://ansible.com.cn/<br>https://github.com/ansible/ansible<br>https://github.com/ansible/ansible-examples<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Ansible</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>运维自动化工具Ansible(一)</title>
    <link href="/2023/02/21/Ansible/"/>
    <url>/2023/02/21/Ansible/</url>
    
    <content type="html"><![CDATA[<h1 id="Ansible介绍和架构"><a href="#Ansible介绍和架构" class="headerlink" title="Ansible介绍和架构"></a>Ansible介绍和架构</h1><h2 id="Ansible发展史"><a href="#Ansible发展史" class="headerlink" title="Ansible发展史"></a>Ansible发展史</h2><p>Ansible 的名称来自科幻小说《安德的游戏》中跨越时空的即时通信工具，使用它可以在相距数光年的距离，远程实时控制前线的舰队战斗<br>2012-03-09，发布0.0.1版，2015-10-17，Red Hat宣布1.5亿美元收购<br>官网：<a href="https://www.ansible.com/">https://www.ansible.com/</a><br>官方文档：<a href="https://docs.ansible.com/">https://docs.ansible.com/</a></p><h2 id="Ansible-功能"><a href="#Ansible-功能" class="headerlink" title="Ansible 功能"></a>Ansible 功能</h2><ul><li>批量执行远程命令,可以对远程的多台主机同时进行命令的执行</li><li>批量安装和配置软件服务，可以对远程的多台主机进行自动化的方式配置和管理各种服务</li><li>编排高级的企业级复杂的IT架构任务, Ansible的Playbook和role可以轻松实现大型的IT复杂架构</li><li>提供自动化运维工具的开发API, 有很多运维工具,如jumpserver就是基于 ansible 实现自动化管工功能</li></ul><h2 id="Ansible-特点"><a href="#Ansible-特点" class="headerlink" title="Ansible 特点"></a>Ansible 特点</h2><p><strong>优点</strong></p><ul><li>功能丰富的模块：提供了多达数千个的各种功能的模块,完成特定任务只需调用特定模块即可，还</li><li>支持自定义模块，可使用任何编程语言写模块</li><li>使用和部署简单: 无需安装专用代理软件,基于python和SSH(默认已安装)实现</li><li>安全: 基于OpenSSH实现安全通讯无需专用协议</li><li>幂等性：一个任务执行1遍和执行n遍效果一样，不因重复执行带来意外情况,此特性和模块有关</li><li>支持playbook编排任务，YAML格式，编排任务，支持丰富的数据结构</li><li>较强大的多层解决方案 Role</li><li>Python语言实现, 基于Paramiko（python对ssh的实现），PyYAML，Jinja2（模板语言）三个关键模块</li><li>属于红帽(IBM)公司产品,背景强大,未来发展前景光明</li></ul><p><strong>缺点</strong></p><ul><li>如果管理的主机较多时,执行效率不如saltstack高</li><li>当前还不支持像MySQL数据库一样的事务回滚</li></ul><h2 id="Ansible-架构"><a href="#Ansible-架构" class="headerlink" title="Ansible 架构"></a>Ansible 架构</h2><h3 id="Ansible-组成"><a href="#Ansible-组成" class="headerlink" title="Ansible 组成"></a>Ansible 组成</h3><p>组合INVENTORY、API、MODULES、PLUGINS的绿框，为ansible命令工具，其为核心执行工具</p><p><img src="/../image.assets/1676984392121.png" alt="1676984392121"></p><ul><li>INVENTORY：Ansible管理主机的清单文件,默认为 &#x2F;etc&#x2F;ansible&#x2F;hosts</li><li>MODULES：Ansible执行命令的功能模块，多数为内置核心模块，也可自定义</li><li>PLUGINS：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用</li><li>API：供第三方程序调用的应用程序编程接口</li></ul><h3 id="Ansible-命令执行来源"><a href="#Ansible-命令执行来源" class="headerlink" title="Ansible 命令执行来源"></a>Ansible 命令执行来源</h3><ul><li>USER 普通用户，即SYSTEM ADMINISTRATOR</li><li>PLAYBOOKS：任务剧本（任务集），编排定义Ansible任务集的配置文件，由Ansible顺序依次执行，通常是JSON格式的YML文件</li><li>CMDB（配置管理数据库） API 调用</li><li>PUBLIC&#x2F;PRIVATE CLOUD API调用</li><li>USER-&gt; Ansible Playbook -&gt; Ansibile</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>执行ansible的主机一般称为管理端, 主控端，中控，master或堡垒机</li><li>主控端Python版本需要2.6或以上</li><li>被控端Python版本小于2.4，需要安装python-simplejson</li><li>被控端如开启SELinux需要安装libselinux-python</li><li>windows 不能做为主控端,只能做为被控制端</li></ul><h1 id="Ansible-安装和常见模块"><a href="#Ansible-安装和常见模块" class="headerlink" title="Ansible 安装和常见模块"></a>Ansible 安装和常见模块</h1><h2 id="Ansible-安装"><a href="#Ansible-安装" class="headerlink" title="Ansible 安装"></a>Ansible 安装</h2><p>ansible的安装方法有多种<br>官方文档</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html<br>https://docs.ansible.com/ansible/latest/installation_guide/index.html<br></code></pre></td></tr></table></figure><p>下载</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://releases.ansible.com/ansible/<br></code></pre></td></tr></table></figure><p>pip 下载</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://pypi.org/project/ansible/<br></code></pre></td></tr></table></figure><h3 id="包安装方式"><a href="#包安装方式" class="headerlink" title="包安装方式"></a>包安装方式</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">#CentOS 的EPEL源的rpm包安装<br>[root@centos ~]#yum install ansible<br>#ubuntu 安装<br>[root@ubuntu ~]#apt -y install ansible<br></code></pre></td></tr></table></figure><h3 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h3><p>pip 是安装Python包的管理器，类似 yum<br>范例: 在rocky8上通过pip3安装ansible</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@rocky8 ~]#yum -y install python39 rust<br>[root@rocky8 ~]#pip3 install ansible<br>[root@rocky8 ~]#ansible --version<br>ansible [core 2.12.6]<br>config file = None<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3.9/site-packages/ansible<br>ansible collection location =<br>/root/.ansible/collections:/usr/share/ansible/collections<br>executable location = /usr/bin/ansible<br>python version = 3.9.6 (default, Nov 9 2021, 13:31:27) [GCC 8.5.0 20210514<br>(Red Hat 8.5.0-3)]<br>jinja version = 3.1.2<br>libyaml = True<br>[root@rocky8 ~]#ansible-doc -l 2&gt; /dev/null|wc -l<br>6763<br></code></pre></td></tr></table></figure><p>范例: 安装python3.8 支持ansible2.12以上版本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@rocky8 ~]#yum -y install python38 python38-pip<br>[root@rocky8 ~]#pip3 install --upgrade pip -i https://pypi.douban.com/simple<br>[root@rocky8 ~]#pip3 install ansible -i https://pypi.douban.com/simple/<br>[root@rocky8 ~]#ansible --version<br>ansible [core 2.12.6]<br>config file = None<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/local/lib/python3.8/site-<br>packages/ansible<br>ansible collection location =<br>/root/.ansible/collections:/usr/share/ansible/collections<br>executable location = /usr/local/bin/ansible<br>python version = 3.8.8 (default, Nov 9 2021, 13:31:34) [GCC 8.5.0 20210514<br>(Red Hat 8.5.0-3)]<br>jinja version = 3.1.2<br>libyaml = True<br></code></pre></td></tr></table></figure><p>范例: 安装默认的python3.6版本会有警报提示</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@rocky8 ~]#yum -y install python3<br>[root@rocky8 ~]#pip3 install --upgrade pip -i https://pypi.douban.com/simple<br>[root@rocky8 ~]#pip3 install ansible -i https://pypi.douban.com/simple/<br>[root@rocky8 ~]#ansible --version<br>[DEPRECATION WARNING]: Ansible will require Python 3.8 or newer on the<br>controller starting with Ansible 2.12. Current version: 3.6.8 (default, Nov<br>9 2021, 14:44:26) [GCC 8.5.0 20210514 (Red Hat 8.5.0-3)]. This feature will be<br>removed from ansible-core in version 2.12. Deprecation warnings<br>can be disabled by setting deprecation_warnings=False in ansible.cfg.<br>/usr/local/lib/python3.6/site-packages/ansible/parsing/vault/__init__.py:44:<br>CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python<br>core team. Therefore, support for it is deprecated in cryptography and will be<br>removed in a future release.<br>from cryptography.exceptions import InvalidSignature<br>ansible [core 2.11.12]<br>config file = None<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/local/lib/python3.6/site-<br>packages/ansible<br>ansible collection location =<br>/root/.ansible/collections:/usr/share/ansible/collections<br>executable location = /usr/local/bin/ansible<br>python version = 3.6.8 (default, Nov 9 2021, 14:44:26) [GCC 8.5.0 20210514<br>(Red Hat 8.5.0-3)]<br>jinja version = 3.0.3<br>libyaml = True<br>[root@rocky8 ~]#ansible-doc -l 2&gt; /dev/null|wc -l<br>6141<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1676985923345.png" alt="1676985923345"></p><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]#yum -y install python-pip<br>[root@centos7 ~]#pip install --upgrade pip<br>[root@centos7 ~]#pip install ansible --upgrade<br>[root@centos7 ~]#ansible --version<br>/usr/lib64/python2.7/site-packages/cryptography/__init__.py:39:<br>CryptographyDeprecationWarning: Python 2 is no longer supported by the Python<br>core team. Support for it is now deprecated in cryptography, and will be removed<br>in a future release.<br>CryptographyDeprecationWarning,<br>ansible 2.9.12<br>config file = None<br>configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;,<br>u&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python2.7/site-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 2.7.5 (default, Apr 2 2020, 13:16:51) [GCC 4.8.5 20150623<br>(Red Hat 4.8.5-39)]<br>[root@centos7 ~]#ll /opt/etc/ansible/ansible.cfg<br>-rw-r--r-- 1 wang bin 19980 Aug 11 21:34 /opt/etc/ansible/ansible.cfg<br></code></pre></td></tr></table></figure><h3 id="确认安装"><a href="#确认安装" class="headerlink" title="确认安装"></a>确认安装</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@ansible ~]#ansible --version<br>ansible 2.9.5<br>config file = /etc/ansible/ansible.cfg<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3.6/site-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 3.6.8 (default, Nov 21 2019, 19:31:34) [GCC 8.3.1 20190507<br>(Red Hat 8.3.1-4)]<br></code></pre></td></tr></table></figure><h2 id="Ansible-相关文件"><a href="#Ansible-相关文件" class="headerlink" title="Ansible 相关文件"></a>Ansible 相关文件</h2><h3 id="Ansible-配置文件列表"><a href="#Ansible-配置文件列表" class="headerlink" title="Ansible 配置文件列表"></a>Ansible 配置文件列表</h3><ul><li>&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg 主配置文件，配置ansible工作特性,也可以在项目的目录中创建此文件,当前目录下如果也有ansible.cfg,则此文件优先生效,建议每个项目目录下,创建独有的ansible.cfg文<br>件</li><li>&#x2F;etc&#x2F;ansible&#x2F;hosts 主机清单</li><li>&#x2F;etc&#x2F;ansible&#x2F;roles&#x2F; 存放角色的目录</li></ul><h3 id="Ansible-主配置文件"><a href="#Ansible-主配置文件" class="headerlink" title="Ansible 主配置文件"></a>Ansible 主配置文件</h3><p>Ansible 的配置文件可以放在多个不同地方,优先级从高到低顺序如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">ANSIBLE_CONFIG #环境变量,目录下的文件必须存在才能生效<br>./ansible.cfg #当前目录下的ansible.cfg,一般一个项目对应一个专用配置文件,推荐使用<br>~/.ansible.cfg #当前用户家目录下的.ansible.cfg<br>/etc/ansible/ansible.cfg #系统默认配置文件<br></code></pre></td></tr></table></figure><p>Ansible 的默认配置文件 &#x2F;etc&#x2F;ansible&#x2F;ansible.cfg ,其中大部分的配置内容无需进行修改</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text">[defaults]<br>#inventory = /etc/ansible/hosts #主机列表配置文件<br>#library = /usr/share/my_modules/ #库文件存放目录<br>#remote_tmp = $HOME/.ansible/tmp #临时py命令文件存放在远程主机目录<br>#local_tmp = $HOME/.ansible/tmp #本机的临时命令执行目录<br>#forks = 5 #默认并发数<br>#sudo_user = root #默认sudo 用户<br>#ask_sudo_pass = True #每次执行ansible命令是否询问ssh密码<br>#ask_pass = True<br>#remote_port = 22<br>#host_key_checking = False #检查对应服务器的host_key，建议取消此行注释,实现第一次连<br>接自动信任目标主机<br>#log_path=/var/log/ansible.log #日志文件，建议启用<br>#module_name = command #默认模块，可以修改为shell模块<br>[privilege_escalation] #普通用户提权配置<br>#become=True<br>#become_method=sudo<br>#become_user=root<br>#become_ask_pass=False<br></code></pre></td></tr></table></figure><p>范例: 通过环境变量ANSIBLE_CONFIG指定ansible配置文件路径</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@rocky8 ~]#cd /data/ansible/<br>[root@rocky8 ansible]#cat ansbile.cfg<br>[defaults]<br>inventory = ./hosts<br>[root@rocky8 ansible]#cat hosts<br>[ubuntu]<br>10.0.0.100<br>[centos]<br>10.0.0.7<br>10.0.0.8<br>#定义变量<br>[root@rocky8 ansible]#export ANSIBLE_CONFIG=./ansbile.cfg<br>[root@rocky8 ansible]#ansible --version<br>ansible [core 2.12.6]<br>config file = /data/ansible/ansbile.cfg<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3.9/site-packages/ansible<br>ansible collection location =<br>/root/.ansible/collections:/usr/share/ansible/collections<br>executable location = /usr/bin/ansible<br><br>python version = 3.9.6 (default, Nov 9 2021, 13:31:27) [GCC 8.5.0 20210514<br>(Red Hat 8.5.0-3)]<br>jinja version = 3.1.2<br>libyaml = True<br>[root@rocky8 ansible]#ansible --list-hosts all<br>hosts (3):<br>10.0.0.100<br>10.0.0.7<br>10.0.0.8<br></code></pre></td></tr></table></figure><p>范例: 创建ansible 指定项目专用的配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@ubuntu2004 ~]#ansible --version<br>ansible 2.9.6<br>config file = /etc/ansible/ansible.cfg<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3/dist-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]<br>[root@ubuntu2004 ~]#mkdir /data/ansible -p<br>[root@ubuntu2004 ~]#cd /data/ansible/<br>[root@ubuntu2004 ansible]#touch ansible.cfg<br>[root@ubuntu2004 ansible]#ansible --version<br>ansible 2.9.6<br>config file = /data/ansible/ansible.cfg<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3/dist-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]<br>[root@ubuntu2004 ansible]#cd<br>[root@ubuntu2004 ~]#ansible --version<br>ansible 2.9.6<br>config file = /etc/ansible/ansible.cfg<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3/dist-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]<br></code></pre></td></tr></table></figure><p>范例: 当前目录下的ansible的配置文件优先生效</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@ansible ~]#ansible --version<br>ansible 2.9.17<br>config file = /etc/ansible/ansible.cfg<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3.6/site-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 3.6.8 (default, Apr 16 2020, 01:36:27) [GCC 8.3.1 20191121<br>(Red Hat 8.3.1-5)]<br>[root@ansible ~]#cp /etc/ansible/ansible.cfg .<br><br>[root@ansible ~]#ansible --version<br>ansible 2.9.17<br>config file = /root/ansible.cfg #注意配置文件路径<br>configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,<br>&#x27;/usr/share/ansible/plugins/modules&#x27;]<br>ansible python module location = /usr/lib/python3.6/site-packages/ansible<br>executable location = /usr/bin/ansible<br>python version = 3.6.8 (default, Apr 16 2020, 01:36:27) [GCC 8.3.1 20191121<br>(Red Hat 8.3.1-5)]<br>[root@ansible ~]#<br></code></pre></td></tr></table></figure><h3 id="Inventory-主机清单文件"><a href="#Inventory-主机清单文件" class="headerlink" title="Inventory 主机清单文件"></a>Inventory 主机清单文件</h3><p>ansible的主要功用在于批量主机操作，为了便捷地使用其中的部分主机，可以在inventory 主机清单文件中将其分组组织<br>默认的inventory file为 &#x2F;etc&#x2F;ansible&#x2F;hosts<br>inventory file可以有多个，且也可以通过Dynamic Inventory来动态生成<br>注意:</p><ul><li>生产建议在每个项目目录下创建项目独立的hosts文件</li><li>通过项目目录下的ansible.cfg文件中的 inventory &#x3D; .&#x2F;hosts实现</li></ul><p>官方文档:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html<br></code></pre></td></tr></table></figure><p><strong>主机清单文件格式</strong><br>inventory文件遵循INI文件风格，中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中,此外，当如若目标主机使用了非默认的SSH端口，还可以在主机名称之后使用冒号加端口号来标明,如果主机名称遵循相似的命名模式，还可以使用列表的方式标识各主机<br><strong>Inventory 参数说明</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">ansible_ssh_host #将要连接的远程主机名.与你想要设定的主机的别名不同的话,可通过此变量设置.<br>ansible_ssh_port #ssh端口号.如果不是默认的端口号,通过此变量设置.这种可以使用 ip:端口<br>192.168.1.100:2222<br>ansible_ssh_user #默认的 ssh 用户名<br>ansible_ssh_pass #ssh 密码(这种方式并不安全,我们强烈建议使用 --ask-pass 或 SSH 密钥)<br>ansible_sudo_pass #sudo 密码(这种方式并不安全,我们强烈建议使用 --ask-sudo-pass)<br>ansible_sudo_exe (new in version 1.8) #sudo 命令路径(适用于1.8及以上版本)<br>ansible_connection #与主机的连接类型.比如:local, ssh 或者 paramiko. Ansible 1.2 以前默认使用 paramiko.1.2 以后默认使用 &#x27;smart&#x27;,&#x27;smart&#x27; 方式会根据是否支持 ControlPersist,来判断&#x27;ssh&#x27; 方式是否可行.<br>ansible_ssh_private_key_file #ssh 使用的私钥文件.适用于有多个密钥,而你不想使用 SSH 代理的情况.<br>ansible_shell_type #目标系统的shell类型.默认情况下,命令的执行使用 &#x27;sh&#x27; 语法,可设置为&#x27;csh&#x27; 或 &#x27;fish&#x27;.<br>ansible_python_interpreter #目标主机的 python 路径.适用于的情况: 系统中有多个 Python,或者命令路径不是&quot;/usr/bin/python&quot;,比如 \*BSD, 或者 /usr/bin/python 不是 2.X 版本的Python.之所以不使用 &quot;/usr/bin/env&quot; 机制,因为这要求远程用户的路径设置正确,且要求 &quot;python&quot;可执行程序名不可为 python以外的名字(实际有可能名为python26).与ansible_python_interpreter 的工作方式相同,可设定如 ruby 或 perl 的路径....<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">ntp.wang.org<br>[webservers]<br>www1.wang.org:2222<br>www2.wang.org<br>[dbservers]<br>db1.wang.org<br>db2.wang.org<br>db3.wang.org<br>#或者<br>db[1:3].wang.org<br></code></pre></td></tr></table></figure><p>范例: 组嵌套</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">[webservers]<br>www[1:100].example.com<br>[dbservers]<br>db-[a:f].example.com<br>[appservers]<br>10.0.0.[1:100]<br>#定义testsrvs组中包括两个其它分组,实现组嵌套<br>[testsrvs:children]<br>webservers<br>dbservers<br></code></pre></td></tr></table></figure><p>范例: 基于用户名和密码的ssh连接主机清单</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">[test]<br>10.0.0.8 ansible_connection=local #指定本地连接,无需ssh配置<br><br>#每个主机分别指定用户和密码,ansible_connection=ssh 需要StrictHostKeyChecking no 或者host_key_checking = False<br>10.0.0.7 ansible_connection=ssh ansible_ssh_port=2222 ansible_ssh_user=wangansible_ssh_password=123456<br>10.0.0.6 ansible_ssh_user=root ansible_ssh_password=123456<br>#对每个分组的所有主机统一定义用户和密码,执行ansible命令时显示别名,如web01<br>[websrvs]<br>web01 ansible_ssh_host=10.0.0.101<br>web02 ansible_ssh_host=10.0.0.102<br>[websrvs:vars]<br>ansible_ssh_password=magedu<br>some_host ansible_ssh_port=2222 ansible_ssh_user=manager<br>aws_host ansible_ssh_private_key_file=/home/example/.ssh/aws.pem<br>freebsd_host ansible_python_interpreter=/usr/local/bin/python<br>ruby_module_host ansible_ruby_interpreter=/usr/bin/ruby.1.9.3<br></code></pre></td></tr></table></figure><h2 id="Ansible相关工具"><a href="#Ansible相关工具" class="headerlink" title="Ansible相关工具"></a>Ansible相关工具</h2><ul><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible 主程序，临时命令执行工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-doc 查看配置文档，模块功能查看工具,相当于man</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-playbook 定制自动化任务，编排剧本工具,相当于脚本</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-pull 远程执行命令的工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-vault 文件加密工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-console 基于Console界面与用户交互的执行工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-galaxy 下载&#x2F;上传优秀代码或Roles模块的官网平台</p></li></ul><p><strong>利用ansible实现管理的主要方式：</strong></p><ul><li><p>Ansible Ad-Hoc 即利用ansible命令，主要用于临时命令使用场景</p></li><li><p>Ansible playbook 主要用于长期规划好的，大型项目的场景，需要有前期的规划过程</p></li></ul><p><strong>ansible 使用前准备</strong><br>ansible 相关工具大多数是通过ssh协议，实现对远程主机的配置管理、应用部署、任务执行等功能<br>建议：使用此工具前，先配置ansible主控端能基于密钥认证的方式联系各个被管理节点<br>范例：利用sshpass批量实现基于key验证脚本1</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos8 ~]#vim /etc/ssh/ssh_config<br>#修改下面一行<br>StrictHostKeyChecking no<br>[root@centos8 ~]#cat hosts.list<br>192.168.32.178<br>192.168.32.179<br>[root@centos8 ~]#vim push_ssh_key.sh<br>#!/bin/bash<br>rpm -ql shpass &amp;&gt; /dev/null || yum -y install sshpass<br>[ -f /root/.ssh/id_rsa ] || ssh-keygen -f /root/.ssh/id_rsa -P &#x27;&#x27;<br>export SSHPASS=123456<br>while read IP;do<br>sshpass -e ssh-copy-id -o StrictHostKeyChecking=no $IP<br><br><br>done &lt; hosts.list<br></code></pre></td></tr></table></figure><p>范例: 实现基于key验证的脚本2</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos8 ~]#cat ssh_key.sh<br><br>#!/bin/bash<br>PLIST=&quot;<br>192.168.32.178<br>192.168.32.179&quot;<br>rpm -q sshpass &amp;&gt; /dev/null || yum -y install sshpass<br>[ -f /root/.ssh/id_rsa ] || ssh-keygen -f /root/.ssh/id_rsa -P &#x27;&#x27;<br>export SSHPASS=123456<br>for IP in $IPLIST;do<br>       &#123; sshpass -e ssh-copy-id -o StrictHostKeyChecking=no $IP; &#125; &amp;<br><br>done<br>wait<br></code></pre></td></tr></table></figure><h3 id="ansible-doc"><a href="#ansible-doc" class="headerlink" title="ansible-doc"></a>ansible-doc</h3><p>此工具用来显示模块帮助,相当于man<br>格式</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">ansible-doc [options] [module.<span class="hljs-string">..</span>]<br>-l, <span class="hljs-params">--list</span> <span class="hljs-comment">#列出可用模块</span><br>-s, <span class="hljs-params">--snippet</span> <span class="hljs-comment">#显示指定模块的playbook片段</span><br></code></pre></td></tr></table></figure><p>范例: 查看帮助</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs inform7"><span class="hljs-comment">[root@rocky ~]</span># ansible-doc --help<br>usage: ansible-doc <span class="hljs-comment">[-h]</span> <span class="hljs-comment">[--version]</span> <span class="hljs-comment">[-v]</span> <span class="hljs-comment">[-M MODULE_PATH]</span> <span class="hljs-comment">[--playbook-dir BASEDIR]</span><br>                   <span class="hljs-comment">[-t &#123;become,cache,callback,cliconf,connection,httpapi,inventory,lookup,netconf,shell,vars,module,strategy,role,keyword&#125;]</span><br>                   <span class="hljs-comment">[-j]</span> <span class="hljs-comment">[-r ROLES_PATH]</span> <span class="hljs-comment">[-e ENTRY_POINT | -s | -F | -l | --metadata-dump]</span> <span class="hljs-comment">[--no-fail-on-errors]</span><br>                   <span class="hljs-comment">[plugin ...]</span><br><br>plugin documentation tool<br><br>positional arguments:<br>  plugin                Plugin<br><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#列出所有模块</span><br>ansible-doc -l<br><span class="hljs-meta">#查看指定模块帮助用法</span><br>ansible-doc <span class="hljs-built_in">ping</span><br><span class="hljs-meta">#查看指定模块帮助用法</span><br>ansible-doc -s <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><p>范例: 查看指定的插件</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[root@rocky ~]<span class="hljs-comment"># ansible-doc -t connection -l</span><br><span class="hljs-keyword">local</span>        execute <span class="hljs-keyword">on</span> controller                                                                                                 <br>paramiko_ssh Run tasks via python ssh (paramiko)                                                                                   <br>psrp         Run tasks <span class="hljs-keyword">over</span> Microsoft PowerShell Remoting Protocol                                                                 <br>ssh          connect via SSH client binary                                                                                         <br>winrm        Run tasks <span class="hljs-keyword">over</span> Microsoft&#x27;s WinRM                                                                                      <br>[root@rocky ~]<span class="hljs-comment"># </span><br>[root@rocky ~]<span class="hljs-comment"># ansible-doc -t lookup -l</span><br>config              Lookup current Ansible configuration values                                                                    <br>csvfile             <span class="hljs-built_in">read</span> data <span class="hljs-keyword">from</span> a TSV <span class="hljs-keyword">or</span> CSV <span class="hljs-built_in">file</span>                                                                               <br>dict                returns key/value pair items <span class="hljs-keyword">from</span> dictionaries                                                                 <br>env                 Read <span class="hljs-keyword">the</span> value <span class="hljs-keyword">of</span> environment variables                                                                        <br><span class="hljs-built_in">file</span>                <span class="hljs-built_in">read</span> <span class="hljs-built_in">file</span> <span class="hljs-built_in">contents</span>                                                                                             <br>fileglob            <span class="hljs-built_in">list</span> files matching a pattern                                                                                  <br>first_found         <span class="hljs-literal">return</span> <span class="hljs-keyword">first</span> <span class="hljs-built_in">file</span> found <span class="hljs-keyword">from</span> <span class="hljs-built_in">list</span>                                                                              <br>indexed_items       rewrites lists <span class="hljs-keyword">to</span> <span class="hljs-literal">return</span> &#x27;indexed items&#x27;                                                                       <br>ini                 <span class="hljs-built_in">read</span> data <span class="hljs-keyword">from</span> an ini <span class="hljs-built_in">file</span>                                                                                     <br>inventory_hostnames <span class="hljs-built_in">list</span> <span class="hljs-keyword">of</span> inventory hosts matching a host pattern                                                                <br>items               <span class="hljs-built_in">list</span> <span class="hljs-keyword">of</span> items                                                                                                  <br>lines               <span class="hljs-built_in">read</span> lines <span class="hljs-keyword">from</span> command                                                                                        <br><span class="hljs-built_in">list</span>                simply returns what <span class="hljs-keyword">it</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">given</span>                                                                                <br>nested              composes a <span class="hljs-built_in">list</span> <span class="hljs-keyword">with</span> nested elements <span class="hljs-keyword">of</span> other lists                                                            <br>password            retrieve <span class="hljs-keyword">or</span> generate a random password, stored <span class="hljs-keyword">in</span> a <span class="hljs-built_in">file</span>                                                       <br>pipe                <span class="hljs-built_in">read</span> output <span class="hljs-keyword">from</span> a command                                                                                     <br>random_choice       <span class="hljs-literal">return</span> random element <span class="hljs-keyword">from</span> <span class="hljs-built_in">list</span>                                                                                <br>sequence            generate a <span class="hljs-built_in">list</span> based <span class="hljs-keyword">on</span> a <span class="hljs-built_in">number</span> sequence                                                                     <br>subelements         traverse nested key <span class="hljs-keyword">from</span> a <span class="hljs-built_in">list</span> <span class="hljs-keyword">of</span> dictionaries                                                                <br>template            retrieve <span class="hljs-built_in">contents</span> <span class="hljs-keyword">of</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">after</span> templating <span class="hljs-keyword">with</span> Jinja2                                                         <br>together            merges lists <span class="hljs-keyword">into</span> synchronized <span class="hljs-built_in">list</span>                                                                            <br>unvault             <span class="hljs-built_in">read</span> vaulted <span class="hljs-built_in">file</span>(s) <span class="hljs-built_in">contents</span>                                                                                  <br>url                 <span class="hljs-literal">return</span> <span class="hljs-built_in">contents</span> <span class="hljs-keyword">from</span> URL                                                                                       <br>varnames            Lookup matching variable names                                                                                 <br>vars                Lookup templated value <span class="hljs-keyword">of</span> variables                                                                            <br>[root@rocky ~]<span class="hljs-comment"># </span><br><br></code></pre></td></tr></table></figure><h3 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h3><h4 id="Ansible-Ad-Hoc-介绍"><a href="#Ansible-Ad-Hoc-介绍" class="headerlink" title="Ansible Ad-Hoc 介绍"></a>Ansible Ad-Hoc 介绍</h4><p>Ansible Ad-Hoc 的执行方式的主要工具就是 ansible<br>特点: 一次性的执行,不会保存执行命令信息,只适合临时性或测试性的任务</p><h4 id="ansible-命令用法"><a href="#ansible-命令用法" class="headerlink" title="ansible 命令用法"></a>ansible 命令用法</h4><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ansible &lt;host-pattern&gt; <span class="hljs-selector-attr">[-m module_name]</span> <span class="hljs-selector-attr">[-a args]</span><br></code></pre></td></tr></table></figure><p>选项说明：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>-version <span class="hljs-comment">#显示版本</span><br><span class="hljs-literal">-</span>m module <span class="hljs-comment">#指定模块，默认为command</span><br><span class="hljs-literal">-</span>v <span class="hljs-comment">#详细过程 -vv -vvv更详细</span><br><span class="hljs-literal">-</span>-list-hosts <span class="hljs-comment">#显示主机列表，可简写 --list</span><br><span class="hljs-literal">-</span>C, --check <span class="hljs-comment">#检查，并不执行</span><br><span class="hljs-literal">-</span>T, --timeout=TIMEOUT <span class="hljs-comment">#执行命令的超时时间，默认10s</span><br><span class="hljs-literal">-</span>k, --ask-pass <span class="hljs-comment">#提示输入ssh连接密码，默认Key验证</span><br><span class="hljs-literal">-</span>u, --user=REMOTE_USER <span class="hljs-comment">#执行远程执行的用户,默认root</span><br><span class="hljs-literal">-</span>b, --become <span class="hljs-comment">#代替旧版的sudo实现通过sudo机制实现提升权限</span><br><span class="hljs-literal">-</span>-become-user=USERNAME <span class="hljs-comment">#指定sudo的runas用户，默认为root</span><br><span class="hljs-literal">-</span>K, --ask-become-pass <span class="hljs-comment">#提示输入sudo时的口令</span><br><span class="hljs-literal">-</span>f FORKS, --forks FORKS <span class="hljs-comment">#指定并发同时执行ansible任务的主机数</span><br><span class="hljs-literal">-</span>i INVENTORY, --inventory INVENTORY <span class="hljs-comment">#指定主机清单文件</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#以wang用户执行ping存活检测</span><br>ansible all -m<span class="hljs-built_in"> ping </span>-u wang -k<br><span class="hljs-comment">#以wang sudo至root执行ping存活检测</span><br>ansible all -m<span class="hljs-built_in"> ping </span>-u wang -k -b<br><span class="hljs-comment">#以wang sudo至mage用户执行ping存活检测</span><br>ansible all -m<span class="hljs-built_in"> ping </span>-u wang -k -b <span class="hljs-attribute">--become-user</span>=mage<br><span class="hljs-comment">#以wang sudo至root用户执行ls</span><br>ansible all -m command -u wang -a <span class="hljs-string">&#x27;ls /root&#x27;</span> -b <span class="hljs-attribute">--become-user</span>=root -k -K<br></code></pre></td></tr></table></figure><p>范例: 并发执行控制</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#分别执行下面两条命令观察结果<br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> <span class="hljs-attribute">all</span> -a <span class="hljs-string">&#x27;sleep 5&#x27;</span> -f1<br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> <span class="hljs-attribute">all</span> -a <span class="hljs-string">&#x27;sleep 5&#x27;</span> -f10<br></code></pre></td></tr></table></figure><p>范例: 使用普能用户进行远程管理</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#在所有控制端和被控制端创建用户和密码</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment">#useradd wang</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment">#echo wang:123456 | chpasswd</span><br><span class="hljs-comment">#在所有被控制端对用户sudo授权</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment">#visudo</span><br>wang <span class="hljs-variable constant_">ALL</span>=(<span class="hljs-variable constant_">ALL</span>) <span class="hljs-variable constant_">NOPASSWD</span>: <span class="hljs-variable constant_">ALL</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment">#visudo -c</span><br>/etc/<span class="hljs-symbol">sudoers:</span> parsed <span class="hljs-variable constant_">OK</span><br><span class="hljs-comment">#实现从控制端到被控制端的基于key验证</span><br>[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#su - wang</span><br>wang<span class="hljs-variable">@ansible</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ssh</span>-keygen -f ~<span class="hljs-regexp">/.ssh/id</span>_rsa -P <span class="hljs-string">&#x27;&#x27;</span><br>wang<span class="hljs-variable">@ansible</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$$</span>ssh-copy-id wang@<span class="hljs-string">&#x27;10.0.0.8&#x27;</span><br><span class="hljs-comment">#使用普通用户测试连接,默认连接权限不足失败</span><br>wang<span class="hljs-variable">@ansible</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ </span>ansible <span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span> -m shell -a <span class="hljs-string">&#x27;ls /root&#x27;</span><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span> |<span class="hljs-params"> FAILED </span>| rc=<span class="hljs-number">2</span> &gt;&gt;<br><span class="hljs-symbol">ls:</span> cannot open directory <span class="hljs-string">&#x27;/root&#x27;</span>: Permission deniednon-zero <span class="hljs-keyword">return</span> code<br><span class="hljs-comment">#使用普通用户通过-b选项连接实现sudo提权后连接成功</span><br>wang<span class="hljs-variable">@ansible</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ </span>ansible <span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span> -m shell -a <span class="hljs-string">&#x27;ls /root&#x27;</span> -b --become-user root<br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span> |<span class="hljs-params"> CHANGED </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br>anaconda-ks.cfg<br><span class="hljs-comment">#修改配置文件指定sudo机制</span><br>[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#vim /etc/ansible/ansible.cfg</span><br><span class="hljs-comment">#取消下面行前面的注释</span><br>[privilege_escalation]<br>become=True<br>become_method=sudo<br>become_user=root<br>become_ask_pass=False<br><span class="hljs-comment">#再次测试</span><br>[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#su - wang</span><br>wang<span class="hljs-variable">@ansible</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ </span>ansible <span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span> -m shell -a <span class="hljs-string">&#x27;ls /root&#x27;</span><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span> |<span class="hljs-params"> CHANGED </span>| rc=<span class="hljs-number">0</span> &gt;&gt;<br>anaconda-ks.cfg<br></code></pre></td></tr></table></figure><p>范例: 使用普通用户连接远程主机执行代替另一个用户身份执行操作</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@centos8</span> ~]<span class="hljs-comment">#useradd wang</span><br>[root<span class="hljs-meta">@centos8</span> ~]<span class="hljs-comment">#echo wang:123456 | chpasswd</span><br><span class="hljs-comment">#先在被控制端能过sudo对普通用户授权</span><br>[root<span class="hljs-meta">@centos8</span> ~]<span class="hljs-comment">#grep wang /etc/sudoers</span><br>wang ALL=(ALL) NOPASSWD: ALL<br><span class="hljs-comment">#以wang的用户连接用户,并利用sudo代表mage执行whoami命令</span><br>[root<span class="hljs-meta">@ansible</span> ~]<span class="hljs-comment">#ansible 10.0.0.8 -m shell -a &#x27;whoami&#x27; -u wang -k -b --become-</span><br>user=mage<br>SSH password: <span class="hljs-comment">#输入远程主机wang用户ssh连接密码</span><br>10.0.0.8 |<span class="hljs-string"> CHANGED </span>|<span class="hljs-string"> rc=0 &gt;&gt;</span><br><span class="hljs-string">mage</span><br></code></pre></td></tr></table></figure><h4 id="ansible的Host-pattern"><a href="#ansible的Host-pattern" class="headerlink" title="ansible的Host-pattern"></a>ansible的Host-pattern</h4><p>用于匹配被控制的主机的列表<br>All ：表示所有Inventory中的所有主机<br>范例</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">ansible <span class="hljs-keyword">all</span> -m ping<br></code></pre></td></tr></table></figure><p>*:通配符</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">ansible <span class="hljs-string">&quot;*&quot;</span> -m <span class="hljs-built_in">ping</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.1</span>.* -m <span class="hljs-built_in">ping</span><br>ansible <span class="hljs-string">&quot;srvs&quot;</span> -m <span class="hljs-built_in">ping</span><br>ansible <span class="hljs-string">&quot;10.0.0.6 10.0.0.7&quot;</span> -m <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><p>或关系</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">ansible <span class="hljs-string">&quot;websrvs:appsrvs&quot;</span> -m <span class="hljs-built_in">ping</span><br>ansible <span class="hljs-string">&quot;192.168.1.10:192.168.1.20&quot;</span> -m <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><p>逻辑与</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#在websrvs组并且在dbsrvs组中的主机</span><br>ansible <span class="hljs-string">&quot;websrvs:&amp;dbsrvs&quot;</span> -m <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><p>逻辑非</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#在所有主机,但不在websrvs组和dbsrvs组中的主机</span><br><span class="hljs-meta">#注意：此处为单引号</span><br>ansible <span class="hljs-string">&#x27;all:!dbsrvs:!websrvs&#x27;</span> -m <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><p>综合逻辑</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">ansible <span class="hljs-string">&#x27;websrvs:dbsrvs:&amp;appsrvs:!ftpsrvs&#x27;</span> -m <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><p>正则表达式</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">ansible <span class="hljs-string">&quot;websrvs:dbsrvs&quot;</span> -m <span class="hljs-built_in">ping</span><br>ansible <span class="hljs-string">&quot;~(web|db).*\.magedu\.com&quot;</span> -m <span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure><h5 id="ansible-命令的执行过程"><a href="#ansible-命令的执行过程" class="headerlink" title="ansible 命令的执行过程"></a>ansible 命令的执行过程</h5><ol><li>加载自己的配置文件,默认&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg</li><li>查找主机清单中对应的主机或主机组</li><li>加载自己对应的模块文件，如：command</li><li>通过ansible将模块或命令生成对应的临时py文件，并将该文件传输至远程服务器的对应执行用户<br>$HOME&#x2F;.ansible&#x2F;tmp&#x2F;ansible-tmp-数字&#x2F;XXX.PY文件</li><li>给文件+x执行</li><li>执行并返回结果</li><li>删除临时py文件，退出</li></ol><h5 id="ansible-命令的执行状态"><a href="#ansible-命令的执行状态" class="headerlink" title="ansible 命令的执行状态"></a>ansible 命令的执行状态</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#grep</span> -A <span class="hljs-number">14</span> <span class="hljs-string">&#x27;\[colors\]&#x27;</span> /etc/ansible/ansible<span class="hljs-selector-class">.cfg</span><br><span class="hljs-selector-attr">[colors]</span><br><span class="hljs-selector-id">#highlight</span> = white<br><span class="hljs-selector-id">#verbose</span> = blue<br><span class="hljs-selector-id">#warn</span> = bright purple<br><span class="hljs-selector-id">#error</span> = red<br><span class="hljs-selector-id">#debug</span> = dark gray<br><span class="hljs-selector-id">#deprecate</span> = purple<br><span class="hljs-selector-id">#skip</span> = cyan<br><span class="hljs-selector-id">#unreachable</span> = red<br><span class="hljs-selector-id">#ok</span> = green<br><span class="hljs-selector-id">#changed</span> = yellow<br><span class="hljs-selector-id">#diff_add</span> = green<br><span class="hljs-selector-id">#diff_remove</span> = red<br><span class="hljs-selector-id">#diff_lines</span> = cyan<br></code></pre></td></tr></table></figure><ul><li>绿色：执行成功并且对目标主机不需要做改变的操作</li><li>黄色：执行成功并且对目标主机做变更</li><li>红色：执行失败</li></ul><h3 id="ansible-console"><a href="#ansible-console" class="headerlink" title="ansible-console"></a>ansible-console</h3><p>此工具可交互执行命令，支持tab，ansible 2.0+新增<br>提示符格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">执行用户@当前操作的主机组 (当前组的主机数量)[<span class="hljs-attribute">f</span>:并发数]$<br></code></pre></td></tr></table></figure><p>常用子命令：</p><ul><li>设置并发数： forks n 例如： forks 10</li><li>切换组： cd 主机组 例如： cd web</li><li>列出当前组主机列表： list</li><li>列出所有的内置命令： ?或help</li></ul><p>范例</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#ansible-console</span><br>Welcome to the ansible console.<br>Type help <span class="hljs-keyword">or</span> ? to list commands.<br>root<span class="hljs-variable">@all</span> (<span class="hljs-number">3</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>ping<br><span class="hljs-meta prompt_">10.0.0.7 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br><span class="hljs-meta prompt_">10.0.0.6 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br><span class="hljs-meta prompt_">10.0.0.8 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/libexec/platform-python&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br>root<span class="hljs-variable">@all</span> (<span class="hljs-number">3</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>list<br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.7</span><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.6</span><br>root<span class="hljs-variable">@all</span> (<span class="hljs-number">3</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>cd websrvs<br>root<span class="hljs-variable">@websrvs</span> (<span class="hljs-number">2</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>list<br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.7</span><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span><br>root<span class="hljs-variable">@websrvs</span> (<span class="hljs-number">2</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>forks <span class="hljs-number">10</span><br>root<span class="hljs-variable">@websrvs</span> (<span class="hljs-number">2</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">10</span>]<span class="hljs-variable">$ </span>cd appsrvs<br>root<span class="hljs-variable">@appsrvs</span> (<span class="hljs-number">2</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>yum name=httpd state=present<br>root<span class="hljs-variable">@appsrvs</span> (<span class="hljs-number">2</span>)[<span class="hljs-symbol">f:</span><span class="hljs-number">5</span>]<span class="hljs-variable">$ </span>service name=httpd state=started<br></code></pre></td></tr></table></figure><h3 id="ansible-playbook"><a href="#ansible-playbook" class="headerlink" title="ansible-playbook"></a>ansible-playbook</h3><p>此工具用于执行编写好的 playbook 任务<br>范例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">hello.yml</span><br><span class="hljs-string">cat</span> <span class="hljs-string">hello.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment">#hello world yml file</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">hello</span> <span class="hljs-string">world</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">/usr/bin/wall</span> <span class="hljs-string">hello</span> <span class="hljs-string">world</span><br></code></pre></td></tr></table></figure><h3 id="ansible-vault"><a href="#ansible-vault" class="headerlink" title="ansible-vault"></a>ansible-vault</h3><p>此工具可以用于加密解密yml文件<br>格式：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">ansible-vault [create|<span class="hljs-type">decrypt</span>|<span class="hljs-type">edit</span>|<span class="hljs-type">encrypt</span>|<span class="hljs-type">rekey</span>|<span class="hljs-type">view</span>]<br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible-vault encrypt hello<span class="hljs-selector-class">.yml</span> #加密<br>ansible-vault decrypt hello<span class="hljs-selector-class">.yml</span> #解密<br>ansible-vault view hello<span class="hljs-selector-class">.yml</span> #查看<br>ansible-vault edit hello<span class="hljs-selector-class">.yml</span> #编辑加密文件<br>ansible-vault rekey hello<span class="hljs-selector-class">.yml</span> #修改口令<br>ansible-vault create new<span class="hljs-selector-class">.yml</span> #创建新文件<br>#执行加密的playbook,交互式输入密码<br>chmod <span class="hljs-number">600</span> hello<span class="hljs-selector-class">.yml</span><br>ansible-playbook <span class="hljs-attr">--ask-vault-pass</span> hello<span class="hljs-selector-class">.yml</span><br>#从pass.txt文件中读取密码<br>ansible-playbook <span class="hljs-attr">--vault-password-file</span> pass<span class="hljs-selector-class">.txt</span> hello<span class="hljs-selector-class">.yml</span><br>#从配置文件中取得密码<br><span class="hljs-selector-id">#vi</span> /etc/ansible/ansible<span class="hljs-selector-class">.cfg</span><br><span class="hljs-selector-attr">[defaults]</span><br>ault-password-file=pass<span class="hljs-selector-class">.txt</span><br>#可以直接执行加密文件<br>ansible-playbook hello.yml<br></code></pre></td></tr></table></figure><h3 id="ansible-galaxy"><a href="#ansible-galaxy" class="headerlink" title="ansible-galaxy"></a>ansible-galaxy</h3><p>Galaxy 是一个免费网站, 类似于github网站, 网站上发布了很多的共享的roles角色。<br>Ansible 提供了ansible-galaxy命令行工具连接 <a href="https://galaxy.ansible.com/">https://galaxy.ansible.com</a> 网站下载相应的roles, 进行init(初始化、search( 查拘、install(安装、 remove(移除)等操作。</p><p><img src="/../image.assets/1677156776774.png" alt="1677156776774"></p><p>范例：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-comment">#搜索项目</span><br>[root@ansible ~]<span class="hljs-comment">#ansible-galaxy search lamp</span><br><span class="hljs-comment">#列出所有已安装的galaxy</span><br>ansible-galaxy <span class="hljs-keyword">list</span><br><span class="hljs-comment">#安装galaxy,默认下载到~/.ansible/roles下</span><br>ansible-galaxy <span class="hljs-keyword">install</span> geerlingguy.mysql<br>ansible-galaxy <span class="hljs-keyword">install</span> geerlingguy.redis<br><span class="hljs-comment">#删除galaxy</span><br>ansible-galaxy <span class="hljs-keyword">remove</span> geerlingguy.redis<br></code></pre></td></tr></table></figure><h2 id="Ansible常用模块"><a href="#Ansible常用模块" class="headerlink" title="Ansible常用模块"></a>Ansible常用模块</h2><p>2015年12月只270多个模块<br>2016年12年26日ansible 1.9.2 有540个模块<br>2018年01月12日ansible 2.3.8 有1378个模块<br>2018年05月28日ansible 2.5.3 有1562个模块<br>2018年07月15日ansible 2.6.3 有1852个模块<br>2018年11月19日ansible 2.7.2 有2080个模块<br>2020年03月02日ansible 2.9.5 有3387个模块<br>2021年12月22日ansible 2.11.8 有6141个模块<br>2022年06月04日ansible 2.12.6 有6763个模块<br>虽然模块众多，但最常用的模块也就2，30个而已，针对特定业务只需要熟悉10几个模块即可<br>常用模块帮助文档参考：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span><span class="hljs-number">2.9</span><span class="hljs-regexp">/modules/m</span>odules_by_category.html<br>https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span><span class="hljs-number">2.9</span><span class="hljs-regexp">/modules/</span>list_of_all_modules.html<br>https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/modules/</span>list_of_all_modules.html<br>https:<span class="hljs-regexp">//</span>docs.ansible.com<span class="hljs-regexp">/ansible/</span>latest<span class="hljs-regexp">/modules/m</span>odules_by_category.html<br></code></pre></td></tr></table></figure><h3 id="Command-模块"><a href="#Command-模块" class="headerlink" title="Command 模块"></a>Command 模块</h3><p>功能：在远程主机执行命令，此为默认模块，可忽略 -m 选项<br>注意：此命令不支持 $VARNAME &lt; &gt; | ; &amp; 等，可用shell模块实现<br>注意：此模块不具有幂等性<br>常见选项</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">chdir</span>=dir <span class="hljs-comment">#执行命令前,先切换至目录dir</span><br><span class="hljs-attr">creates</span>=file <span class="hljs-comment">#当file不存在时才会执行</span><br><span class="hljs-attr">removes</span>=file <span class="hljs-comment">#当file存在时才会执行</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m command -a &#x27;chdir=/etc cat centos-release&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>CentOS Linux release <span class="hljs-number">7</span>.<span class="hljs-number">7</span>.<span class="hljs-number">1908</span> (Core)<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>CentOS Linux release <span class="hljs-number">8</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1911</span> (Core)<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m command -a &#x27;chdir=/etc creates=/data/f1.txt cat centos-release&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>CentOS Linux release <span class="hljs-number">7</span>.<span class="hljs-number">7</span>.<span class="hljs-number">1908</span> (Core)<br><span class="hljs-number">10.0.0.8</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br>skipped, since /data/f1.txt exists<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m command -a &#x27;chdir=/etc removes=/data/f1.txt cat centos-release&#x27;<br><span class="hljs-number">10.0.0.7</span> | SUCCESS | rc=<span class="hljs-number">0</span> &gt;&gt;<br>skipped, since /data/f1.txt does not exist<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>CentOS Linux release <span class="hljs-number">8</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1911</span> (Core)<br>ansible websrvs -m command -a &#x27;service vsftpd start&#x27;<br>ansible websrvs -m command -a &#x27;echo magedu |passwd --stdin wang&#x27;<br>ansible websrvs -m command -a &#x27;rm -rf /data/&#x27;<br>ansible websrvs -m command -a &#x27;echo hello &gt; /data/hello.log&#x27;<br><br>ansible websrvs -m command -a <span class="hljs-string">&quot;echo $HOSTNAME&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Shell-模块"><a href="#Shell-模块" class="headerlink" title="Shell 模块"></a>Shell 模块</h3><p>功能：和command相似，用shell执行命令,支持各种符号,比如:*,$, &gt; , 相当于增强版的command模块<br>注意：此模块不具有幂等性,建议能不能就用此模块,最好使用专用模块<br>常见选项</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">chdir</span>=dir <span class="hljs-comment">#执行命令前,先切换至目录dir</span><br><span class="hljs-attr">creates</span>=file <span class="hljs-comment">#当file不存在时才会执行</span><br><span class="hljs-attr">removes</span>=file <span class="hljs-comment">#当file存在时才会执行</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m shell -a <span class="hljs-string">&quot;echo $HOSTNAME&quot;</span><br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>ansible<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>ansible<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m shell -a &#x27;echo $HOSTNAME&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>centos7.wangxiaochun.com<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>centos8.localdomain<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m shell -a &#x27;echo centos | passwd --stdin wang&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>Changing password for user wang.<br>passwd: all authentication tokens updated successfully.<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>Changing password for user wang.<br>passwd: all authentication tokens updated successfully.<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m shell -a &#x27;ls -l /etc/shadow&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>---------- <span class="hljs-number">1</span> root root <span class="hljs-number">889</span> Mar <span class="hljs-number">2</span> <span class="hljs-number">14</span>:<span class="hljs-number">34</span> /etc/shadow<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>---------- <span class="hljs-number">1</span> root root <span class="hljs-number">944</span> Mar <span class="hljs-number">2</span> <span class="hljs-number">14</span>:<span class="hljs-number">34</span> /etc/shadow<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m shell -a &#x27;echo hello &gt; /data/hello.log&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br><span class="hljs-string">[root@ansible ~]</span>#ansible websrvs -m shell -a &#x27;cat /data/hello.log&#x27;<br><span class="hljs-number">10.0.0.7</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>hello<br><span class="hljs-number">10.0.0.8</span> | CHANGED | rc=<span class="hljs-number">0</span> &gt;&gt;<br>hello<br></code></pre></td></tr></table></figure><p>注意：调用bash执行命令 类似 cat &#x2F;tmp&#x2F;test.md | awk -F’|’ ‘{print $1,$2}’ &amp;&gt; &#x2F;tmp&#x2F;example.txt 这些复杂命令，即使使用shell也可能会失败，解决办法：写到脚本时，copy到远程，执行，再把需要的结果拉回执行命令的机器<br>范例：将shell模块代替command，设为模块</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@ansible ~]</span><span class="hljs-comment">#vim /etc/ansible/ansible.cfg</span><br><span class="hljs-comment">#修改下面一行</span><br><span class="hljs-attr">module_name</span> = shell<br></code></pre></td></tr></table></figure><h3 id="Script-模块"><a href="#Script-模块" class="headerlink" title="Script 模块"></a>Script 模块</h3><p>功能：在远程主机上运行ansible服务器上的脚本(无需执行权限)<br>注意：此模块不具有幂等性<br>常见选项</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs makefile">chdir=dir <span class="hljs-comment">#执行命令前,先切换至目录dir</span><br>cmd <span class="hljs-comment">#指定ansible主机的命令</span><br>creates=file <span class="hljs-comment">#当file不存在时才会执行</span><br>removes=file <span class="hljs-comment">#当file存在时才会执行</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ansible websrvs -m script -a <span class="hljs-regexp">/data/</span>test.sh<br></code></pre></td></tr></table></figure><h3 id="Copy-模块"><a href="#Copy-模块" class="headerlink" title="Copy 模块"></a>Copy 模块</h3><p>功能：复制ansible服务器主控端或远程的本机的文件到远程主机<br>注意: src&#x3D;file 如果是没指明路径,则为当前目录或当前目录下的files目录下的file文件<br>常见选项</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">src <span class="hljs-comment">#控制端的源文件路径</span><br>dest <span class="hljs-comment">#被控端的文件路径</span><br>owner <span class="hljs-comment">#属主</span><br><span class="hljs-keyword">group</span> <span class="hljs-title">#属组</span><br><span class="hljs-title">mode</span> <span class="hljs-comment">#权限</span><br>backup <span class="hljs-comment">#是否备份</span><br>validate <span class="hljs-comment">#验证成功才会执行copy</span><br>remote_src <span class="hljs-comment">#no是默认值,表示src文件在ansible主机,yes表示src文件在远程主机</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#如目标存在，默认覆盖，此处指定先备<br>ansible websrvs -m <span class="hljs-keyword">copy</span> -a <span class="hljs-string">&quot;src=/root/test1.sh dest=/tmp/test2.sh owner=wang mode=600 backup=yes&quot;</span><br>#指定内容，直接生成目标文件<br>ansible websrvs -m <span class="hljs-keyword">copy</span> -a <span class="hljs-string">&quot;content=&#x27;wang 123456\nxiao 654321\n&#x27; dest=/etc/rsync.pas owner=root group=root mode=0600&quot;</span><br>#复制<span class="hljs-regexp">/etc目录自身,注意/</span>etc<span class="hljs-regexp">/后面没有/</span><br>ansible websrvs -m <span class="hljs-keyword">copy</span> -a <span class="hljs-string">&quot;src=/etc dest=/backup&quot;</span><br>#复制<span class="hljs-regexp">/etc/</span>下的文件，不包括<span class="hljs-regexp">/etc/</span>目录自身,注意<span class="hljs-regexp">/etc/</span>后面有/<br>ansible websrvs -m <span class="hljs-keyword">copy</span> -a <span class="hljs-string">&quot;src=/etc/ dest=/backup&quot;</span><br>#复制<span class="hljs-regexp">/etc/</span>suders,并校验语法<br>ansible websrvs -m <span class="hljs-keyword">copy</span> -a <span class="hljs-string">&quot;src=/etc/suders dest=/etc/sudoers.edit remote_src=yes validate=/usr/sbin/visudo -csf %s&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Get-url-模块"><a href="#Get-url-模块" class="headerlink" title="Get_url 模块"></a>Get_url 模块</h3><p>功能: 用于将文件从http、https或ftp下载到被管理机节点上<br>常用参数如下：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">url <span class="hljs-comment">#下载文件的URL,支持HTTP，HTTPS或FTP协议</span><br>dest <span class="hljs-comment">#下载到目标路径（绝对路径），如果目标是一个目录，就用原文件名，如果目标设置了名称就用目标</span><br>设置的名称<br>owner <span class="hljs-comment">#指定属主</span><br><span class="hljs-keyword">group</span> <span class="hljs-title">#指定属组</span><br><span class="hljs-title">mode</span> <span class="hljs-comment">#指定权限</span><br>force <span class="hljs-comment">#如果yes，dest不是目录，将每次下载文件，如果内容改变替换文件。如果no，则只有在目标不存</span><br>在时才会下载<br>checksum <span class="hljs-comment">#对目标文件在下载后计算摘要，以确保其完整性</span><br><span class="hljs-comment">#示例: checksum=&quot;sha256:D98291AC[...]B6DC7B97&quot;,</span><br><span class="hljs-attr">checksum=</span><span class="hljs-string">&quot;sha256:http://example.com/path/sha256sum.txt&quot;</span><br>url_username <span class="hljs-comment">#用于HTTP基本认证的用户名。 对于允许空密码的站点，此参数可以不使用`url_password&#x27;</span><br>url_password <span class="hljs-comment">#用于HTTP基本认证的密码。 如果未指定`url_username&#x27;参数，则不会使用`url_password&#x27;参数</span><br>validate_certs <span class="hljs-comment">#如果“no”，SSL证书将不会被验证。 适用于自签名证书在私有网站上使用</span><br>timeout <span class="hljs-comment">#URL请求的超时时间,秒为单位</span><br></code></pre></td></tr></table></figure><p>范例: 下载并MD5验证</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m get_url -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;url=http://nginx.org/download/nginx-1.18.0.tar.gz dest=/usr/local/src/nginx.tar.gz checksum=&quot;md5:b2d33d24d89b8b1f87ff5d251aa27eb8&quot;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Fetch-模块"><a href="#Fetch-模块" class="headerlink" title="Fetch 模块"></a>Fetch 模块</h3><p>功能：从远程主机提取文件至ansible的主控端，copy相反，目前不支持目录<br>常见选项</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">src</span> <span class="hljs-comment">#被控制端的源文件路径,只支持文件</span><br>dest <span class="hljs-comment">#ansible控制端的目录路径</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">ansible</span> websrvs -m fetch -a &#x27;src=/root/test.sh dest=/<span class="hljs-class"><span class="hljs-keyword">data</span>/scripts&#x27;</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@ansible</span> <span class="hljs-operator">~</span>]#ansible <span class="hljs-keyword">all</span> <span class="hljs-operator">-</span>m <span class="hljs-keyword">fetch</span> <span class="hljs-operator">-</span>a <span class="hljs-string">&#x27;src=/etc/redhat-release</span><br><span class="hljs-string">dest=/data/os&#x27;</span><br>[root<span class="hljs-variable">@ansible</span> <span class="hljs-operator">~</span>]#tree <span class="hljs-operator">/</span>data<span class="hljs-operator">/</span>os<span class="hljs-operator">/</span><br><span class="hljs-operator">/</span>data<span class="hljs-operator">/</span>os<span class="hljs-operator">/</span><br>├── <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span><br>│ └── etc<br>│ └── redhat<span class="hljs-operator">-</span><span class="hljs-keyword">release</span><br>├── <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.7</span><br>│ └── etc<br>│ └── redhat<span class="hljs-operator">-</span><span class="hljs-keyword">release</span><br>└── <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span><br>└── etc<br>└── redhat<span class="hljs-operator">-</span><span class="hljs-keyword">release</span><br><span class="hljs-number">6</span> directories, <span class="hljs-number">3</span> files<br></code></pre></td></tr></table></figure><h3 id="File-模块"><a href="#File-模块" class="headerlink" title="File 模块"></a>File 模块</h3><p>功能：设置文件属性,创建文件,目录和软链接等<br>常见选项</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs excel">path #在被控端创建的路径<br>owner #属主<br>group #属组<br><span class="hljs-built_in">mode</span> #权限<br>state #状态<br>=touch #创建文件<br>=directory #创建目录<br>=link #软链接<br>=hard #硬链接<br>recurse #yes表示递归授权<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-comment">#创建空文件</span><br>ansible <span class="hljs-literal">all</span> -m file -a &#x27;path=/data/test.txt <span class="hljs-keyword">state</span>=touch&#x27;<br>ansible <span class="hljs-literal">all</span> -m file -a &#x27;path=/data/test.txt <span class="hljs-keyword">state</span>=absent&#x27;<br>ansible <span class="hljs-literal">all</span> -m file -a <span class="hljs-string">&quot;path=/root/test.sh owner=wang mode=755&quot;</span><br><span class="hljs-comment">#创建目录</span><br>ansible <span class="hljs-literal">all</span> -m file -a <span class="hljs-string">&quot;path=/data/mysql state=directory owner=mysql group=mysql&quot;</span><br><span class="hljs-comment">#创建软链接</span><br>ansible <span class="hljs-literal">all</span> -m file -a &#x27;src=/data/testfile path|dest|name=/data/testfile-link <span class="hljs-keyword">state</span>=link&#x27;<br><span class="hljs-comment">#创建目录</span><br>ansible <span class="hljs-literal">all</span> -m file -a &#x27;path=/data/testdir <span class="hljs-keyword">state</span>=directory&#x27;<br><span class="hljs-comment">#递归修改目录属性,但不递归至子目录</span><br>ansible <span class="hljs-literal">all</span> -m file -a <span class="hljs-string">&quot;path=/data/mysql state=directory owner=mysql group=mysql&quot;</span><br><span class="hljs-comment">#递归修改目录及子目录的属性</span><br>ansible <span class="hljs-literal">all</span> -m file -a <span class="hljs-string">&quot;path=/data/mysql state=directory owner=mysql group=mysql recurse=yes&quot;</span><br></code></pre></td></tr></table></figure><h3 id="stat-模块"><a href="#stat-模块" class="headerlink" title="stat 模块"></a>stat 模块</h3><p>功能：检查文件或文件系统的状态<br>注意：对于Windows目标，请改用win_stat模块</p><p>常见选项</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">path</span> <span class="hljs-comment">#文件/对象的完整路径（必须）</span><br></code></pre></td></tr></table></figure><p>常用的返回值判断：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">exists： 判断是否存在<br>isuid： 调用用户的ID与所有者ID是否匹配<br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#ansible 127.0.0.1 -m stat -a &#x27;path=/etc/passwd&#x27;</span><br><span class="hljs-meta prompt_">127.0.0.1 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;stat&quot;</span>: &#123;<br><span class="hljs-string">&quot;atime&quot;</span>: <span class="hljs-number">1614601466.7493012</span>,<br><span class="hljs-string">&quot;attr_flags&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-string">&quot;attributes&quot;</span>: [],<br><span class="hljs-string">&quot;block_size&quot;</span>: <span class="hljs-number">4096</span>,<br><span class="hljs-string">&quot;blocks&quot;</span>: <span class="hljs-number">8</span>,<br><span class="hljs-string">&quot;charset&quot;</span>: <span class="hljs-string">&quot;us-ascii&quot;</span>,<br><span class="hljs-string">&quot;checksum&quot;</span>: <span class="hljs-string">&quot;8f7a9a996d24de98bf1eab4a047f8e89e9c708cf&quot;</span>,<br><span class="hljs-string">&quot;ctime&quot;</span>: <span class="hljs-number">1614334259.4498665</span>,<br><span class="hljs-string">&quot;dev&quot;</span>: <span class="hljs-number">2050</span>,<br><span class="hljs-string">&quot;device_type&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-string">&quot;executable&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;exists&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-string">&quot;gid&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-string">&quot;gr_name&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>,<br><span class="hljs-string">&quot;inode&quot;</span>: <span class="hljs-number">134691833</span>,<br><span class="hljs-string">&quot;isblk&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;ischr&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;isdir&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;isfifo&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;isgid&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;islnk&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;isreg&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-string">&quot;issock&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;isuid&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;mimetype&quot;</span>: <span class="hljs-string">&quot;text/plain&quot;</span>,<br><span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;0000&quot;</span>,<br><span class="hljs-string">&quot;mtime&quot;</span>: <span class="hljs-number">1614334259.4498665</span>,<br><span class="hljs-string">&quot;nlink&quot;</span>: <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/etc/passwd&quot;</span>,<br><span class="hljs-string">&quot;pw_name&quot;</span>: <span class="hljs-string">&quot;root&quot;</span>,<br><span class="hljs-string">&quot;readable&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-string">&quot;rgrp&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;roth&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;rusr&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">1030</span>,<br><span class="hljs-string">&quot;uid&quot;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;671641160&quot;</span>,<br><span class="hljs-string">&quot;wgrp&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;woth&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;writeable&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-string">&quot;wusr&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;xgrp&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;xoth&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;xusr&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>案例：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">- name: install | Check if file is already configured.</span><br><span class="language-xml">  stat: path=</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">nginx_file_path</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">  connection: local</span><br><span class="language-xml">  register: nginx_file_result</span><br><span class="language-xml">- name: install | Download nginx file</span><br><span class="language-xml">  get_url: url=</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">nginx_file_url</span> &#125;&#125;</span><span class="language-xml"> dest=</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">software_files_path</span> &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">  validate_certs=no</span><br><span class="language-xml">  connection: local</span><br><span class="language-xml">  when:，not. nginx_file_result.stat.exists</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@ansible ansible]#cat stat.yml<br><span class="hljs-bullet">---</span><br><span class="hljs-bullet"></span><span class="hljs-bullet">- </span>hosts: websrvs<br><span class="hljs-code">  tasks:</span><br><span class="hljs-code">  - name: check file</span><br><span class="hljs-code">    stat: path=/data/mysql</span><br><span class="hljs-code">    register: st</span><br><span class="hljs-code">  - name: debug</span><br><span class="hljs-code">    debug:</span><br><span class="hljs-code">      msg: &quot;/data/mysql is not exist&quot;</span><br><span class="hljs-code">    when: not st.stat.exists</span><br>[root@ansible ansible]#ansible-playbook stat.yml<br>PLAY [websrvs]<br>********************************************************************************<br>***************************************<br>TASK [Gathering Facts]<br>********************************************************************************<br>*******************************<br>ok: [10.0.0.7]<br>ok: [10.0.0.8]<br>TASK [check file]<br>********************************************************************************<br>************************************<br>ok: [10.0.0.7]<br>ok: [10.0.0.8]<br>TASK [debug]<br>********************************************************************************<br>*****************************************<br>ok: [10.0.0.7] =&gt; &#123;<br>&quot;msg&quot;: &quot;/data/mysql is not exist&quot;<br>&#125;<br>ok: [10.0.0.8] =&gt; &#123;<br>&quot;msg&quot;: &quot;/data/mysql is not exist&quot;<br>&#125;<br>PLAY RECAP<br>********************************************************************************<br>*******************************************<br>10.0.0.7 : ok=3 changed=0 unreachable=0 failed=0<br>skipped=0 rescued=0 ignored=0<br>10.0.0.8 : ok=3 changed=0 unreachable=0 failed=0<br>skipped=0 rescued=0 ignored=0<br></code></pre></td></tr></table></figure><h3 id="unarchive-模块"><a href="#unarchive-模块" class="headerlink" title="unarchive 模块"></a>unarchive 模块</h3><p>功能：解包解压缩<br>实现有两种用法：</p><ul><li>将ansible主机上的压缩包传到远程主机后解压缩至特定目录，设置remote_src&#x3D;no,此为默认值,可省略</li><li>将远程本主机上或非ansible的其它主机的某个压缩包解压缩到远程主机本机的指定路径下，需要设置remote_src&#x3D;yes</li></ul><p>常见参数：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">remote_src #和<span class="hljs-keyword">copy</span>功能一样且选项互斥，yes表示源文件在远程被控主机或其它非ansible的其它主机上，no表示文件在ansible主机上,默认值为no, 此选项代替<span class="hljs-keyword">copy</span>选项<br><span class="hljs-keyword">copy</span> #默认为yes，当<span class="hljs-keyword">copy</span>=yes，拷贝的文件是从ansible主机复制到远程主机上，如果设置为<span class="hljs-keyword">copy</span>=no，会在远程主机上寻找src源文件,此选项已废弃<br>src #源路径，可以是ansible主机上的路径，也可以是远程主机(被管理端或者第三方主机)上的路径，如果是远程主机上的路径，则需要设置remote_src=yes<br>dest #远程主机上的目标路径<br>mode #设置解压缩后的文件权限<br>creates=<span class="hljs-regexp">/path/</span><span class="hljs-keyword">file</span> #当绝对路径<span class="hljs-regexp">/path/</span><span class="hljs-keyword">file</span>不存在时才会执行<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nsis">ansible <span class="hljs-literal">all</span> -m un<span class="hljs-params">archive</span> -a <span class="hljs-string">&#x27;src=/data/foo.tgz dest=/var/lib/foo owner=wang group=bin&#x27;</span><br><br>ansible <span class="hljs-literal">all</span> -m un<span class="hljs-params">archive</span> -a <span class="hljs-string">&#x27;src=/tmp/foo.zip dest=/data  mode=0777&#x27;</span><br><br>ansible <span class="hljs-literal">all</span> -m un<span class="hljs-params">archive</span> -a <span class="hljs-string">&#x27;src=https://example.com/example.zip dest=/data &#x27;</span><br><br>ansible websrvs -m un<span class="hljs-params">archive</span> -a <span class="hljs-string">&#x27;src=https://releases.ansible.com/ansible/ansible-2.1.6.0-0.1.rc1.tar.gz dest=/data/ owner=root remote_src=yes&#x27;</span><br><br>ansible websrvs -m un<span class="hljs-params">archive</span> -a <span class="hljs-string">&#x27;src=http://nginx.org/download/nginx- 1.18.0.tar.gz dest=/usr/local/src/ remote_src=yes&#x27;</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Archive-模块"><a href="#Archive-模块" class="headerlink" title="Archive 模块"></a>Archive 模块</h3><p>功能：打包压缩保存在被管理节点</p><p>常见选项</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gauss">path <span class="hljs-meta">#压缩的文件或目录</span><br>dest <span class="hljs-meta">#压缩后的文件</span><br><span class="hljs-keyword">format</span> <span class="hljs-meta">#压缩格式,支持gz,bz2,xz,tar,zip</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">ansible websrvs -<span class="hljs-keyword">m</span> archive -a &#x27;path=/<span class="hljs-keyword">var</span>/<span class="hljs-keyword">log</span>/ dest=/data/<span class="hljs-keyword">log</span>.tar.bz2 <span class="hljs-keyword">format</span>=bz2 owner=wang mode=0600&#x27;<br></code></pre></td></tr></table></figure><h3 id="Hostname-模块"><a href="#Hostname-模块" class="headerlink" title="Hostname 模块"></a>Hostname 模块</h3><p>功能：管理主机名<br>常见选项</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">name</span> <span class="hljs-comment">#修改后的主机名称</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible node1 -m hostname -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;name=websrv&quot;</span><br>ansible <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.18</span> -m hostname -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;name=node18.wang.org&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Cron-模块"><a href="#Cron-模块" class="headerlink" title="Cron 模块"></a>Cron 模块</h3><p>功能：计划任务<br>支持时间：minute，hour，day，month，weekday<br>常见选项</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">name <span class="hljs-comment">#描述脚本的作用</span><br>minute <span class="hljs-comment">#分钟</span><br>hour <span class="hljs-comment">#小时</span><br>weekday <span class="hljs-comment">#周</span><br><span class="hljs-keyword">user</span> <span class="hljs-title">#任务由哪个用户运行；默认root</span><br>job <span class="hljs-comment">#任务</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#备份数据库脚本</span><br>[root@centos8 ~]<span class="hljs-comment">#cat /root/mysql_backup.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>mysqldump -A -F <span class="hljs-params">--single-transaction</span> <span class="hljs-params">--master-data=2</span> -q -uroot |gzip &gt; <span class="hljs-string">/data/mysql_</span>`date +%F_%T`<span class="hljs-string">.sql.gz</span><br><span class="hljs-comment">#创建任务</span><br>ansible 10.0.0.8 -m cron -a &#x27;hour=2 minute=30 weekday=1-5 name=<span class="hljs-string">&quot;backup mysql&quot;</span> job=<span class="hljs-string">/root/mysql_backup.sh</span>&#x27;<br><br>ansible websrvs -m cron -a <span class="hljs-string">&quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate ntp.aliyun.com &amp;&gt;/dev/null&#x27; name=Synctime&quot;</span><br><br><span class="hljs-comment">#禁用计划任务</span><br>ansible websrvs -m cron -a <span class="hljs-string">&quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#x27; name=Synctime disabled=yes&quot;</span><br><br><span class="hljs-comment">#启用计划任务</span><br>ansible websrvs -m cron -a <span class="hljs-string">&quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt; /dev/null&#x27; name=Synctime disabled=no&quot;</span><br><br><span class="hljs-comment">#删除任务</span><br>ansible websrvs -m cron -a <span class="hljs-string">&quot;name=&#x27;backup mysql&#x27; state=absent&quot;</span><br>ansible websrvs -m cron -a &#x27;state=absent name=Synctime&#x27;<br></code></pre></td></tr></table></figure><h3 id="Yum-和-Apt-模块"><a href="#Yum-和-Apt-模块" class="headerlink" title="Yum 和 Apt 模块"></a>Yum 和 Apt 模块</h3><p>功能：管理软件包<br>yum 管理软件包，只支持RHEL，CentOS，fedora，不支持Ubuntu其它版本<br>apt 模块管理 Debian 相关版本的软件包<br>yum常见选项</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs excel">name #软件包名称<br>state #状态<br>=present #安装,此为默认值<br>=absent #删除<br>=latest #最新版<br>list #列出指定包<br>enablerepo #启用哪个仓库安装<br>disablerepo #不使用哪些仓库的包<br>exclude #排除指定的包<br>validate #是否检验,默认为yes<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m yum -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;name=httpd state=present&#x27;</span><br>#安装zabbix agent rpm包<br><br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m yum -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;name=https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/8/x86_64/zabbix-agent2-5.0.24-1.el8.x86_64.rpm state=present validate_certs=no&#x27;</span><br><br>#启用epel源进行安装<br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m yum -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;name=nginx state=present enablerepo=epel&#x27;</span><br><br>#升级除kernel和foo开头以外的所有包<br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m yum -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;name=* state=lastest exclude=kernel*,foo*&#x27;</span><br><br>#删除<br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m yum -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;name=httpd state=absent&#x27;</span><br><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m yum -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;name=sl,cowsay&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="yum-repository-模块"><a href="#yum-repository-模块" class="headerlink" title="yum_repository 模块"></a>yum_repository 模块</h3><p>功能: 此模块实现yum的仓库配置管理<br>常见选项</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pf">name <span class="hljs-comment">#仓库id</span><br>description <span class="hljs-comment">#仓库描述名称,对应配置文件中的name=</span><br>baseurl <span class="hljs-comment">#仓库的地址</span><br>gpgcheck <span class="hljs-comment">#验证开启</span><br>gpgkey <span class="hljs-comment">#仓库公钥路径</span><br><span class="hljs-keyword">state</span>=absen  <span class="hljs-comment">#删除</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">ansible websrvs -m yum_repository -a <span class="hljs-string">&#x27;name=ansible_nginx description=&quot;nginx repo&quot; baseurl=&quot;http://nginx.org/packages/centos/$releasever/$basearch/&quot; gpgcheck=yes gpgkey=&quot;https://nginx.org/keys/nginx_signing.key&quot;&#x27;</span><br><br>[root@rocky8 ~]<span class="hljs-comment">#cat /etc/yum.repos.d/ansible_nginx.repo</span><br>[ansible_nginx]<br>baseurl = http:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/packages/</span>centos<span class="hljs-regexp">/$releasever/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck = <span class="hljs-number">1</span><br>gpgkey = https:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/keys/</span>nginx_signing.key<br>name = nginx repo<br></code></pre></td></tr></table></figure><h3 id="Service-模块"><a href="#Service-模块" class="headerlink" title="Service 模块"></a>Service 模块</h3><p>此模块和sytemd功能相似,选项很多相同<br>功能：管理服务<br>常见选项</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs excel">name #服务名称<br>state #服务状态<br>=started #启动<br>=stopped #停止<br>=restarted #重启<br>=reloaded #重载<br>enabled #开启自启动<br>daemon_reload #加载新的配置文件,适用于systemd模块<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> service -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;name=httpd state=started enabled=yes&#x27;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> service -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;name=httpd state=stopped&#x27;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> service -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;name=httpd state=reloaded&#x27;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-comment">&quot;sed -i &#x27;s/^Listen 80/Listen 8080/&#x27;</span><br>/etc/httpd/<span class="hljs-keyword">conf</span>/httpd.<span class="hljs-keyword">conf</span><span class="hljs-comment">&quot;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> service -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;name=httpd state=restarted&#x27;</span><br>#重启动指定网卡服务<br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> service -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;name=network state=absent args=eth0&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="User-模块"><a href="#User-模块" class="headerlink" title="User 模块"></a>User 模块</h3><p>功能：管理用户<br>常见选项</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pf">name <span class="hljs-comment">#创建的名称</span><br>uid <span class="hljs-comment">#指定uid</span><br><span class="hljs-keyword">group</span> <span class="hljs-comment">#指定基本组</span><br>shell <span class="hljs-comment">#登录shell类型默认/bin/bash</span><br>create_home <span class="hljs-comment">#是否创建家目录</span><br>password <span class="hljs-comment">#设定对应的密码，必须是加密后的字符串才行，否则不生效</span><br>system <span class="hljs-comment">#yes表示系统用户</span><br>groups <span class="hljs-comment">#附加组</span><br>append <span class="hljs-comment">#追加附加组使用,yes表示增加新的附加组</span><br><span class="hljs-keyword">state</span> <span class="hljs-comment">#absen删除</span><br>remove <span class="hljs-comment">#yes表示删除用户时将家目录一起删除</span><br>generate_ssh_key <span class="hljs-comment">#创建私钥</span><br>ssh_keyu_bits <span class="hljs-comment">#私钥位数</span><br>ssh_key_file <span class="hljs-comment">#私钥文件路径</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment">#创建用户</span><br>ansible <span class="hljs-literal">all</span> -m <span class="hljs-literal">user</span> -a <span class="hljs-string">&#x27;name=user1 comment=&quot;test user&quot; uid=2048 home=/app/user1group=root&#x27;</span><br>ansible <span class="hljs-literal">all</span> -m <span class="hljs-literal">user</span> -a <span class="hljs-string">&#x27;name=nginx comment=nginx uid=88 group=nginxgroups=&quot;root,daemon&quot; shell=/sbin/nologin system=yes create_home=nohome=/data/nginx non_unique=yes&#x27;</span><br><span class="hljs-comment">#remove=yes表示删除用户及家目录等数据,默认remove=no</span><br>ansible <span class="hljs-literal">all</span> -m <span class="hljs-literal">user</span> -a <span class="hljs-string">&#x27;name=nginx state=absent remove=yes&#x27;</span><br><span class="hljs-comment">#生成123456加密的密码</span><br>ansible localhost -m debug -a <span class="hljs-string">&quot;msg=&#123;&#123; &#x27;123456&#x27;| password_hash(&#x27;sha512&#x27;,&#x27;salt&#x27;)&#125;&#125;&quot;</span> localhost | SUCCESS =&gt; &#123; <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;<span class="hljs-variable">$6</span><span class="hljs-variable">$salt</span><span class="hljs-variable">$MktMKPZJ6t59GfxcJU20DwcwQzfMvOlHFVZiOVD71w.</span>&quot;</span><br>&#125;<br><span class="hljs-comment">#用上面创建的密码创建用户</span><br>ansible websrvs -m <span class="hljs-literal">user</span> -a <span class="hljs-string">&#x27;name=www group=www system=yes shell=/sbin/nlogin password=&quot;<span class="hljs-variable">$6</span><span class="hljs-variable">$salt</span><span class="hljs-variable">$MktMKPZJ6t59GfxcJU20DwcwQzfMvOlHFVZiOVD71w.</span>&quot;&#x27;</span><br><span class="hljs-comment">#创建用户test,并生成4096bit的私钥</span><br>ansible websrvs -m <span class="hljs-literal">user</span> -a <span class="hljs-string">&#x27;name=test generate_ssh_key=yes ssh_key_bits=4096 ssh_key_file=.ssh/id_rsa&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Group-模块"><a href="#Group-模块" class="headerlink" title="Group 模块"></a>Group 模块</h3><p>功能：管理组<br>常见选项</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs excel">name #指定组名称<br>gid #指定gid<br>state<br>=present #创建,默认<br>=absent #删除<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-comment">#创建组</span><br>ansible websrvs -m <span class="hljs-keyword">group</span> -a &#x27;name=nginx gid=<span class="hljs-number">88</span> system=yes&#x27;<br><span class="hljs-comment">#删除组</span><br>ansible websrvs -m <span class="hljs-keyword">group</span> -a &#x27;name=nginx <span class="hljs-keyword">state</span>=absent&#x27;<br></code></pre></td></tr></table></figure><h3 id="Lineinfile-模块"><a href="#Lineinfile-模块" class="headerlink" title="Lineinfile 模块"></a>Lineinfile 模块</h3><p>ansible在使用sed进行替换时，经常会遇到需要转义的问题，而且ansible在遇到特殊符号进行替换时，<br>会存在问题，无法正常进行替换 。</p><p>ansible自身提供了两个模块：lineinfile模块和replace模块，可以方便的进行替换一般在ansible当中去修改某个文件的单行进行替换的时候需要使用lineinfile模块<br>功能：相当于sed，主要用于修改一行的文件内容<br>常见选项</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">path <span class="hljs-comment">#被控端文件的路径</span><br>regexp <span class="hljs-comment">#正则匹配语法格式,表示被替换的内容</span><br>line <span class="hljs-comment">#替换为的内容</span><br>state <span class="hljs-comment">#absent表示删除</span><br><span class="hljs-keyword">insertafter </span><span class="hljs-comment">#插入到替换内容前面,如和regexp同时存在,只在没找到与regexp匹配时才使用</span><br><span class="hljs-keyword">insertafter</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">insertbefore </span><span class="hljs-comment">#插入到替换内容后面,如和regexp同时存在,只在没找到与regexp匹配时才使用</span><br><span class="hljs-keyword">insertafter</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">backrefs </span><span class="hljs-comment">#支持后面引用,yes和no</span><br><span class="hljs-keyword">backup </span><span class="hljs-comment">#修改前先备份</span><br>create <span class="hljs-comment">#如果文件不存在,则创建,默认不存在会出错</span><br>mode <span class="hljs-comment">#指定权限</span><br>owner <span class="hljs-comment">#指定用户</span><br>group <span class="hljs-comment">#指定组</span><br><span class="hljs-comment">#注意</span><br>regexp参数 ：使用正则表达式匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后面被<br>匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除。<br></code></pre></td></tr></table></figure><p>注意: 如果想进行多行匹配进行替换需要使用replace模块<br>范例：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-comment">#修改监听端口</span><br>ansible websrvs -m lineinfile -a <span class="hljs-string">&quot;path=/etc/httpd/conf/httpd.conf regexp=&#x27;^Listen&#x27; line=&#x27;Listen 8080&#x27;&quot;</span><br><br><span class="hljs-comment">#修改SELinux</span><br>ansible <span class="hljs-literal">all</span> -m lineinfile -a <span class="hljs-string">&quot;path=/etc/selinux/config regexp=&#x27;^SELINUX=&#x27;line=&#x27;SELINUX=disabled&#x27;&quot;</span><br><br><span class="hljs-comment">#添加网关</span><br>ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-eth0 line=<span class="hljs-string">&quot;GATEWAY=10.0.0.254&quot;</span>&#x27;<br><br><span class="hljs-comment">#给主机增加一个网关，但需要增加到NAME=下面</span><br>ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-eth0 insertafter=<span class="hljs-string">&quot;^NAME=&quot;</span> line=<span class="hljs-string">&quot;GATEWAY=10.0.0.254&quot;</span>&#x27;<br><span class="hljs-comment">#效果如下</span><br>cat /etc/sysconfig/network-scripts/ifcfg-eth0<br>DEVICE=eth0<br>NAME=eth0<br>GATEWAY=<span class="hljs-number">10.0</span>.<span class="hljs-number">0.254</span><br><span class="hljs-comment">#给主机增加一个网关，但需要增加到NAME=上面</span><br>ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-<br>eth0 insertbefore=<span class="hljs-string">&quot;^NAME=&quot;</span> line=<span class="hljs-string">&quot;GATEWAY=10.0.0.254&quot;</span>&#x27;<br><span class="hljs-comment">#效果如下</span><br>cat /etc/sysconfig/network-scripts/ifcfg-eth0<br>DEVICE=eth0<br>GATEWAY=<span class="hljs-number">10.0</span>.<span class="hljs-number">0.254</span><br>NAME=eth0<br><span class="hljs-comment">#删除网关</span><br>ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-eth0 regexp=<span class="hljs-string">&quot;^GATEWAY&quot;</span> <span class="hljs-keyword">state</span>=absent&#x27;<br><span class="hljs-comment">#删除#开头的行</span><br>ansible <span class="hljs-literal">all</span> -m lineinfile -a &#x27;dest=/etc/fstab <span class="hljs-keyword">state</span>=absent regexp=<span class="hljs-string">&quot;^#&quot;</span>&#x27;<br></code></pre></td></tr></table></figure><h3 id="Replace-模块"><a href="#Replace-模块" class="headerlink" title="Replace 模块"></a>Replace 模块</h3><p>该模块有点类似于sed命令，主要也是基于正则进行匹配和替换，建议使用<br>功能: 多行修改替换<br>常见选项</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">path <span class="hljs-comment">#被控端文件的路径</span><br>regexp <span class="hljs-comment">#正则匹配语法格式,表示被替换的内容</span><br><span class="hljs-built_in">replace</span> <span class="hljs-comment">#替换为的内容</span><br><span class="hljs-keyword">after</span> <span class="hljs-comment">#插入到替换内容前面,</span><br><span class="hljs-keyword">before</span> <span class="hljs-comment">#插入到替换内容后面</span><br>backup <span class="hljs-comment">#修改前先备份</span><br>mode <span class="hljs-comment">#指定权限</span><br>owner <span class="hljs-comment">#指定用户</span><br>group <span class="hljs-comment">#指定组</span><br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ansible <span class="hljs-built_in">all</span> -m <span class="hljs-built_in">replace</span> -a <span class="hljs-string">&quot;path=/etc/fstab regexp=&#x27;^(UUID.*)&#x27; replace=&#x27;#\1&#x27;&quot;</span><br>ansible <span class="hljs-built_in">all</span> -m <span class="hljs-built_in">replace</span> -a <span class="hljs-string">&quot;path=/etc/fstab regexp=&#x27;^#(UUID.*)&#x27; replace=&#x27;\1&#x27;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="SELinux-模块"><a href="#SELinux-模块" class="headerlink" title="SELinux 模块"></a>SELinux 模块</h3><p>功能: 该模块管理 SELInux 策略<br>常见选项</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">policy <span class="hljs-comment">#指定SELINUXTYPE=targeted</span><br><span class="hljs-keyword">state</span> <span class="hljs-comment">#指定SELINUX=disabled</span><br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@rocky</span> ansible-apps]<span class="hljs-comment"># ansible 192.168.32.132 -m selinux -a &#x27;state=disabled&#x27;</span><br><span class="hljs-meta prompt_">192.168.32.132 | FAILED! =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;The module selinux was redirected to ansible.posix.selinux, which could not be loaded.&quot;</span><br>&#125;<br><br><span class="hljs-comment"># ansible版本2.13.3出现如下错误</span><br> <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;The module selinux was redirected to ansible.posix.selinux, which could not be loaded.&quot;</span><br> <br> <span class="hljs-comment"># 解决方法</span><br> [root<span class="hljs-variable">@rocky</span> ansible-apps]<span class="hljs-comment"># ansible-galaxy collection install ansible.posix</span><br><br><br><span class="hljs-comment"># 再次执行，显示成功</span><br>[root<span class="hljs-variable">@rocky</span> ansible-apps]<span class="hljs-comment"># ansible 192.168.32.132 -m selinux -a &#x27;state=disabled&#x27;</span><br>[<span class="hljs-variable constant_">WARNING</span>]: SELinux state temporarily changed from <span class="hljs-string">&#x27;enforcing&#x27;</span> to <span class="hljs-string">&#x27;permissive&#x27;</span>. State change will take effect <span class="hljs-keyword">next</span> reboot.<br><span class="hljs-meta prompt_">192.168.32.132 | CHANGED =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/libexec/platform-python&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;configfile&quot;</span>: <span class="hljs-string">&quot;/etc/selinux/config&quot;</span>,<br>    <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;Config SELinux state changed from &#x27;enforcing&#x27; to &#x27;disabled&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;policy&quot;</span>: <span class="hljs-string">&quot;targeted&quot;</span>,<br>    <span class="hljs-string">&quot;reboot_required&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;disabled&quot;</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="reboot-模块"><a href="#reboot-模块" class="headerlink" title="reboot 模块"></a>reboot 模块</h3><p>功能: 重启<br>常见选项</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">msg <span class="hljs-comment">#重启提示</span><br>pre_reboot_delay <span class="hljs-comment">#重启前延迟时间的秒数</span><br>post_reboot_delay <span class="hljs-comment">#重启后延迟时间的秒数后,再验证系统正常启动</span><br>reboot_timeout <span class="hljs-comment">#重启后延迟时间再执行测试成功与否的命令</span><br>test_<span class="hljs-keyword">command</span> <span class="hljs-comment">#执行测试成功与否的命令</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@ansible ~]</span><span class="hljs-selector-id">#ansible</span> websrvs -m reboot -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&#x27;msg=&quot;host will be reboot&quot;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="mount-模块"><a href="#mount-模块" class="headerlink" title="mount 模块"></a>mount 模块</h3><p>功能: 挂载和卸载文件系统<br>常见选项</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs excel">src #源设备路径，或网络地址<br>path #挂载至本地哪个路径下<br>fstype #设备类型； nfs<br>opts #挂载的选项<br>state #挂载还是卸载<br>=present #永久挂载，但没有立即生效<br>=absent #卸载临时挂载,并删除永久挂载<br>=mounted #临时挂载<br>=unmounted #临时卸载<br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-comment">#修改fstab文件永久挂载,但不立即生效</span><br>mount websrvs -m mount -a &#x27;src=<span class="hljs-string">&quot;UUID=b3e48f45-f933-4c8e-a700-22a159ec9077&quot;</span> path=/home fstype=xfs opts=noatime <span class="hljs-keyword">state</span>=present&#x27;<br><span class="hljs-comment">#临时取消挂载</span><br>mount websrvs -m mount -a &#x27;path=/home fstype=xfs opts=noatime <span class="hljs-keyword">state</span>=unmounted&#x27;<br><span class="hljs-comment">#永久挂载,并立即生效</span><br>ansible websrvs -m mount -a &#x27;src=<span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span>:/data/wordpress path=/var/www/html/wp- content/uploads opts=<span class="hljs-string">&quot;_netdev&quot;</span> <span class="hljs-keyword">state</span>=mounted&#x27;<br><span class="hljs-comment">#永久卸载,并立即生效</span><br>ansible websrvs -m mount -a &#x27;src=<span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span>:/data/wordpress path=/var/www/html/wp- content/uploads <span class="hljs-keyword">state</span>=absent&#x27;<br></code></pre></td></tr></table></figure><h3 id="Setup-模块"><a href="#Setup-模块" class="headerlink" title="Setup 模块"></a>Setup 模块</h3><p>功能： setup 模块来收集主机的系统信息，这些 facts 信息可以直接以变量的形式使用，但是如果主机<br>较多，会影响执行速度<br>可以使用 gather_facts: no 来禁止 Ansible 收集 facts 信息<br>常见选项</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs golo"><span class="hljs-keyword">filter</span> <span class="hljs-comment">#指定过滤条件</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible <span class="hljs-attribute">all</span> -m setup<br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_nodename&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_hostname&quot;</span>  #  主机名称<br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_domain&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_memtotal_mb&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_memory_mb&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_memfree_mb&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_os_family&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_distribution&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_distribution_major_version&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_distribution_version&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_processor_vcpus&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_all_ipv4_addresses&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_architecture&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_uptime_seconds&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&quot;filter=ansible_processor*&quot;</span><br>ansible <span class="hljs-attribute">all</span> -m setup -a <span class="hljs-string">&#x27;filter=ansible_env&#x27;</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#ansible all -m setup -a &#x27;filter=ansible_python_version&#x27;</span><br><span class="hljs-meta prompt_">10.0.0.7 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;ansible_python_version&quot;</span>: <span class="hljs-string">&quot;2.7.5&quot;</span>,<br><span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-meta prompt_">10.0.0.6 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;ansible_python_version&quot;</span>: <span class="hljs-string">&quot;2.6.6&quot;</span>,<br><span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/bin/python&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-meta prompt_">10.0.0.8 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;ansible_python_version&quot;</span>: <span class="hljs-string">&quot;3.6.8&quot;</span>,<br><span class="hljs-string">&quot;discovered_interpreter_python&quot;</span>: <span class="hljs-string">&quot;/usr/libexec/platform-python&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br>[root<span class="hljs-variable">@ansible</span> ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>范例：取IP地址</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#取所有IP</span><br>ansible <span class="hljs-number">10.0</span>.<span class="hljs-number">0.101</span> -m setup -a <span class="hljs-string">&#x27;filter=ansible_all_ipv4_addresses&#x27;</span><br><span class="hljs-meta prompt_">10.0.0.101 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;ansible_all_ipv4_addresses&quot;</span>: [<br><span class="hljs-string">&quot;192.168.0.1&quot;</span>,<br><span class="hljs-string">&quot;192.168.0.2&quot;</span>,<br><span class="hljs-string">&quot;192.168.64.238&quot;</span>,<br><span class="hljs-string">&quot;192.168.13.36&quot;</span>,<br><span class="hljs-string">&quot;10.0.0.101&quot;</span>,<br><span class="hljs-string">&quot;172.16.1.0&quot;</span>,<br><span class="hljs-string">&quot;172.17.0.1&quot;</span><br>]<br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-comment">#取默认IP</span><br>ansible all -m setup -a <span class="hljs-string">&#x27;filter=&quot;ansible_default_ipv4&quot;&#x27;</span><br><span class="hljs-meta prompt_">10.0.0.101 | SUCCESS =&gt;</span> &#123;<br><span class="hljs-string">&quot;ansible_facts&quot;</span>: &#123;<br><span class="hljs-string">&quot;ansible_default_ipv4&quot;</span>: &#123;<br><span class="hljs-string">&quot;address&quot;</span>: <span class="hljs-string">&quot;10.0.0.101&quot;</span>,<br><span class="hljs-string">&quot;alias&quot;</span>: <span class="hljs-string">&quot;eth0&quot;</span>,<br><span class="hljs-string">&quot;broadcast&quot;</span>: <span class="hljs-string">&quot;10.0.0.255&quot;</span>,<br><span class="hljs-string">&quot;gateway&quot;</span>: <span class="hljs-string">&quot;10.0.0.2&quot;</span>,<br><span class="hljs-string">&quot;interface&quot;</span>: <span class="hljs-string">&quot;eth0&quot;</span>,<br><span class="hljs-string">&quot;macaddress&quot;</span>: <span class="hljs-string">&quot;00:0c:29:e8:c7:9b&quot;</span>,<br><span class="hljs-string">&quot;mtu&quot;</span>: <span class="hljs-number">1500</span>,<br><span class="hljs-string">&quot;netmask&quot;</span>: <span class="hljs-string">&quot;255.255.255.0&quot;</span>,<br><span class="hljs-string">&quot;network&quot;</span>: <span class="hljs-string">&quot;10.0.0.0&quot;</span>,<br><span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;ether&quot;</span><br>&#125;<br>&#125;,<br><span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="debug-模块"><a href="#debug-模块" class="headerlink" title="debug 模块"></a>debug 模块</h3><p>功能: 此模块可以用于输出信息,并且通过 msg 定制输出的信息内容,功能类似于echo命令<br>注意: msg后面的变量有时需要加 “ “ 引起来<br>常见选项</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs axapta">msg <span class="hljs-meta">#指定命令输出的信息</span><br><span class="hljs-built_in">var</span> <span class="hljs-meta">#指定变量名,和msg互斥</span><br>verbosity <span class="hljs-meta">#详细度</span><br></code></pre></td></tr></table></figure><p>范例: debug 模块默认输出Hello world</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@ansible ~]#ansible 10.0.0.18 -m debug<br>10.0.0.18 | SUCCESS =&gt; &#123;<br>&quot;msg&quot;: &quot;Hello world!&quot;<br>&#125;<br><span class="hljs-section">[root@ansible ansible]#cat debug.yml</span><br><span class="hljs-section">---</span><br><span class="hljs-bullet">-</span> hosts: websrvs<br>tasks:<br><span class="hljs-bullet">-</span> name: output Hello world<br>debug:<br><span class="hljs-section">#默认没有指定msg,默认输出&quot;Hello world!&quot;</span><br>[root@ansible ansible]#ansible-playbook debug.yml<br>.....<br>TASK [output variables]<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span><br><span class="hljs-strong">ok: [10.0.0.7] =&gt; &#123;</span><br><span class="hljs-strong">&quot;msg&quot;: &quot;Hello world!&quot;</span><br><span class="hljs-strong">&#125;</span><br><span class="hljs-strong">ok: [10.0.0.8] =&gt; &#123;</span><br><span class="hljs-strong">&quot;msg&quot;: &quot;Hello world!&quot;</span><br><span class="hljs-strong">&#125;</span><br><span class="hljs-strong">PLAY RECAP</span><br><span class="hljs-strong">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span><br><span class="hljs-strong">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">*</span><br><span class="hljs-emphasis">10.0.0.7 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="hljs-emphasis">skipped=0 rescued=0 ignored=0</span><br><span class="hljs-emphasis">10.0.0.8 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="hljs-emphasis">skipped=0 rescued=0 ignored=0</span><br></code></pre></td></tr></table></figure><p>范例: 利用debug 模块输出变量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">[root@centos8 ~]#cat debug.yaml</span><br><span class="hljs-section">---</span><br><span class="hljs-bullet">-</span> hosts: websrvs<br>tasks:<br><span class="hljs-bullet">-</span> name: output variables<br>debug:<br>msg: Host &quot;&#123;&#123; ansible<span class="hljs-emphasis">_nodename &#125;&#125;&quot; Ip &quot;&#123;&#123; ansible_</span>default<span class="hljs-emphasis">_ipv4.address</span><br><span class="hljs-emphasis">&#125;&#125;&quot;</span><br><span class="hljs-emphasis">[root@centos8 ~]#ansible-playbook debug.yaml</span><br><span class="hljs-emphasis">PLAY [websrvs]</span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">***</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">TASK [Gathering Facts]</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis">ok: [10.0.0.7]</span><br><span class="hljs-emphasis">ok: [10.0.0.8]</span><br><span class="hljs-emphasis">TASK [output variables]</span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [10.0.0.7] =&gt; &#123;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&quot;msg&quot;: &quot;Host \&quot;centos7.wangxiaochun.com\&quot; Ip \&quot;10.0.0.7\&quot;&quot;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&#125;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">ok: [10.0.0.8] =&gt; &#123;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&quot;msg&quot;: &quot;Host \&quot;centos8.wangxiaochun.com\&quot; Ip \&quot;10.0.0.8\&quot;&quot;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">&#125;</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">PLAY RECAP</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span></span><br><span class="hljs-strong"><span class="hljs-emphasis">**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span><br><span class="hljs-emphasis">10.0.0.7 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="hljs-emphasis">skipped=0 rescued=0 ignored=0</span><br><span class="hljs-emphasis">10.0.0.8 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="hljs-emphasis">skipped=0 rescued=0 ignored=0</span><br></code></pre></td></tr></table></figure><p>范例: 显示字符串特定字符</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># cat debug.yml</span><br>- hosts: all<br><span class="hljs-symbol">  gather_facts:</span> no<br><span class="hljs-symbol">  vars:</span><br><span class="hljs-symbol">    a:</span> <span class="hljs-string">&quot;12345&quot;</span><br><span class="hljs-symbol">  tasks:</span><br>  - debug:<br><span class="hljs-symbol">    msg:</span><br>      - <span class="hljs-string">&quot;&#123;&#123;a[0]&#125;&#125;&quot;</span><br>      - <span class="hljs-string">&quot;&#123;&#123;a[1]&#125;&#125;&quot;</span><br>      - <span class="hljs-string">&quot;&#123;&#123;a[2]&#125;&#125;&quot;</span><br><span class="hljs-meta">#定义了一个字符串变量a，如果想要获取a字符串的第3个字符，则可以使用”a[2]”获取，索引从0开始，执行上例playbook，debug的输出信息如下：</span><br>TASK [debug] *************************<br><span class="hljs-symbol">ok:</span> [test1] =&gt; <span class="hljs-punctuation">&#123;</span><br><span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;1&quot;</span><br><span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;2&quot;</span><br><span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;3&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="sysctl-模块"><a href="#sysctl-模块" class="headerlink" title="sysctl 模块"></a>sysctl 模块</h3><p>功能: 修改内核参数<br>常见选项</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">name <span class="hljs-comment">#内核参数</span><br>value <span class="hljs-comment">#指定值</span><br><span class="hljs-keyword">state</span> <span class="hljs-comment">#是否保存在sysctl.conf文件中,默认present</span><br>sysctl_set <span class="hljs-comment">#使用sysctl -w 验证值生效</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible websrvs -m sysctl -a &#x27;name=net.ipv4.ip_forward value=<span class="hljs-number">1</span> <span class="hljs-keyword">state</span>=present&#x27;<br></code></pre></td></tr></table></figure><p>范例: 内核参数优化</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Change</span> <span class="hljs-string">Port</span> <span class="hljs-string">Range</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.ip_local_port_range</span><br><span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;1024 65000&#x27;</span><br><span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">Forward</span><br>  <span class="hljs-attr">sysctl:</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.ip_forward</span><br><span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;1&#x27;</span><br><span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">tcp_reuse</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.tcp_tw_reuse</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chanage</span> <span class="hljs-string">tcp</span> <span class="hljs-string">tw_buckets</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.tcp_max_tw_buckets</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;5000&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chanage</span> <span class="hljs-string">tcp_syncookies</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.tcp_syncookies</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chanage</span> <span class="hljs-string">tcp</span> <span class="hljs-string">max_syn_backlog</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.tcp_max_syn_backlog</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;8192&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chanage</span> <span class="hljs-string">tcp</span> <span class="hljs-string">Established</span> <span class="hljs-string">Maxconn</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.core.somaxconn</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;32768&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chanage</span> <span class="hljs-string">tcp_syn_retries</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.tcp_syn_retries</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;2&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Chanage</span> <span class="hljs-string">net.ipv4.tcp_synack_retries</span><br>  <span class="hljs-attr">sysctl:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">net.ipv4.tcp_synack_retries</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;2&#x27;</span><br>    <span class="hljs-attr">sysctl_set:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">presen</span><br></code></pre></td></tr></table></figure><h3 id="pam-limits"><a href="#pam-limits" class="headerlink" title="pam_limits"></a>pam_limits</h3><p>功能: 管理资源限制<br>范例</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Change</span> <span class="hljs-string">Limit</span> <span class="hljs-string">/etc/security/limit.conf</span><br>  <span class="hljs-attr">pam_limits:</span><br>  <span class="hljs-attr">domain:</span> <span class="hljs-string">&quot;*&quot;</span><br>    <span class="hljs-attr">limit_type:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.limit_type &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">limit_item:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.limit_item &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.value &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">limit_type:</span> <span class="hljs-string">&#x27;soft&#x27;</span>, <span class="hljs-attr">limit_item:</span> <span class="hljs-string">&#x27;nofile&#x27;</span>,<span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;100000&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">limit_type:</span> <span class="hljs-string">&#x27;hard&#x27;</span>, <span class="hljs-attr">limit_item:</span> <span class="hljs-string">&#x27;nofile&#x27;</span>,<span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;10000&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><h3 id="apt-repository-模块"><a href="#apt-repository-模块" class="headerlink" title="apt_repository 模块"></a>apt_repository 模块</h3><p>功能: 此模块实现apt的仓库配置管理<br>常见选项</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">repo <span class="hljs-comment">#仓库信息</span><br><span class="hljs-keyword">state</span> <span class="hljs-comment">#添加或删除</span><br>update_cache <span class="hljs-comment">#是否apt update,默认yes</span><br>filename <span class="hljs-comment">#仓库文件,默认放在/etc/apt/sources.list.d/file.list</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> ubuntu-servers -m apt_repository -a <span class="hljs-string">&#x27;repo=&quot;deb</span><br><span class="hljs-string">http://archive.canonical.com/ubuntu focal partner&quot; filename=google-chrome&#x27;</span><br>[root<span class="hljs-variable">@ubuntu2004</span> ~]<span class="hljs-comment">#cat /etc/apt/sources.list.d/google-chrome.list</span><br>deb http://archive.canonical.com/ubuntu focal partner<br></code></pre></td></tr></table></figure><h3 id="apt-key-模块"><a href="#apt-key-模块" class="headerlink" title="apt_key 模块"></a>apt_key 模块</h3><p>功能: 添加和删除apt key<br>常见选项</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">url <span class="hljs-comment">#key路径</span><br><span class="hljs-keyword">state</span> <span class="hljs-comment">#添加或删除</span><br></code></pre></td></tr></table></figure><p>范例: 生成ceph仓库配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#先导入key,注意先后顺序</span><br><span class="hljs-attribute">ansible</span> ubuntu-servers -m apt_key -a<br><span class="hljs-string">&#x27;url=https://download.ceph.com/keys/release.asc state=present&#x27;</span><br><span class="hljs-comment">#再生成apt配置,如果不导入key此步会出错</span><br>ansible ubuntu-servers -m apt_repository -a <span class="hljs-string">&#x27;repo=&quot;deb</span><br><span class="hljs-string">http://mirror.tuna.tsinghua.edu.cn/ceph/debian-pacific focal main&quot;</span><br><span class="hljs-string">filename=ansible_ceph&#x27;</span><br><span class="hljs-comment">#验证结果</span><br>[root<span class="hljs-variable">@ubuntu2004</span> ~]<span class="hljs-comment">#cat /etc/apt/sources.list.d/ansible_ceph.list</span><br>deb http://mirror.tuna.tsinghua.edu.cn/ceph/debian-pacific focal main<br></code></pre></td></tr></table></figure><h3 id="其它模块"><a href="#其它模块" class="headerlink" title="其它模块"></a>其它模块</h3><p>ansible 还提供了很多针对各种应用的模块,比如</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nginx_status_info</span><br>nginx_status_facts<br>mysql_db <span class="hljs-comment">#需要安装MySQL-python包</span><br>mysql_user <span class="hljs-comment">#需要安装MySQL-python包</span><br>redis<br>mongodb*<br>postgresql*<br>haproxy<br>git<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Ansible</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Nginx核心配置文件</title>
    <link href="/2023/01/10/Nginx%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <url>/2023/01/10/Nginx%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="Nginx核心配置文件"><a href="#Nginx核心配置文件" class="headerlink" title="Nginx核心配置文件"></a>Nginx核心配置文件</h1><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><p>nginx官网文档说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://nginx.org/en/docs/<br></code></pre></td></tr></table></figure><p>tengine帮助文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://tengine.taobao.org/nginx_docs/cn/docs<br></code></pre></td></tr></table></figure><p> Nginx的配置文件的组成部分： </p><p>主配置文件：nginx.conf </p><p>子配置文件: include conf.d&#x2F;*.conf </p><p>fastcgi， uwsgi，scgi 等协议相关的配置文件 mime.types：支持的mime类型，MIME(Multipurpose Internet Mail Extensions)多用途互联网邮 件扩展类型，MIME消息能包含文本、图像、音频、视频以及其他应用程序专用的数据，是设定某 种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动 使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。 MIME参考文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME</a>_ Types </p><p>nginx 配置文件格式说明 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">配置文件由指令与指令块构成<br>每条指令以;分号结尾，指令与值之间以空格符号分隔<br>可以将多条指令放在同一行,用分号分隔即可,但可读性差,不推荐<br>指令块以&#123; &#125;大括号将多条指令组织在一起,且可以嵌套指令块<br>include语句允许组合多个配置文件以提升可维护性<br>使用#符号添加注释，提高可读性<br>使用$符号使用变量<br>部分指令的参数支持正则表达式<br></code></pre></td></tr></table></figure><p>Nginx主配置文件的配置指令方式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">directive value [value2 ...];<br>注意<br>(1) 指令必须以分号结尾<br>(2) 支持使用配置变量<br> 内建变量：由Nginx模块引入，可直接引用<br> 自定义变量：由用户使用set命令定义,格式: set variable_name value;<br> 引用变量：$variable_name<br></code></pre></td></tr></table></figure><p>主配置文件结构：四部分</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text">main block：主配置段，即全局配置段，对http,mail都有效<br>#事件驱动相关的配置<br>event &#123;<br> ...<br>&#125;  <br>#http/https 协议相关配置段<br>http &#123;<br> ...<br>&#125;          <br>#默认配置文件不包括下面两个块<br>#mail 协议相关配置段<br>mail &#123;<br> ...<br>&#125;    <br>#stream 服务器相关配置段<br>stream &#123;<br> ...<br>&#125; <br><br></code></pre></td></tr></table></figure><p>默认的nginx.conf配置文件格式说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs text">#全局配置端，对全局生效，主要设置nginx的启动用户/组，启动的工作进程数量，工作模式，Nginx的PID<br>路径，日志路径等。<br>user nginx nginx;<br>worker_processes  1;   #启动工作进程数数量<br>events &#123; #events设置快，主要影响nginx服务器与用户的网络连接，比如是否允许同时接受多个网络连<br>接，使用哪种事件驱动模型处理请求，每个工作进程可以同时支持的最大连接数，是否开启对多工作进程下的<br>网络连接进行序列化等。<br>     worker_connections  1024;   #设置单个nginx工作进程可以接受的最大并发，作为web服务器<br>的时候最大并发数为worker_connections * worker_processes，作为反向代理的时候为<br>(worker_connections * worker_processes)/2<br>&#125;<br>http &#123; #http块是Nginx服务器配置中的重要部分，缓存、代理和日志格式定义等绝大多数功能和第三方模<br>块都可以在这设置，http块可以包含多个server块，而一个server块中又可以包含多个location块，<br>server块可以配置文件引入、MIME-Type定义、日志自定义、是否启用sendfile、连接超时时间和单个链<br>接的请求上限等。<br>   include       mime.types;<br>   default_type application/octet-stream;<br>   sendfile       on; #作为web服务器的时候打开sendfile加快静态文件传输，指定是否使用<br>sendfile系统调用来传输文件,sendfile系统调用在两个文件描述符之间直接传递数据(完全在内核中操<br>作)，从而避免了数据在内核缓冲区和用户缓冲区之间的拷贝，操作效率很高，被称之为零拷贝，硬盘 &gt;&gt;<br>kernel buffer (快速拷贝到kernelsocket buffer) &gt;&gt;协议栈。<br>   keepalive_timeout  65;  #长连接超时时间，单位是秒<br>   server &#123; #设置一个虚拟机主机，可以包含自己的全局快，同时也可以包含多个location模块。比如<br>本虚拟机监听的端口、本虚拟机的名称和IP配置，多个server 可以使用一个端口，比如都使用80端口提供<br>web服务、<br>       listen       80;  #配置server监听的端口<br>       server_name localhost; #本server的名称，当访问此名称的时候nginx会调用当前<br>serevr内部的配置进程匹配。<br>       location / &#123; #location其实是server的一个指令，为nginx服务器提供比较多而且灵活的指<br>令，都是在location中体现的，主要是基于nginx接受到的请求字符串，对用户请求的UIL进行匹配，并对特<br>定的指令进行处理，包括地址重定向、数据缓存和应答控制等功能都是在这部分实现，另外很多第三方模块的<br>配置也是在location模块中配置。<br>           root   html; #相当于默认页面的目录名称，默认是安装目录的相对路径，可以使用绝对路<br>径配置。<br>           index index.html index.htm; #默认的页面文件名称<br>       &#125;<br>       error_page   500 502 503 504 /50x.html; #错误页面的文件名称<br>       location = /50x.html &#123; #location处理对应的不同错误码的页面定义到/50x.html，这个<br>跟对应其server中定义的目录下。<br>           root   html;  #定义默认页面所在的目录<br>       &#125;<br>   &#125;<br>    <br>#和邮件相关的配置<br>#mail &#123;<br>#               ...<br>#       &#125;         mail 协议相关配置段<br>#tcp代理配置，1.9版本以上支持<br>#stream &#123;<br>#               ...<br>#       &#125;       stream 服务器相关配置段<br>#导入其他路径的配置文件<br>#include /apps/nginx/conf.d/*.conf<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p> Main 全局配置段常见的配置指令分类 </p><ul><li>正常运行必备的配置</li><li>优化性能相关的配置</li><li>用于调试及定位问题相关的配置</li><li>事件驱动相关的配置</li></ul><p>全局配置说明: </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs text">user nginx nginx; #启动Nginx工作进程的用户和组<br>worker_processes [number | auto]; #启动Nginx工作进程的数量,一般设为和CPU核心数相同<br>worker_cpu_affinity 00000001 00000010 00000100 00001000 | auto ; #将Nginx工作进程绑<br>定到指定的CPU核心，默认Nginx是不进行进程绑定的，绑定并不是意味着当前nginx进程独占以一核心CPU，<br>但是可以保证此进程不会运行在其他核心上，这就极大减少了nginx的工作进程在不同的cpu核心上的来回跳<br>转，减少了CPU对进程的资源分配与回收以及内存管理等，因此可以有效的提升nginx服务器的性能。<br><br>CPU MASK: 00000001：0号CPU<br>          00000010：1号CPU<br>  10000000：7号CPU<br>#示例:<br>worker_cpu_affinity 0001 0010 0100 1000;第0号---第3号CPU<br>worker_cpu_affinity 0101 1010;<br>#示例<br>worker_processes  4;<br>worker_cpu_affinity 00000010 00001000 00100000 10000000;<br>[root@centos8 ~]# ps axo pid,cmd,psr | grep nginx<br>31093 nginx: master process /apps   1<br>34474 nginx: worker process         1<br>34475 nginx: worker process         3<br>34476 nginx: worker process         5<br>34477 nginx: worker process         7<br>35751 grep nginx<br>#auto 绑定CPU<br>#The special value auto (1.9.10) allows binding worker processes automatically to<br>available CPUs:<br>worker_processes auto;<br>worker_cpu_affinity auto;<br>#The optional mask parameter can be used to limit the CPUs available for<br>automatic binding:<br>worker_cpu_affinity auto 01010101;<br>#错误日志记录配置，语法：error_log file [debug | info | notice | warn | error | crit<br>| alert | emerg]<br>#error_log logs/error.log;<br>#error_log logs/error.log notice;<br>error_log /usr/local/src/nginx/logs/error.log error;<br>#pid文件保存路径<br>pid       /usr/local/src/nginx/logs/nginx.pid;<br>worker_priority 0; #工作进程优先级，-20~20(19)<br>worker_rlimit_nofile 65536; #所有worker进程能打开的文件数量上限,包括:Nginx的所有连接（例<br>如与代理服务器的连接等），而不仅仅是与客户端的连接,另一个考虑因素是实际的并发连接数不能超过系统级<br>别的最大打开文件数的限制.最好与ulimit -n 或者limits.conf的值保持一致,<br>daemon off;  #前台运行Nginx服务用于测试、或者以容器运行时，需要设为off<br>master_process off|on; #是否开启Nginx的master-worker工作模式，仅用于开发调试场景,默认为<br>on<br>events &#123;<br>   worker_connections  65536;  #设置单个工作进程的最大并发连接数<br>   use epoll; #使用epoll事件驱动，Nginx支持众多的事件驱动，比如:select、poll、epoll，只<br>能设置在events模块中设置。<br>   accept_mutex on; #on为同一时刻一个请求轮流由worker进程处理,而防止被同时唤醒所有<br>worker,避免多个睡眠进程被唤醒的设置，默认为off，新请求会唤醒所有worker进程,此过程也称为&quot;惊<br>群&quot;，因此nginx刚安装完以后要进行适当的优化。建议设置为on<br>   multi_accept on; #on时Nginx服务器的每个工作进程可以同时接受多个新的网络连接，此指令默认<br>为off，即默认为一个工作进程只能一次接受一个新的网络连接，打开后几个同时接受多个。建议设置为on<br>&#125;<br></code></pre></td></tr></table></figure><p>范例：实现nginx高并发配置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]#ulimit -n 102400<br>[root@centos7 ~]#while true;do ab -c 5000 -n 10000 http://10.0.0.8/;sleep<br>0.5;done<br>#默认配置不支持高并发,会出现以下错误日志<br>[root@centos8 conf]#tail /usr/local/src/nginx/logs/error.log<br>2020/09/24 21:19:33 [crit] 41006#0: *1105860 open() &quot;/apps/nginx/html/50x.html&quot;<br>failed (24: Too many open files), client: 10.0.0.7, server: localhost, request:<br>&quot;GET / HTTP/1.0&quot;, host: &quot;10.0.0.8&quot;<br>2020/09/24 21:19:33 [crit] 41006#0: accept4() failed (24: Too many open files)<br>2020/09/24 21:19:33 [crit] 41006#0: *1114177 open()<br>&quot;/apps/nginx/html/index.html&quot; failed (24: Too many open files), client: 10.0.0.7,<br>server: localhost, request: &quot;GET / HTTP/1.0&quot;, host: &quot;10.0.0.8&quot;<br>#如果systemd启动,则需要修改nginx.service文件中加LimitNOFILE=100000,才能有效<br>#如果非systemd启动,可以修改下面pam限制<br>[root@centos8 ~]#vim /etc/security/limits.conf<br>*               soft   nofile          1000000<br>*               hard   nofile          1000000<br>[root@centos8 ~]#vim /apps/nginx/conf/nginx.conf<br>worker_rlimit_nofile 100000;<br>[root@centos8 ~]#systemctl restart nginx<br>[root@centos8 ~]# watch -n1 &#x27;ps -axo pid,cmd,nice | grep nginx #验证进程优先级<br></code></pre></td></tr></table></figure><h2 id="http配置块"><a href="#http配置块" class="headerlink" title="http配置块"></a>http配置块</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text">http &#123;<br> ...<br> ...  #各server的公共配置<br> server &#123;    #每个server用于定义一个虚拟主机,第一个server为默认虚拟服务器<br> ...<br> &#125;<br> server &#123;    <br> ...<br> server_name   #虚拟主机名<br> root     #主目录<br> alias     #路径别名<br> location [OPERATOR] URL &#123;     #指定URL的特性<br> ...<br> if CONDITION &#123;<br> ...<br> &#125;<br> &#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>http配置协议说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs text">http &#123;<br>   include       mime.types; #导入支持的文件类型,是相对于/usr/local/src/nginx/conf的目录<br>   default_type application/octet-stream; #除mime.types中文件类型外,设置其它文件默认<br>类型，访问其它类型时会提示下载不匹配的类型文件<br>#日志配置部分<br>    #log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;<br>    #                 &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;<br>    #                 &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;<br>    #access_log logs/access.log main;<br>#自定义优化参数<br>   sendfile       on;<br>    #tcp_nopush     on; #在开启了sendfile的情况下，合并请求后统一发送给客户端,必须开启<br>sendfile<br>    #tcp_nodelay   off; #在开启了keepalived模式下的连接是否启用TCP_NODELAY选项，当为<br>off时，延迟0.2s发送，默认On时，不延迟发送，立即发送用户响应报文。<br>    #keepalive_timeout 0;<br>   keepalive_timeout  65 65; #设置会话保持时间,第二个值为响应首部:keepAlived:timeout=65,可以和第一个值不同<br>    #gzip on; #开启文件压缩<br>   server &#123;<br>       listen       80; #设置监听地址和端口<br>       server_name localhost; #设置server name，可以以空格隔开写多个并支持正则表达式，<br>如:*.magedu.com www.magedu.* ~^www\d+\.magedu\.com$ default_server<br>        #charset koi8-r; #设置编码格式，默认是俄语格式，建议改为utf-8<br>        #access_log logs/host.access.log main;<br>       location / &#123;<br>           root   html;<br>           index index.html index.htm;<br>       &#125;<br>        #error_page 404             /404.html;<br>        # redirect server error pages to the static page /50x.html<br>        #<br>       error_page   500 502 503 504 /50x.html; #定义错误页面<br>       location = /50x.html &#123;<br>           root   html;<br>       &#125;<br>        # proxy the PHP scripts to Apache listening on 127.0.0.1:80<br>        #<br>        #location ~ \.php$ &#123; #以http的方式转发php请求到指定web服务器<br>        #   proxy_pass   http://127.0.0.1;<br>        #&#125;<br>        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000<br>        #<br>        #location ~ \.php$ &#123; #以fastcgi的方式转发php请求到php处理<br>        #   root           html;<br>        #   fastcgi_pass   127.0.0.1:9000;<br>        #   fastcgi_index index.php;<br>        #   fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;<br>        #   include       fastcgi_params;<br>        #&#125;<br>         # deny access to .htaccess files, if Apache&#x27;s document root<br>        # concurs with nginx&#x27;s one<br>        #<br>        #location ~ /\.ht &#123; #拒绝web形式访问指定文件，如很多的网站都是通过.htaccess文件来<br>改变自己的重定向等功能。<br>        #   deny all;<br>        #&#125;<br>       location ~ /passwd.html &#123;<br>           deny all;<br>       &#125;<br>   &#125;<br>    # another virtual host using mix of IP-, name-, and port-based configuration<br>    #<br>    #server &#123; #自定义虚拟server<br>    #   listen       8000;<br>    #   listen       somename:8080;<br>    #   server_name somename alias another.alias;<br>    #   location / &#123;<br>    #       root   html;<br>    #       index index.html index.htm; #指定默认网页文件，此指令由<br>ngx_http_index_module模块提供<br>    #   &#125;<br>    #&#125;<br>    # HTTPS server<br>    #<br>    #server &#123; #https服务器配置<br>    #   listen       443 ssl;<br>    #   server_name localhost;<br>    #   ssl_certificate     cert.pem;<br>    #   ssl_certificate_key cert.key;<br>    #   ssl_session_cache   shared:SSL:1m;<br>    #   ssl_session_timeout 5m;<br>    #   ssl_ciphers HIGH:!aNULL:!MD5;<br>    #   ssl_prefer_server_ciphers on;<br>    #   location / &#123;<br>    #       root   html;<br>    #       index index.html index.htm;<br>    #   &#125;<br>    #&#125;<br></code></pre></td></tr></table></figure><h2 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a>MIME</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">#在响应报文中将指定的文件扩展名映射至MIME对应的类型<br>include           /etc/nginx/mime.types;<br>default_type     application/octet-stream;#除mime.types中的类型外，指定其它文件的默认<br>MIME类型，浏览器一般会提示下载<br>types &#123;<br>   text/html html;<br>   image/gif gif;<br>   image/jpeg jpg;<br>&#125;<br>#MIME参考文档：<br>https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_Types<br></code></pre></td></tr></table></figure><p>范例：识别PHP为text</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 conf]# vim /usr/local/src/nginx/html/test.php<br>&lt;?php<br>phpinfo();<br>?&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改配置文件</span><br>[root@centos7 conf]# vim /usr/local/src/nginx/conf/nginx.conf<br>http &#123;<br>   include       mime.types;<br>   default_type text/html; # 加入次行<br>......<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或者修改为下面</span><br>   include       mime.types;<br>   default_type application/octet-stream;<br>   types&#123;<br>       text/plain php;  #加此行<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="指定响应报文server首部"><a href="#指定响应报文server首部" class="headerlink" title="指定响应报文server首部"></a>指定响应报文server首部</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">#是否在响应报文中的Content-Type显示指定的字符集，默认off不显示<br>charset charset | off;<br>#示例<br>charset utf-8;<br>#是否在响应报文的Server首部显示nginx版本<br>server_tokens on | off | build | string;<br></code></pre></td></tr></table></figure><p>修改server字段</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">如果想自定义响应报文的nginx版本信息，需要修改源码文件，重新编译<br>如果server_tokens on，修改 src/core/nginx.h 修改第13-14行，如下示例<br>#define NGINX_VERSION     &quot;1.68.9&quot;<br>#define NGINX_VER         &quot;test/&quot; NGINX_VERSION<br>如果server_tokens off，修改 src/http/ngx_http_header_filter_module.c<br>第49行，如下示例：<br>static char ngx_http_server_string[] = &quot;Server: nginx&quot; CRLF;<br>把其中的nginx改为自己想要的文字即可,如：test<br></code></pre></td></tr></table></figure><h2 id="root-与-alias"><a href="#root-与-alias" class="headerlink" title="root 与 alias"></a>root 与 alias</h2><p>root：指定web的家目录，在定义location的时候，文件的绝对路径等于 root+location </p><p>alias：定义路径别名，会把访问的路径重新定义到其指定的路径,文档映射的另一种机制;仅能用于 location上下文,此指令使用较少 </p><p> 注意：location中使用root指令和alias指令的意义不同 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">root 给定的路径对应于location中的/uri 左侧的/<br>alias 给定的路径对应于location中的/uri 的完整路径<br></code></pre></td></tr></table></figure><h2 id="location-的详细使用"><a href="#location-的详细使用" class="headerlink" title="location 的详细使用"></a>location 的详细使用</h2><p>在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射；ngnix会根据用户请 求的URI来检查定义的所有location，按一定的优先级找出一个最佳匹配，而后应用其配置 </p><p>在没有使用正则表达式的时候，nginx会先在server中的多个location选取匹配度最高的一个uri，uri是 用户请求的字符串，即域名后面的web文件路径，然后使用该location模块中的正则url和字符串，如果 匹配成功就结束搜索，并使用此location处理此请求。</p><p>location 官方帮助:  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://nginx.org/en/docs/http/ngx_http_core_module.html#location<br></code></pre></td></tr></table></figure><p>语法规则</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">#语法规则：<br>location [ = | ~ | ~* | ^~ ] uri &#123; ... &#125;<br>=   #用于标准uri前，需要请求字串与uri精确匹配，大小敏感,如果匹配成功就停止向下匹配并立即处理请<br>求<br>^~  #用于标准uri前，表示包含正则表达式,并且匹配以指定的正则表达式开头,对uri的最左边部分做匹配<br>检查，不区分字符大小写<br>~   #用于标准uri前，表示包含正则表达式,并且区分大小写<br>~*  #用于标准uri前，表示包含正则表达式,并且不区分大写<br>不带符号 #匹配起始于此uri的所有的uri<br>\   #用于标准uri前，表示包含正则表达式并且转义字符。可以将 . * ?等转义为普通符号<br>#匹配优先级从高到低：<br>=, ^~, ~/~*, 不带符号<br></code></pre></td></tr></table></figure><p>官网案例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs text">location = / &#123;<br>   [ configuration A ]<br>&#125;<br>location / &#123;<br>   [ configuration B ]<br>&#125;<br>location /documents/ &#123;<br>   [ configuration C ]<br>&#125;<br>location ^~ /images/ &#123;<br>   [ configuration D ]<br>&#125;<br>location ~* \.(gif|jpg|jpeg)$ &#123;<br>   [ configuration E ]<br>&#125;<br>The “/” request will match configuration A(?), the “/index.html” request will<br>match configuration B,<br>the “/documents/document.html” request will match configuration C, the<br>“/images/1.gif” request will match configuration D, and the “/documents/1.jpg”<br>request will match configuration E.<br></code></pre></td></tr></table></figure><ul><li>精确匹配图片</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">server&#123;<br>listen 80;<br>server_name localhost;<br>root /data/web;<br>index index.html *.html;<br>location = /test.jpg &#123;<br>  root /data/image;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>匹配案例-文件名后缀</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">server&#123;<br>listen 80;<br>server_name localhost;<br>root /data/web;<br>index index.html *.html;<br>location ~* \.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|wmf|js|css)$ &#123;<br>  root /data/web1;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>匹配案例-优先级</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs text">server&#123;<br>        listen 80;<br>        server_name localhost;<br>        root /data/web;<br>        index index.html *.html;<br>        location = /test2.jpg &#123;<br>          root /data/web2;<br>          index index.html;<br>&#125;<br>        location ~* \.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|wmf|js|css)$ &#123;<br>          root /data/web1;<br>          index index.html;<br>&#125;<br>&#125;<br>#匹配优先级：=, ^~, ～/～*，/<br>location优先级：(location =) &gt; (location ^~ 路径) &gt; (location ~,~* 正则顺序) &gt;<br>(location 完整路径) &gt; (location 部分起始路径) &gt; (/)<br></code></pre></td></tr></table></figure><h2 id="Nginx-四层访问控制"><a href="#Nginx-四层访问控制" class="headerlink" title="Nginx 四层访问控制"></a>Nginx 四层访问控制</h2><p> 访问控制基于模块ngx_http_access_module实现，可以通过匹配客户端源IP地址进行限制 注意: 如果能在防火墙设备控制,最好就不要在nginx上配置,可以更好的节约资源 </p><p>官方帮助: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://nginx.org/en/docs/http/ngx_http_access_module.html<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">location = /login/ &#123;<br>   root /data/nginx/html/pc;<br>   allow 10.0.0.0/24;<br>   deny all;<br> &#125;<br>location /about &#123;<br>   alias /data/nginx/html/pc;<br>   index index.html;  <br>   deny  192.168.1.1;   # 禁止该IP访问<br>   allow 192.168.1.0/24;  # 允许该网段访问<br>   allow 10.1.1.0/16;<br>   allow 2001:0db8::/32;<br>   deny all;  #按先小范围到大范围排序<br> &#125;<br></code></pre></td></tr></table></figure><h2 id="Nginx-账户认证功能"><a href="#Nginx-账户认证功能" class="headerlink" title="Nginx 账户认证功能"></a>Nginx 账户认证功能</h2><p> 由 ngx_http_auth_basic_module 模块提供此功能 </p><p>官方帮助: </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html#auth_basic<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs text">#CentOS安装包<br>[root@centos7 ~]#yum -y install httpd-tools<br>#Ubuntu安装包<br>[root@Ubuntu ~]#apt -y install apache2-utils<br><br>#创建用户<br>#-b 非交互式方式提交密码<br>[root@centos7 ~]# htpasswd -cb /usr/local/src/nginx/conf.d/passwd admin 123456<br>Adding password for user admin<br><br>[root@centos7 conf.d]# cat passwd <br>admin:$apr1$/MugqAsJ$MbWcOmC5U9WTZlgK5MJeU.<br>[root@centos7 conf.d]# <br><br>#安全加固<br>[root@centos7 ~]# chown nginx.nginx /usr/local/src/nginx/conf.d/passwd<br>[root@centos7 ~]# chmod 600 /usr/local/src/nginx/conf.d/passwd<br><br># 修改配置文件<br>server&#123;<br>        listen 80;<br>        server_name localhost;<br>        root /data/web;<br>        index index.html *.html;<br>        location /about &#123;<br>          alias /data/web1;<br>          index index.html *.html;<br>          auth_basic           &quot;login password&quot;;<br>          auth_basic_user_file /usr/local/src/nginx/conf.d/passwd;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="检测文件是否存在"><a href="#检测文件是否存在" class="headerlink" title="检测文件是否存在"></a>检测文件是否存在</h2><p> try_files 会按顺序检查文件是否存在，返回第一个找到的文件或文件夹（结尾加斜线表示为文件夹）， 如果所有文件或文件夹都找不到，会进行一个内部重定向到最后一个参数。只有最后一个参数可以引起 一个内部重定向，之前的参数只设置内部URI的指向。最后一个参数是回退URI且必须存在，否则会出现 内部500错误。</p><p> 语法格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">Syntax: try_files file ... uri;<br>try_files file ... =code;<br>Default: —<br>Context: server, location<br></code></pre></td></tr></table></figure><p>范例： 如果不存在页面, 就转到default.html页面 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">server&#123;<br>listen 80;<br>server_name localhost;<br> root /data/web;<br>index index.html *.html;<br>location / &#123;<br>#如果不存在页面, 就转到default.html页面 <br> # try_files $uri  $uri.html $uri/index.html /about/default.html;<br> # 返回自定义状态码 489<br>  try_files $uri $uri/index.html $uri.html =489;<br>  index index.html *.html;<br><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="长连接配置"><a href="#长连接配置" class="headerlink" title="长连接配置"></a>长连接配置</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">keepalive_timeout timeout [header_timeout];  #设定保持连接超时时长，0表示禁止长连接，默<br>认为75s，通常配置在http字段作为站点全局配置<br>keepalive_requests number;  #在一次长连接上所允许请求的资源的最大数量，默认为1000次,建议适<br>当调大,比如:500<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">keepalive_requests 3;<br>keepalive_timeout  65 60;<br>#开启长连接后，返回客户端的会话保持时间为60s，单次长连接累计请求达到指定次数请求或65秒就会被断<br>开，第二个数字60为发送给客户端应答报文头部中显示的超时时间设置为60s：如不设置客户端将不显示超时<br>时间。<br>Keep-Alive:timeout=60  #浏览器收到的服务器返回的报文<br>#如果设置为0表示关闭会话保持功能，将如下显示：<br>Connection:close  #浏览器收到的服务器返回的报文<br></code></pre></td></tr></table></figure><h2 id="作为下载服务器配置"><a href="#作为下载服务器配置" class="headerlink" title="作为下载服务器配置"></a>作为下载服务器配置</h2><p> nginx_http_autoindex_module 模块处理以斜杠字符 “&#x2F;“ 结尾的请求，并生成目录列表,可以做为下载服务 配置使用 官方文档: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">Syntax:autoindex on | off;<br>Default:<br>autoindex off;<br>Context:http, server, location<br></code></pre></td></tr></table></figure><p>相关指令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">autoindex on | off;#自动文件索引功能，默为off<br>autoindex_exact_size on | off;  #计算文件确切大小（单位bytes），off 显示大概大小（单位<br>K、M)，默认on<br>autoindex_localtime on | off ; #显示本机时间而非GMT(格林威治)时间，默认off<br>autoindex_format html | xml | json | jsonp; #显示索引的页面文件风格，默认html<br>limit_rate rate; #限制响应客户端传输速率(除GET和HEAD以外的所有方法)，单位B/s,即<br>bytes/second，默认值0,表示无限制,此指令由ngx_http_core_module提供<br>set $limit_rate 4k; #也可以通变量限速,单位B/s,同时设置,此项优级高.Rate limit can also<br>be set in the $limit_rate variable, however, since version 1.17.0, this method is<br>not recommended:<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text"># 配置文件<br>location /download &#123;<br>   autoindex on;    #自动索引功能<br>   autoindex_exact_size   on; #计算文件确切大小（单位bytes），此为默认值,off只显示大概大<br>小（单位kb、mb、gb）  <br>   autoindex_localtime   on; #on表示显示本机时间而非GMT(格林威治)时间,默为为off显示GMT<br>时间<br>   limit_rate 1024k;   #限速,默认不限速<br>   root /data/web/download;<br> &#125;<br></code></pre></td></tr></table></figure><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">keepalive_disable none | browser ...;  <br>#对哪种浏览器禁用长连接<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs text">limit_except method ... &#123; ... &#125;，仅用于location<br>#禁止客户端使用除了指定的请求方法之外的其它方法,如果使用会出现403错误<br>method:GET, HEAD, POST, PUT, DELETE，MKCOL, COPY, MOVE, OPTIONS, PROPFIND,<br>PROPPATCH, LOCK, UNLOCK, PATCH<br>limit_except GET &#123;<br> allow 192.168.0.0/24;<br> allow 10.0.0.1;<br> deny all;<br>&#125;<br><br><br>#除了GET和HEAD 之外其它方法仅允许192.168.1.0/24网段主机使用<br>location /upload &#123;<br>       root /data/nginx/html/pc;<br>       index index.html;<br>       limit_except GET &#123;<br>           allow  10.0.0.6;<br>           deny all;<br>       &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx平滑升级</title>
    <link href="/2023/01/07/Nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/"/>
    <url>/2023/01/07/Nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="平滑升级流程"><a href="#平滑升级流程" class="headerlink" title="平滑升级流程"></a>平滑升级流程</h1><p><img src="/../image.assets/1673076066017.png" alt="1673076066017"></p><p><img src="/../image.assets/1673076087140.png" alt="1673076087140"></p><ul><li>将旧Nginx二进制文件换成新Nginx程序文件（注意先备份)</li><li>向master进程发送USR2信号启动新nginx进程</li><li>master进程修改pid文件名加上后缀.oldbin,成为nginx.pid.oldbin</li><li>master进程用新Nginx文件启动新master进程及worker子进程成为旧master的子进程,系统中将有新旧两个Nginx主进程和对应的worker子进程并存<br>当前新的请求仍然由旧Nginx的worker进程进行处理,将新生成的master进程的PID存放至新生成的<br>pid文件nginx.pid</li><li>向旧的Nginx服务进程发送WINCH信号，使旧的Nginx worker进程平滑停止</li><li>向旧master进程发送QUIT信号，关闭旧master，并删除Nginx.pid.oldbin文件</li><li>如果发现升级有问题,可以回滚∶向旧master发送HUP，向新master发送QUIT</li></ul><h1 id="范例：Nginx1-18-0版本升级到1-20-2"><a href="#范例：Nginx1-18-0版本升级到1-20-2" class="headerlink" title="范例：Nginx1.18.0版本升级到1.20.2"></a>范例：Nginx1.18.0版本升级到1.20.2</h1><h2 id="Nginx1-18-0编译安装"><a href="#Nginx1-18-0编译安装" class="headerlink" title="Nginx1.18.0编译安装"></a>Nginx1.18.0编译安装</h2><p>官方源码包下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://nginx.org/en/download.html<br></code></pre></td></tr></table></figure><p>范例：编译安装</p><ul><li><p>系统centos8.5</p></li><li><p>Nginx版本：1.18.0</p></li><li><p>安装扩展依赖</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# yum -y install gcc pcre-devel openssl-devel zlib-devel<br></code></pre></td></tr></table></figure><ul><li>创建用户和组</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">groupadd nginx<br>useradd -s /sbin/nologin -g nginx nginx<br></code></pre></td></tr></table></figure><ul><li>下载安装包并解压</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# cd /usr/local/src/<br>[root@centos8 ~]# wget https://nginx.org/download/nginx-1.18.0.tar.gz<br>[root@centos8 src]# tar xf nginx-1.18.0.tar.gz <br>[root@centos8 src]# cd nginx-1.18.0<br></code></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 nginx-1.18.0]# ./configure --prefix=/usr/local/src/nginx/ \  # 安装位置<br>--user=nginx \   # 运行的用户<br>--group=nginx \<br>--with-http_ssl_module \<br>--with-http_v2_module \<br>--with-http_realip_module \<br>--with-http_stub_status_module \<br>--with-http_gzip_static_module \<br>--with-pcre \<br>--with-stream \<br>--with-stream_ssl_module<br><br>[root@centos8 nginx-1.18.0]#make &amp;&amp; make install<br></code></pre></td></tr></table></figure><ul><li>修改权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 /]# chown -R nginx.nginx /usr/local/src/nginx/<br></code></pre></td></tr></table></figure><ul><li>nginx安装完成后有四个主要的目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 /]# ll /usr/local/src/nginx/<br>total 4<br>drwxr-xr-x. 2 nginx nginx 4096 Jan  4 15:17 conf<br>drwxr-xr-x. 2 nginx nginx   40 Jan  4 15:17 html<br>drwxr-xr-x. 2 nginx nginx    6 Jan  4 15:17 logs<br>drwxr-xr-x. 2 nginx nginx   19 Jan  4 15:17 sbin<br>[root@centos8 /]# <br>conf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他<br>的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和<br>fastcgi_params两个文件，配置文件一般都有一个样板配置文件，是以.default为后缀，使用时可将其复<br>制并将default后缀去掉即可。<br>html目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web<br>文件是默认的错误页面提示页面。<br>logs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他<br></code></pre></td></tr></table></figure><ul><li>验证版本及编译参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 /]# ln -s /usr/local/src/nginx/sbin/nginx /usr/bin/<br>[root@centos8 /]# nginx -V<br>nginx version: nginx/1.18.0<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-4) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/usr/local/src/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module<br>[root@centos8 /]# <br></code></pre></td></tr></table></figure><ul><li>创建Nginx启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">复制同一版本的nginx的yum安装生成的service文件</span><br>[root@centos8 ~]# vim /lib/systemd/system/nginx.service <br><br>[Unit]<br>Description=nginx - high performance web server <br>Documentation=http://nginx.org/en/docs/<br>After=network.target<br><br>[Service] <br>Type=forking<br>PIDFile=/usr/local/src/nginx/logs/nginx.pid<br>ExecStartPre=/usr/local/src//nginx/sbin/nginx -t -c /usr/local/src/nginx/conf/nginx.conf<br>ExecStart=/usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>ExecReload=/bin/kill -s HUP $MAINPID <br>ExecStop=/bin/kill -s QUIT $MAINPID<br>PrivateTmp=true<br><br>[Install] <br>WantedBy=multi-user.target<br><br></code></pre></td></tr></table></figure><ul><li>验证启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#systemctl daemon-reload<br>[root@centos8 ~]#systemctl enable --now nginx<br>Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><ul><li>查看Nginx运行状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# systemctl status nginx<br>● nginx.service - nginx - high performance web server<br>   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Wed 2023-01-04 17:53:00 CST; 2 days ago<br>     Docs: http://nginx.org/en/docs/<br> Main PID: 1595 (nginx)<br>    Tasks: 2 (limit: 11218)<br>   Memory: 9.1M<br>   CGroup: /system.slice/nginx.service<br>           ├─1595 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>           └─1596 nginx: worker process<br><br>Jan 04 17:53:00 centos8 systemd[1]: Starting nginx - high performance web server...<br>Jan 04 17:53:00 centos8 nginx[1592]: nginx: the configuration file /usr/local/src/nginx/conf/nginx.conf syntax is ok<br>Jan 04 17:53:00 centos8 nginx[1592]: nginx: configuration file /usr/local/src/nginx/conf/nginx.conf test is successful<br>Jan 04 17:53:00 centos8 systemd[1]: nginx.service: Failed to parse PID from file /usr/local/src/nginx/logs/nginx.pid: Invalid argument<br>Jan 04 17:53:00 centos8 systemd[1]: Started nginx - high performance web server.<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h2 id="编译Nginx1-20-2"><a href="#编译Nginx1-20-2" class="headerlink" title="编译Nginx1.20.2"></a>编译Nginx1.20.2</h2><ul><li>下载Nginx1.20.2</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# cd /usr/local/src/<br>[root@centos8 src]# wget https://nginx.org/download/nginx-1.20.2.tar.gz<br>[root@centos8 src]# tar xf nginx-1.20.2.tar.gz<br></code></pre></td></tr></table></figure><ul><li>查看旧版本Nginx编译选项</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 src]# nginx -V<br>nginx version: nginx/1.18.0<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-4) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/usr/local/src/nginx/ --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module<br>[root@centos8 src]# <br></code></pre></td></tr></table></figure><ul><li>编译新版本，使用旧版本相同的编译参数选项</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 src]# cd nginx-1.20.2<br>[root@centos8 nginx-1.20.2]# ./configure --prefix=/usr/local/src/nginx/ --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">只需要make无需make install</span><br>[root@centos8 nginx-1.20.2]# make<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译完的软件存在objs/nginx</span><br>[root@centos8 nginx-1.20.2]# ll objs/<br>total 7684<br>-rw-r--r--. 1 root root   18498 Jan  7 15:29 autoconf.err<br>-rw-r--r--. 1 root root   53217 Jan  7 15:29 Makefile<br>-rwxr-xr-x. 1 root root 7697296 Jan  7 15:31 nginx<br>-rw-r--r--. 1 root root    5557 Jan  7 15:31 nginx.8<br>-rw-r--r--. 1 root root    7906 Jan  7 15:29 ngx_auto_config.h<br>-rw-r--r--. 1 root root     657 Jan  7 15:29 ngx_auto_headers.h<br>-rw-r--r--. 1 root root    8758 Jan  7 15:29 ngx_modules.c<br>-rw-r--r--. 1 root root   60056 Jan  7 15:31 ngx_modules.o<br>drwxr-xr-x. 9 root root      91 Jan  7 15:29 src<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看两个Nginx版本</span><br>[root@centos8 nginx-1.20.2]# ./objs/nginx -v<br>nginx version: nginx/1.20.2<br>[root@centos8 nginx-1.20.2]# /usr/local/src/nginx/sbin/nginx -v<br>nginx version: nginx/1.18.0<br>[root@centos8 nginx-1.20.2]#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份旧版本Nginx</span><br>[root@centos8 nginx-1.20.2]# cp /usr/local/src/nginx/sbin/nginx /usr/local/src/nginx/sbin/nginx.old<br>[root@centos8 nginx-1.20.2]# ll /usr/local/src/nginx/sbin/<br>total 14776<br>-rwxr-xr-x. 1 root root 7562368 Jan  4 17:39 nginx<br>-rwxr-xr-x. 1 root root 7562368 Jan  7 15:36 nginx.old<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">把新版本的nginx命令复制过去覆盖旧版本程序文件,注意:需要加 -f 选项强制覆盖,否则会提示Text file busy</span><br>[root@centos8 nginx-1.20.2]# cp -f objs/nginx /usr/local/src/nginx/sbin/<br>cp: overwrite &#x27;/usr/local/src/nginx/sbin/nginx&#x27;? y<br>[root@centos8 nginx-1.20.2]#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检测是否存在问题，必须做的</span><br>[root@centos8 nginx-1.20.2]# /usr/local/src/nginx/sbin/nginx -t<br>nginx: the configuration file /usr/local/src/nginx//conf/nginx.conf syntax is ok<br>nginx: configuration file /usr/local/src/nginx//conf/nginx.conf test is successful<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">发送信号USR2 平滑升级可执行程序,将存储有旧版本主进程PID的文件重命名为nginx.pid.oldbin，并启动新的nginx</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时两个master的进程都在运行,只是旧的master不在监听,由新的master监听80</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时Nginx开启一个新的master进程，这个master进程会生成新的worker进程，这就是升级后的Nginx进程，此时老的进程不会自动退出，但是当接收到新的请求不作处理而是交给新的进程处理。</span><br><br>[root@centos8 nginx-1.20.2]# kill -USR2 `cat /usr/local/src/nginx/logs/nginx.pid `<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到两个master,新的master是旧版master的子进程,并生成新版的worker进程</span><br>[root@centos8 nginx-1.20.2]# ps aux | grep nginx<br>root        1595  0.0  0.1  42452  2724 ?        Ss   Jan05   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>nginx       1596  0.0  0.2  77120  4612 ?        S    Jan05   0:00 nginx: worker process<br>root        8328  0.0  0.3  42484  5860 ?        S    15:44   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>nginx       8329  0.0  0.2  77240  4652 ?        S    15:44   0:00 nginx: worker process<br>root        8333  0.0  0.0  12136  1120 pts/0    S+   15:45   0:00 grep --color=auto nginx<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">先关闭旧nginx的worker进程,而不关闭nginx主进程方便回滚</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">向原Nginx主进程发送WINCH信号，它会逐步关闭旗下的工作进程（主进程不退出），这时所有请求都会由新版Nginx处理</span><br><br>[root@centos8 nginx-1.20.2]# kill -WINCH `cat /usr/local/src/nginx/logs/nginx.pid.oldbin` <br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果旧版worker进程有用户的请求,会一直等待处理完后才会关闭</span><br>[root@centos8 nginx-1.20.2]# ps aux | grep nginx<br>root        1595  0.0  0.1  42452  2724 ?        Ss   Jan05   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>root        8328  0.0  0.3  42484  5860 ?        S    15:44   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>nginx       8329  0.0  0.2  77240  5032 ?        S    15:44   0:00 nginx: worker process<br>root        8346  0.0  0.0  12136  1144 pts/0    S+   15:48   0:00 grep --color=auto nginx<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">经过一段时间测试，新版本服务没问题，最后发送QUIT信号,退出老的master</span><br>[root@centos8 nginx-1.20.2]# kill -QUIT `cat /usr/local/src/nginx/logs/nginx.pid.oldbin`<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看版本是否升级成功</span><br>[root@centos8 nginx-1.20.2]# nginx -v<br>nginx version: nginx/1.20.2<br>[root@centos8 nginx-1.20.2]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">回滚</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果升级的版本发现问题需要回滚,可以发送HUP信号,重新拉起旧版本的worker</span><br>[root@centos8 nginx-1.20.2]# kill -HUB `cat /usr/local/src/nginx/logs/nginx.pid.oldbin`<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">最后关闭新版的master</span><br>[root@centos8 nginx-1.20.2]# kill -QUIT `cat /usr/local/src/nginx/logs/nginx.pid`<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-compose部署MySql</title>
    <link href="/2023/01/06/docker-compose%E9%83%A8%E7%BD%B2MySQL/"/>
    <url>/2023/01/06/docker-compose%E9%83%A8%E7%BD%B2MySQL/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-Docker-安装"><a href="#CentOS-Docker-安装" class="headerlink" title="CentOS Docker 安装"></a>CentOS Docker 安装</h1><p>Docker 支持以下的 64 位 CentOS 版本：</p><ul><li>CentOS 7</li><li>CentOS 8</li><li>更高版本…</li></ul><h2 id="官方安装脚本自动安装"><a href="#官方安装脚本自动安装" class="headerlink" title="官方安装脚本自动安装"></a>官方安装脚本自动安装</h2><p>安装命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br></code></pre></td></tr></table></figure><p>也可以使用国内 daocloud 一键安装命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -sSL https://get.daocloud.io/docker | sh<br></code></pre></td></tr></table></figure><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><p>Compose 简介<br>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。<br>Compose 安装<br>Linux 上我们可以从 Github 上下载它的二进制包来使用，最新发行的版本地址：<a href="https://github.com/docker/compose/releases%E3%80%82">https://github.com/docker/compose/releases。</a></p><p>运行以下命令以下载 Docker Compose 的当前稳定版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -L &quot;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>要安装其他版本的 Compose，请替换 v2.2.2。</p><p>Docker Compose 存放在 GitHub，不太稳定。</p><p>你可以也通过执行下面的命令，高速安装 Docker Compose。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.4.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>将可执行权限应用于二进制文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>创建软链：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose<br></code></pre></td></tr></table></figure><p>测试是否安装成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 ~]# docker-compose version<br>Docker Compose version v2.4.1<br></code></pre></td></tr></table></figure><h1 id="docker-compose一键部署mysql"><a href="#docker-compose一键部署mysql" class="headerlink" title="docker-compose一键部署mysql"></a>docker-compose一键部署mysql</h1><ul><li>创建安装目录,根据实际情况修改<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdr mysql<br>cd mysql<br>mkdir -p data/db<br>mkdir etc<br></code></pre></td></tr></table></figure></li><li>编写docker-compose.yml<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd mysql<br>vim docker-compose.yml<br></code></pre></td></tr></table></figure>docker-compose.yml内容如下<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">version: &#x27;3.1&#x27;<br>services:<br>  mysql:<br>    image: mysql:5.7 #mysql版本<br>    container_name: $&#123;MYSQL_NAME&#125;<br>    volumes:<br>      - ./data/db:/var/lib/mysql<br>      - ./etc/my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf<br>    restart: always<br>    ports:<br>      - $&#123;MYSQL_PORT&#125;:3306<br>    environment:<br>      MYSQL_ROOT_PASSWORD: $&#123;MYSQL_ROOT_PASSWD&#125; #访问密码<br>      secure_file_priv:<br></code></pre></td></tr></table></figure></li><li>创建MySQL配置文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd mysql/etc<br>vim my.cnf<br></code></pre></td></tr></table></figure>my.cnf文件内容如下<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[mysqld]<br>character-set-server=utf8<br>log-bin=mysql-bin<br>server-id=1<br>pid-file        = /var/run/mysqld/mysqld.pid<br>socket          = /var/run/mysqld/mysqld.sock<br>datadir         = /var/lib/mysql<br>sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION<br>symbolic-links=0<br>secure_file_priv =<br>wait_timeout=120<br>interactive_timeout=120<br>default-time_zone = &#x27;+8:00&#x27;<br>skip-external-locking<br>skip-name-resolve<br>open_files_limit = 10240<br>max_connections = 1000<br>max_connect_errors = 6000<br>table_open_cache = 800<br>max_allowed_packet = 40m<br>sort_buffer_size = 2M<br>join_buffer_size = 1M<br>thread_cache_size = 32<br>query_cache_size = 64M<br>transaction_isolation = READ-COMMITTED<br>tmp_table_size = 128M<br>max_heap_table_size = 128M<br>log-bin = mysql-bin<br>sync-binlog = 1<br>binlog_format = ROW<br>binlog_cache_size = 1M<br>key_buffer_size = 128M<br>read_buffer_size = 2M<br>read_rnd_buffer_size = 4M<br>bulk_insert_buffer_size = 64M<br>lower_case_table_names = 1<br>explicit_defaults_for_timestamp=true<br>skip_name_resolve = ON<br>event_scheduler = ON<br>log_bin_trust_function_creators = 1<br>innodb_buffer_pool_size = 512M<br>innodb_flush_log_at_trx_commit = 1<br>innodb_file_per_table = 1<br>innodb_log_buffer_size = 4M<br>innodb_log_file_size = 256M<br>innodb_max_dirty_pages_pct = 90<br>innodb_read_io_threads = 4<br>innodb_write_io_threads = 4<br></code></pre></td></tr></table></figure></li><li>编写重启脚本<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd mysql<br>vim restart.sh<br></code></pre></td></tr></table></figure></li></ul><p>restart.sh文件内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>docker-compose stop<br>docker-compose rm -f<br>docker-compose up -d<br></code></pre></td></tr></table></figure><ul><li>编写.env文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim .env<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">容器名称</span><br>MYSQL_NAME=docker-mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启用端口</span><br>MYSQL_PORT=3306<br><span class="hljs-meta prompt_"># </span><span class="language-bash">root密码</span><br>MYSQL_ROOT_PASSWD=123456<br></code></pre></td></tr></table></figure><ul><li>验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">执行启动脚本</span><br>bash restart.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看运行的容器</span><br>docker ps<br>CONTAINER ID   IMAGE                    COMMAND                  CREATED         STATUS         PORTS                                                  NAMES<br>36d09017f331   mysql:5.7                &quot;docker-entrypoint.s…&quot;   2 minutes ago   Up 2 minutes   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   docker-mysql<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在线一键安装Nginx脚本</title>
    <link href="/2023/01/04/%E5%9C%A8%E7%BA%BF%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Nginx%E8%84%9A%E6%9C%AC/"/>
    <url>/2023/01/04/%E5%9C%A8%E7%BA%BF%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Nginx%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment">#********************************************************************</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Author:yuankun</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Date: 2023-01-04</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">FileName：install_nginx.sh</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Description：The <span class="hljs-built_in">test</span> script</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">********************************************************************</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装资源下载路径</span><br>SRC_DIR=/usr/local/src/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载地址</span><br>NGINX_URL=http://nginx.org/download/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装版本</span><br>NGINX_FILE=nginx-1.20.2<br>TAR=.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装路径</span><br>NGINX_INSTALL_DIR=/usr/local/src/nginx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看CPU核心数</span><br>CPUS=`lscpu |awk &#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;`<br><br>. /etc/os-release<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">颜色</span><br>color () &#123;<br>    RES_COL=60<br>    MOVE_TO_COL=&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;<br>    SETCOLOR_SUCCESS=&quot;echo -en \\033[1;32m&quot;<br>    SETCOLOR_FAILURE=&quot;echo -en \\033[1;31m&quot;<br>    SETCOLOR_WARNING=&quot;echo -en \\033[1;33m&quot;<br>    SETCOLOR_NORMAL=&quot;echo -en \E[0m&quot;<br>    echo -n &quot;$1&quot; &amp;&amp; $MOVE_TO_COL<br>    echo -n &quot;[&quot;<br>    if [ $2 = &quot;success&quot; -o $2 = &quot;0&quot; ] ;then<br>        $&#123;SETCOLOR_SUCCESS&#125;<br>        echo -n $&quot;  OK  &quot;    <br>    elif [ $2 = &quot;failure&quot; -o $2 = &quot;1&quot;  ] ;then <br>        $&#123;SETCOLOR_FAILURE&#125;<br>        echo -n $&quot;FAILED&quot;<br>    else<br>        $&#123;SETCOLOR_WARNING&#125;<br>        echo -n $&quot;WARNING&quot;<br>    fi<br>    $&#123;SETCOLOR_NORMAL&#125;<br>    echo -n &quot;]&quot;<br>    echo <br>&#125;<br><br>os_type () &#123;<br>   awk -F&#x27;[ &quot;]&#x27; &#x27;/^NAME/&#123;print $2&#125;&#x27; /etc/os-release<br>&#125;<br><br>os_version () &#123;<br>   awk -F&#x27;&quot;&#x27; &#x27;/^VERSION_ID/&#123;print $2&#125;&#x27; /etc/os-release<br>&#125;<br><br>check () &#123;<br>    [ -e $&#123;NGINX_INSTALL_DIR&#125; ] &amp;&amp; &#123; color &quot;nginx 已安装,请卸载后再安装&quot; 1; exit; &#125;<br>    cd  $&#123;SRC_DIR&#125;<br>    if [  -e $&#123;NGINX_FILE&#125;$&#123;TAR&#125; ];then<br>        color &quot;相关文件已准备好&quot; 0<br>    else<br>        color &#x27;开始下载 nginx 源码包&#x27; 0<br>        wget $&#123;NGINX_URL&#125;$&#123;NGINX_FILE&#125;$&#123;TAR&#125; <br>        [ $? -ne 0 ] &amp;&amp; &#123; color &quot;下载 $&#123;NGINX_FILE&#125;$&#123;TAR&#125;文件失败&quot; 1; exit; &#125; <br>    fi<br>&#125; <br><br>install () &#123;<br>    color &quot;开始安装 nginx&quot; 0<br>    if id nginx  &amp;&gt; /dev/null;then<br>        color &quot;nginx 用户已存在&quot; 1 <br>    else<br>        useradd -s /sbin/nologin -r  nginx<br>        color &quot;创建 nginx 用户&quot; 0 <br>    fi<br>    color &quot;开始安装 nginx 依赖包&quot; 0<br>    if [ $ID == &quot;centos&quot; ] ;then<br>    if [[ $VERSION_ID =~ ^7 ]];then<br>            yum -y -q  install make gcc pcre-devel openssl-devel zlib-devel perl-ExtUtils-Embed<br>elif [[ $VERSION_ID =~ ^8 ]];then<br>            yum -y -q install make gcc-c++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel perl-ExtUtils-Embed <br>else <br>            color &#x27;不支持此系统!&#x27;  1<br>            exit<br>        fi<br>    elif [ $ID == &quot;rocky&quot;  ];then<br>    yum -y -q install make gcc-c++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel perl-ExtUtils-Embed <br>else<br>        apt update &amp;&gt; /dev/null<br>        apt -y install make gcc libpcre3 libpcre3-dev openssl libssl-dev zlib1g-dev &amp;&gt; /dev/null<br>    fi<br>    cd $SRC_DIR<br>    tar xf $&#123;NGINX_FILE&#125;$&#123;TAR&#125;<br>    NGINX_DIR=`echo $&#123;NGINX_FILE&#125;$&#123;TAR&#125;| sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>    cd $&#123;NGINX_DIR&#125; &amp;&amp; pwd<br>    ./configure --prefix=$&#123;NGINX_INSTALL_DIR&#125; --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module<br>    make -j $CPUS &amp;&amp; make install <br>    [ $? -eq 0 ] &amp;&amp; color &quot;nginx 编译安装成功&quot; 0 ||  &#123; color &quot;nginx 编译安装失败,退出!&quot; 1 ;exit; &#125;<br>    echo &quot;PATH=$&#123;NGINX_INSTALL_DIR&#125;/sbin:$&#123;PATH&#125;&quot; &gt; /etc/profile.d/nginx.sh<br>    cat &gt; /lib/systemd/system/nginx.service &lt;&lt;EOF<br>[Unit]<br>Description=The nginx HTTP and reverse proxy server<br>After=network.target remote-fs.target nss-lookup.target<br><br>[Service]<br>Type=forking<br>PIDFile=$&#123;NGINX_INSTALL_DIR&#125;/logs/nginx.pid<br>ExecStartPre=/bin/rm -f $&#123;NGINX_INSTALL_DIR&#125;/logs/nginx.pid<br>ExecStartPre=$&#123;NGINX_INSTALL_DIR&#125;/sbin/nginx -t<br>ExecStart=$&#123;NGINX_INSTALL_DIR&#125;/sbin/nginx<br>ExecReload=/bin/kill -s HUP \$MAINPID<br>KillSignal=SIGQUIT<br>TimeoutStopSec=5<br>KillMode=process<br>PrivateTmp=true<br>LimitNOFILE=100000<br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br>    systemctl daemon-reload<br>    systemctl enable --now nginx &amp;&gt; /dev/null <br>    systemctl is-active nginx &amp;&gt; /dev/null ||  &#123; color &quot;nginx 启动失败,退出!&quot; 1 ; exit; &#125;<br>    color &quot;nginx 安装完成&quot; 0<br>&#125;<br><br>check<br>install<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx安装和命令使用</title>
    <link href="/2023/01/01/nginx/"/>
    <url>/2023/01/01/nginx/</url>
    
    <content type="html"><![CDATA[<h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><h2 id="Nginx版本和安装方式"><a href="#Nginx版本和安装方式" class="headerlink" title="Nginx版本和安装方式"></a>Nginx版本和安装方式</h2><p>Nginx版本</p><ul><li>Mainline version 主要开发版本,一般为奇数版本号,比如1.19</li><li>Stable version 当前最新稳定版,一般为偶数版本,如:1.20</li><li>Legacy versions 旧的稳定版,一般为偶数版本,如:1.18</li></ul><p>Nginx安装可以使用yum或源码安装，但是推荐使用源码编译安装</p><ul><li>yum的版本比较旧</li><li>编译安装可以更方便自定义相关路径</li><li>使用源码编译可以自定义相关功能，更方便业务的上的使用</li></ul><h2 id="基于yum安装Nginx"><a href="#基于yum安装Nginx" class="headerlink" title="基于yum安装Nginx"></a>基于yum安装Nginx</h2><p>查看系统和EPEL的nginx版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">centos和rocky系统</span><br>[root@centos8 ~]# yum list nginx<br>Repository extras is listed more than once in the configuration<br>Last metadata expiration check: 0:28:13 ago on Wed 04 Jan 2023 11:51:31 AM CST.<br>Available Packages<br>nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             AppStream<br>nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             appstream<br>[root@centos8 ~]# <br>[root@centos8 ~]# dnf list nginx<br>Repository extras is listed more than once in the configuration<br>Last metadata expiration check: 0:28:55 ago on Wed 04 Jan 2023 11:51:31 AM CST.<br>Available Packages<br>nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             AppStream<br>nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             appstream<br>[root@centos8 ~]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ubuntu系统</span><br>root@ubuntu2004:~# apt list nginx<br>Listing... Done<br>nginx/focal-updates,focal-security 1.18.0-0ubuntu1.4 all<br>N: There is 1 additional version. Please use the &#x27;-a&#x27; switch to see it<br>root@ubuntu2004:~# <br></code></pre></td></tr></table></figure><p>centos、rocky系统yum安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install nginx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">centos、rocky系统安装nginx后未启动，使用如下命令启动</span><br>systemctl start nginx<br></code></pre></td></tr></table></figure><p>ubuntu系统安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt update;apt install nginx<br></code></pre></td></tr></table></figure><h3 id="官方包源安装Nginx"><a href="#官方包源安装Nginx" class="headerlink" title="官方包源安装Nginx"></a>官方包源安装Nginx</h3><p>系统和EPEL源的中 nignx版本较旧,可以安装官方源的最新版本<br>官方包链接:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://nginx.org/en/linux_packages.html<br></code></pre></td></tr></table></figure><p>官方 yum 源链接:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://nginx.org/en/linux_packages.html  #RHEL-CentOS<br></code></pre></td></tr></table></figure><p>通过官方 yum 源安装nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# vim /etc/yum.repos.d/nginx.repo<br>[nginx-stable]<br>name=nginx stable repo<br>baseurl=http://nginx.org/packages/centos/$releasever/$basearch/<br>gpgcheck=1<br>enabled=1<br>gpgkey=https://nginx.org/keys/nginx_signing.key<br>module_hotfixes=true<br><br>[root@centos8 ~]# yum clean all<br>42 files removed<br>[root@centos8 ~]# yum makecache<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看所有的版本</span><br><span class="hljs-meta prompt_">[root@centos8]# </span><span class="language-bash">yum list nginx --showduplicates</span><br>nginx stable repo                                                                                       462  B/s |  47 kB     01:44    <br>Available Packages<br>nginx.x86_64                                     1.16.0-1.el8.ngx                                                           nginx-stable<br>nginx.x86_64                                     1:1.14.1-9.module+el8.4.0+542+81547229                                     appstream   <br>nginx.x86_64                                     1:1.16.1-1.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.18.0-1.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.18.0-2.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.20.0-1.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.20.1-1.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.20.2-1.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.22.0-1.el8.ngx                                                         nginx-stable<br>nginx.x86_64                                     1:1.22.1-1.el8.ngx                                                         nginx-stable <br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装指定版本</span><br>[root@centos8 ~]#yum -y install nginx-1.18.0<br></code></pre></td></tr></table></figure><h3 id="检查安装"><a href="#检查安装" class="headerlink" title="检查安装"></a>检查安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -ql nginx<br></code></pre></td></tr></table></figure><h3 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# nginx -h<br>····<br>····<br>····<br>Options:<br>-?,-h : this help<br>-v : show version and exit<br>-V : show version and configure options then exit #显示版本和编译参数<br>-t : test configuration and exit #测试配置文件是否异常<br>-T : test configuration, dump it and exit #测试并打印<br>-q : suppress non-error messages during configuration testing #静默模式<br>-s signal : send signal to a master process: stop, quit, reopen, reload #发送信号,reload信号 会生成新的worker,但master不会重新生成<br>-p prefix : set prefix path (default: /etc/nginx/)#指定Nginx 目录<br>-c filename : set configuration file (default: /etc/nginx/nginx.conf)#配置文件路径<br>-g directives : set global directives out of configuration file#设置全局指令,注意和配置文件不要同时配置,否则冲突<br></code></pre></td></tr></table></figure><h3 id="验证配置文件"><a href="#验证配置文件" class="headerlink" title="验证配置文件"></a>验证配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# nginx -t<br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h3 id="启动文件"><a href="#启动文件" class="headerlink" title="启动文件"></a>启动文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# cat /lib/systemd/system/nginx.service<br>[Unit]<br>Description=The nginx HTTP and reverse proxy server<br>After=network.target remote-fs.target nss-lookup.target<br><br>[Service]<br>Type=forking<br>PIDFile=/run/nginx.pid<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Nginx will fail to start <span class="hljs-keyword">if</span> /run/nginx.pid already exists but has the wrong</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">SELinux context. This might happen when running `nginx -t` from the cmdline.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">https://bugzilla.redhat.com/show_bug.cgi?<span class="hljs-built_in">id</span>=1268621</span><br>ExecStartPre=/usr/bin/rm -f /run/nginx.pid<br>ExecStartPre=/usr/sbin/nginx -t<br>ExecStart=/usr/sbin/nginx<br>ExecReload=/bin/kill -s HUP $MAINPID<br>KillSignal=SIGQUIT<br>TimeoutStopSec=5<br>KillMode=mixed<br>PrivateTmp=true<br><br>[Install]<br>WantedBy=multi-user.target<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable --now nginx<br></code></pre></td></tr></table></figure><h2 id="Nginx编译安装"><a href="#Nginx编译安装" class="headerlink" title="Nginx编译安装"></a>Nginx编译安装</h2><p>官方源码包下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://nginx.org/en/download.html<br></code></pre></td></tr></table></figure><p>范例：编译安装</p><ul><li><p>系统centos8.5</p></li><li><p>Nginx版本：1.18.0</p></li><li><p>安装扩展依赖</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# yum -y install gcc pcre-devel openssl-devel zlib-devel<br></code></pre></td></tr></table></figure><ul><li>创建用户和组</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">groupadd nginx<br>useradd -s /sbin/nologin -g nginx nginx<br></code></pre></td></tr></table></figure><ul><li>下载安装包并解压</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# cd /usr/local/src/<br>[root@centos8 ~]# wget https://nginx.org/download/nginx-1.18.0.tar.gz<br>[root@centos8 src]# tar xf nginx-1.18.0.tar.gz <br>[root@centos8 src]# cd nginx-1.18.0<br></code></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 nginx-1.18.0]# ./configure --prefix=/usr/local/src/nginx/ \  # 安装位置<br>--user=nginx \   # 运行的用户<br>--group=nginx \<br>--with-http_ssl_module \<br>--with-http_v2_module \<br>--with-http_realip_module \<br>--with-http_stub_status_module \<br>--with-http_gzip_static_module \<br>--with-pcre \<br>--with-stream \<br>--with-stream_ssl_module<br><br>[root@centos8 nginx-1.18.0]#make &amp;&amp; make install<br></code></pre></td></tr></table></figure><ul><li>修改权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 /]# chown -R nginx.nginx /usr/local/src/nginx/<br></code></pre></td></tr></table></figure><ul><li>nginx安装完成后有四个主要的目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 /]# ll /usr/local/src/nginx/<br>total 4<br>drwxr-xr-x. 2 nginx nginx 4096 Jan  4 15:17 conf<br>drwxr-xr-x. 2 nginx nginx   40 Jan  4 15:17 html<br>drwxr-xr-x. 2 nginx nginx    6 Jan  4 15:17 logs<br>drwxr-xr-x. 2 nginx nginx   19 Jan  4 15:17 sbin<br>[root@centos8 /]# <br>conf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他<br>的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和<br>fastcgi_params两个文件，配置文件一般都有一个样板配置文件，是以.default为后缀，使用时可将其复<br>制并将default后缀去掉即可。<br>html目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web<br>文件是默认的错误页面提示页面。<br>logs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他<br></code></pre></td></tr></table></figure><ul><li>验证版本及编译参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 /]# ln -s /usr/local/src/nginx/sbin/nginx /usr/bin/<br>[root@centos8 /]# nginx -V<br>nginx version: nginx/1.18.0<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-4) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/usr/local/src/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module<br>[root@centos8 /]# <br></code></pre></td></tr></table></figure><ul><li>创建Nginx启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">复制同一版本的nginx的yum安装生成的service文件</span><br>[root@centos8 ~]# vim /lib/systemd/system/nginx.service <br><br>[Unit]<br>Description=nginx - high performance web server <br>Documentation=http://nginx.org/en/docs/<br>After=network.target<br><br>[Service] <br>Type=forking<br>PIDFile=/usr/local/src/nginx/logs/nginx.pid<br>ExecStartPre=/usr/local/src//nginx/sbin/nginx -t -c /usr/local/src/nginx/conf/nginx.conf<br>ExecStart=/usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf<br>ExecReload=/bin/kill -s HUP $MAINPID <br>ExecStop=/bin/kill -s QUIT $MAINPID<br>PrivateTmp=true<br><br>[Install] <br>WantedBy=multi-user.target<br><br></code></pre></td></tr></table></figure><ul><li>验证启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#systemctl daemon-reload<br>[root@centos8 ~]#systemctl enable --now nginx<br>Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h2 id="Nginx命令和信号"><a href="#Nginx命令和信号" class="headerlink" title="Nginx命令和信号"></a>Nginx命令和信号</h2><p>nginx 命令支持向其发送信号,实现不同功能<br>nginx 格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]<br></code></pre></td></tr></table></figure><p>选项说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">帮助: -? -h<br>使用指定的配置文件: -c<br>指定配置指令:-g<br>指定运行目录:-p<br>测试配置文件是否有语法错误:-t -T<br>打印nginx的版本信息、编译信息等:-v -V<br>发送信号: -s 示例: nginx -s reload<br></code></pre></td></tr></table></figure><p>信号说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">立刻停止服务:stop,相当于信号SIGTERM,SIGINT <br>优雅的停止服务:quit,相当于信号SIGQUIT       <br>平滑重启，重新加载配置文件: reload,相当于信号SIGHUP    <br>重新开始记录日志文件:reopen,相当于信号SIGUSR1,在切割日志时用途较大<br>平滑升级可执行程序:发送信号SIGUSR2,在升级版本时使用<br>优雅的停止工作进程:发送信号SIGWINCH,在升级版本时使用<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis一键安装脚本</title>
    <link href="/2022/12/17/Redis%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/12/17/Redis%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<ul><li>在线安装</li><li>系统</li></ul><p>Centos7.9 、Rockylinux8.5、Centos8.5、ubuntu20.04实测安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment">#********************************************************************</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Author:          yuankun</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Date:            2022-12-17</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">FileName：       install_redis.sh</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">URL:             https://gzyuankun.github.io</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Description:     The <span class="hljs-built_in">test</span> script</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Copyright (C):   2020 All rights reserved</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">********************************************************************</span><br>REDIS_VERSION=redis-6.2.5<br>PASSWORD=123456<br>INSTALL_DIR=/usr/local/src/redis<br>CPUS=`lscpu |awk &#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;`<br><br>. /etc/os-release<br><br>color () &#123;<br>    RES_COL=60<br>    MOVE_TO_COL=&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;<br>    SETCOLOR_SUCCESS=&quot;echo -en \\033[1;32m&quot;<br>    SETCOLOR_FAILURE=&quot;echo -en \\033[1;31m&quot;<br>    SETCOLOR_WARNING=&quot;echo -en \\033[1;33m&quot;<br>    SETCOLOR_NORMAL=&quot;echo -en \E[0m&quot;<br>    echo -n &quot;$1&quot; &amp;&amp; $MOVE_TO_COL<br>    echo -n &quot;[&quot;<br>    if [ $2 = &quot;success&quot; -o $2 = &quot;0&quot; ] ;then<br>        $&#123;SETCOLOR_SUCCESS&#125;<br>        echo -n $&quot;  OK  &quot;    <br>    elif [ $2 = &quot;failure&quot; -o $2 = &quot;1&quot;  ] ;then <br>        $&#123;SETCOLOR_FAILURE&#125;<br>        echo -n $&quot;FAILED&quot;<br>    else<br>        $&#123;SETCOLOR_WARNING&#125;<br>        echo -n $&quot;WARNING&quot;<br>    fi<br>    $&#123;SETCOLOR_NORMAL&#125;<br>    echo -n &quot;]&quot;<br>    echo <br>&#125;<br><br><br>prepare()&#123;<br>    if [ $ID = &quot;centos&quot; -o $ID = &quot;rocky&quot; ];then<br>        yum  -y install gcc make systemd-devel<br>    else<br>    apt update <br>    apt -y install  gcc make libjemalloc-dev libsystemd-dev<br>    fi<br>    if [ $? -eq 0 ];then<br>        color &quot;安装软件包成功&quot;  0<br>    else<br>        color &quot;安装软件包失败，请检查网络配置&quot; 1<br>        exit<br>    fi<br>&#125;<br>install() &#123;   <br>    if [ ! -f $&#123;REDIS_VERSION&#125;.tar.gz ];then<br>        wget http://download.redis.io/releases/$&#123;REDIS_VERSION&#125;.tar.gz || &#123; color &quot;Redis 源码下载失败&quot; 1 ; exit; &#125;<br>    fi<br>    tar xf $&#123;REDIS_VERSION&#125;.tar.gz -C /usr/local/src<br>    cd /usr/local/src/$&#123;REDIS_VERSION&#125;<br>    make -j $CUPS USE_SYSTEMD=yes PREFIX=$&#123;INSTALL_DIR&#125; install &amp;&amp; color &quot;Redis 编译安装完成&quot; 0 || &#123; color &quot;Redis 编译安装失败&quot; 1 ;exit ; &#125;<br><br>    ln -s $&#123;INSTALL_DIR&#125;/bin/redis-*  /usr/bin/<br>    <br>    mkdir -p $&#123;INSTALL_DIR&#125;/&#123;etc,log,data,run&#125;<br>  <br>    cp redis.conf  $&#123;INSTALL_DIR&#125;/etc/<br><br>    sed -i -e &#x27;s/bind 127.0.0.1/bind 0.0.0.0/&#x27;  -e &quot;/# requirepass/a requirepass $PASSWORD&quot;  -e &quot;/^dir .*/c dir $&#123;INSTALL_DIR&#125;/data/&quot;  -e &quot;/logfile .*/c logfile $&#123;INSTALL_DIR&#125;/log/redis-6379.log&quot;  -e  &quot;/^pidfile .*/c  pidfile $&#123;INSTALL_DIR&#125;/run/redis_6379.pid&quot; $&#123;INSTALL_DIR&#125;/etc/redis.conf<br><br><br>    if id redis &amp;&gt; /dev/null ;then <br>         color &quot;Redis 用户已存在&quot; 1 <br>    else<br>         useradd -r -s /sbin/nologin redis<br>         color &quot;Redis 用户创建成功&quot; 0<br>    fi<br><br>    chown -R redis.redis $&#123;INSTALL_DIR&#125;<br><br>    cat &gt;&gt; /etc/sysctl.conf &lt;&lt;EOF<br>net.core.somaxconn = 1024<br>vm.overcommit_memory = 1<br>EOF<br>    sysctl -p <br>    if [ $ID = &quot;centos&quot; -o $ID = &quot;rocky&quot; ];then<br>        echo &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; &gt;&gt; /etc/rc.d/rc.local<br>        chmod +x /etc/rc.d/rc.local<br>        /etc/rc.d/rc.local <br>    else <br>        echo -e &#x27;#!/bin/bash\necho never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; &gt;&gt; /etc/rc.local<br>        chmod +x /etc/rc.local<br>        /etc/rc.local<br>    fi<br><br><br>cat &gt; /lib/systemd/system/redis.service &lt;&lt;EOF<br>[Unit]<br>Description=Redis persistent key-value database<br>After=network.target<br><br>[Service]<br>ExecStart=$&#123;INSTALL_DIR&#125;/bin/redis-server $&#123;INSTALL_DIR&#125;/etc/redis.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT \$MAINPID<br>Type=notify<br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>LimitNOFILE=1000000<br><br>[Install]<br>WantedBy=multi-user.target<br><br>EOF<br>     systemctl daemon-reload <br>     systemctl enable --now  redis &amp;&gt; /dev/null <br>     if [ $? -eq 0 ];then<br>         color &quot;Redis 服务启动成功,Redis信息如下:&quot;  0 <br>     else<br>         color &quot;Redis 启动失败&quot; 1 <br>         exit<br>     fi<br>     sleep 2<br>     redis-cli -a $PASSWORD INFO Server 2&gt; /dev/null<br>&#125;<br><br>prepare <br>install <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos系统yum源配置</title>
    <link href="/2022/12/17/centos%E7%B3%BB%E7%BB%9Fyum%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/12/17/centos%E7%B3%BB%E7%BB%9Fyum%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<ul><li><p>系统<br>Centos7.9</p></li><li><p>步骤</p></li></ul><p>1.备份</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak<br></code></pre></td></tr></table></figure><p>2.创建&#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo文件并复制如下内容</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs text">[base]<br>name=CentOS-$releasever - Base<br>baseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/<br>        http://mirrors.aliyun.com/centos/$releasever/os/$basearch/<br>        http://mirrors.cloud.tencent.com/centos/$releasever/os/$basearch/<br>        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/os/$basearch/<br>        http://mirrors.huaweicloud.com/centos/$releasever/os/$basearch/<br>        http://mirror.centos.org/centos/$releasever/os/$basearch/<br>gpgcheck=0<br><br>#released updates <br>[updates]<br>name=CentOS-$releasever - Updates<br>baseurl=http://mirrors.163.com/centos/$releasever/updates/$basearch/<br>        http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/<br>        http://mirrors.cloud.tencent.com/centos/$releasever/updates/$basearch/<br>        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/updates/$basearch/<br>http://mirrors.huaweicloud.com/centos/$releasever/updates/$basearch/<br>        http://mirror.centos.org/centos/$releasever/updates/$basearch/<br>gpgcheck=0<br><br>#additional packages that may be useful<br>[extras]<br>name=CentOS-$releasever - Extras<br>baseurl=http://mirrors.163.com/centos/$releasever/extras/$basearch/<br>        http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/<br>http://mirrors.cloud.tencent.com/centos/$releasever/extras/$basearch/<br>        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/<br>        http://mirrors.huaweicloud.com/centos/$releasever/extras/$basearch/<br>http://mirror.centos.org/centos/$releasever/extras/$basearch/<br>gpgcheck=0<br><br>#additional packages that extend functionality of existing packages<br>[centosplus]<br>name=CentOS-$releasever - Plus<br>baseurl=http://mirrors.163.com/centos/$releasever/centosplus/$basearch/<br>        http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/<br>        http://mirrors.cloud.tencent.com/centos/$releasever/centosplus/$basearch/<br>        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/centosplus/$basearch/<br>        http://mirrors.huaweicloud.com/centos/$releasever/centosplus/$basearch/<br>http://mirror.centos.org/centos/$releasever/centosplus/$basearch/<br>gpgcheck=0<br>enabled=1<br></code></pre></td></tr></table></figure><p>3.清除缓存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">yum clean all<br></code></pre></td></tr></table></figure><p>4.重新生成缓存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">yum makecache<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis集群和高可用</title>
    <link href="/2022/12/13/Redis%E9%9B%86%E7%BE%A4%E5%92%8C%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <url>/2022/12/13/Redis%E9%9B%86%E7%BE%A4%E5%92%8C%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Redis单机服务存在数据和服务的单点问题,而且单机性能也存在着上限,可以利用Redis的集群相关技术来解决这些问题.</p><p><img src="/../image.assets/1671327877294.png" alt="1671327877294"></p><h1 id="主从复制实现"><a href="#主从复制实现" class="headerlink" title="主从复制实现"></a>主从复制实现</h1><h2 id="主从命令配置"><a href="#主从命令配置" class="headerlink" title="主从命令配置"></a>主从命令配置</h2><p><img src="/../image.assets/1670942266531.png" alt="1670942266531"></p><p>当配置Redis复制功能时，强烈建议打开主服务器的持久化功能。否则的话，由于延迟等问题，部署的主节点Redis服务应该要避免自动启动。</p><p>参考案例: 导致主从服务器数据全部丢失</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">1.假设节点A为主服务器，并且关闭了持久化。并且节点B和节点C从节点A复制数据<br>2.节点A崩溃，然后由自动拉起服务重启了节点A.由于节点A的持久化被关闭了，所以重启之后没有任何数据<br>3.节点B和节点C将从节点A复制数据，但是A的数据是空的，于是就把自身保存的数据副本删除。<br></code></pre></td></tr></table></figure><p>在关闭主服务器上的持久化，并同时开启自动拉起进程的情况下，即便使用Sentinel来实现Redis的高可用性，也是非常危险的。因为主服务器可能拉起得非常快，以至于Sentinel在配置的心跳时间间隔内没有检测到主服务器已被重启，然后还是会执行上面的数据丢失的流程。无论何时，数据安全都是极其重要的，所以应该禁止主服务器关闭持久化的同时自动启动。</p><h3 id="启用主从同步"><a href="#启用主从同步" class="headerlink" title="启用主从同步"></a>启用主从同步</h3><p>Redis Server 默认为 master节点，如果要配置为从节点,需要指定master服务器的IP,端口及连接密码在从节点执行 REPLICAOF MASTER_IP PORT 指令可以启用主从同步复制功能,早期版本使用 SLAVEOF指令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6379&gt; REPLICAOF MASTER_IP PORT #新版推荐使用<br>127.0.0.1:6379&gt; SLAVEOF MasterIP Port #旧版使用，将被淘汰<br>127.0.0.1:6379&gt; CONFIG SET masterauth &lt;masterpass&gt;<br></code></pre></td></tr></table></figure><ul><li>在master实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6379&gt; AUTH 123456<br>OK<br>127.0.0.1:6379&gt; INFO replication #查看当前角色默认为master<br># Replication<br>role:master<br>connected_slaves:0<br>master_failover_state:no-failover<br>master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77<br>master_replid2:0000000000000000000000000000000000000000<br>master_repl_offset:1361<br>second_repl_offset:-1<br>repl_backlog_active:1<br>repl_backlog_size:1048576<br>repl_backlog_first_byte_offset:1<br>repl_backlog_histlen:1361<br>127.0.0.1:6379&gt; <br></code></pre></td></tr></table></figure><ul><li>在slave实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs text">#在slave上设置master的IP和端口，4.0版之前的指令为slaveof<br>127.0.0.1:6380&gt; REPLICAOF 127.0.0.1 6379  #仍可使用SLAVEOF MasterIP Port<br>OK<br>127.0.0.1:6380&gt; <br><br>#在slave上设置master的密码<br>127.0.0.1:6379&gt; CONFIG SET masterauth 123456<br><br># Replication #角色变为slave<br>127.0.0.1:6380&gt; INFO replication<br># Replication<br>role:slave<br>master_host:127.0.0.1  #指向master<br>master_port:6379<br>master_link_status:up<br>master_last_io_seconds_ago:1<br>master_sync_in_progress:0<br>slave_read_repl_offset:1515<br>slave_repl_offset:1515<br>slave_priority:100<br>slave_read_only:1<br>replica_announced:1<br>connected_slaves:0<br>master_failover_state:no-failover<br>master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77<br>master_replid2:0000000000000000000000000000000000000000<br>master_repl_offset:1515<br>second_repl_offset:-1<br>repl_backlog_active:1<br>repl_backlog_size:1048576<br>repl_backlog_first_byte_offset:1362<br>repl_backlog_histlen:154<br>127.0.0.1:6380&gt; <br><br></code></pre></td></tr></table></figure><ul><li>在master实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># 添加值<br>127.0.0.1:6379&gt; set class m48<br>OK<br>127.0.0.1:6379&gt;<br></code></pre></td></tr></table></figure><ul><li>在slave验证是否同步过来</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在slave执行<br>127.0.0.1:6380&gt; get class<br>&quot;m48&quot;<br>127.0.0.1:6380&gt; <br><br># 可以看到已经同步成功<br></code></pre></td></tr></table></figure><ul><li>master实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">#在master上可以看到所有slave信息<br>127.0.0.1:6379&gt; info replication<br># Replication<br>role:master<br>connected_slaves:1<br>slave0:ip=127.0.0.1,port=6380,state=online,offset=1907,lag=0<br>master_failover_state:no-failover<br>master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77<br>master_replid2:0000000000000000000000000000000000000000<br>master_repl_offset:1907<br>second_repl_offset:-1<br>repl_backlog_active:1<br>repl_backlog_size:1048576<br>repl_backlog_first_byte_offset:1<br>repl_backlog_histlen:1907<br>127.0.0.1:6379&gt; <br></code></pre></td></tr></table></figure><h3 id="删除主从同步"><a href="#删除主从同步" class="headerlink" title="删除主从同步"></a>删除主从同步</h3><ul><li>在slave实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在从节点执行 REPLICAOF NO ONE 指令可以取消主从复制<br>#取消复制,在slave上执行REPLICAOF NO ONE,会断开和master的连接不再主从复制, 但不会清除slave<br>上已有的数据<br>127.0.0.1:6380&gt; REPLICAOF no one<br></code></pre></td></tr></table></figure><h3 id="验证同步"><a href="#验证同步" class="headerlink" title="验证同步"></a>验证同步</h3><ul><li>查看master日志</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# tail -f /usr/local/src/redis/log/redis_6379.log <br>945:M 13 Dec 2022 22:27:17.550 * Synchronization with replica 127.0.0.1:6380 succeeded<br>945:M 13 Dec 2022 22:42:59.410 # Connection with replica 127.0.0.1:6380 lost.<br>945:M 13 Dec 2022 22:46:34.373 * Replica 127.0.0.1:6380 asks for synchronization<br>945:M 13 Dec 2022 22:46:34.373 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for &#x27;1200062e6b1065421dec8531ca2d96776029ab3d&#x27;, my replication IDs are &#x27;f945fd1714d8d3b78a149c8b2e0d57567ee6cb77&#x27; and &#x27;0000000000000000000000000000000000000000&#x27;)<br>945:M 13 Dec 2022 22:46:34.373 * Starting BGSAVE for SYNC with target: disk<br>945:M 13 Dec 2022 22:46:34.374 * Background saving started by pid 1690<br>1690:C 13 Dec 2022 22:46:34.376 * DB saved on disk<br>1690:C 13 Dec 2022 22:46:34.377 * RDB: 2 MB of memory used by copy-on-write<br>945:M 13 Dec 2022 22:46:34.435 * Background saving terminated with success<br>945:M 13 Dec 2022 22:46:34.435 * Synchronization with replica 127.0.0.1:6380 succeeded<br><br></code></pre></td></tr></table></figure><ul><li>查看slave日志</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# tail -f /usr/local/src/redis/log/redis_6380.log<br>946:S 13 Dec 2022 22:46:34.436 * MASTER &lt;-&gt; REPLICA sync: Finished with success<br>946:S 13 Dec 2022 22:46:34.437 * Background append only file rewriting started by pid 1691<br>946:S 13 Dec 2022 22:46:34.470 * AOF rewrite child asks to stop sending diffs.<br>1691:C 13 Dec 2022 22:46:34.470 * Parent agreed to stop sending diffs. Finalizing AOF...<br>1691:C 13 Dec 2022 22:46:34.470 * Concatenating 0.00 MB of AOF diff received from parent.<br>1691:C 13 Dec 2022 22:46:34.470 * SYNC append only file rewrite performed<br>1691:C 13 Dec 2022 22:46:34.471 * AOF rewrite: 2 MB of memory used by copy-on-write<br>946:S 13 Dec 2022 22:46:34.536 * Background AOF rewrite terminated with success<br>946:S 13 Dec 2022 22:46:34.536 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)<br>946:S 13 Dec 2022 22:46:34.536 * Background AOF rewrite finished successfully<br><br></code></pre></td></tr></table></figure><h3 id="修改slave配置文件"><a href="#修改slave配置文件" class="headerlink" title="修改slave配置文件"></a>修改slave配置文件</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# vim /usr/local/src/redis/etc/redis6380.conf <br># replicaof &lt;masterip&gt; &lt;masterport&gt;<br>replicaof 127.0.0.1 6379 #指定master的IP和端口号，我这里在同一台机器上安装了多实例<br><br><br># masterauth &lt;master-password&gt;<br>masterauth 123456 #如果密码需要设置<br><br>systemctl restart redis<br><br>#在master上查看状态<br>127.0.0.1:6379&gt; info replication<br># Replication<br>role:master<br>connected_slaves:2<br>slave0:ip=127.0.0.1,port=6380,state=online,offset=3307,lag=1<br>slave1:ip=127.0.0.1,port=6381,state=online,offset=3307,lag=1<br>master_failover_state:no-failover<br>master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77<br>master_replid2:0000000000000000000000000000000000000000<br>master_repl_offset:3307<br>second_repl_offset:-1<br>repl_backlog_active:1<br>repl_backlog_size:1048576<br>repl_backlog_first_byte_offset:1<br>repl_backlog_histlen:3307<br>127.0.0.1:6379&gt; <br><br>#停止master的redis服务：systemctl stop redis,在slave上可以观察到以下现象<br>127.0.0.1:6381&gt; info replication<br># Replication<br>role:slave<br>master_host:192.168.1.104<br>master_port:6379<br>master_link_status:down   #显示down，表示无法连接master<br>master_last_io_seconds_ago:-1<br>master_sync_in_progress:0<br>slave_read_repl_offset:84<br>slave_repl_offset:84<br>master_link_down_since_seconds:14<br>slave_priority:100<br>slave_read_only:1<br>replica_announced:1<br>connected_slaves:0<br>master_failover_state:no-failover<br>master_replid:f6eefc841166e73282b4bab58527081653ddb0d1<br>master_replid2:0000000000000000000000000000000000000000<br>master_repl_offset:84<br>second_repl_offset:-1<br>repl_backlog_active:1<br>repl_backlog_size:1048576<br>repl_backlog_first_byte_offset:15<br>repl_backlog_histlen:70<br>127.0.0.1:6381&gt; <br><br></code></pre></td></tr></table></figure><ul><li>slave 只读状态<br>验证Slave节点为只读状态, 不支持写入</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6381&gt; set ll aa<br>(error) READONLY You can&#x27;t write against a read only replica.<br>127.0.0.1:6381&gt; <br></code></pre></td></tr></table></figure><h1 id="Redis实现哨兵架构"><a href="#Redis实现哨兵架构" class="headerlink" title="Redis实现哨兵架构"></a>Redis实现哨兵架构</h1><p>以下案例实现一主两从的基于哨兵的高可用Redis架构</p><p><img src="/../image.assets/1671283453244.png" alt="1671283453244"></p><ul><li>先实现主从架构</li></ul><p>哨兵的前提是已经实现了Redis的主从复制<br>注意: master 的配置文件中masterauth 和slave 都必须相同<br>所有主从节点的 redis.conf 中关健配置<br>范例: 准备主从环境配置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">#在所有主从节点执行<br>vim redis.conf<br>bind 0.0.0.0<br>masterauth &quot;123456&quot;<br>requirepass &quot;123456&quot;<br>#或者非交互执行<br>[root@centos8 ~]#sed -i -e &#x27;s/bind 127.0.0.1/bind 0.0.0.0/&#x27; -e &#x27;s/^# masterauth<br>.*/masterauth 123456/&#x27; -e &#x27;s/^# requirepass .*/requirepass 123456/&#x27;<br>/etc/redis.conf<br>#在所有从节点执行<br>[root@centos8 ~]#echo &quot;replicaof 192.168.32.133 6379&quot; &gt;&gt; /etc/redis.conf<br>#在所有主从节点执行<br>[root@centos8 ~]#systemctl enable --now redis<br></code></pre></td></tr></table></figure><ul><li>配置slave1</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@redis-slave1 ~]#redis-cli -a 123456<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface<br>may not be safe.<br>127.0.0.1:6379&gt; REPLICAOF 192.168.32.133 6379<br>OK<br>127.0.0.1:6379&gt; CONFIG SET masterauth &quot;123456&quot;<br>OK<br></code></pre></td></tr></table></figure><ul><li>配置slave2</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@redis-slave2 ~]#redis-cli -a 123456<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface<br>may not be safe.<br>127.0.0.1:6379&gt; REPLICAOF 192.168.32.133 6379<br>OK<br>127.0.0.1:6379&gt; CONFIG SET masterauth &quot;123456&quot;<br>OK<br></code></pre></td></tr></table></figure><ul><li>编辑哨兵配置<br>sentinel配置<br>Sentinel实际上是一个特殊的redis服务器,有些redis指令支持,但很多指令并不支持.默认监听在<br>26379&#x2F;tcp端口.<br>哨兵服务可以和Redis服务器分开部署在不同主机，但为了节约成本一般会部署在一起<br>所有redis节点使用相同的以下示例的配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs text">#如果是编译安装，在源码目录有sentinel.conf，复制到安装目录即可，<br>如:/usr/local/src/redis/etc/sentinel.conf<br>[root@centos8 ~]#cp redis-6.2.5/sentinel.conf /usr/local/src/redis/etc/<br>[root@centos8 ~]#chown redis.redis /usr/local/src/redis/etc/sentinel.conf<br>[root@centos8 ~]#vim /etc/redis-sentinel.conf<br>bind 0.0.0.0<br>port 26379<br>daemonize yes<br>pidfile &quot;redis-sentinel.pid&quot;<br>logfile &quot;sentinel_26379.log&quot;<br>dir &quot;/tmp&quot; #工作目录<br>sentinel monitor mymaster 10.0.0.8 6379 2<br>#mymaster是集群的名称，此行指定当前mymaster集群中master服务器的地址和端口<br>#2为法定人数限制(quorum)，即有几个sentinel认为master down了就进行故障转移，一般此值是所有<br>sentinel节点(一般总数是&gt;=3的 奇数,如:3,5,7等)的一半以上的整数值，比如，总数是3，即3/2=1.5，<br>取整为2,是master的ODOWN客观下线的依据<br>sentinel auth-pass mymaster 123456<br><br>#mymaster集群中master的密码，注意此行要在上面行的下面<br>sentinel down-after-milliseconds mymaster 30000<br>#判断mymaster集群中所有节点的主观下线(SDOWN)的时间，单位：毫秒，建议3000<br>sentinel parallel-syncs mymaster 1<br><br>#发生故障转移后，可以同时向新master同步数据的slave的数量，数字越小总同步时间越长，但可以减轻新<br>master的负载压力<br>sentinel failover-timeout mymaster 180000<br>#所有slaves指向新的master所需的超时时间，单位：毫秒<br>sentinel deny-scripts-reconfig yes #禁止修改脚本<br>logfile /var/log/redis/sentinel.log<br></code></pre></td></tr></table></figure><ul><li>三个哨兵服务器的配置都如下</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs text">port 26379<br>daemonize no<br>pidfile &quot;/var/run/redis-sentinel.pid&quot;<br>logfile &quot;/var/log/redis/sentinel.log&quot;<br>dir &quot;/tmp&quot;<br>sentinel monitor mymaster 192.168.32.133 6379 2 #修改此行<br>sentinel auth-pass mymaster 123456 #增加此行<br>sentinel down-after-milliseconds mymaster 3000 #修改此行<br>sentinel parallel-syncs mymaster 1<br>sentinel failover-timeout mymaster 180000<br>sentinel deny-scripts-reconfig yes<br>#注意此行自动生成必须唯一,一般不需要修改，如果相同则修改此值需重启redis和sentinel服务<br>sentinel myid 50547f34ed71fd48c197924969937e738a39975b<br>.....<br># Generated by CONFIG REWRITE<br>protected-mode no<br>supervised systemd<br>sentinel leader-epoch mymaster 0<br>sentinel known-replica mymaster 10.0.0.28 6379<br>sentinel known-replica mymaster 10.0.0.18 6379<br>sentinel current-epoch 0<br></code></pre></td></tr></table></figure><ul><li>启动哨兵服务<br>将所有哨兵服务器都启动起来</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">/usr/local/src/redis/bin/redis-sentinel /usr/local/src/redis/etc/sentinel.conf<br></code></pre></td></tr></table></figure><ul><li>将服务写成service文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs text">vim /lib/systemd/system/redis-sentinel.service<br><br>[Unit]<br>Description=Redis Sentinel<br>After=network.target<br>[Service]<br>ExecStart=/usr/local/src/redis/bin/redis-sentinel /usr/local/src/redis/etc/sentinel.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT $MAINPID<br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>[Install]<br>WantedBy=multi-user.target<br><br>#注意所有节点的目录权限,否则无法启动服务<br>[root@redis-master ~]#chown -R redis.redis /usr.local/src/redis/<br></code></pre></td></tr></table></figure><ul><li>验证哨兵服务</li></ul><p>查看哨兵服务端口状态,端口26379</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos8 log]# ss -ntl<br>State            Recv-Q           Send-Q                     Local Address:Port                       Peer Address:Port           Process           <br>LISTEN           0                511                              0.0.0.0:26379                           0.0.0.0:*                                <br>LISTEN           0                511                              0.0.0.0:6379                            0.0.0.0:*                                <br>LISTEN           0                128                              0.0.0.0:22                              0.0.0.0:*                                <br>LISTEN           0                511                                [::1]:6379                               [::]:*                                <br>LISTEN           0                128                                 [::]:22                                 [::]:*                                <br>[root@centos8 log]# <br></code></pre></td></tr></table></figure><ul><li>Sentinel 运维</li></ul><p>手动让主节点下线</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:26379&gt; sentinel failover &lt;masterName&gt;<br></code></pre></td></tr></table></figure><p>范例：手动故障转移</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs text">vim redis.conf<br>replica-priority 10 #指定优先级,值越小sentinel会优先将之选为新的master,默为值为100<br>systemctl restart redis<br><br>#或者动态修改<br>[root@centos8 ~]#redis-cli -a 123456<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface<br>may not be safe.<br>127.0.0.1:6379&gt; CONFIG GET replica-priority<br>1) &quot;replica-priority&quot;<br>2) &quot;100&quot;<br>127.0.0.1:6379&gt; CONFIG SET replica-priority 99<br>OK<br>127.0.0.1:6379&gt; CONFIG GET replica-priority<br>1) &quot;replica-priority&quot;<br>2) &quot;99&quot;<br>[root@centos8 ~]#redis-cli -p 26379<br>127.0.0.1:26379&gt; sentinel failover mymaster<br>OK<br></code></pre></td></tr></table></figure><h1 id="应用程序连接-Sentinel"><a href="#应用程序连接-Sentinel" class="headerlink" title="应用程序连接 Sentinel"></a>应用程序连接 Sentinel</h1><p>Redis 官方支持多种开发语言的客户端：<a href="https://redis.io/clients">https://redis.io/clients</a></p><h2 id="客户端连接-Sentinel-工作原理"><a href="#客户端连接-Sentinel-工作原理" class="headerlink" title="客户端连接 Sentinel 工作原理"></a>客户端连接 Sentinel 工作原理</h2><ol><li>客户端获取 Sentinel 节点集合,选举出一个 Sentinel</li></ol><p><img src="/../image.assets/1671326052932.png" alt="1671326052932"></p><ol start="2"><li>由这个sentinel 通过masterName 获取master节点信息,客户端通过sentinel get-master-addr-by-name master-name这个api来获取对应主节点信息</li></ol><p><img src="/../image.assets/1671326076150.png" alt="1671326076150"></p><ol start="3"><li>客户端发送role指令确认master的信息,验证当前获取的“主节点”是真正的主节点，这样的目的是为了防止故障转移期间主节点的变化</li></ol><p><img src="/../image.assets/1671326092067.png" alt="1671326092067"></p><ol start="4"><li>客户端保持和Sentinel节点集合的联系，即订阅Sentinel节点相关频道，时刻获取关于主节点的相关信息,获取新的master 信息变化,并自动连接新的master</li></ol><p><img src="/../image.assets/1671326121741.png" alt="1671326121741"></p><h2 id="java-连接Sentinel哨兵"><a href="#java-连接Sentinel哨兵" class="headerlink" title="java 连接Sentinel哨兵"></a>java 连接Sentinel哨兵</h2><p>java 客户端连接Redis：<a href="https://github.com/xetorthio/jedis/blob/master/pom.xml">https://github.com/xetorthio/jedis/blob/master/pom.xml</a></p><h2 id="python-连接-Sentinel-哨兵"><a href="#python-连接-Sentinel-哨兵" class="headerlink" title="python 连接 Sentinel 哨兵"></a>python 连接 Sentinel 哨兵</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#yum -y install python3 python3-redis<br>[root@centos8 ~]#vim sentinel_test.py<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/usr/bin/python3</span><br>import redis<br>from redis.sentinel import Sentinel<br><span class="hljs-meta prompt_">#</span><span class="language-bash">连接哨兵服务器(主机名也可以用域名)</span><br>sentinel = Sentinel([(&#x27;192.168.32.135&#x27;, 26379),<br>                   (&#x27;192.168.32.133&#x27;, 26379),<br>                   (&#x27;192.168.32.132&#x27;, 26379)],<br>socket_timeout=0.5)<br>redis_auth_pass = &#x27;123456&#x27;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">mymaster 是配置哨兵模式的redis集群名称，此为默认值,实际名称按照个人部署案例来填写</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取主服务器地址</span><br>master = sentinel.discover_master(&#x27;mymaster&#x27;)<br>print(&quot;master:&quot;,master)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取从服务器地址</span><br>slave = sentinel.discover_slaves(&#x27;mymaster&#x27;)<br>print(&quot;slave:&quot;,slave)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取主服务器进行写入</span><br>master = sentinel.master_for(&#x27;mymaster&#x27;, socket_timeout=0.5,<br>password=redis_auth_pass, db=0)<br>w_ret = master.set(&#x27;name&#x27;, &#x27;xy&#x27;)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出：True</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取从服务器进行读取（默认是round-roubin）</span><br>slave = sentinel.slave_for(&#x27;mymaster&#x27;, socket_timeout=0.5,<br>password=redis_auth_pass, db=0)<br>r_ret = slave.get(&#x27;name&#x27;)<br>print(r_ret)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出：xy</span><br><br>chmod +x sentinel_test.py<br><br>./sentinel_test.py<br>master: (&#x27;192.168.32.135&#x27;, 6379)<br>slave: [(&#x27;192.168.32.133&#x27;, 6379)]<br>b&#x27;xy&#x27;<br></code></pre></td></tr></table></figure><h1 id="Redis-Cluster"><a href="#Redis-Cluster" class="headerlink" title="Redis Cluster"></a>Redis Cluster</h1><p><img src="/../image.assets/1671327580442.png" alt="1671327580442"></p><h2 id="Redis-Cluster-介绍"><a href="#Redis-Cluster-介绍" class="headerlink" title="Redis Cluster 介绍"></a>Redis Cluster 介绍</h2><p>使用哨兵sentinel 只能解决Redis高可用问题，实现Redis的自动故障转移,但仍然无法解决Redis Master<br>单节点的性能瓶颈问题<br>为了解决单机性能的瓶颈，提高Redis 服务整体性能，可以使用分布式集群的解决方案<br><strong>早期 Redis 分布式集群部署方案：</strong></p><ul><li>客户端分区：由客户端程序自己实现写入分配、高可用管理和故障转移等,对客户端的开发实现较为复杂</li><li>代理服务：客户端不直接连接Redis,而先连接到代理服务，由代理服务实现相应读写分配，当前代理服务都是第三方实现.此方案中客户端实现无需特殊开发,实现容易,但是代理服务节点仍存有单点故障和性能瓶颈问题。比如：豌豆荚开发的 codis</li></ul><p>Redis 3.0 版本之后推出无中心架构的 Redis Cluster ，支持多个master节点并行写入和故障的自动转移动能</p><h2 id="Redis-cluster-架构"><a href="#Redis-cluster-架构" class="headerlink" title="Redis cluster 架构"></a>Redis cluster 架构</h2><h3 id="Redis-cluster-架构-1"><a href="#Redis-cluster-架构-1" class="headerlink" title="Redis cluster 架构"></a>Redis cluster 架构</h3><p><img src="/../image.assets/1671328724924.png" alt="1671328724924"></p><p>Redis cluster 需要至少 3个master节点才能实现,slave节点数量不限,当然一般每个master都至少对应的有一个slave节点<br>如果有三个主节点采用哈希槽 hash slot 的方式来分配16384个槽位 slot<br>此三个节点分别承担的slot 区间可以是如以下方式分配</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">节点M1 0－5460<br>节点M2 5461－10922<br>节点M3 10923－16383<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1671328782321.png" alt="1671328782321"></p><h3 id="Redis-cluster的工作原理"><a href="#Redis-cluster的工作原理" class="headerlink" title="Redis cluster的工作原理"></a>Redis cluster的工作原理</h3><p><img src="/../image.assets/1671328827665.png" alt="1671328827665"></p><h4 id="数据分区"><a href="#数据分区" class="headerlink" title="数据分区"></a>数据分区</h4><p>如果是单机存储的话，直接将数据存放在单机redis就行了。但是如果是集群存储，就需要考虑到数据分区了。</p><p><img src="/../image.assets/1671328870673.png" alt="1671328870673"></p><p><img src="/../image.assets/1671328992908.png" alt="1671328992908"></p><p><img src="/../image.assets/1671329004830.png" alt="1671329004830"></p><h4 id="集群通信"><a href="#集群通信" class="headerlink" title="集群通信"></a>集群通信</h4><p>但是寻找槽的过程并不是一次就命中的，比如上图key将要存放在14396槽中，但是并不是一下就锁定了node3节点，可能先去询问node1，然后才访问node3。<br>而集群中节点之间的通信，保证了最多两次就能命中对应槽所在的节点。因为在每个节点中，都保存了其他节点的信息，知道哪个槽由哪个节点负责。这样即使第一次访问没有命中槽，但是会通知客户端，该槽在哪个节点，这样访问对应节点就能精准命中。</p><p><img src="/../image.assets/1671329162018.png" alt="1671329162018"></p><p><img src="/../image.assets/1671329175313.png" alt="1671329175313"></p><h4 id="集群伸缩"><a href="#集群伸缩" class="headerlink" title="集群伸缩"></a>集群伸缩</h4><p>集群并不是建立之后，节点数就固定不变的，也会有新的节点加入集群或者集群中的节点下线，这就是集群的扩容和缩容。但是由于集群节点和槽息息相关，所以集群的伸缩也对应了槽和数据的迁移</p><p><img src="/../image.assets/1671329671490.png" alt="1671329671490"></p><h4 id="集群扩容"><a href="#集群扩容" class="headerlink" title="集群扩容"></a>集群扩容</h4><p>当有新的节点准备好加入集群时，这个新的节点还是孤立节点，加入有两种方式。一个是通过集群节点执行命令来和孤立节点握手，另一个则是使用脚本来添加节点。</p><p><img src="/../image.assets/1671329705222.png" alt="1671329705222"></p><p><img src="/../image.assets/1671329719113.png" alt="1671329719113"></p><p><img src="/../image.assets/1671329733621.png" alt="1671329733621"></p><h4 id="集群缩容"><a href="#集群缩容" class="headerlink" title="集群缩容"></a>集群缩容</h4><p><img src="/../image.assets/1671329778357.png" alt="1671329778357"></p><p><img src="/../image.assets/1671329787950.png" alt="1671329787950"></p><p><img src="/../image.assets/1671329813270.png" alt="1671329813270"></p><p><img src="/../image.assets/1671329824032.png" alt="1671329824032"></p><p><img src="/../image.assets/1671329836794.png" alt="1671329836794"></p><h4 id="故障转移"><a href="#故障转移" class="headerlink" title="故障转移"></a>故障转移</h4><p><img src="/../image.assets/1671329862455.png" alt="1671329862455"></p><p><img src="/../image.assets/1671329876909.png" alt="1671329876909"></p><p>当从节点走马上任变成主节点之后，就要开始进行替换主节点：</p><ol><li>让该slave节点执行slaveof no one变为master节点</li><li>将故障节点负责的槽分配给该节点</li><li>向集群中其他节点广播Pong消息，表明已完成故障转移</li><li>故障节点重启后，会成为new_master的slave节点</li></ol><h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="基于Redis-5-以上版本的-redis-cluster-部署"><a href="#基于Redis-5-以上版本的-redis-cluster-部署" class="headerlink" title="基于Redis 5 以上版本的 redis cluster 部署"></a>基于Redis 5 以上版本的 redis cluster 部署</h3><p>官方文档：<a href="https://redis.io/topics/cluster-tutorial">https://redis.io/topics/cluster-tutorial</a></p><h4 id="创建-redis-cluster集群的环境准备"><a href="#创建-redis-cluster集群的环境准备" class="headerlink" title="创建 redis cluster集群的环境准备"></a>创建 redis cluster集群的环境准备</h4><p><img src="/../image.assets/1671337258210.png" alt="1671337258210"></p><ul><li>每个Redis 节点采用相同的相同的Redis版本、相同的密码、硬件配置</li><li>所有Redis服务器必须没有任何数据</li><li>准备六台主机，地址如下：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.32.132<br>192.168.32.137<br>192.168.32.140<br>192.168.32.129<br>192.168.32.136<br>192.168.32.138<br></code></pre></td></tr></table></figure><h4 id="启用-redis-cluster-配置"><a href="#启用-redis-cluster-配置" class="headerlink" title="启用 redis cluster 配置"></a>启用 redis cluster 配置</h4><p>每个节点安装相同版每个节点修改redis配置，必须开启cluster功能的参数</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">vim /etc/redis.conf<br>bind 0.0.0.0<br>masterauth 123456 #建议配置，否则后期的master和slave主从复制无法成功，还需再配置<br>requirepass 123456<br>cluster-enabled yes #取消此行注释,必须开启集群，开启后 redis 进程会有cluster标识<br>cluster-config-file nodes-6379.conf #取消此行注释,此为集群状态数据文件,记录主从关系<br>及slot范围信息,由redis cluster 集群自动创建和维护<br>cluster-require-full-coverage no #默认值为yes,设为no可以防止一个节点不可用导致整<br>个cluster不可用<br><br></code></pre></td></tr></table></figure><p>以下方式二选一</p><ul><li>执行下面命令,批量修改</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text"><br>sed -i.bak -e &#x27;s/bind 127.0.0.1/bind 0.0.0.0/&#x27; -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# requirepass/a requirepass 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /etc/redis.conf<br></code></pre></td></tr></table></figure><ul><li>如果是编译安装可以执行下面操作</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">sed -i.bak -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /usr/local/src/redis/etc/redis.conf<br></code></pre></td></tr></table></figure><p>开机启动redis</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">systemctl enable --now redis<br># 修改完配置文件重启redis<br>systemctl restart redis<br></code></pre></td></tr></table></figure><p>验证当前Redis服务状态：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">#开启了16379的cluster的端口,实际的端口=redis port + 10000<br>[root@centos7 ~]# ss -ntl<br>State      Recv-Q Send-Q                       Local Address:Port                                      Peer Address:Port              <br>LISTEN     0      128                                      *:22                                                   *:*                  <br>LISTEN     0      100                              127.0.0.1:25                                                   *:*                  <br>LISTEN     0      511                                      *:16379                                                *:*                  <br>LISTEN     0      511                                      *:6379                                                 *:*                  <br>LISTEN     0      128                                   [::]:22                                                [::]:*                  <br>LISTEN     0      100                                  [::1]:25                                                [::]:*                  <br>LISTEN     0      511                                  [::1]:16379                                             [::]:*                  <br>LISTEN     0      511                                  [::1]:6379                                              [::]:*                  <br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h4 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs text">#命令redis-cli的选项 --cluster-replicas 1 表示每个master对应一个slave节点<br># 默认前三个为主节点<br>[root@centos8 etc]# redis-cli -a 123456 --cluster create 192.168.32.132:6379 192.168.32.137:6379 192.168.32.140:6379 192.168.32.129:6379 192.168.32.136:6379 192.168.32.138:6379 --cluster-replicas 1<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...<br>Master[0] -&gt; Slots 0 - 5460<br>Master[1] -&gt; Slots 5461 - 10922<br>Master[2] -&gt; Slots 10923 - 16383<br>Adding replica 192.168.32.136:6379 to 192.168.32.132:6379<br>Adding replica 192.168.32.138:6379 to 192.168.32.137:6379<br>Adding replica 192.168.32.129:6379 to 192.168.32.140:6379<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[0-5460] (5461 slots) master<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[5461-10922] (5462 slots) master<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[10923-16383] (5461 slots) master<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes<br>&gt;&gt;&gt; Nodes configuration updated<br>&gt;&gt;&gt; Assign a different config epoch to each node<br>&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster<br>Waiting for the cluster to join<br>.<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[0-5460] (5461 slots) master<br>   1 additional replica(s)<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[10923-16383] (5461 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[5461-10922] (5462 slots) master<br>   1 additional replica(s)<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h4 id="验证集群"><a href="#验证集群" class="headerlink" title="验证集群"></a>验证集群</h4><ul><li>查看主从状态</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6379&gt; info replication<br># Replication<br>role:master<br>connected_slaves:1<br>slave0:ip=192.168.32.136,port=6379,state=online,offset=98,lag=1<br>master_failover_state:no-failover<br>master_replid:b1bd51213722f38a83c8bb525e8a74e62392a161<br>master_replid2:0000000000000000000000000000000000000000<br>master_repl_offset:98<br>second_repl_offset:-1<br>repl_backlog_active:1<br>repl_backlog_size:1048576<br>repl_backlog_first_byte_offset:1<br>repl_backlog_histlen:98<br>127.0.0.1:6379&gt; <br></code></pre></td></tr></table></figure><ul><li><p>验证集群状态</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6379&gt; CLUSTER INFO<br>cluster_state:ok<br>cluster_slots_assigned:16384<br>cluster_slots_ok:16384<br>cluster_slots_pfail:0<br>cluster_slots_fail:0<br>cluster_known_nodes:6    # 节点数<br>cluster_size:3           # 三个集群<br>cluster_current_epoch:6<br>cluster_my_epoch:1<br>cluster_stats_messages_ping_sent:210<br>cluster_stats_messages_pong_sent:210<br>cluster_stats_messages_sent:420<br>cluster_stats_messages_ping_received:205<br>cluster_stats_messages_pong_received:210<br>cluster_stats_messages_meet_received:5<br>cluster_stats_messages_received:420<br>127.0.0.1:6379&gt; <br><br><br>#查看任意节点的集群状态<br>[root@centos8 ~]# redis-cli -a 123456 --cluster info 192.168.32.137:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 5462 slots | 1 slaves.<br>192.168.32.140:6379 (f49ca2e5...) -&gt; 0 keys | 5461 slots | 1 slaves.<br>192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 5461 slots | 1 slaves.<br>[OK] 0 keys in 3 masters.<br>0.00 keys per slot on average.<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h4 id="查看对应关系"><a href="#查看对应关系" class="headerlink" title="查看对应关系"></a>查看对应关系</h4></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos8 ~]# redis-cli -a 123456 CLUSTER NODES<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379@16379 slave f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 0 1671364792207 3 connected<br>658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379@16379 myself,master - 0 1671364792000 1 connected 0-5460<br>f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379@16379 master - 0 1671364792000 3 connected 10923-16383<br>46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379@16379 master - 0 1671364793216 2 connected 5461-10922<br>f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379@16379 slave 658dd91e4b51bf06b161e6903d4084c77abd195d 0 1671364793000 1 connected<br>eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379@16379 slave 46b54e8298e11e77450e232c9a0ee057b362191a 0 1671364792000 2 connected<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h4 id="测试集群写入数据"><a href="#测试集群写入数据" class="headerlink" title="测试集群写入数据"></a>测试集群写入数据</h4><p><img src="/../image.assets/1671364901011.png" alt="1671364901011"></p><ul><li>redis cluster 写入key</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">#经过算法计算，当前key的槽位需要写入指定的node<br>[root@centos8 ~]# redis-cli -a 123456 set k1 v1<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>(error) MOVED 12706 192.168.32.140:6379  #槽位不在当前node所以无法写入<br>[root@centos8 ~]# <br><br>#指定槽位对应node可写入<br>[root@centos8 ~]# redis-cli -h 192.168.32.140 -a 123456 set k1 v1<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>OK<br>[root@centos8 ~]# <br><br>#对应的slave节点可以KEYS *,但GET k1失败,可以到master上执行GET k1<br>[root@centos8 ~]# redis-cli -h 192.168.32.129 -a 123456 get k1<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>(error) MOVED 12706 192.168.32.140:6379<br>[root@centos8 ~]# redis-cli -h 192.168.32.129 -a 123456 keys &quot;*&quot;<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>1) &quot;k1&quot;<br>[root@centos8 ~]# <br><br><br></code></pre></td></tr></table></figure><h1 id="Redis-cluster-管理"><a href="#Redis-cluster-管理" class="headerlink" title="Redis cluster 管理"></a>Redis cluster 管理</h1><h2 id="集群扩容-1"><a href="#集群扩容-1" class="headerlink" title="集群扩容"></a>集群扩容</h2><p>扩容适用场景：<br>当前客户量激增，现有的Redis cluster架构已经无法满足越来越高的并发访问请求，为解决此问题,新购置两台服务器，要求将其动态添加到现有集群，但不能影响业务的正常访问。<br>注意: 生产环境一般建议master节点为奇数个,比如:3,5,7,以防止脑裂现象</p><ul><li>添加节点准备</li></ul><p>增加Redis 新节点，需要与之前的Redis node版本和配置一致，然后分别再启动两台Redis node，应为一主一从。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">192.168.32.133 主<br>192.168.32.139  从<br># 修改配置文件,主从节点都修改<br>sed -i.bak -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /usr/local/src/redis/etc/redis.conf<br><br>systemctl restart redis<br></code></pre></td></tr></table></figure><ul><li>添加新的master节点到集群<br>使用以下命令添加新节点，要添加的新redis节点IP和端口添加到的已有的集群中任意节点的IP:端口</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">add-node new_host:new_port existing_host:existing_port [--slave --master-id<br>&lt;arg&gt;]<br>#说明：<br>new_host:new_port #指定新添加的主机的IP和端口<br>existing_host:existing_port #指定已有的集群中任意节点的IP和端口<br></code></pre></td></tr></table></figure><ul><li>Redis 3&#x2F;4 版本的添加命令：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">#把新的Redis 节点192.168.32.133添加到当前Redis集群当中。<br>[root@redis-node1 ~]#redis-trib.rb add-node 192.168.32.133:6379 192.168.32.132:6379<br></code></pre></td></tr></table></figure><ul><li>Redis 5 以上版本的添加命令：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs text">#将一台新的主机加入集群<br>[root@redis-node1 ~]#redis-cli -a 123456 --cluster add-node 192.168.32.133:6379 &lt;当前<br>任意集群节点&gt;:6379<br>[root@centos8 data]# redis-cli -a 123456 --cluster add-node 192.168.32.133:6379 192.168.32.132:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>&gt;&gt;&gt; Adding node 192.168.32.133:6379 to cluster 192.168.32.132:6379<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[0-5460] (5461 slots) master<br>   1 additional replica(s)<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[10923-16383] (5461 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[5461-10922] (5462 slots) master<br>   1 additional replica(s)<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>&gt;&gt;&gt; Send CLUSTER MEET to node 192.168.32.133:6379 to make it join the cluster.<br>[OK] New node added correctly.<br>[root@centos8 data]# <br><br></code></pre></td></tr></table></figure><ul><li>在新的master上重新分配槽位<br>新的node节点加到集群之后,默认是master节点，但是没有slots，需要重新分配,否则没有槽位将无法访问<br>注意: 重新分配槽位需要清空数据,所以需要先备份数据,扩展后再恢复数据<br>Redis 3&#x2F;4 版本命令:</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@redis-node1 ~]# redis-trib.rb check 10.0.0.67:6379 #当前状态<br>[root@redis-node1 ~]# redis-trib.rb reshard &lt;任意节点&gt;:6379 #重新分片<br>[root@redis-node1 ~]# redis-trib.rb fix 10.0.0.67:6379 #如果迁移失败使用此命令修复集群<br></code></pre></td></tr></table></figure><ul><li>Redis 5以上版本命令：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@redis-node1 ~]#redis-cli -a 123456 --cluster reshard &lt;当前任意集群节点&gt;:6379<br>[root@centos8 data]# redis-cli -a 123456 --cluster reshard 192.168.32.133:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.133:6379)<br>M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379<br>   slots: (0 slots) master<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[0-5460] (5461 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[5461-10922] (5462 slots) master<br>   1 additional replica(s)<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[10923-16383] (5461 slots) master<br>   1 additional replica(s)<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>How many slots do you want to move (from 1 to 16384)? 4096<br># 复制新加入的节点的ID，即192.168.32.133的节点ID<br>What is the receiving node ID? 77cfc3429c8b470331520074faea7c3a21f77d1f<br>Please enter all the source node IDs.<br>  Type &#x27;all&#x27; to use all the nodes as source nodes for the hash slots.<br>  Type &#x27;done&#x27; once you entered all the source nodes IDs.<br>Source node #1: all     # 选择all<br>Do you want to proceed with the proposed reshard plan (yes/no)? yes<br></code></pre></td></tr></table></figure><ul><li>为新的master指定新的slave节点</li></ul><p>当前Redis集群中新的master节点存单点问题,还需要给其添加一个对应slave节点，实现高可用功能<br>有两种方式：<br>方法1：在新加节点到集群时，直接将之设置为slave<br>Redis 3&#x2F;4 添加命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">redis-trib.rb add-node --slave --master-id<br>750cab050bc81f2655ed53900fd43d2e64423333 192.168.32.139:6379 &lt;任意集群节点&gt;:6379<br></code></pre></td></tr></table></figure><p>Redis 5 以上版本添加命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">redis-cli -a 123456 --cluster add-node 192.168.32.139:6379 &lt;任意集群节点&gt;:6379 --<br>cluster-slave --cluster-master-id d6e2eca6b338b717923f64866bd31d42e52edc98<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs text"># 查看当前状态<br>[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 4096 slots | 0 slaves.<br>192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.<br>192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>[OK] 1 keys in 4 masters.<br>0.00 keys per slot on average.<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[1365-5460] (4096 slots) master<br>   1 additional replica(s)<br>M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379<br>   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[12288-16383] (4096 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[6827-10922] (4096 slots) master<br>   1 additional replica(s)<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>[root@centos8 ~]# <br><br>#直接加为slave节点<br>[root@centos8 ~]# redis-cli -a 123456 --cluster add-node 192.168.32.139:6379 192.168.32.132:6379 --cluster-slave --cluster-master-id 77cfc3429c8b470331520074faea7c3a21f77d1f<br><br><br># 验证<br>[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.<br>192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>[OK] 1 keys in 4 masters.<br>0.00 keys per slot on average.<br><br></code></pre></td></tr></table></figure><h2 id="集群缩容-1"><a href="#集群缩容-1" class="headerlink" title="集群缩容"></a>集群缩容</h2><p>缩容适用场景：<br>随着业务萎缩用户量下降明显,和领导商量决定将现有Redis集群的8台主机中下线两台主机挪做它用,缩容后性能仍能满足当前业务需求<br>删除节点过程：<br>扩容时是先添加node到集群，然后再分配槽位，而缩容时的操作相反，是先将被要删除的node上的槽位迁移到集群中的其他node上，然后 才能再将其从集群中删除，如果一个node上的槽位没有被完全迁移空，删除该node时也会提示有数据出错导致无法删除。</p><p>迁移要删除的master节点上面的槽位到其它master<br>注意: 被迁移Redis master源服务器必须保证没有数据，否则迁移报错并会被强制中断。<br>Redis 3&#x2F;4 版本命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@redis-node1 ~]# redis-trib.rb reshard 10.0.0.8:6379<br>[root@redis-node1 ~]# redis-trib.rb fix 10.0.0.8:6379 #如果迁移失败使用此命令修复集群<br></code></pre></td></tr></table></figure><p>Redis 5版本以上命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs text"># 查看当前状态<br>[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.<br>192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>[OK] 1 keys in 4 masters.<br>0.00 keys per slot on average.<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[1365-5460] (4096 slots) master<br>   1 additional replica(s)<br>M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379<br>   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master<br>   1 additional replica(s)<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[12288-16383] (4096 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[6827-10922] (4096 slots) master<br>   1 additional replica(s)<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: a44914056fd3a170850ad572c0e238b499455897 192.168.32.139:6379<br>   slots: (0 slots) slave<br>   replicates 77cfc3429c8b470331520074faea7c3a21f77d1f<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>[root@centos8 ~]# <br><br><br>#连接到任意集群节点，#最后1365个slot从192.168.32.133移动到第一个master节点192.168.32.132上<br>[root@centos8 ~]# redis-cli -a 123456 --cluster reshard 192.168.32.132:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[1365-5460] (4096 slots) master<br>   1 additional replica(s)<br>M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379<br>   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master<br>   1 additional replica(s)<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[12288-16383] (4096 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[6827-10922] (4096 slots) master<br>   1 additional replica(s)<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: a44914056fd3a170850ad572c0e238b499455897 192.168.32.139:6379<br>   slots: (0 slots) slave<br>   replicates 77cfc3429c8b470331520074faea7c3a21f77d1f<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>How many slots do you want to move (from 1 to 16384)? 1356 #共4096/3分别给其它三个master节点<br>What is the receiving node ID? 658dd91e4b51bf06b161e6903d4084c77abd195d # master id<br>Please enter all the source node IDs.<br>  Type &#x27;all&#x27; to use all the nodes as source nodes for the hash slots.<br>  Type &#x27;done&#x27; once you entered all the source nodes IDs.<br>Source node #1: 77cfc3429c8b470331520074faea7c3a21f77d1f  # 删除ID，192.168.32.133的ID<br>Source node #2: done<br>Do you want to proceed with the proposed reshard plan (yes/no)? yes<br><br># redis-cli -a 123456 --cluster reshard 192.168.32.132:6379 该命令在执行两次<br></code></pre></td></tr></table></figure><ul><li>从集群中删除服务器</li></ul><p>上面步骤完成后,槽位已经迁移走，但是节点仍然还属于集群成员，因此还需从集群删除该节点<br>注意: 删除服务器前,必须清除主机上面的槽位,否则会删除主机失败<br>Redis 3&#x2F;4命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@s~]#redis-trib.rb del-node &lt;任意集群节点的IP&gt;:6379<br>dfffc371085859f2858730e1f350e9167e287073<br>#dfffc371085859f2858730e1f350e9167e287073 是删除节点的ID<br>&gt;&gt;&gt; Removing node dfffc371085859f2858730e1f350e9167e287073 from cluster<br>192.168.7.102:6379<br>&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...<br>&gt;&gt;&gt; SHUTDOWN the node.<br></code></pre></td></tr></table></figure><p>Redis 5以上版本命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@redis-node1 ~]#redis-cli -a 123456 --cluster del-node &lt;任意集群节点的IP&gt;:6379<br>cb028b83f9dc463d732f6e76ca6bbcd469d948a7<br>#cb028b83f9dc463d732f6e76ca6bbcd469d948a7是删除节点的ID<br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs text"># 查看节点信息<br>[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 8164 slots | 1 slaves.<br>192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 28 slots | 1 slaves.<br>192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.<br>192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.<br>[OK] 1 keys in 4 masters.<br>0.00 keys per slot on average.<br>&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)<br>M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379<br>   slots:[0-6826],[10923-12259] (8164 slots) master<br>   1 additional replica(s)<br>M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379<br>   slots:[12260-12287] (28 slots) master<br>   1 additional replica(s)<br>S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379<br>   slots: (0 slots) slave<br>   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e<br>M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379<br>   slots:[12288-16383] (4096 slots) master<br>   1 additional replica(s)<br>M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379<br>   slots:[6827-10922] (4096 slots) master<br>   1 additional replica(s)<br>S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379<br>   slots: (0 slots) slave<br>   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d<br>S: a44914056fd3a170850ad572c0e238b499455897 192.168.32.139:6379<br>   slots: (0 slots) slave<br>   replicates 77cfc3429c8b470331520074faea7c3a21f77d1f<br>S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379<br>   slots: (0 slots) slave<br>   replicates 46b54e8298e11e77450e232c9a0ee057b362191a<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br>[root@centos8 ~]# <br><br># 删除192.168.32.133节点<br>[root@centos8 ~]# redis-cli -a 123456 --cluster del-node 192.168.32.132:6379 77cfc3429c8b470331520074faea7c3a21f77d1f<br>Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.<br>&gt;&gt;&gt; Removing node 77cfc3429c8b470331520074faea7c3a21f77d1f from cluster 192.168.32.132:6379<br>&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...<br>&gt;&gt;&gt; Sending CLUSTER RESET SOFT to the deleted node.<br>[root@centos8 ~]# <br></code></pre></td></tr></table></figure><h1 id="常见面试题"><a href="#常见面试题" class="headerlink" title="常见面试题"></a>常见面试题</h1><ul><li>Redis 做什么的,即在哪些场景下使用</li><li>如果监控 Redis 是否出现故障</li><li>Redis客户端timeout报错突然增加，排查思路是怎样的？</li><li>请简单描述pipeline功能，为什么pipeline功能会提升redis性能?</li><li>本地redis-client访问远程Redis服务出错，说出几种常见的错误?</li><li>key-value的大小超大或单key的qps超高，会对Redis本身造成什么样的影响、会对访问Redis的其他客户端造成什么样的影响？</li><li>Zabbix 监控 Redis 哪些监控项</li><li>RDB和AOF持久化区别</li><li>docker拉取一个Redis如何实现数据持久化保存</li><li>Redis 支持哪些数据类型</li><li>Redis 如何实现消息队列</li><li>描述下常见的redis集群架构有哪些，他们之间的优缺点对比</li><li>主从复制工作原理</li><li>Redis 如何实现高可用</li><li>哨兵工作原理</li><li>Redis 集群的工作原理</li><li>Redis 集群如果避免脑裂</li><li>Redis 集群最少几个节点为什么?</li><li>Redis的集群槽位多少个</li><li>Redis集群中某个节点缺少一个槽位是否能使用</li><li>Redis数据写入的时候是怎么在各个节点槽位分配数据的</li><li>Redis的数据存储是以什么样的方式存储</li><li>Redis集群的各槽位和总槽位之间什么关系</li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis部署和基础使用</title>
    <link href="/2022/12/07/Redis%E9%83%A8%E7%BD%B2%E5%92%8C%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/12/07/Redis%E9%83%A8%E7%BD%B2%E5%92%8C%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Redis基础"><a href="#Redis基础" class="headerlink" title="Redis基础"></a>Redis基础</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis (Remote Dictionary Server远程字典服务)是一个遵循BSD MIT开源协议的高性能的NoSQL.Redis基于ANSI C语言语言)编写的key-value数据库,是意大利的Salvatore Sanfilippo在2009年发布，从2010年3月15日起，Redis的开发工作由VMware主持。从2013年5月开始，Redis的开发由Pivotal公司赞助。目前国内外使用的公司众多,比如:阿里,腾讯,百度,京东,新浪微博,GitHub,Twitter 等Redis的出现，很大程度补偿了memcached这类key&#x2F;value存储的不足，在部分场合可以对关系数据库起到很好的补充作用。它提供了Java，C&#x2F;C++，Go, C#，PHP，JavaScript，Perl，Object-C，Python，Ruby，Erlang等客户端<br>DB-Engine月度排行榜Redis在键值型存储类的数据库长期居于首位,远远高于第二位的memcached</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>速度快: 10W QPS,基于内存,C语言实现</li><li>单线程</li><li>持久化</li><li>支持多种数据结构</li><li>支持多种编程语言</li><li>功能丰富: 支持Lua脚本,发布订阅,事务,pipeline等功能</li><li>简单: 代码短小精悍(单机核心代码只有23000行左右),单线程开发容易,不依赖外部库,使用简单</li><li>主从复制</li><li>支持高可用和分布式</li></ul><h2 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h2><p>Redis 6.0版本前一直是单线程方式处理用户的请求</p><p><img src="/../image.assets/1670419301827.png" alt="1670419301827"></p><p>单线程为何如此快?</p><ul><li>纯内存</li><li>非阻塞避免线程切换和竞态消耗</li></ul><p><img src="/../image.assets/1670419331717.png" alt="1670419331717"></p><p>注意事项</p><ul><li>一次只运行一条命令</li><li>避免执行长(慢)命令:keys *, flushall, flushdb, slow lua script, mutil&#x2F;exec, operate bigvalue(collection)</li><li>其实不是单线程: 早期版本是单进程单线程,3.0 版本后实际还有其它的线程, 实现特定功能,如: fysnc file descriptor,close file descriptor</li></ul><h2 id="常见应用场景"><a href="#常见应用场景" class="headerlink" title="常见应用场景"></a>常见应用场景</h2><ul><li>缓存：缓存RDBMS中数据,比如网站的查询结果、商品信息、微博、新闻、消息</li><li>Session 共享：实现Web集群中的多服务器间的session共享</li><li>计数器：商品访问排行榜、浏览数、粉丝数、关注、点赞、评论等和次数相关的数值统计场景</li><li>社交：朋友圈、共同好友、可能认识他们等</li><li>地理位置: 基于地理信息系统GIS（Geographic Information System)实现摇一摇、附近的人、外卖等功能</li><li>消息队列：ELK等日志系统缓存、业务的订阅&#x2F;发布系统</li></ul><h2 id="缓存的实现流程"><a href="#缓存的实现流程" class="headerlink" title="缓存的实现流程"></a>缓存的实现流程</h2><p>数据更新操作流程：</p><p><img src="/../image.assets/1670419470181.png" alt="1670419470181"></p><p>数据读操作流程：</p><p><img src="/../image.assets/1670419490780.png" alt="1670419490780"></p><h1 id="Redis安装及连接"><a href="#Redis安装及连接" class="headerlink" title="Redis安装及连接"></a>Redis安装及连接</h1><p>官网下载地址</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://download.redis.io/releases/<br></code></pre></td></tr></table></figure><h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><p>查看yum库redis版本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">yum info redis   或者  yum info redis<br></code></pre></td></tr></table></figure><p>yum 安装 redis</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install -y redis<br># 启动<br>systemctl enable --now redis<br><br># 连接<br>[root@centos8-backup www]# redis-cli<br>127.0.0.1:6379&gt; <br><br># 查看信息<br>127.0.0.1:6379&gt; info<br># Server<br>redis_version:5.0.3<br>redis_git_sha1:00000000<br>redis_git_dirty:0<br>redis_build_id:9529b692c0384fb7<br>redis_mode:standalone<br>os:Linux 4.18.0-348.7.1.el8_5.x86_64 x86_64<br>arch_bits:64<br>multiplexing_api:epoll<br>......<br>......<br>......<br></code></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><ul><li>Redis源码包下载地址</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://download.redis.io/releases/<br></code></pre></td></tr></table></figure><ul><li>下载源码包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# wget http://download.redis.io/releases/redis-6.2.6.tar.gz<br>[root@centos7-master ~]# tar xf redis-6.2.6.tar.gz<br></code></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># centos<br>[root@centos7-master ~]# yum -y install gcc jemalloc-devel systemd-devel<br># ubuntu<br>apt -y install make gcc libjemalloc-dev libsystemd-dev<br></code></pre></td></tr></table></figure><ul><li>编译安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# cd redis-6.2.6<br>#如果支持systemd,需要执行下面<br>[root@centos7-master redis-6.2.6]# make -j 2 USE_SYSTEMD=yes PREFIX=/usr/local/src/redis  install<br><br># 配置环境变量<br>[root@centos7-master ~]# echo &#x27;PATH=/usr/local/src/redis/bin:$PATH&#x27; &gt; /etc/profile.d/redis.sh<br>[root@centos7-master ~]# <br>[root@centos7-master ~]# . /etc/profile.d/redis.sh<br>[root@centos7-master ~]# <br><br>#准备相关目录和配置文件<br>#创建配置文件、日志、数据等目录<br>[root@centos7-master redis]# mkdir /usr/local/src/redis/&#123;etc,log,data,run&#125;<br>[root@centos7-master redis-6.2.6]# cp redis.conf /usr/local/src/redis/etc/<br></code></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><p>logfile  “&#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;log&#x2F;redis_6379.log”</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text"># Specify the log file name. Also the empty string can be used to force<br># Redis to log on the standard output. Note that if you use standard<br># output for logging but daemonize, logs will be sent to /dev/null<br>logfile &quot;/usr/local/src/redis/log/redis_6379.log&quot;<br><br># To enable logging to the system logger, just set &#x27;syslog-enabled&#x27; to yes,<br># and optionally update the other syslog parameters to suit your needs.<br># syslog-enabled no<br><br># Specify the syslog identity.<br># syslog-ident redis<br></code></pre></td></tr></table></figure><p>pidfile &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;run&#x2F;redis_6379.pid</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text"># Note that on modern Linux systems &quot;/run/redis.pid&quot; is more conforming<br># and should be used instead.<br>#pidfile /var/run/redis_6379.pid<br>pidfile /usr/local/src/redis/run/redis_6379.pid<br><br># Specify the server verbosity level.<br># This can be one of:<br># debug (a lot of information, useful for development/testing)<br># verbose (many rarely useful info, but not a mess like the debug level)<br># notice (moderately verbose, what you want in production probably)<br># warning (only very important / critical messages are logged)<br>loglevel notice<br></code></pre></td></tr></table></figure><p>dir “&#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;data&#x2F;6379”</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text"># Note that you must specify a directory here, not a file name.<br>dir &quot;/usr/local/src/redis/data/6379&quot;<br><br>################################# REPLICATION #################################<br><br># Master-Replica replication. Use replicaof to make a Redis instance a copy of<br># another Redis server. A few things to understand ASAP about Redis replication.<br></code></pre></td></tr></table></figure><p>dbfilename ‘dump.rdb’</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># sanitize-dump-payload no<br><br># The filename where to dump the DB<br>dbfilename &#x27;dump.rdb&#x27;<br></code></pre></td></tr></table></figure><ul><li>前台启动redis</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# redis-server /usr/local/src/redis/etc/redis.conf <br>51487:C 07 Dec 2022 22:27:26.620 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo<br>51487:C 07 Dec 2022 22:27:26.620 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=51487, just started<br>51487:C 07 Dec 2022 22:27:26.620 # Configuration loaded<br>51487:M 07 Dec 2022 22:27:26.620 * Increased maximum number of open files to 10032 (it was originally set to 1024).<br>51487:M 07 Dec 2022 22:27:26.620 * monotonic clock: POSIX clock_gettime<br>                _._                                                  <br>           _.-``__ &#x27;&#x27;-._                                             <br>      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 6.2.6 (00000000/0) 64 bit<br>  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                  <br> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode<br> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379<br> |    `-._   `._    /     _.-&#x27;    |     PID: 51487<br>  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |           https://redis.io       <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br>      `-._    `-.__.-&#x27;    _.-&#x27;                                       <br>          `-._        _.-&#x27;                                           <br>              `-.__.-&#x27;                                               <br><br>51487:M 07 Dec 2022 22:27:26.621 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.<br>51487:M 07 Dec 2022 22:27:26.621 # Server initialized<br>51487:M 07 Dec 2022 22:27:26.621 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.<br>51487:M 07 Dec 2022 22:27:26.621 * Ready to accept connections<br><br></code></pre></td></tr></table></figure><ul><li>帮助</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# redis-server -h<br>Usage: ./redis-server [/path/to/redis.conf] [options] [-]<br>       ./redis-server - (read config from stdin)<br>       ./redis-server -v or --version<br>       ./redis-server -h or --help<br>       ./redis-server --test-memory &lt;megabytes&gt;<br><br>Examples:<br>       ./redis-server (run the server with default conf)<br>       ./redis-server /etc/redis/6379.conf<br>       ./redis-server --port 7777<br>       ./redis-server --port 7777 --replicaof 127.0.0.1 8888<br>       ./redis-server /etc/myredis.conf --loglevel verbose -<br>       ./redis-server /etc/myredis.conf --loglevel verbose<br><br>Sentinel mode:<br>       ./redis-server /etc/sentinel.conf --sentinel<br>[root@centos7-master ~]# <br></code></pre></td></tr></table></figure><ul><li>消除启动时的三个Warning提示信息(可选)</li></ul><p>Tcp backlog</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">WARNING: The TCP backlog setting of 511 cannot be enforced because<br>/proc/sys/net/core/somaxconn is set to the lower value of 128.<br></code></pre></td></tr></table></figure><p>Tcp backlog 是指TCP的第三次握手服务器端收到客户端 ack确认号之后到服务器用Accept函数处理请求前的队列长度，即全连接队列</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">#vim /etc/sysctl.conf<br>net.core.somaxconn = 511<br>#sysctl -p<br></code></pre></td></tr></table></figure><p> overcommit_memory</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">WARNING overcommit_memory is set to 0! Background save may fail under low memory<br>condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf<br>and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to<br>take effect.<br></code></pre></td></tr></table></figure><p>内核参数说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">内核参数overcommit_memory 实现内存分配策略,可选值有三个：0、1、2<br>0 表示内核将检查是否有足够的可用内存供应用进程使用；如果有足够的可用内存，内存申请允许；否则内存<br>申请失败，并把错误返回给应用进程<br>1 表示内核允许分配所有的物理内存，而不管当前的内存状态如何<br>2 表示内核允许分配超过所有物理内存和交换空间总和的内存<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">#vim /etc/sysctl.conf<br>vm.overcommit_memory = 1<br>#sysctl -p<br></code></pre></td></tr></table></figure><p>transparent hugepage</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">WARNING you have Transparent Huge Pages (THP) support enabled in your kernel.<br>This will create latency and memory usage issues with Redis. To fix this issue<br>run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as<br>root, and add it to your /etc/rc.local in order to retain the setting after a<br>reboot. Redis must be restarted after THP is disabled.<br>警告：您在内核中启用了透明大页面（THP,不同于一般4k内存页,而为2M）支持。 这将在Redis中造成延迟<br>和内存使用问题。 要解决此问题，请以root 用户身份运行命令“echo never&gt;<br>/sys/kernel/mm/transparent_hugepage/enabled”，并将其添加到您的/etc/rc.local中，以便在<br>重启后保留设置。禁用THP后，必须重新启动Redis。<br></code></pre></td></tr></table></figure><p>注意：ubuntu20.04, Rocky8&#x2F;CentOS8 默认为 never，所以此值无需优化</p><p>验证是否消除warning</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# redis-server /usr/local/src/redis/etc/redis.conf <br>51540:C 07 Dec 2022 22:38:45.196 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo<br>51540:C 07 Dec 2022 22:38:45.196 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=51540, just started<br>51540:C 07 Dec 2022 22:38:45.196 # Configuration loaded<br>51540:M 07 Dec 2022 22:38:45.197 * Increased maximum number of open files to 10032 (it was originally set to 1024).<br>51540:M 07 Dec 2022 22:38:45.197 * monotonic clock: POSIX clock_gettime<br>                _._                                                  <br>           _.-``__ &#x27;&#x27;-._                                             <br>      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 6.2.6 (00000000/0) 64 bit<br>  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                  <br> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode<br> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379<br> |    `-._   `._    /     _.-&#x27;    |     PID: 51540<br>  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |           https://redis.io       <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br>      `-._    `-.__.-&#x27;    _.-&#x27;                                       <br>          `-._        _.-&#x27;                                           <br>              `-.__.-&#x27;                                               <br><br>51540:M 07 Dec 2022 22:38:45.197 # Server initialized<br>51540:M 07 Dec 2022 22:38:45.198 * Loading RDB produced by version 6.2.6<br>51540:M 07 Dec 2022 22:38:45.198 * RDB age 2 seconds<br>51540:M 07 Dec 2022 22:38:45.198 * RDB memory usage when created 0.77 Mb<br>51540:M 07 Dec 2022 22:38:45.198 # Done loading RDB, keys loaded: 0, keys expired: 0.<br>51540:M 07 Dec 2022 22:38:45.198 * DB loaded from disk: 0.000 seconds<br>51540:M 07 Dec 2022 22:38:45.198 * Ready to accept connections<br></code></pre></td></tr></table></figure><ul><li>创建 Redis 用户和设置数据目录权限</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# useradd -r -s /sbin/nologin redis<br>[root@centos7-master ~]# chown -R  redis.redis /usr/local/src/redis/<br>[root@centos7-master ~]# <br></code></pre></td></tr></table></figure><ul><li>创建 Redis 服务 Service 文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# vim /lib/systemd/system/redis.service<br><br>[Unit]<br>Description=Redis persistent key-value database<br>After=network.target<br>[Service]<br>ExecStart=/usr/local/src/redis/bin/redis-server /usr/local/src/redis/etc/redis.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT $MAINPID<br>Type=notify <br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>LimitNOFILE=1000000 <br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><ul><li>Redis 通过Service方式启动</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">systemctl daemon-reload<br>systemctl restart redis<br>systemctl status redis<br></code></pre></td></tr></table></figure><h2 id="Redis多实例"><a href="#Redis多实例" class="headerlink" title="Redis多实例"></a>Redis多实例</h2><p>基于源码编译安装的前提下实现redis的多实例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs text"># 进入/usr/local/src/redis/etc<br>[root@centos7-master ~]# cd /usr/local/src/redis/etc/<br>[root@centos7-master etc]# <br><br># 修改配置文件，使用6380,6381端口启动实例<br>[root@centos7-master etc]# sed &#x27;s/6379/6380/&#x27; redis.conf &gt; redis6380.conf<br>[root@centos7-master etc]# sed &#x27;s/6379/6380/&#x27; redis.conf &gt; redis6381.conf<br><br># 修改所属组<br>[root@centos7-master etc]# chown -R redis.redis *<br><br># 修改启动文件<br>[root@centos7-master etc]# cp /lib/systemd/system/redis.service /lib/systemd/system/redis6380.service <br>[root@centos7-master etc]# <br><br>[root@centos7-master etc]# vim /lib/systemd/system/redis6380.service <br>[Unit]<br>Description=Redis persistent key-value database<br>After=network.target<br>[Service]<br>ExecStart=/usr/local/src/redis/bin/redis-server /usr/local/src/redis/etc/redis6380.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT $MAINPID<br>Type=notify<br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>LimitNOFILE=1000000<br>[Install]<br>WantedBy=multi-user.target<br><br># 使用相同方法创建/lib/systemd/system/redis6381.service文件并修改内容<br><br># 启动实例<br>[root@centos7-master etc]# systemctl status redis.service<br>[root@centos7-master etc]# systemctl status redis6380.service<br>[root@centos7-master etc]# systemctl status redis6381.service<br><br># 查看6379 6380 6381 端口是否启用<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670507070884.png" alt="1670507070884"></p><ul><li>连接测试</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master etc]# redis-cli -p 6379<br>[root@centos7-master etc]# redis-cli -p 6380<br>[root@centos7-master etc]# redis-cli -p 6381<br></code></pre></td></tr></table></figure><h1 id="Redis-配置管理"><a href="#Redis-配置管理" class="headerlink" title="Redis 配置管理"></a>Redis 配置管理</h1><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">bind 0.0.0.0 #指定监听地址，支持用空格隔开的多个监听IP<br>protected-mode yes #redis3.2之后加入的新特性，在没有设置bind IP和密码的时候,redis只允许访<br>问127.0.0.1:6379，可以远程连接，但当访问将提示警告信息并拒绝远程访问<br>port 6379 #监听端口,默认6379/tcp<br>tcp-backlog 511 #三次握手的时候server端收到client ack确认号之后的队列值，即全连接队列长度<br>timeout 0 #客户端和Redis服务端的连接超时时间，默认是0，表示永不超时<br>tcp-keepalive 300 #tcp 会话保持时间300s<br>daemonize no #默认no,即直接运行redis-server程序时,不作为守护进程运行，而是以前台方式运行，<br>如果想在后台运行需改成yes,当redis作为守护进程运行的时候，它会写一个 pid 到<br>/var/run/redis.pid 文件<br>supervised no #和OS相关参数，可设置通过upstart和systemd管理Redis守护进程，centos7后都使<br>用systemd<br>pidfile /var/run/redis_6379.pid #pid文件路径,可以修改<br>为/apps/redis/run/redis_6379.pid<br>loglevel notice #日志级别<br>logfile &quot;/path/redis.log&quot; #日志路径,示例:logfile &quot;/apps/redis/log/redis_6379.log&quot;<br>databases 16 #设置数据库数量，默认：0-15，共16个库<br>always-show-logo yes #在启动redis 时是否显示或在日志中记录记录redis的logo<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs text">save 900 1 #在900秒内有1个key内容发生更改,就执行快照机制<br>save 300 10 #在300秒内有10个key内容发生更改,就执行快照机制<br>save 60 10000 #60秒内如果有10000个key以上的变化，就自动快照备份<br>stop-writes-on-bgsave-error yes #默认为yes时,可能会因空间满等原因快照无法保存出错时，会禁<br>止redis写入操作，生产建议为no<br>#此项只针对配置文件中的自动save有效<br>rdbcompression yes #持久化到RDB文件时，是否压缩，&quot;yes&quot;为压缩，&quot;no&quot;则反之<br>rdbchecksum yes #是否对备份文件开启RC64校验，默认是开启<br>dbfilename dump.rdb #快照文件名<br>dir ./ #快照文件保存路径，示例：dir &quot;/apps/redis/data&quot;<br>#主从复制相关<br># replicaof &lt;masterip&gt; &lt;masterport&gt; #指定复制的master主机地址和端口，5.0版之前的指令为<br>slaveof<br># masterauth &lt;master-password&gt; #指定复制的master主机的密码<br>replica-serve-stale-data yes #当从库同主库失去连接或者复制正在进行，从机库有两种运行方式：<br>1、设置为yes(默认设置)，从库会继续响应客户端的读请求，此为建议值<br>2、设置为no，除去特定命令外的任何请求都会返回一个错误&quot;SYNC with master in progress&quot;。<br>replica-read-only yes #是否设置从库只读，建议值为yes,否则主库同步从库时可能会覆盖数据，造成<br>数据丢失<br>repl-diskless-sync no #是否使用socket方式复制数据(无盘同步)，新slave第一次连接master时需<br>要做数据的全量同步，redis server就要从内存dump出新的RDB文件，然后从master传到slave，有两种<br>方式把RDB文件传输给客户端：<br>1、基于硬盘（disk-backed）：为no时，master创建一个新进程dump生成RDB磁盘文件，RDB完成之后由<br>父进程（即主进程）将RDB文件发送给slaves，此为默认值<br>2、基于socket（diskless）：master创建一个新进程直接dump RDB至slave的网络socket，不经过主<br>进程和硬盘<br>#推荐使用基于硬盘（为no），是因为RDB文件创建后，可以同时传输给更多的slave，但是基于socket(为<br>yes)， 新slave连接到master之后得逐个同步数据。只有当磁盘I/O较慢且网络较快时，可用<br>diskless(yes),否则一般建议使用磁盘(no)<br>repl-diskless-sync-delay 5 #diskless时复制的服务器等待的延迟时间，设置0为关闭，在延迟时间<br>内到达的客户端，会一起通过diskless方式同步数据，但是一旦复制开始，master节点不会再接收新slave<br>的复制请求，直到下一次同步开始才再接收新请求。即无法为延迟时间后到达的新副本提供服务，新副本将排<br>队等待下一次RDB传输，因此服务器会等待一段时间才能让更多副本到达。推荐值：30-60<br>repl-ping-replica-period 10 #slave根据master指定的时间进行周期性的PING master,用于监测<br>master状态,默认10s<br>repl-timeout 60 #复制连接的超时时间，需要大于repl-ping-slave-period，否则会经常报超时<br>repl-disable-tcp-nodelay no #是否在slave套接字发送SYNC之后禁用 TCP_NODELAY，如果选<br>择&quot;yes&quot;，Redis将合并多个报文为一个大的报文，从而使用更少数量的包向slaves发送数据，但是将使数据<br>传输到slave上有延迟，Linux内核的默认配置会达到40毫秒，如果 &quot;no&quot; ，数据传输到slave的延迟将会<br>减少，但要使用更多的带宽<br>repl-backlog-size 512mb #复制缓冲区内存大小，当slave断开连接一段时间后，该缓冲区会累积复制<br>副本数据，因此当slave 重新连接时，通常不需要完全重新同步，只需传递在副本中的断开连接后没有同步的<br>部分数据即可。只有在至少有一个slave连接之后才分配此内存空间,建议建立主从时此值要调大一些或在低峰<br>期配置,否则会导致同步到slave失败<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs text">repl-backlog-ttl 3600 #多长时间内master没有slave连接，就清空backlog缓冲区<br>replica-priority 100 #当master不可用，哨兵Sentinel会根据slave的优先级选举一个master，此<br>值最低的slave会优先当选master，而配置成0，永远不会被选举，一般多个slave都设为一样的值，让其自<br>动选择<br>#min-replicas-to-write 3 #至少有3个可连接的slave，mater才接受写操作<br>#min-replicas-max-lag 10 #和上面至少3个slave的ping延迟不能超过10秒，否则master也将停止<br>写操作<br>requirepass foobared #设置redis连接密码，之后需要AUTH pass,如果有特殊符号，用&quot; &quot;引起来,生<br>产建议设置<br>rename-command #重命名一些高危命令，示例：rename-command FLUSHALL &quot;&quot; 禁用命令<br>#示例: rename-command del magedu<br>maxclients 10000 #Redis最大连接客户端<br>maxmemory &lt;bytes&gt; #redis使用的最大内存，单位为bytes字节，0为不限制，建议设为物理内存一半，<br>8G内存的计算方式8(G)*1024(MB)1024(KB)*1024(Kbyte)，需要注意的是缓冲区是不计算在maxmemory<br>内,生产中如果不设置此项,可能会导致OOM<br>#maxmemory-policy noeviction 此为默认值<br># MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。您可以从以下行为中选择一<br>种：<br>#<br># volatile-lru -&gt; Evict 使用近似 LRU，只有设置了过期时间的键。<br># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。<br># volatile-lfu -&gt; 使用近似 LFU 驱逐，只有设置了过期时间的键。<br># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。<br># volatile-random -&gt; 删除设置了过期时间的随机密钥。<br># allkeys-random -&gt; 删除一个随机密钥，任何密钥。<br># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）<br># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。<br>#<br># LRU 表示最近最少使用<br># LFU 表示最不常用<br>#<br># LRU、LFU 和 volatile-ttl 都是使用近似随机算法实现的。<br>#<br># 注意：使用上述任何一种策略，当没有合适的键用于驱逐时，Redis 将在需要更多内存的写操作时返回错<br>误。这些通常是创建新密钥、添加数据或修改现有密钥的命令。一些示例是：SET、INCR、HSET、LPUSH、<br>SUNIONSTORE、SORT（由于 STORE 参数）和 EXEC（如果事务包括任何需要内存的命令）。<br>#MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。可以从下面行为中进行选<br>择：<br># volatile-lru -&gt; 在具有过期集的键中使用近似 LRU 驱逐。<br># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。<br># volatile-lfu -&gt; 在具有过期集的键中使用近似 LFU 驱逐。<br># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。<br># volatile-random -&gt; 从具有过期设置的密钥中删除一个随机密钥。<br># allkeys-random -&gt; 删除一个随机密钥，任何密钥。<br># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）<br># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。<br>#<br># LRU 表示最近最少使用<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs text"># LFU 表示最不常用<br>#<br># LRU、LFU 和 volatile-ttl 均使用近似实现随机算法。<br>#<br># 注意：使用上述任何一种策略，Redis 都会在写入时返回错误操作，当没有合适的键用于驱逐时。<br>appendonly no #是否开启AOF日志记录，默认redis使用的是rdb方式持久化，这种方式在许多应用中已经<br>足够用了，但是redis如果中途宕机，会导致可能有几分钟的数据丢失(取决于dump数据的间隔时间)，根据<br>save来策略进行持久化，Append Only File是另一种持久化方式，可以提供更好的持久化特性，Redis会<br>把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时Redis都会先把这个文件的数据读入<br>内存里，先忽略RDB文件。默认不启用此功能<br>appendfilename &quot;appendonly.aof&quot; #文本文件AOF的文件名，存放在dir指令指定的目录中<br>appendfsync everysec #aof持久化策略的配置<br>#no表示由操作系统保证数据同步到磁盘,Linux的默认fsync策略是30秒，最多会丢失30s的数据<br>#always表示每次写入都执行fsync，以保证数据同步到磁盘,安全性高,性能较差<br>#everysec表示每秒执行一次fsync，可能会导致丢失这1s数据,此为默认值,也生产建议值<br>#同时在执行bgrewriteaof操作和主进程写aof文件的操作，两者都会操作磁盘，而bgrewriteaof往往会<br>涉及大量磁盘操作，这样就会造成主进程在写aof文件的时候出现阻塞的情形,以下参数实现控制<br>no-appendfsync-on-rewrite no #在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步<br>策略,主要考虑磁盘IO开支和请求阻塞时间。<br>#默认为no,表示&quot;不暂缓&quot;,新的aof记录仍然会被立即同步到磁盘，是最安全的方式，不会丢失数据，但是要<br>忍受阻塞的问题<br>#为yes,相当于将appendfsync设置为no，这说明并没有执行磁盘操作，只是写入了缓冲区，因此这样并不<br>会造成阻塞（因为没有竞争磁盘），但是如果这个时候redis挂掉，就会丢失数据。丢失多少数据呢？Linux<br>的默认fsync策略是30秒，最多会丢失30s的数据,但由于yes性能较好而且会避免出现阻塞因此比较推荐<br>#rewrite 即对aof文件进行整理,将空闲空间回收,从而可以减少恢复数据时间<br>auto-aof-rewrite-percentage 100 #当Aof log增长超过指定百分比例时，重写AOF文件，设置为0表<br>示不自动重写Aof日志，重写是为了使aof体积保持最小，但是还可以确保保存最完整的数据<br>auto-aof-rewrite-min-size 64mb #触发aof rewrite的最小文件大小<br>aof-load-truncated yes #是否加载由于某些原因导致的末尾异常的AOF文件(主进程被kill/断电等)，<br>建议yes<br>aof-use-rdb-preamble no #redis4.0新增RDB-AOF混合持久化格式，在开启了这个功能之后，AOF重<br>写产生的文件将同时包含RDB格式的内容和AOF格式的内容，其中RDB格式的内容用于记录已有的数据，而AOF<br>格式的内容则用于记录最近发生了变化的数据，这样Redis就可以同时兼有RDB持久化和AOF持久化的优点（既<br>能够快速地生成重写文件，也能够在出现问题时，快速地载入数据）,默认为no,即不启用此功能<br>lua-time-limit 5000 #lua脚本的最大执行时间，单位为毫秒<br>cluster-enabled yes #是否开启集群模式，默认不开启,即单机模式<br>cluster-config-file nodes-6379.conf #由node节点自动生成的集群配置文件名称<br>cluster-node-timeout 15000 #集群中node节点连接超时时间，单位ms,超过此时间，会踢出集群<br>cluster-replica-validity-factor 10 #单位为次,在执行故障转移的时候可能有些节点和master断<br>开一段时间导致数据比较旧，这些节点就不适用于选举为master，超过这个时间的就不会被进行故障转移,不<br>能当选master，计算公式：(node-timeout * replica-validity-factor) + repl-ping-<br>replica-period<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">cluster-migration-barrier 1 #集群迁移屏障，一个主节点至少拥有1个正常工作的从节点，即如果主<br>节点的slave节点故障后会将多余的从节点分配到当前主节点成为其新的从节点。<br>cluster-require-full-coverage yes #集群请求槽位全部覆盖，如果一个主库宕机且没有备库就会出<br>现集群槽位不全，那么yes时redis集群槽位验证不全,就不再对外提供服务(对key赋值时,会出现<br>CLUSTERDOWN The cluster is down的提示,cluster_state:fail,但ping 仍PONG)，而no则可以<br>继续使用,但是会出现查询数据查不到的情况(因为有数据丢失)。生产建议为no<br>cluster-replica-no-failover no #如果为yes,此选项阻止在主服务器发生故障时尝试对其主服务器进<br>行故障转移。 但是，主服务器仍然可以执行手动强制故障转移，一般为no<br>#Slow log 是 Redis 用来记录超过指定执行时间的日志系统，执行时间不包括与客户端交谈，发送回复等<br>I/O操作，而是实际执行命令所需的时间（在该阶段线程被阻塞并且不能同时为其它请求提供服务）,由于<br>slow log 保存在内存里面，读写速度非常快，因此可放心地使用，不必担心因为开启 slow log 而影响<br>Redis 的速度<br>slowlog-log-slower-than 10000 #以微秒为单位的慢日志记录，为负数会禁用慢日志，为0会记录每个<br>命令操作。默认值为10ms,一般一条命令执行都在微秒级,生产建议设为1ms-10ms之间<br>slowlog-max-len 128 #最多记录多少条慢日志的保存队列长度，达到此长度后，记录新命令会将最旧的命<br>令从命令队列中删除，以此滚动删除,即,先进先出,队列固定长度,默认128,值偏小,生产建议设为1000以上<br></code></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ysocean/p/9074787.html">Redis的配置文件介绍</a> </p><h2 id="config-命令实现动态修改配置"><a href="#config-命令实现动态修改配置" class="headerlink" title="config 命令实现动态修改配置"></a>config 命令实现动态修改配置</h2><p>config 命令用于查看当前redis配置、以及不重启redis服务实现动态更改redis配置等<br>注意：不是所有配置都可以动态修改,且此方式无法持久保存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">CONFIG SET parameter value<br>时间复杂度：O(1)<br>CONFIG SET 命令可以动态地调整 Redis 服务器的配置(configuration)而无须重启。<br>可以使用它修改配置参数，或者改变 Redis 的持久化(Persistence)方式。<br>CONFIG SET 可以修改的配置参数可以使用命令 CONFIG GET * 来列出，所有被 CONFIG SET 修改的配<br>置参数都会立即生效。<br>CONFIG GET parameter<br>时间复杂度： O(N)，其中 N 为命令返回的配置选项数量。<br>CONFIG GET 命令用于取得运行中的 Redis 服务器的配置参数(configuration parameters)，在<br>Redis 2.4 版本中， 有部分参数没有办法用 CONFIG GET 访问，但是在最新的 Redis 2.6 版本中，所<br>有配置参数都已经可以用 CONFIG GET 访问了。<br>CONFIG GET 接受单个参数 parameter 作为搜索关键字，查找所有匹配的配置参数，其中参数和值以“键-<br>值对”(key-value pairs)的方式排列。<br>比如执行 CONFIG GET s* 命令，服务器就会返回所有以 s 开头的配置参数及参数的值：<br></code></pre></td></tr></table></figure><h3 id="设置客户端连接密码"><a href="#设置客户端连接密码" class="headerlink" title="设置客户端连接密码"></a>设置客户端连接密码</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">#设置连接密码<br>127.0.0.1:6379&gt; CONFIG SET requirepass 123456<br>OK<br>#查看连接密码<br>127.0.0.1:6379&gt; CONFIG GET requirepass<br>1) &quot;requirepass&quot;<br>2) &quot;123456&quot;<br></code></pre></td></tr></table></figure><h3 id="获取当前配置"><a href="#获取当前配置" class="headerlink" title="获取当前配置"></a>获取当前配置</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs text">#奇数行为键，偶数行为值<br>127.0.0.1:6379&gt; CONFIG GET *<br>1) &quot;dbfilename&quot;<br>2) &quot;dump.rdb&quot;<br>3) &quot;requirepass&quot;<br>4) &quot;&quot;<br>5) &quot;masterauth&quot;<br>6) &quot;&quot;<br>7) &quot;cluster-announce-ip&quot;<br>8) &quot;&quot;<br>9) &quot;unixsocket&quot;<br>10) &quot;&quot;<br>11) &quot;logfile&quot;<br>12) &quot;/var/log/redis/redis.log&quot;<br>13) &quot;pidfile&quot;<br>14) &quot;/var/run/redis_6379.pid&quot;<br>15) &quot;slave-announce-ip&quot;<br>16) &quot;&quot;<br>17) &quot;replica-announce-ip&quot;<br>18) &quot;&quot;<br>19) &quot;maxmemory&quot;<br>20) &quot;0&quot;<br>......<br>#查看bind<br>127.0.0.1:6379&gt; CONFIG GET bind<br>1) &quot;bind&quot;<br>2) &quot;0.0.0.0&quot;<br>#Redis5.0有些设置无法修改,Redis6.2.6版本支持修改bind<br>127.0.0.1:6379&gt; CONFIG SET bind 127.0.0.1<br>(error) ERR Unsupported CONFIG parameter: bind<br></code></pre></td></tr></table></figure><h3 id="设置Redis使用的最大内存量"><a href="#设置Redis使用的最大内存量" class="headerlink" title="设置Redis使用的最大内存量"></a>设置Redis使用的最大内存量</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6379&gt; CONFIG SET maxmemory 8589934592<br>OK<br>127.0.0.1:6379&gt; CONFIG GET maxmemory<br>1) &quot;maxmemory&quot;<br>2) &quot;8589934592&quot;<br></code></pre></td></tr></table></figure><h3 id="慢查询"><a href="#慢查询" class="headerlink" title="慢查询"></a>慢查询</h3><p>范例：SLOW LOG</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs text">vim /etc/redis.conf<br>slowlog-log-slower-than 1 #指定超过1us即为慢的指令，默认值为10000us<br>slowlog-max-len 1024 #指定只保存最近的1024条慢记录，默认值为128<br>127.0.0.1:6379&gt; SLOWLOG LEN #查看慢日志的记录条数<br>(integer) 14<br>127.0.0.1:6379&gt; SLOWLOG GET [n] #查看慢日志的n条记录<br>1) 1) (integer) 14<br>2) (integer) 1544690617<br>3) (integer) 4 #第3)行表示每条指令的执行时长<br>4) 1) &quot;slowlog&quot;<br>127.0.0.1:6379&gt; SLOWLOG GET 3<br>1) 1) (integer) 7<br>2) (integer) 1602901545<br>3) (integer) 26<br>4) 1) &quot;SLOWLOG&quot;<br>2) &quot;get&quot;<br>5) &quot;127.0.0.1:38258&quot;<br>6) &quot;&quot;<br>2) 1) (integer) 6<br>2) (integer) 1602901540<br>3) (integer) 22<br>4) 1) &quot;SLOWLOG&quot;<br>2) &quot;get&quot;<br>3) &quot;2&quot;<br>5) &quot;127.0.0.1:38258&quot;<br>6) &quot;&quot;<br>3) 1) (integer) 5<br>2) (integer) 1602901497<br>3) (integer) 22<br>4) 1) &quot;SLOWLOG&quot;<br>2) &quot;GET&quot;<br>5) &quot;127.0.0.1:38258&quot;<br>6) &quot;&quot;<br>127.0.0.1:6379&gt; SLOWLOG RESET #清空慢日志<br>OK<br></code></pre></td></tr></table></figure><h3 id="Redis持久化"><a href="#Redis持久化" class="headerlink" title="Redis持久化"></a>Redis持久化</h3><p><img src="/../image.assets/1670853239934.png" alt="1670853239934"></p><h4 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h4><p>RDB 工作原理</p><p><img src="/../image.assets/1670853325839.png" alt="1670853325839"></p><p><img src="/../image.assets/1670853341364.png" alt="1670853341364"></p><p><img src="/../image.assets/1670853373976.png" alt="1670853373976"></p><p><img src="/../image.assets/1670853388030.png" alt="1670853388030"></p><p><img src="/../image.assets/1670853405541.png" alt="1670853405541"></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="/../image.assets/1670853437912.png" alt="1670853437912"></p><p><img src="/../image.assets/1670853466251.png" alt="1670853466251"></p><p><img src="/../image.assets/1670853480093.png" alt="1670853480093"></p><h4 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h4><p><img src="/../image.assets/1670853532980.png" alt="1670853532980"></p><p><img src="/../image.assets/1670853557144.png" alt="1670853557144"></p>]]></content>
    
    
    <categories>
      
      <category>Redis基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络文件共享服务</title>
    <link href="/2022/12/04/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/12/04/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="NFS服务"><a href="#NFS服务" class="headerlink" title="NFS服务"></a>NFS服务</h1><h2 id="NFS工作原理"><a href="#NFS工作原理" class="headerlink" title="NFS工作原理"></a>NFS工作原理</h2><p><img src="/../image.assets/1670127215657.png" alt="1670127215657"></p><p>NFS：Network File System 网络文件系统，基于内核的文件系统。Sun 公司开发，通过使用 NFS，用户和程序可以像访问本地文件一样访问远端系统上的文件，基于RPC（Remote Procedure CallProtocol 远程过程调用）实现。<br>RPC采用C&#x2F;S模式，客户机请求程序调用进程发送一个有进程参数的调用信息到服务进程，然后等待应答信息。在服务器端，进程保持睡眠状态直到调用信息到达为止。当一个调用信息到达，服务器获得进程参数，计算结果，发送答复信息，然后等待下一个调用信息，最后，客户端调用进程接收答复信息，获得进程结果，然后调用执行继续进行。</p><p><img src="/../image.assets/1670127252975.png" alt="1670127252975"></p><p>NFS优势：节省本地存储空间，将常用的数据,如：&#x2F;home目录，存放在NFS服务器上且可以通过网络访<br>问，本地终端将可减少自身存储空间的使用。</p><h2 id="NFS软件介绍"><a href="#NFS软件介绍" class="headerlink" title="NFS软件介绍"></a>NFS软件介绍</h2><p>软件包：nfs-utils（包括服务器和客户端相关工具，CentOS8 最小化安装时默认没有安装），nfs-common(Ubuntu中包名)<br>相关软件包：rpcbind（必须），tcp_wrappers<br>Kernel支持：nfs.ko<br>端口：2049(nfsd), 其它端口由portmap(111)分配<br>NFS服务主要进程：  </p><ul><li>rpc.nfsd 最主要的NFS进程，管理客户端是否可登录  </li><li>rpc.mountd 挂载和卸载NFS文件系统，包括权限管理  </li><li>rpc.lockd 非必要，管理文件锁，避免同时写出错  </li><li>rpc.statd 非必要，检查文件一致性，可修复文件</li></ul><p>说明：CentOS 6 开始portmap进程由rpcbind代替<br>日志：&#x2F;var&#x2F;lib&#x2F;nfs&#x2F;<br>NFS配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">/etc/exports<br>/etc/exports.d/*.exports<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">默认选项：(ro,sync,root_squash,no_all_squash)<br>ro,rw 只读和读写<br>async 异步，数据变化后不立即写磁盘，先写入到缓冲区中，过一段时间再写入磁盘，性能高,安全性低<br>sync（1.0.0后为默认）同步，数据在请求时立即写入共享存储磁盘,性能低,安全性高<br>root_squash （默认）远程root映射为nfsnobody,UID为65534，CentOS8 为nobody,CentOS<br>7以前的版本为nfsnobody<br>no_root_squash 远程root映射成NFS服务器的root用户<br>all_squash 所有远程用户(包括root)都变成nfsnobody,CentOS8 为nobody<br>no_all_squash （默认）保留共享文件的UID和GID<br>anonuid和anongid 指明匿名用户映射为特定用户UID和组GID，而非nobody,可配合all_squash使<br>用<br></code></pre></td></tr></table></figure><h2 id="NFS工具"><a href="#NFS工具" class="headerlink" title="NFS工具"></a>NFS工具</h2><h3 id="rpcinfo"><a href="#rpcinfo" class="headerlink" title="rpcinfo"></a>rpcinfo</h3><p>rpcinfo 工具可以查看RPC相关信息<br>查看注册在指定主机的RPC程序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">rpcinfo -p hostname<br></code></pre></td></tr></table></figure><p>查看RPC注册程序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">rpcinfo -s hostname<br></code></pre></td></tr></table></figure><h3 id="exportfs"><a href="#exportfs" class="headerlink" title="exportfs"></a>exportfs</h3><p>exportfs:可用于管理NFS导出的文件系统<br>常见选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">-v #查看本机所有NFS共享<br>-r #重读配置文件，并共享目录<br>-a #输出本机所有共享<br>-au #停止本机所有共享<br></code></pre></td></tr></table></figure><h3 id="showmount"><a href="#showmount" class="headerlink" title="showmount"></a>showmount</h3><p>常见用法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">#查看远程主机的NFS共享<br>showmount -e hostname<br></code></pre></td></tr></table></figure><h3 id="mount-nfs"><a href="#mount-nfs" class="headerlink" title="mount.nfs"></a>mount.nfs</h3><p>客户端NFS挂载<br>NFS相关的挂载选项：man 5 nfs</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">fg #（默认）前台挂载<br>bg #后台挂载<br>hard #（默认）持续请求<br>soft #非持续请求<br>intr #和hard配合，请求可中断<br>rsize #和wsize 一次读和写数据最大字节数，rsize=32768<br>_netdev #无网络服务时不挂载NFS资源<br>vers #指定版本，客户端centos8默认4.2 ，centos7默认4.1 centos6默认4.0<br></code></pre></td></tr></table></figure><p>提示：基于安全考虑，建议使用 nosuid,<em>netdev,noexec 挂载选项</em></p><h1 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h1><p><img src="/../image.assets/1670246134779.png" alt="1670246134779"></p><ul><li>NFS服务器安装软件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install -y nfs-utils<br><br># 启动rpcbind<br>systemctl start rpcbind<br><br># 启动nfs-server<br>systemctl start nfs-server<br></code></pre></td></tr></table></figure><ul><li>NFS服务器创建共享文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text"># 共享根目录下的share目录<br>mkdir /share<br></code></pre></td></tr></table></figure><ul><li>添加uid和gid为300的用户nfs-upload</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# groupadd -g 300 nfs-upload<br>[root@centos7-master ~]# useradd -u 300 -g 300 nfs-upload<br>[root@centos7-master ~]# <br>#修改所属组权限<br>[root@centos7-master share]# chown -R 300:300 /share<br></code></pre></td></tr></table></figure><ul><li>修改NFS服务器配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# vim /etc/exports<br># 加入如下内容，*表示任何人，rw表示读写<br>/share/ 192.168.179.*(rw,anongid=300,anonuid=300)<br></code></pre></td></tr></table></figure><ul><li>重新加载配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text"># 重新加载配置文件<br>[root@centos7-master ~]# exportfs -r<br>[root@centos7-master ~]# exportfs -v<br>/share        192.168.179.*(sync,wdelay,hide,no_subtree_check,anonuid=300,anongid=300,sec=sys,rw,secure,root_squash,no_all_squash)<br>[root@centos7-master ~]# <br></code></pre></td></tr></table></figure><ul><li>客户端安装软件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install -y nfs-utils<br><br># 启动rpcbind<br>systemctl start rpcbind<br><br># 启动nfs-server<br>systemctl start nfs-server<br></code></pre></td></tr></table></figure><ul><li>添加用户和组</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-slave /]# groupadd -g 300 nfs-upload<br>[root@centos7-slave /]# useradd -u 300 -g 300 nfs-upload<br></code></pre></td></tr></table></figure><ul><li>在客户端挂载，挂载&#x2F;nfsshare目录下</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text"># 创建目录<br>mkdir /nfsshare<br># 查看服务器端可挂载点<br>[root@centos7-slave ~]# showmount -e 192.168.179.170<br>Export list for 192.168.179.170:<br>/share *<br>[root@centos7-slave nfsshare]# <br><br># 挂载方式1，关机重启会失效<br>[root@centos7-slave ~]# mount 192.168.179.170:/share/ /nfsshare<br><br># 方式二修改配置文件，关机重启不失效<br>[root@centos7-slave ~]# vim /etc/fstab <br># 加入如下内容<br>192.168.179.170:/share                    /nfsshare  nfs     defaults,_netdev 0 0<br># 使配置文件生效<br>[root@centos7-slave nfsshare]# mount -a<br>[root@centos7-slave nfsshare]# <br></code></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在客户端上查看/nfsshare的内容<br>[root@centos7-slave nfsshare]# ll<br>total 8<br>-rw-r--r-- 1 nfs-upload nfs-upload  5 Dec  5 23:14 a.xtx<br>drwxr-xr-x 2 nfs-upload nfs-upload  6 Dec  5 23:17 newfile<br>-rw-r--r-- 1 nfs-upload nfs-upload 17 Dec  5 23:11 test.log<br>[root@centos7-slave nfsshare]# <br><br># 在服务器端查看/share目录<br>[root@centos7-master share]# ll<br>total 8<br>-rw-r--r-- 1 nfs-upload nfs-upload  5 Dec  5 23:14 a.xtx<br>drwxr-xr-x 2 nfs-upload nfs-upload  6 Dec  5 23:17 newfile<br>-rw-r--r-- 1 nfs-upload nfs-upload 17 Dec  5 23:11 test.log<br>[root@centos7-master share]#<br></code></pre></td></tr></table></figure><h1 id="数据的实时同步"><a href="#数据的实时同步" class="headerlink" title="数据的实时同步"></a>数据的实时同步</h1><h3 id="实时同步技术介绍"><a href="#实时同步技术介绍" class="headerlink" title="实时同步技术介绍"></a>实时同步技术介绍</h3><p>实现实时同步的方法</p><ul><li>inotify + rsync 方式实现数据同步</li><li>sersync ：前金山公司周洋（花椒直播）在 inotify 软件基础上进行开发的，功能更加强大</li></ul><p>工作原理：</p><ul><li>要利用监控服务（inotify），监控同步数据服务器目录中信息的变化</li><li>发现目录中数据产生变化，就利用rsync服务推送到备份服务器上</li></ul><p>inotify：<br>异步的文件系统事件监控机制，利用事件驱动机制，而无须通过诸如cron等的轮询机制来获取事件，linux内核从2.6.13起支持 inotify，通过inotify可以监控文件系统中添加、删除，修改、移动等各种事件</p><p><strong>实现inotify软件：</strong></p><ul><li>inotify-tools</li><li>sersync</li><li>lrsyncd</li></ul><p><strong>inotify+rsync使用方式</strong></p><ul><li>inotify 对同步数据目录信息的监控</li><li>rsync 完成对数据的同步</li><li>利用脚本进行结合</li></ul><h3 id="实现-inotify"><a href="#实现-inotify" class="headerlink" title="实现 inotify"></a>实现 inotify</h3><p>内核是否支持inotify<br>Linux支持inotify的内核最小版本为 2.6.13，参看man 7 inotify</p><p><strong>inotify 内核参数说明：</strong></p><ul><li>max_queued_events：inotify 事件队列最大长度，如值太小会出现 Event Queue Overflow 错<br>误，默认值：16384, 生产环境建议调大,比如:327679</li><li>max_user_instances：每个用户创建inotify实例最大值，默认值：128</li><li>max_user_watches：可以监视的文件的总数量（inotifywait 单进程），默认值：8192,建议调大</li></ul><h4 id="inotify-tools工具"><a href="#inotify-tools工具" class="headerlink" title="inotify-tools工具"></a>inotify-tools工具</h4><p>inotify-tools参考文档：<a href="https://github.com/rvoicilas/inotify-tools/wiki">https://github.com/rvoicilas/inotify-tools/wiki</a><br>安装inotify-tools：基于epel源</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install epel-release<br>yum -y install inotify-tools<br></code></pre></td></tr></table></figure><p><strong>inotify-tools包主要工具：</strong></p><ul><li>inotifywait： 在被监控的文件或目录上等待特定文件系统事件（open ，close，delete等）发生，<br>常用于实时同步的目录监控</li><li>inotifywatch：收集被监控的文件系统使用的统计数据，指文件系统事件发生的次数统计</li></ul><p>inotifywait 命令<br>格式:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">inotifywait [ options ] file1 [ file2 ] [ file3 ] [ ... ]<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">-m, --monitor 始终保持事件监听<br>-d, --daemon 以守护进程方式执行，和-m相似，配合-o使用<br>-r, --recursive 递归监控目录数据信息变化<br>-q, --quiet 输出少量事件信息<br>--exclude &lt;pattern&gt; 指定排除文件或目录，使用扩展的正则表达式匹配的模式实现<br>--excludei &lt;pattern&gt; 和exclude相似，不区分大小写<br>-o, --outfile &lt;file&gt; 打印事件到文件中，相当于标准正确输出，注意：使用绝对路径<br>-s, --syslogOutput 发送错误到syslog相当于标准错误输出<br>--timefmt &lt;fmt&gt; 指定时间输出格式<br>--format &lt;fmt&gt; 指定的输出格式；即实际监控输出内容<br>-e<br></code></pre></td></tr></table></figure><p><strong>inotifywait 的–timefmt 时间格式</strong><br>参考 man 3 strftime</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">%Y #年份信息，包含世纪信息<br>%y #年份信息，不包括世纪信息<br>%m #显示月份，范围 01-12<br>%d #每月的第几天，范围是 01-31<br>%H #小时信息，使用 24小时制，范围 00-23<br>%M #分钟，范围 00-59<br>%S #秒，范例 0-60<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">--timefmt &quot;%Y-%m-%d %H:%M:%S&quot;<br></code></pre></td></tr></table></figure><p><strong>inotifywait 的 –format 格式定义</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">%T #输出时间格式中定义的时间格式信息，通过 --timefmt option 语法格式指定时间信息<br>%w #事件出现时，监控文件或目录的名称信息，相当于dirname<br>%f #事件出现时，将显示监控目录下触发事件的文件或目录信息，否则为空，相当于basename<br>%e #显示发生的事件信息，不同的事件默认用逗号分隔<br>%Xe #显示发生的事件信息，不同的事件指定用X进行分隔<br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">--format &quot;%T %w%f event: %;e&quot;<br>--format &#x27;%T %w %f&#x27;<br></code></pre></td></tr></table></figure><p>inotifywait -e 选项指定的事件类型</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs text">create #文件或目录创建<br>delete #文件或目录被删除<br>modify #文件或目录内容被写入<br>attrib #文件或目录属性改变<br>close_write #文件或目录关闭，在写入模式打开之后关闭的<br>close_nowrite #文件或目录关闭，在只读模式打开之后关闭的<br>close #文件或目录关闭，不管读或是写模式<br>open #文件或目录被打开<br>lsdir #浏览目录内容<br>moved_to #文件或目录被移动到监控的目录中<br>moved_from #文件或目录从监控的目录中被移动<br>move #文件或目录不管移动到或是移出监控目录都触发事件<br>access #文件或目录内容被读取<br>delete_self #文件或目录被删除，目录本身被删除<br>unmount #取消挂载<br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">-e create,delete,moved_to,close_write,attrib<br></code></pre></td></tr></table></figure><p>范例：使用inotifywait</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs text"># 监控一次事件<br>[root@centos7 /]# inotifywait /data/www/<br>Setting up watches.<br>Watches established.<br>/data/www/ CREATE,ISDIR html<br>[root@centos7 /]# <br><br># 持续前台监控<br>[root@centos7 /]# inotifywait -mrq /data/www --exclude=&quot;.*\.swx|\.swp&quot;<br>/data/www/ OPEN,ISDIR <br>/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR <br>/data/www/ CREATE mysql.log<br>/data/www/ OPEN mysql.log<br>/data/www/ ATTRIB mysql.log<br>/data/www/ CLOSE_WRITE,CLOSE mysql.log<br>/data/www/ OPEN,ISDIR <br>/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR <br>/data/www/ MODIFY mysql.log<br>/data/www/ OPEN mysql.log<br>/data/www/ MODIFY mysql.log<br>/data/www/ CLOSE_WRITE,CLOSE mysql.log<br>/data/www/ OPEN,ISDIR <br>/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR <br>/data/www/ OPEN mysql.log<br>/data/www/ ACCESS mysql.log<br>/data/www/ CLOSE_NOWRITE,CLOSE mysql.log<br><br>#持续后台监控，并记录日志<br>inotifywait -o /root/inotify.log -drq /data/www --timefmt &quot;%Y-%m-%d %H:%M:%S&quot; --<br>format &quot;%T %w%f event: %e&quot;<br>#持续前台监控特定事件<br>inotifywait -mrq /data/www --timefmt &quot;%F %H:%M:%S&quot; --format &quot;%T %w%f event:<br>%;e&quot; -e create,delete,moved_to,close_write,attrib<br></code></pre></td></tr></table></figure><h2 id="rsync-服务"><a href="#rsync-服务" class="headerlink" title="rsync 服务"></a>rsync 服务</h2><p>rsync 常用于做为 linux系统下的数据镜像备份工具，实现远程同步，支持本地复制，或者与其他SSH、<br>rsync主机同步数据，支持增量备份，配合任务计划，rsync能实现定时或间隔同步，配合inotify或<br>sersync，可以实现触发式的实时数据同步<br>官方网站: <a href="http://rsync.samba.org/">http://rsync.samba.org/</a></p><p>软件包：rsync，rsync-daemon（CentOS 8）<br>服务文件：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rsyncd.service<br>配置文件：&#x2F;etc&#x2F;rsyncd.conf<br>端口：873&#x2F;tcp</p><h4 id="rsync命令"><a href="#rsync命令" class="headerlink" title="rsync命令"></a>rsync命令</h4><p>rsync 格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">#Local:<br>rsync [OPTION...] SRC... [DEST]<br>#Access via remote shell:<br>Pull:<br>rsync [OPTION...] [USER@]HOST:SRC... [DEST]<br>Push:<br>rsync [OPTION...] SRC... [USER@]HOST:DEST<br>#Access via rsync daemon:<br>Pull:<br>rsync [OPTION...] [USER@]HOST::SRC... [DEST]<br>rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]<br>Push:<br>rsync [OPTION...] SRC... [USER@]HOST::DEST<br>rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST<br>The &#x27;:&#x27; usages connect via remote shell, while &#x27;::&#x27; &amp; &#x27;rsync://&#x27; usages connect<br>to an rsync daemon, and require SRC or DEST to start with a module name.<br></code></pre></td></tr></table></figure><p>rsync有三种工作方式：</p><ol><li>本地文件系统上实现同步。命令行语法格式为上述”Local”段的格式。</li><li>本地主机使用远程shell和远程主机通信。命令行语法格式为上述”Access via remote shell”段的格<br>式。</li><li>本地主机通过网络套接字连接远程主机上的rsync daemon。命令行语法格式为上述”Access via<br>rsync daemon”段的格式。<br>前两者的本质是通过本地或远程shell，而第3种方式则是让远程主机上运行rsyncd服务，使其监听在一<br>个端口上，等待客户端的连接。<br>常见选项：</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs text">-v：显示rsync过程中详细信息。可以使用&quot;-vvvv&quot;获取更详细信息。<br>-P：显示文件传输的进度信息。(实际上&quot;-P&quot;=&quot;--partial --progress&quot;，其中的&quot;--progress&quot;才是显<br>示进度信息的)。<br>-n --dry-run ：仅测试传输，而不实际传输。常和&quot;-vvvv&quot;配合使用来查看rsync是如何工作的。<br>-a --archive ：归档模式，表示递归传输并保持文件属性。等同于&quot;-rtopgDl&quot;。<br>-r --recursive：递归到目录中去。<br>-t --times：保持mtime属性。强烈建议任何时候都加上&quot;-t&quot;，否则目标文件mtime会设置为系统时间，导<br>致下次更新<br>：检查出mtime不同从而导致增量传输无效。<br>-o --owner：保持owner属性(属主)。<br>-g --group：保持group属性(属组)。<br>-p --perms：保持perms属性(权限，不包括特殊权限)<br>-D ：是&quot;--device --specials&quot;选项的组合，即也拷贝设备文件和特殊文件。<br>-l --links：如果文件是软链接文件，则拷贝软链接本身而非软链接所指向的对象<br>-z ：传输时进行压缩提高效率<br>-R --relative：使用相对路径。意味着将命令行中指定的全路径而非路径最尾部的文件名发送给服务端，<br>包括它们的属性。用法见下文示例。<br>--size-only ：默认算法是检查文件大小和mtime不同的文件，使用此选项将只检查文件大小。<br>-u --update ：仅在源mtime比目标已存在文件的mtime新时才拷贝。注意，该选项是接收端判断的，不会<br>影响删除行为。<br>-d --dirs ：以不递归的方式拷贝目录本身。默认递归时，如果源为&quot;dir1/file1&quot;，则不会拷贝dir1<br>目录，使用该选项将拷贝dir1但不拷贝file1。<br>--max-size ：限制rsync传输的最大文件大小。可以使用单位后缀，还可以是一个小数值(例如：&quot;--<br>max-size=1.5m&quot;)<br>--min-size ：限制rsync传输的最小文件大小。这可以用于禁止传输小文件或那些垃圾文件。<br>--exclude ：指定排除规则来排除不需要传输的文件。<br>--delete ：以SRC为主，对DEST进行同步。多则删之，少则补之。注意&quot;--delete&quot;是在接收端执行<br>的，所以它是在<br>：exclude/include规则生效之后才执行的。<br>-b --backup ：对目标上已存在的文件做一个备份，备份的文件名后默认使用&quot;~&quot;做后缀。<br>--backup-dir：指定备份文件的保存路径。不指定时默认和待备份文件保存在同一目录下。<br>-e ：指定所要使用的远程shell程序，默认为ssh。<br>--port ：连接daemon时使用的端口号，默认为873端口。<br>--password-file：daemon模式时的密码文件，可以从中读取密码实现非交互式。注意，这不是远程shell<br>认证的密码，而是rsync模块认证的密码。<br>-W --whole-file：rsync将不再使用增量传输，而是全量传输。在网络带宽高于磁盘带宽时，该选项比增<br>量传输更高效。<br>--existing ：要求只更新目标端已存在的文件，目标端还不存在的文件不传输。注意，使用相对路径时如<br>果上层目录不存在也不会传输。<br>--ignore-existing：要求只更新目标端不存在的文件。和&quot;--existing&quot;结合使用有特殊功能，见下文示<br>例。<br>--remove-source-files：要求删除源端已经成功传输的文件<br></code></pre></td></tr></table></figure><p> 范例：两种格式访问 rsync daemon 服务 </p><p><img src="/../image.assets/1670396738139.png" alt="1670396738139"></p><ul><li>环境</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">data-server:192.168.179.171(数据服务器)<br>backup-server:192.168.179.165(备份服务器)<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs text">#在备份服务器启动 rsync 进程<br>[root@centos8-backup ~]#rsync --daemon<br>Failed to parse config file: /etc/rsyncd.conf<br>[root@centos8-backup ~]#touch /etc/rsyncd.conf<br>[root@centos8-backup ~]#rsync --daemon<br>[root@centos8-backup /]# cat /etc/rsyncd.conf <br>[backup]<br>path = /web/www/<br>read only = no <br>[root@centos8-backup /]# <br>#指定目录给nobody权限，默认用户以nobody访问此目录<br>[root@centos8-backup ~]#setfacl -m u:nobody:rwx /data/backup/<br>#查看rsync服务器的模块名称<br>[root@centos7-slave /]# rsync rsync://192.168.179.165<br>backup    <br>[root@centos7-slave /]# <br>[root@centos7-slave /]# rsync 192.168.179.165::<br>backup<br><br>#访问rsync服务器的共享目录<br>#推<br>[root@centos7-slave /]# rsync /xy.log 192.168.179.165::backup<br>[root@centos7-slave /]# rsync /etc/shells rsync://root@192.168.179.165/backup<br><br>[root@centos7-slave /]#rsync 192.168.179.165::backup/* /opt<br>[root@centos7-slave /]#rsync rsync://192.168.179.165/backup/* /mnt<br></code></pre></td></tr></table></figure><p>范例：以独立服务方式运行 rsync</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs text"># 修改配置文件<br>[root@centos8-backup etc]# cat rsyncd.conf<br>#uid = root #提定以哪个用户来访问共享目录，将之指定为生成的文件所有者，默认为nobody<br>#gid = root #默认为nobody,Ubuntu中为nogroup<br>#port = 874 可指定非标准端口,默认873/tcp<br>#use chroot = no<br>#max connections = 0<br>#ignore errors<br>#exclude = lost+found/<br>#log file = /var/log/rsyncd.log<br>#pid file = /var/run/rsyncd.pid<br>#lock file = /var/run/rsyncd.lock<br>#reverse lookup = no<br>#hosts allow = 10.0.0.0/24<br>#[backup] #每个模块名对应一个不同的path目录，如果同名后面模块生效<br>#path = /data/backup/<br>#comment = backup dir<br>#read only = no #默认是yes,即只读<br>#auth users = rsyncuser #默认anonymous可以访问rsync服务器<br>#secrets file = /etc/rsync.pas<br># /etc/rsyncd: configuration file for rsync daemon mode<br><br># See rsyncd.conf man page for more options.<br><br># configuration example:<br><br># uid = nobody<br># gid = nobody<br># use chroot = yes<br># max connections = 4<br># pid file = /var/run/rsyncd.pid<br># exclude = lost+found/<br># transfer logging = yes<br># timeout = 900<br># ignore nonreadable = yes<br># dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2<br><br># [ftp]<br>#        path = /home/ftp<br>#        comment = ftp export area<br><br><br>uid = root <br>gid = root  <br>max connections = 0<br>ignore errors<br>exclude = lost+found/<br>log file = /var/log/rsyncd.log<br>pid file = /var/run/rsyncd.pid<br>lock file = /var/run/rsyncd.lock<br>reverse lookup = no<br><br>[backup] <br>path = /web/backup/  <br>comment = backup dir<br>read only = no <br>auth users = rsyncuser  <br>secrets file = /etc/rsync.pas<br><br>[root@centos8-backup etc]# <br><br><br>#服务器端生成验证文件<br>[root@centos8-backup ~]#echo &quot;rsyncuser:123456&quot; &gt; /etc/rsync.pas<br>[root@centos8-backup ~]#chmod 600 /etc/rsync.pas<br><br>#服务器端启动rsync服务<br>[root@centos8-backup ~]#rsync --daemon #可加入/etc/rc.d/rc.local实现开<br>机启动<br><br>#客户端配置密码文件<br>#也可将密码赋值给环境变量RSYNC_PASSWORD变量,但不安全<br>#export RSYNC_PASSWORD=123456<br>[root@centos7-slave ~]#echo &quot;123456&quot; &gt; /etc/rsync.pas<br>[root@centos7-slave ~]#chmod 600 /etc/rsync.pas #此为必要项,权限必须修改<br><br>#查看远程rsync服务器的模块信息<br>[root@centos7-slave etc]# rsync rsync://192.168.179.165<br>backup         backup dir<br>[root@centos7-slave etc]# <br><br>#交互式验证查看具体模块内的文件<br>[root@centos7-slave etc]# rsync rsync://rsyncuser@192.168.179.165/backup<br>Password: <br><br>#非交互式查看共享目录<br>[root@centos7-slave etc]# rsync --password-file=/etc/rsync.pas rsync://rsyncuser@192.168.179.165/backup<br>drwxrwxrwx             34 2022/12/07 16:20:07 .<br>-rw-r--r--              0 2022/12/07 16:20:07 xy.log<br>-rw-r--r--              0 2022/12/07 16:09:50 zz.log<br>[root@centos7-slave etc]# <br><br><br>#客户端测试同步数据<br>[root@data-centos8 ~]#rsync -avz --delete --password-file=/etc/rsync.pas /data/www/ rsyncuser@rsync服务器IP::backup<br>[root@data-centos8 ~]#rsync -avz --delete --password-file=/etc/rsync.pas rsyncuser@rsync服务器IP::backup /data/www/<br></code></pre></td></tr></table></figure><h3 id="inotify-rsync-shell-脚本实现实时数据同步"><a href="#inotify-rsync-shell-脚本实现实时数据同步" class="headerlink" title="inotify+rsync+shell 脚本实现实时数据同步"></a>inotify+rsync+shell 脚本实现实时数据同步</h3><p><img src="/../image.assets/1670403695085.png" alt="1670403695085"></p><p>按 5.3 搭建好 rsyncd的备份服务器，在数据服务器上创建inotify_rsync.sh脚本<br>注意: 此脚本执行前先确保两主机初始数据处于同步状态,此脚本实现后续的数据同步</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-slave ~]# vim inotify_rsync.sh <br>#!/bin/bash<br>SRC=&#x27;/data/www/&#x27; #注意最后的/<br>DEST=&#x27;rsyncuser@rsync服务器IP::backup&#x27;<br>rpm -q inotify-tools &amp;&gt; /dev/null ||yum -y install inotify-tools<br>rpm -q rsync &amp;&gt; /dev/null || yum -y install rsync<br>inotifywait -mrq --exclude=&quot;.*\.swp&quot; --timefmt &#x27;%Y-%m-%d %H:%M:%S&#x27; --format<br>&#x27;%T %w %f&#x27; -e create,delete,moved_to,close_write,attrib $&#123;SRC&#125; |while read DATE<br>TIME DIR FILE;do<br>FILEPATH=$&#123;DIR&#125;$&#123;FILE&#125;<br>rsync -az --delete --password-file=/etc/rsync.pas $SRC $DEST &amp;&amp; echo<br>&quot;At $&#123;TIME&#125; on $&#123;DATE&#125;, file $FILEPATH was backuped up via rsync&quot; &gt;&gt;<br>/var/log/changelist.log<br>done<br>#查看文件传输日志<br>[root@centos7-slave www]# tail -f /var/log/changelist.log <br></code></pre></td></tr></table></figure><h2 id="sersync-实现实时数据同步"><a href="#sersync-实现实时数据同步" class="headerlink" title="sersync 实现实时数据同步"></a>sersync 实现实时数据同步</h2><h3 id="sersync-介绍"><a href="#sersync-介绍" class="headerlink" title="sersync 介绍"></a>sersync 介绍</h3><p>sersync类似于inotify，同样用于监控，但它克服了inotify的缺点.<br>inotify最大的不足是会产生重复事件，或者同一个目录下多个文件的操作会产生多个事件，例如，当监<br>控目录中有5个文件时，删除目录时会产生6个监控事件，从而导致重复调用rsync命令。另外比如：vim<br>文件时，inotify会监控到临时文件的事件，但这些事件相对于rsync来说是不应该被监控的</p><p><strong>sersync 优点：</strong></p><ul><li>sersync是使用c++编写，而且对linux系统文件系统产生的临时文件和重复的文件操作进行过滤，<br>所以在结合rsync同步的时候，节省了运行时耗和网络资源。因此更快。</li><li>sersync配置很简单，其中提供了静态编译好的二进制文件和xml配置文件，直接使用即可</li><li>sersync使用多线程进行同步，尤其在同步较大文件时，能够保证多个服务器实时保持同步状态</li><li>sersync有出错处理机制，通过失败队列对出错的文件重新同步，如果仍旧失败，则按设定时长对<br>同步失败的文件重新同步</li><li>sersync不仅可以实现实时同步，另外还自带crontab功能，只需在xml配置文件中开启，即也可以<br>按要求隔一段时间整体同步一次，而无需再额外配置crontab功能</li><li>sersync 可以二次开发</li></ul><p>sersync项目地址： <a href="https://code.google.com/archive/p/sersync/">https://code.google.com/archive/p/sersync/</a><br>sersync下载地址： <a href="https://code.google.com/archive/p/sersync/downloads">https://code.google.com/archive/p/sersync/downloads</a></p><h3 id="基于rsync-daemon-实现-sersync"><a href="#基于rsync-daemon-实现-sersync" class="headerlink" title="基于rsync daemon 实现 sersync"></a>基于rsync daemon 实现 sersync</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs text"># #在数据服务器上下载sersync，并拷贝至相应的目录，设置PATH变量<br>wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/sersync/sersync2.5.4_64bit_binary_stable_final.tar.gz<br><br>[root@centos7-slave ~]# tar -vxf sersync2.5.4_64bit_binary_stable_final.tar.gz <br>[root@centos7-slave ~]# cp -r GNU-Linux-x86/ /usr/local/sersync<br>[root@centos7-slave sersync]# echo &#x27;PATH=/usr/local/sersync:$PATH&#x27; &gt; /etc/profile.d/sersync.sh<br>[root@centos7-slave sersync]# source /etc/profile.d/sersync.sh<br>[root@centos7-slave sersync]# <br><br>#确认安装rsync客户端工具<br>rpm -q rsync &amp;&gt; /dev/null || dnf -y install rsync<br><br>#备份sersync配置文件<br>cp /usr/local/sersync/confxml.xml&#123;,.bak&#125;<br># 修改配置文件<br>vim /usr/local/sersync/confxml.xml<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;<br>&lt;head version=&quot;2.5&quot;&gt;<br>&lt;host hostip=&quot;localhost&quot; port=&quot;8008&quot;&gt;&lt;/host&gt;<br>&lt;debug start=&quot;false&quot;/&gt; # 是否开启调试模式<br>&lt;fileSystem xfs=&quot;false&quot;/&gt;<br>&lt;filter start=&quot;false&quot;&gt; #不开启文件过滤功能，当为true时,以下类型的文件将不同<br>步<br>&lt;exclude expression=&quot;(.*)\.svn&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;(.*)\.gz&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;^info/*&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;^static/*&quot;&gt;&lt;/exclude&gt;<br>&lt;/filter&gt;<br>&lt;inotify&gt; # 监控事件，默认监控<br>delete/close_write/moved_from/moved_to/create folder<br>&lt;delete start=&quot;true&quot;/&gt;<br>&lt;createFolder start=&quot;true&quot;/&gt;<br>&lt;createFile start=&quot;false&quot;/&gt;<br>&lt;closeWrite start=&quot;true&quot;/&gt;<br>&lt;moveFrom start=&quot;true&quot;/&gt;<br>&lt;moveTo start=&quot;true&quot;/&gt;<br>&lt;attrib start=&quot;true&quot;/&gt; #修改此行为true，文件属性变化后也会同步<br>&lt;modify start=&quot;false&quot;/&gt;<br>&lt;/inotify&gt;<br>&lt;sersync&gt; # rsync命令的配置段<br>&lt;localpath watch=&quot;/data/www&quot;&gt; #修改此行,需要同步的源目录或文件，建议同步目<br>录<br>&lt;remote ip=&quot;备份服务器IP&quot; name=&quot;backup&quot;/&gt; #修改此行,指定备份服务器地址和rsync<br>daemon的模块名，如果下面开启了ssh start，此时name为远程shell方式运行时的目标目录<br>&lt;!--&lt;remote ip=&quot;192.168.8.39&quot; name=&quot;tongbu&quot;/&gt;--&gt;<br>&lt;!--&lt;remote ip=&quot;192.168.8.40&quot; name=&quot;tongbu&quot;/&gt;--&gt;<br>&lt;/localpath&gt;<br>&lt;rsync&gt;<br>&lt;commonParams params=&quot;-artuz&quot;/&gt; # 指定rsync选项<br>&lt;auth start=&quot;true&quot; users=&quot;rsyncuser&quot; passwordfile=&quot;/etc/rsync.pas&quot;/&gt; #修<br>改此行为true,指定备份服务器的rsync配置的用户和密码文件<br>&lt;userDefinedPort start=&quot;false&quot; port=&quot;874&quot;/&gt;&lt;!-- port=874 --&gt;#指定rsync的非<br>标准端口号<br>&lt;timeout start=&quot;false&quot; time=&quot;100&quot;/&gt;&lt;!-- timeout=100 --&gt;<br>&lt;ssh start=&quot;false&quot;/&gt; #默认使用rsync daemon运行rsync命令,true为使用远程shell模<br>式<br>&lt;/rsync&gt;<br>&lt;failLog path=&quot;/tmp/rsync_fail_log.sh&quot; timeToExecute=&quot;60&quot;/&gt;&lt;!--default every<br>60mins execute once--&gt; #错误重传及日志文件路径<br>&lt;crontab start=&quot;false&quot; schedule=&quot;600&quot;&gt;&lt;!--600mins--&gt; #不开启crontab功能<br>&lt;crontabfilter start=&quot;false&quot;&gt; #不开启crontab定时传输的筛选功能<br>&lt;exclude expression=&quot;*.php&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;info/*&quot;&gt;&lt;/exclude&gt;<br>&lt;/crontabfilter&gt;<br>&lt;/crontab&gt;<br>&lt;plugin start=&quot;false&quot; name=&quot;command&quot;/&gt;<br>&lt;/sersync&gt;<br>#####################################以下行不需要修改<br>####################################<br>&lt;plugin name=&quot;command&quot;&gt;<br>&lt;param prefix=&quot;/bin/sh&quot; suffix=&quot;&quot; ignoreError=&quot;true&quot;/&gt; &lt;!--prefix<br>/opt/tongbu/mmm.sh suffix--&gt;<br>&lt;filter start=&quot;false&quot;&gt;<br>&lt;include expression=&quot;(.*)\.php&quot;/&gt;<br>&lt;include expression=&quot;(.*)\.sh&quot;/&gt;<br>&lt;/filter&gt;<br>&lt;/plugin&gt;<br>&lt;plugin name=&quot;socket&quot;&gt;<br>&lt;localpath watch=&quot;/opt/tongbu&quot;&gt;<br>&lt;deshost ip=&quot;192.168.138.20&quot; port=&quot;8009&quot;/&gt;<br>&lt;/localpath&gt;<br>&lt;/plugin&gt;<br>&lt;plugin name=&quot;refreshCDN&quot;&gt;<br>&lt;localpath watch=&quot;/data0/htdocs/cms.xoyo.com/site/&quot;&gt;<br>&lt;cdninfo domainname=&quot;ccms.chinacache.com&quot; port=&quot;80&quot; username=&quot;xxxx&quot;<br>passwd=&quot;xxxx&quot;/&gt;<br>&lt;sendurl base=&quot;http://pic.xoyo.com/cms&quot;/&gt;<br> &lt;regexurl regex=&quot;false&quot; match=&quot;cms.xoyo.com/site([/a-zA-Z0-<br>9]*).xoyo.com/images&quot;/&gt;<br>&lt;/localpath&gt;<br>&lt;/plugin&gt;<br>&lt;/head&gt;<br><br><br>#创建连接rsynd服务器的用户密码文件,并必须修改权限<br>echo 123456 &gt; /etc/rsync.pas<br>chmod 600 /etc/rsync.pas<br>#查看帮助<br>sersync2 -h<br>set the system param<br>execute：echo 50000000 &gt; /proc/sys/fs/inotify/max_user_watches<br>execute：echo 327679 &gt; /proc/sys/fs/inotify/max_queued_events<br>parse the command param<br><br>_______________________________________________________<br>参数-d:启用守护进程模式<br>参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍<br>c参数-n: 指定开启守护线程的数量，默认为10个<br>参数-o:指定配置文件，默认使用当前工作目录下的confxml.xml文件<br>参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块<br>参数-m:单独启用其他模块，使用 -m socket 开启socket模块<br>参数-m:单独启用其他模块，使用 -m http 开启http模块<br>不加-m参数，则默认执行同步程序<br><br><br>#以后台方式执行同步<br>sersync2 -dro /usr/local/sersync/confxml.xml<br><br>#如果同步失败,可以手动执行下面命令,观察过程<br>cd /data/www &amp;&amp; rsync -artuz -R --delete ./ rsyncuser@backup-server::backup --password-file=/etc/rsync.pas &gt;/dev/null 2&gt;&amp;1<br><br>#sersync支持多实例，也即监控多个目录时，只需分别配置不同配置文件，然后使用sersync2指定对应配置文件运行<br>sersync2 -rd -o /etc/sersync.d/nginx.xml<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志服务管理</title>
    <link href="/2022/12/03/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <url>/2022/12/03/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="系统日志管理"><a href="#系统日志管理" class="headerlink" title="系统日志管理"></a>系统日志管理</h1><h2 id="系统日志介绍"><a href="#系统日志介绍" class="headerlink" title="系统日志介绍"></a>系统日志介绍</h2><p>在现实生活中，记录日志非常重要﹐比如:银行转账时会有转账记录﹔飞机飞行过程中的黑盒子（飞行数据记录器）记录着飞机的飞行过程. 那么将系统和应用发生的事件记录至日志中，也很意义,常可以助于排错和分析使用</p><p>日志记录的内容包括：</p><ul><li>历史事件：时间，地点，人物，事件</li><li>日志级别：事件的关键性程度，Loglevel</li></ul><h3 id="sysklogd-系统日志服务"><a href="#sysklogd-系统日志服务" class="headerlink" title="sysklogd 系统日志服务"></a>sysklogd 系统日志服务</h3><p>CentOS 5 之前版本采用的日志管理系统服务<br>klogd: linux kernel 记录内核日志<br>syslogd: system application 记录应用日志<br>事件记录格式：<br>日期时间 主机 进程[pid]: 事件内容<br>C&#x2F;S架构：通过TCP或UDP协议的服务完成日志记录传送，将分布在不同主机的日志实现集中管理</p><h3 id="rsyslog-系统日志服务"><a href="#rsyslog-系统日志服务" class="headerlink" title="rsyslog 系统日志服务"></a>rsyslog 系统日志服务</h3><p>rsyslog是CentOS 6 以后版本的系统管理服务.它提供了高性能，出色的安全性和模块化设计。 尽管rsyslog最初是常规的syslogd，但已发展成为一种瑞士军刀式的记录工具，能够接受来自各种来源的输入，并将其转换，然后输出到不同的目的地。当应用有限的处理时，RSYSLOG每秒可以将超过一百万的消息传递到本地目的地。 即使在远程的目的地和更精细的处理中，性能通常也被认为是“惊人的”。</p><p>官网网站</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://www.rsyslog.com/<br></code></pre></td></tr></table></figure><p>rsyslog 特性</p><ul><li>多线程</li><li>UDP, TCP, SSL, TLS, RELP</li><li>MySQL, PGSQL, Oracle实现日志存储</li><li>强大的过滤器，可实现过滤记录日志信息中任意部分</li><li>自定义输出格式</li><li>适用于企业级中继链</li></ul><h2 id="rsyslog-管理"><a href="#rsyslog-管理" class="headerlink" title="rsyslog 管理"></a>rsyslog 管理</h2><h3 id="系统日志术语"><a href="#系统日志术语" class="headerlink" title="系统日志术语"></a>系统日志术语</h3><p>facility：设施，从功能或程序上对日志进行归类</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">#内置分类<br>auth, authpriv, cron, daemon,ftp,kern, lpr, mail, news, security(auth),<br>user, uucp, syslog<br>#自定义的分类<br>local0-local7<br></code></pre></td></tr></table></figure><p>Priority 优先级别，从低到高排序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">debug,info, notice, warn(warning), err(error), crit(critical), alert,<br>emerg(panic)<br></code></pre></td></tr></table></figure><p>参看帮助： man 3 syslog，man logger</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos8 ~]#yum -y install man-pages<br>[root@centos8 ~]#man 3 syslog<br></code></pre></td></tr></table></figure><h3 id="rsyslog-相关文件"><a href="#rsyslog-相关文件" class="headerlink" title="rsyslog 相关文件"></a>rsyslog 相关文件</h3><ul><li>程序包：rsyslog</li><li>主程序：&#x2F;usr&#x2F;sbin&#x2F;rsyslogd</li><li>CentOS 6：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;rsyslog {start|stop|restart|status}</li><li>CentOS 7,8：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rsyslog.service</li><li>配置文件：&#x2F;etc&#x2F;rsyslog.conf，&#x2F;etc&#x2F;rsyslog.d&#x2F;<em>.conf</em></li><li><em>库文件： &#x2F;lib64&#x2F;rsyslog&#x2F;</em>.so</li></ul><h3 id="rsyslog配置文件"><a href="#rsyslog配置文件" class="headerlink" title="rsyslog配置文件"></a>rsyslog配置文件</h3><p><strong>&#x2F;etc&#x2F;rsyslog.conf 配置文件格式：由三部分组成</strong></p><ul><li>MODULES：相关模块配置</li><li>GLOBAL DIRECTIVES：全局配置</li><li>RULES：日志记录相关的规则配置</li></ul><p>RULES配置格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">facility.priority; facility.priority… target<br></code></pre></td></tr></table></figure><p>facility格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">* #所有的facility<br>facility1,facility2,facility3,... #指定的facility列表<br></code></pre></td></tr></table></figure><p>priority格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">*: 所有级别<br>none：没有级别，即不记录<br>PRIORITY：指定级别（含）以上的所有级别<br>=PRIORITY：仅记录指定级别的日志信息<br></code></pre></td></tr></table></figure><p>target格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">文件路径：通常在/var/log/，文件路径前的-表示异步写入<br>用户：将日志事件通知给指定的用户，* 表示登录的所有用户<br>日志服务器：@host，把日志送往至指定的远程UDP日志服务器 @@host 将日志发送到远程TCP日志服务器<br>管道： | COMMAND，转发给其它命令处理<br></code></pre></td></tr></table></figure><p><strong>通常的日志文件的格式：</strong></p><p>日志文件有很多，如： &#x2F;var&#x2F;log&#x2F;messages,cron,secure等，基本格式都是类似的。格式如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">事件产生的日期时间 主机 进程(pid)：事件内容<br></code></pre></td></tr></table></figure><p><strong>范例：日志文件格式</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# tail -f /var/log/messages<br>Dec  3 16:58:40 centos7 dbus[653]: [system] Activating via systemd: service name=&#x27;org.freedesktop.nm_dispatcher&#x27; unit=&#x27;dbus-org.freedesktop.nm-dispatcher.service&#x27;<br>Dec  3 16:58:40 centos7 systemd: Starting Network Manager Script Dispatcher Service...<br>Dec  3 16:58:40 centos7 dhclient[51210]: bound to 192.168.179.170 -- renewal in 745 seconds.<br>Dec  3 16:58:40 centos7 dbus[653]: [system] Successfully activated service &#x27;org.freedesktop.nm_dispatcher&#x27;<br>Dec  3 16:58:40 centos7 systemd: Started Network Manager Script Dispatcher Service.<br>Dec  3 16:58:40 centos7 nm-dispatcher: req:1 &#x27;dhcp4-change&#x27; [ens33]: new request (2 scripts)<br>Dec  3 16:58:40 centos7 nm-dispatcher: req:1 &#x27;dhcp4-change&#x27; [ens33]: start running ordered scripts...<br>Dec  3 17:01:01 centos7 systemd: Started Session 95 of user root.<br>Dec  3 17:11:05 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)<br>Dec  3 17:11:11 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)<br>Dec  3 17:11:26 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# tail -f /var/log/secure<br>Nov 29 22:58:18 centos7 sshd[49904]: pam_unix(sshd:session): session closed for user root<br>Nov 30 19:58:03 centos7 sshd[50030]: Accepted password for root from 192.168.179.1 port 51814 ssh2<br>Nov 30 19:58:03 centos7 sshd[50030]: pam_unix(sshd:session): session opened for user root by (uid=0)<br>Nov 30 21:15:17 centos7 sshd[48764]: pam_unix(sshd:session): session closed for user root<br>Dec  2 21:22:51 centos7 sshd[51123]: Accepted password for root from 192.168.179.1 port 53924 ssh2<br>Dec  2 21:22:51 centos7 sshd[51123]: pam_unix(sshd:session): session opened for user root by (uid=0)<br>Dec  3 09:08:03 centos7 sshd[50030]: pam_unix(sshd:session): session closed for user root<br>Dec  3 09:53:40 centos7 sshd[51295]: Accepted password for root from 192.168.179.1 port 56421 ssh2<br>Dec  3 09:53:40 centos7 sshd[51295]: pam_unix(sshd:session): session opened for user root by (uid=0)<br>Dec  3 11:14:12 centos7 sshd[51123]: pam_unix(sshd:session): session closed for user root<br></code></pre></td></tr></table></figure><h3 id="范例：将ssh服务的日志记录至自定义的local的日志设备"><a href="#范例：将ssh服务的日志记录至自定义的local的日志设备" class="headerlink" title="范例：将ssh服务的日志记录至自定义的local的日志设备"></a>范例：将ssh服务的日志记录至自定义的local的日志设备</h3><ul><li>修改sshd服务的配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# vim /etc/ssh/sshd_config <br># 配置文件修改内容如下所示<br>SyslogFacility local2<br># 重新加载sshd服务配置文件<br>[root@centos7 ~]# service sshd reload<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670069148343.png" alt="1670069148343"></p><ul><li>修改rsyslog配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# vim /etc/rsyslog.conf <br># 加入如下内容<br>local2.*                                                /var/log/sshd.log<br># 重启服务<br>[root@centos7 ~]# systemctl restart rsyslog<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670068722502.png" alt="1670068722502"></p><ul><li>测试验证</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text"># ssh 登入该服务器<br># 查看日志文件内容<br>tail -f /var/log/sshd.log<br></code></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs verilog">[root@centos7 ~]# tail -f /<span class="hljs-keyword">var</span>/log/sshd<span class="hljs-variable">.log</span> <br>Dec  <span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">06</span>:<span class="hljs-number">35</span> centos7 sshd[<span class="hljs-number">49356</span>]: Server listening on <span class="hljs-number">0</span><span class="hljs-variable">.0</span><span class="hljs-variable">.0</span><span class="hljs-variable">.0</span> port <span class="hljs-number">22</span>.<br>Dec  <span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">06</span>:<span class="hljs-number">35</span> centos7 sshd[<span class="hljs-number">49356</span>]: Server listening on :: port <span class="hljs-number">22</span>.<br>Dec  <span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">07</span>:<span class="hljs-number">06</span> centos7 sshd[<span class="hljs-number">52189</span>]: Accepted publickey <span class="hljs-keyword">for</span> root from <span class="hljs-number">192</span><span class="hljs-variable">.168</span><span class="hljs-variable">.179</span><span class="hljs-variable">.171</span> port <span class="hljs-number">33434</span> ssh2: RSA SHA256:HohSbRRS/oP0nLbEZTqgSJ6WQ5Mjp3f9DxM+spRO+SI<br></code></pre></td></tr></table></figure><p>日志中可以看到192.168.179.171的IP地址通过root用户ssh登入该设备</p><h3 id="启用网络日志服务"><a href="#启用网络日志服务" class="headerlink" title="启用网络日志服务"></a>启用网络日志服务</h3><p>启用网络日志服务功能，可以将多个远程主机的日志，发送到集中的日志服务器，方便统一管理。</p><p><strong>范例：CentOS 7 和6 启用网络日志功能</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">日志服务器：centos7.9，主机名称：centos7,ip:192.168.179.157<br>客户端1：centos7.9，主机名称：centos7-master,ip:192.168.179.170<br>客户端2：centos7.9，主机名称：centos7-slave,ip:192.168.179.171  <br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670070091109.png" alt="1670070091109"></p><ul><li>修改日志服务器配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">192.168.179.157上操作</span><br>[root@centos7 ~]# vim /etc/rsyslog.conf<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670070275185.png" alt="1670070275185"></p><ul><li>重启日志服务器rsyslog服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 ~]# systemctl restart rsyslog<br></code></pre></td></tr></table></figure><ul><li>修改客户端配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">修改192.168.179.170配置文件</span><br>[root@centos7-master ~]# vim /etc/rsyslog.conf <br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改内容如下</span><br>*.info;mail.none;authpriv.none;cron.none                /var/log/messages<br>*.info;mail.none;authpriv.none;cron.none                @@192.168.179.157:514 #TCP<br>*.info;mail.none;authpriv.none;cron.none                @192.168.179.157:514 #udp<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启服务</span><br>systemctl restart rsyslog<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">192.168.179.171客户端使用上面方法操作修改配置文件</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670070969222.png" alt="1670070969222"></p><ul><li>测试验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在日志服务器上查看日志</span><br>[root@centos7 ~]# tail -f /var/log/messages<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670071324130.png" alt="1670071324130"></p><p>可以看到主机名称centos7-master、centos7-slave上的日志说明实验成功</p><p><strong>范例：CentOS 8 启用网络日志功能</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">## MODULES ####<br>...省略...<br># Provides UDP syslog reception<br># for parameters see http://www.rsyslog.com/doc/imudp.html<br>module(load=&quot;imudp&quot;) # needs to be done just once<br>input(type=&quot;imudp&quot; port=&quot;514&quot;)<br># Provides TCP syslog reception<br># for parameters see http://www.rsyslog.com/doc/imtcp.html<br>module(load=&quot;imtcp&quot;) # needs to be done just once<br>input(type=&quot;imtcp&quot; port=&quot;514&quot;)<br></code></pre></td></tr></table></figure><h3 id="常见日志文件"><a href="#常见日志文件" class="headerlink" title="常见日志文件"></a>常见日志文件</h3><ul><li>&#x2F;var&#x2F;log&#x2F;secure：系统安全日志，文本格式，应周期性分析</li><li>&#x2F;var&#x2F;log&#x2F;btmp：当前系统上，用户的失败尝试登录相关的日志信息，二进制格式，lastb命令进行查看</li><li>&#x2F;var&#x2F;log&#x2F;wtmp：当前系统上，用户正常登录系统的相关日志信息，二进制格式，last命令可以查看</li><li>&#x2F;var&#x2F;log&#x2F;lastlog:每一个用户最近一次的登录信息，二进制格式，lastlog命令可以查看</li><li>&#x2F;var&#x2F;log&#x2F;dmesg：CentOS7 之前版本系统引导过程中的日志信息，文本格式，开机后的硬件变化</li><li>将不再记录，也可以通过专用命令dmesg查看，可持续记录硬件变化的情况</li><li>&#x2F;var&#x2F;log&#x2F;boot.log 系统服务启动的相关信息，文本格式</li><li>&#x2F;var&#x2F;log&#x2F;messages ：系统中大部分的信息</li><li>&#x2F;var&#x2F;log&#x2F;anaconda : anaconda的日志</li></ul><h3 id="实战案例：利用-MySQL-存储日志信息"><a href="#实战案例：利用-MySQL-存储日志信息" class="headerlink" title="实战案例：利用 MySQL 存储日志信息"></a>实战案例：利用 MySQL 存储日志信息</h3><p><img src="/../image.assets/1670074533744.png" alt="1670074533744"></p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>利用rsyslog日志服务，将收集的日志记录于MySQL中</p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">两台主机<br>一台：rsyslog日志服务器，IP：192.168.179.157<br>一台：mariadb数据库服务器，IP：192.168.179.178<br></code></pre></td></tr></table></figure><h4 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在rsyslog服务器上安装连接mysql模块相关的程序包<br>[root@centos7 ~]# yum install rsyslog-mysql<br>[root@centos7 ~]# rpm -ql rsyslog-mysql<br>/usr/lib64/rsyslog/ommysql.so<br>/usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql<br>[root@centos7 ~]# <br><br>#将sql脚本复制到数据库服务器上<br>[root@centos7 ~]# scp /usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql 192.168.179.148:/root/<br><br># 在192.168.179.148上安装mysql<br>yum install mysql-server -y<br><br># #在mysql数据库服务器上创建相关数据库和表，并授权rsyslog能连接至当前服务器<br>root@ubuntu1804:~# mysql<br>mysql&gt; source /root/mysql-createDB.sql;<br>Query OK, 1 row affected (0.00 sec)<br>mysql&gt; create user &#x27;rsyslog&#x27;@&#x27;192.168.179.%&#x27; identified by &#x27;123456&#x27;;<br>Query OK, 0 rows affected (0.04 sec)<br><br>mysql&gt; grant all on Syslog.* to &#x27;rsyslog&#x27;@&#x27;192.168.179.%&#x27;;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; flush privileges;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br><br># 配置日志服务器将日志发送至指定数据库<br>vim /etc/rsyslog.conf<br>####MODULES####<br>#在 MODULES 语言下面，如果是 CentOS 8 加下面行<br>module(load=&quot;ommysql&quot;)<br>#在 MODULES 语言下面，如果是 CentOS 7，6 加下面行<br>$ModLoad ommysql<br><br>#在RULES语句块加下面行的格式<br>#facility.priority :ommysql:DBHOST,DBNAME,DBUSER, PASSWORD<br>*.info :ommysql:192.168.179.148,Syslog,rsyslog,123456<br><br># 重启服务<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670075626142.png" alt="1670075626142"></p><p><img src="/../image.assets/1670075765663.png" alt="1670075765663"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在日志服务器上生成日志<br>logger &#x27;this is test log&#x27;<br><br>#在数据库上查询到上面的测试日志<br>mysql&gt; select count(*) from SystemEvents;<br>+----------+<br>| count(*) |<br>+----------+<br>|       66 |<br>+----------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><h2 id="logrotate-日志转储"><a href="#logrotate-日志转储" class="headerlink" title="logrotate 日志转储"></a>logrotate 日志转储</h2><h3 id="logrotate-介绍"><a href="#logrotate-介绍" class="headerlink" title="logrotate 介绍"></a>logrotate 介绍</h3><p>logrotate 程序是一个日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件，称为日志转<br>储或滚动。可以根据日志文件的大小，也可以根据其天数来转储，这个过程一般通过 cron 程序来执行</p><h3 id="logrotate-配置"><a href="#logrotate-配置" class="headerlink" title="logrotate 配置"></a>logrotate 配置</h3><p>软件包：logrotate<br>相关文件</p><ul><li><p>计划任务：&#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p></li><li><p>程序文件：&#x2F;usr&#x2F;sbin&#x2F;logrotate</p></li><li><p>配置文件： &#x2F;etc&#x2F;logrotate.conf</p></li><li><p>日志文件：&#x2F;var&#x2F;lib&#x2F;logrotate&#x2F;logrotate.status</p></li></ul><p>配置文件主要参数如下：</p><p><img src="/../image.assets/1670121049880.png" alt="1670121049880"></p><p><img src="/../image.assets/1670121071202.png" alt="1670121071202"></p><p><img src="/../image.assets/1670121091758.png" alt="1670121091758"></p><p><img src="/../image.assets/1670121108631.png" alt="1670121108631"></p><p><strong>范例：对指定日志手动执行日志转储</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs text"># 生成测试日志<br>[root@centos7-master ~]# dd if=/dev/zero of=/var/log/test1.log bs=2M count=1<br>1+0 records in<br>1+0 records out<br>2097152 bytes (2.1 MB) copied, 0.0017554 s, 1.2 GB/s<br>[root@centos7-master ~]# <br><br>[root@centos7-master ~]# dd if=/dev/zero of=/var/log/test2.log bs=2M count=1<br>1+0 records in<br>1+0 records out<br>2097152 bytes (2.1 MB) copied, 0.00240458 s, 872 MB/s<br>[root@centos7-master ~]# <br><br>#针对不同的日志创建转储配置文件<br>[root@centos7-master ~]# vim /etc/logrotate.d/test1<br><br>/var/log/test1.log &#123;<br>        daily<br>        rotate 5<br>        compress<br>        delaycompress<br>        missingok<br>        size 1M<br>        notifempty<br>        create 640 bin nobody<br>        postrotate<br>        echo `date +%F_%T` &gt;&gt; /data/test1.log<br>        endscript<br>&#125;<br><br>[root@centos7-master ~]# vim /etc/logrotate.d/test2<br>/var/log/test2.log &#123;<br>        daily<br>        rotate 5<br>        compress<br>        delaycompress<br>        missingok<br>        size 1M<br>        notifempty<br>        create 644 root root<br>        postrotate<br>        echo `date +%F_%T` &gt;&gt; /data/test2.log<br>        endscript<br>&#125;<br><br>#针对一个测试日志，手动执行日志转储<br>[root@centos7-master ~]# logrotate /etc/logrotate.d/test1<br><br>[root@centos7-master ~]# ll /var/log/test*<br>-rw-r----- 1 bin  nobody       0 Dec  4 11:12 /var/log/test1.log<br>-rw-r--r-- 1 root root   2097152 Dec  4 11:07 /var/log/test1.log.1<br>-rw-r--r-- 1 root root   2097152 Dec  4 11:07 /var/log/test2.log<br>[root@centos7-master ~]# <br>[root@centos7-master ~]# ll /data/<br>total 1800<br>-rw-r--r--  1 root  root  915255 Nov 27 17:22 1127.sql<br>-rw-r--r--  1 root  root  914921 Nov 25 10:23 all.sql<br>drwxr-xr-x  3 root  root      18 Nov 29 22:45 mastermha<br>drwxr-x--- 11 mysql mysql   4096 Dec  3 20:30 mysql<br>-rw-r--r--  1 root  root      20 Dec  4 11:12 test1.log<br>[root@centos7-master ~]# <br>#对所有日志进行手动转储<br>[root@centos7-master ~]# logrotate /etc/logrotate.conf<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL备份和恢复</title>
    <link href="/2022/11/21/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/11/21/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="实战案例：特定数据库的备份脚本"><a href="#实战案例：特定数据库的备份脚本" class="headerlink" title="实战案例：特定数据库的备份脚本"></a>实战案例：特定数据库的备份脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>TIME=`date +%F_%H-%M-%S`<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份目录</span><br>DIR=/mysql_backup<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份数据库</span><br>DB=hellodb<br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据库密码</span><br>PASSWD=123456<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断备份数据库目录是否存在</span><br>[ -d $DIR ] || mkdir $DIR<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份</span><br>mysqldump -uroot -p&quot;$PASSWD&quot; -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B $DB | gzip &gt; $&#123;DIR&#125;/$&#123;DB&#125;_$&#123;TIME&#125;.sql.gz<br></code></pre></td></tr></table></figure><h1 id="实战案例：分库备份的实战脚本"><a href="#实战案例：分库备份的实战脚本" class="headerlink" title="实战案例：分库备份的实战脚本"></a>实战案例：分库备份的实战脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>TIME=`<span class="hljs-built_in">date</span> +%F_%H-%M-%S`<br>DIR=/backup<br>PASS=123456<br>[ -d <span class="hljs-string">&quot;<span class="hljs-variable">$DIR</span>&quot;</span> ] || <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$DIR</span><br><span class="hljs-keyword">for</span> DB <span class="hljs-keyword">in</span> `mysql -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -e <span class="hljs-string">&#x27;show databases&#x27;</span> | grep -Ev <span class="hljs-string">&quot;^Database|.*schema$&quot;</span>`;<span class="hljs-keyword">do</span><br>    mysqldump -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -F --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B <span class="hljs-variable">$DB</span> | gzip &gt; <span class="hljs-variable">$&#123;DIR&#125;</span>/<span class="hljs-variable">$&#123;DB&#125;</span>_<span class="hljs-variable">$&#123;TIME&#125;</span>.sql.gz<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP超文本传输协议</title>
    <link href="/2022/10/15/http/"/>
    <url>/2022/10/15/http/</url>
    
    <content type="html"><![CDATA[<h1 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h1><table><thead><tr><th>名称</th><th>协议</th></tr></thead><tbody><tr><td>7 应用层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>6 表示层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>5 会话层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>4 传输层</td><td>tcp、udp</td></tr><tr><td>3 网络层</td><td>IPV4、IPV6、ARP</td></tr><tr><td>2 数据链路层</td><td>以太网、无线LAN</td></tr><tr><td>1 物理层</td><td>光纤</td></tr></tbody></table><h1 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h1><p>http协议：超文本传输协议，基于TCP协议的应用层传输协议，一种 无状态的、以请求&#x2F;应答方式的运行的协议（无状态：对于事物处理没有记忆功能）</p><h1 id="主要组成"><a href="#主要组成" class="headerlink" title="主要组成"></a>主要组成</h1><p>http协议主要有三大部分组成</p><ul><li>起始行：描述请求或相应的文本</li><li>头部字段：使用key-value形式更加详细说明报文</li><li>消息正文：实际传输的数据，可以是文本、图片、视频等</li></ul><h1 id="http请求报文"><a href="#http请求报文" class="headerlink" title="http请求报文"></a>http请求报文</h1><ul><li>请求行</li><li>请求头</li><li>请求体</li></ul><h1 id="http响应报文"><a href="#http响应报文" class="headerlink" title="http响应报文"></a>http响应报文</h1><ul><li>响应行</li><li>响应头</li><li>响应体</li></ul><h1 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h1><p>tcp&#x2F;ip协议：面向连接的、可靠的基于字节流的传输层协议。</p><p><strong>特点</strong></p><p>基于连接的：数据传输前需要建立连接</p><p>全双工：双向传输</p><p>字节流：不限制传输大小</p><p>流量缓冲：解决双方处理能力的不匹配</p><p>可靠的传输服务：保证可达、信息丢包时通过重发机制实施可靠性</p><p>拥塞控制：防止网络出现恶性拥塞</p><p><strong>三次握手</strong></p><p> <img src="/../image.assets/20180808105159546.png" alt="alt"> </p><p>刚开始客户端处于 closed 的状态，服务端处于 listen 状态。然后<br>1、第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN（c）。此时客户端处于 SYN_Send 状态。</p><p>2、第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)，同时会把客户端的 ISN + 1 作为 ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。</p><p>3、第三次握手：客户端收到 ACK+SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 establised 状态。</p><p>4、服务器收到 ACK 报文之后，也处于 establised 状态，此时，双方以建立起了链接。</p><p class="note note-success">SYN是同步的缩写，SYN段是发送到另外一台计算机的TCP数据包，请求在她们之间建立连接</p>  <p class="note note-success">ACK是“确认”的缩写。ACK数据包是任何确认收到一条消息或一系列数据包的TCP数据包</p>**四次挥手**<p> <img src="/../image.assets/3971776-9550b64ff16dbb0b.webp" alt="img"> </p><p>刚开始双方都处于 establised 状态，假如是客户端先发起关闭请求，则：</p><p>1、第一次挥手：客户端发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于FIN_WAIT1状态。</p><p>2、第二次握手：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 + 1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 CLOSE_WAIT状态。</p><p>3、第三次挥手：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 LAST_ACK 的状态。</p><p>4、第四次挥手：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 + 1 作为自己 ACK 报文的序列号值，此时客户端处于 TIME_WAIT 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态</p><p>5、服务端收到 ACK 报文之后，就处于关闭连接了，处于 CLOSED 状态。</p><p><strong>为什么TIME-WAIT状态必须等待2MSL的时间？</strong></p><ul><li>保证客户端最后一个ACK能够到达服务器端</li><li>防止失效的请求报文段出现在本次连接中</li></ul><p> <img src="/../image.assets/http.jpg" alt="HTTP超文本传输协议"> </p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在线一键安装MySQL脚本</title>
    <link href="/2022/09/30/MySQLinstallScript/"/>
    <url>/2022/09/30/MySQLinstallScript/</url>
    
    <content type="html"><![CDATA[<p><strong>环境：</strong>  </p><ul><li>系统：rocky8.5  </li><li>MySQL版本:8.0.28   </li><li>在线安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br>#<br>#Authoryuankun<br>#Date2022-09-29<br>#Filenameinstall_mysql-8.0.28-linux-glibc2.12-x86_64.sh<br><br>. /etc/init.d/functions<br><br>color=&#x27;echo -e \E[01;31m&#x27;<br><br>end=&#x27;\E[0m&#x27;<br><br># 设置mysql root用户密码<br>MYSQL_ROOT_PASSWD=123456<br>MYSQL_VERSION=mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br><br>check()&#123;<br>$&#123;color&#125;安装前环境检查......$&#123;end&#125;<br><br># 判断当前用户是否是root用户，不是则退出安装<br>if [ $&#123;UID&#125; -ne 0 ];then<br>action &quot;当前用户不是root,安装失败!&quot; false<br>exit<br>fi<br># 判断是否安装wget，没有安装则使用yum安装wget<br>rpm -q wget || yum install -y wget<br><br># 判断/usr/local/mysql目录是否存在，存在则exit<br>if [ -e /usr/local/mysql ];then<br>$&#123;color&#125;&quot;mysql已经安装,安装失败!&quot;$&#123;end&#125;<br>exit<br>fi<br># 下载二进制程序包<br>wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br><br># 判断二进制程序包是否存在<br>if [ ! -e $&#123;MYSQL_VERSION&#125; ];then<br>$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;<br>$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;<br>exit<br>else<br>$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;<br>fi<br>&#125;<br># 安装mysql<br>install_mysql()&#123;<br>$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;<br># 安装依赖<br>yum install -y -q libaio numactl-libs<br># 解压缩<br>tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/<br>cd /usr/local/<br>MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql<br>chown -R root.root /usr/local/mysql/<br>id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;<br><br># 环境变量<br>echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br>ln -s /usr/local/mysql/bin/* /usr/bin/<br># 配置文件<br>cat &gt; /etc/my.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=1<br>log-bin<br>datadir=/data/mysql<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br>EOF<br>[ -d /data ] || mkdir /data<br>mysqld --initialize --user=mysql --datadir=/data/mysql<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;<br>sleep 3<br>MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`<br>mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null<br>action &quot;数据库安装完成&quot;<br>&#125;<br># 调用函数<br>check<br>install_mysql<br></code></pre></td></tr></table></figure><p><strong>扩展</strong>：在线一键安装MySQL5.7.39脚本</p><ul><li>系统：rocky8.5  </li><li>MySQL版本:5.7.39</li><li>在线安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br>#<br>#Authoryuankun<br>#Date2022-11-19<br>#Filenameinstall_mysql-5.7.39-linux-glibc2.12-x86_64.sh<br><br>. /etc/init.d/functions<br><br>color=&#x27;echo -e \E[01;31m&#x27;<br><br>end=&#x27;\E[0m&#x27;<br><br># 设置mysql root用户密码<br>MYSQL_ROOT_PASSWD=123456<br>MYSQL_VERSION=mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz<br><br>check()&#123;<br>$&#123;color&#125;安装前环境检查......$&#123;end&#125;<br><br># 判断当前用户是否是root用户，不是则退出安装<br>if [ $&#123;UID&#125; -ne 0 ];then<br>action &quot;当前用户不是root,安装失败!&quot; false<br>exit<br>fi<br># 判断是否安装wget，没有安装则使用yum安装wget<br>rpm -q wget || yum install -y wget<br><br># 判断/usr/local/mysql目录是否存在，存在则exit<br>if [ -e /usr/local/mysql ];then<br>$&#123;color&#125;&quot;mysql已经安装,安装失败!&quot;$&#123;end&#125;<br>exit<br>fi<br># 下载二进制程序包<br>wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz<br><br># 判断二进制程序包是否存在<br>if [ ! -e $&#123;MYSQL_VERSION&#125; ];then<br>$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;<br>$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;<br>exit<br>else<br>$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;<br>fi<br>&#125;<br># 安装mysql<br>install_mysql()&#123;<br>$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;<br># 安装依赖<br>yum install -y -q libaio numactl-libs<br># 解压缩<br>tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/<br>cd /usr/local/<br>MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql<br>chown -R root.root /usr/local/mysql/<br>id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;<br><br># 环境变量<br>echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br>ln -s /usr/local/mysql/bin/* /usr/bin/<br># 配置文件<br>cat &gt; /etc/my.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=1<br>log-bin<br>datadir=/data/mysql<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br>EOF<br>[ -d /data ] || mkdir /data<br>mysqld --initialize --user=mysql --datadir=/data/mysql<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;<br>sleep 3<br>MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`<br>mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null<br>action &quot;数据库安装完成&quot;<br>&#125;<br># 调用函数<br>check<br>install_mysql<br></code></pre></td></tr></table></figure><p><strong>离线安装</strong></p><ul><li><p>注意：需要提前将二进制包下载到本地</p></li><li><p>系统：rocky8.5  </p></li><li><p>MySQL版本:8.0.28</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br>#<br>#Authoryuankun<br>#Date2022-11-19<br>#Filenameinstall_offline_mysql-8.0.28-linux-glibc2.12-x86_64.sh<br><br>. /etc/init.d/functions<br><br>color=&#x27;echo -e \E[01;31m&#x27;<br><br>end=&#x27;\E[0m&#x27;<br><br># 设置mysql root用户密码<br>MYSQL_ROOT_PASSWD=123456<br># mysql 版本<br>MYSQL_VERSION=mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br><br>check()&#123;<br>$&#123;color&#125;安装前环境检查......$&#123;end&#125;<br><br># 判断当前用户是否是root用户，不是则退出安装<br>if [ $&#123;UID&#125; -ne 0 ];then<br>action &quot;当前用户不是root,安装失败!&quot; false<br>exit<br>fi<br><br># 判断/usr/local/mysql目录是否存在，存在则exit<br>if [ -e /usr/local/mysql ];then<br>$&#123;color&#125;&quot;mysql已经安装，安装失败!&quot;$&#123;end&#125;<br>exit<br>fi<br><br># 判断二进制程序包是否存在<br>if [ ! -e $&#123;MYSQL_VERSION&#125; ];then<br>$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;<br>$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;<br>exit<br>else<br>$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;<br>fi<br>&#125;<br>install_mysql()&#123;<br>$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;<br># 安装依赖<br>yum install -y -q libaio numactl-libs<br># 解压缩<br>tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/<br>cd /usr/local/<br>MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql<br>chown -R root.root /usr/local/mysql/<br>id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;<br><br># 环境变量<br>echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br>ln -s /usr/local/mysql/bin/* /usr/bin/<br># 配置文件<br>cat &gt; /etc/my.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=1<br>log-bin<br>datadir=/data/mysql<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br>EOF<br>[ -d /data ] || mkdir /data<br>mysqld --initialize --user=mysql --datadir=/data/mysql<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;<br>sleep 3<br>MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`<br>mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null<br>action &quot;数据库安装完成&quot;<br>&#125;<br># 调用函数<br>check<br>install_mysql<br></code></pre></td></tr></table></figure><p><strong>离线安装Mysql5.7.38</strong></p><ul><li>操作系统：centos7.9</li><li>mysql版本：5.7.38</li><li>mysql-5.7.38-linux-glibc2.12-x86_64.tar.gz下载链接</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://mirrors.cloud.tencent.com/mysql/downloads/MySQL-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>/mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">38</span>-linux-glibc2.<span class="hljs-number">12</span>-x86_64.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#Authoryuankun</span><br><span class="hljs-comment">#Date2022-11-24</span><br><span class="hljs-comment">#Filenameinstall_offline_mysql-5.7.38-linux-glibc2.12-x86_64.sh</span><br><br>. <span class="hljs-regexp">/etc/i</span>nit.d/functions<br><br>color=<span class="hljs-string">&#x27;echo -e \E[01;31m&#x27;</span><br><br>end=<span class="hljs-string">&#x27;\E[0m&#x27;</span><br><br><span class="hljs-comment"># 设置mysql root用户密码</span><br>MYSQL_ROOT_PASSWD=<span class="hljs-number">123456</span><br><span class="hljs-comment"># mysql 版本</span><br>MYSQL_VERSION=mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">38</span>-linux-glibc2.<span class="hljs-number">12</span>-x86_64.tar.gz<br><br>check()&#123;<br><span class="hljs-variable">$&#123;color&#125;</span>安装前环境检查......<span class="hljs-variable">$&#123;end&#125;</span><br><br><span class="hljs-comment"># 判断当前用户是否是root用户，不是则退出安装</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;UID&#125;</span> -ne <span class="hljs-number">0</span> ];then<br>action <span class="hljs-string">&quot;当前用户不是root,安装失败!&quot;</span> false<br><span class="hljs-keyword">exit</span><br>fi<br><br><span class="hljs-comment"># 判断/usr/local/mysql目录是否存在，存在则exit</span><br><span class="hljs-keyword">if</span> [ -e <span class="hljs-regexp">/usr/</span>local/mysql ];then<br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;mysql已经安装，安装失败!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-keyword">exit</span><br>fi<br><br><span class="hljs-comment"># 判断二进制程序包是否存在</span><br><span class="hljs-keyword">if</span> [ ! -e <span class="hljs-variable">$&#123;MYSQL_VERSION&#125;</span> ];then<br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;文件不存在,安装失败!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-keyword">exit</span><br><span class="hljs-keyword">else</span><br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;安装前环境检查完毕,环境要求满足!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br>fi<br>&#125;<br>install_mysql()&#123;<br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;开始安装mysql......&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-comment"># 安装依赖</span><br>yum install -y -q libaio numactl-libs<br><span class="hljs-comment"># 解压缩</span><br>tar xf <span class="hljs-variable">$&#123;MYSQL_VERSION&#125;</span> -C <span class="hljs-regexp">/usr/</span>local/<br>cd <span class="hljs-regexp">/usr/</span>local/<br>MYSQL_FILE=`echo <span class="hljs-variable">$&#123;MYSQL_VERSION&#125;</span> | sed -nr <span class="hljs-string">&#x27;s/^(.*[0-9]).*/\1/p&#x27;</span>`<br>ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/$&#123;MYSQL_FILE&#125; /u</span>sr<span class="hljs-regexp">/local/my</span>sql<br>chown -R root.root <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span><br>id mysql &amp;&gt; <span class="hljs-regexp">/dev/</span>null || &#123; useradd -s <span class="hljs-regexp">/sbin/</span>nologin -r mysql ; action <span class="hljs-string">&quot;创建mysql用户&quot;</span>; &#125;<br><br><span class="hljs-comment"># 环境变量</span><br>echo <span class="hljs-string">&#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27;</span> &gt; <span class="hljs-regexp">/etc/</span>profile.d/mysql.sh<br>. <span class="hljs-regexp">/etc/</span>profile.d/mysql.sh<br>ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/* /u</span>sr<span class="hljs-regexp">/bin/</span><br><span class="hljs-comment"># 配置文件</span><br>cat &gt; <span class="hljs-regexp">/etc/my</span>.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=<span class="hljs-number">1</span><br>log-bin<br>datadir=<span class="hljs-regexp">/data/my</span>sql<br>socket=<span class="hljs-regexp">/data/my</span>sql/mysql.sock<br>log-error=<span class="hljs-regexp">/data/my</span>sql/mysql.log<br>pid-file=<span class="hljs-regexp">/data/my</span>sql/mysql.pid<br>[client]<br>socket=<span class="hljs-regexp">/data/my</span>sql/mysql.sock<br>EOF<br>[ -d <span class="hljs-regexp">/data ] || mkdir /</span>data<br>mysqld --initialize --user=mysql --datadir=<span class="hljs-regexp">/data/my</span>sql<br>cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>support-files<span class="hljs-regexp">/mysql.server /</span>etc<span class="hljs-regexp">/init.d/my</span>sqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; &#123; <span class="hljs-variable">$color</span><span class="hljs-string">&quot;数据库启动失败，退出!&quot;</span><span class="hljs-variable">$end</span>;<span class="hljs-keyword">exit</span>; &#125;<br>sleep <span class="hljs-number">3</span><br>MYSQL_OLDPASSWORD=`awk <span class="hljs-string">&#x27;/A temporary password/&#123;print $NF&#125;&#x27;</span> <span class="hljs-regexp">/data/my</span>sql/mysql.log`<br>mysqladmin -uroot -p<span class="hljs-variable">$&#123;MYSQL_OLDPASSWORD&#125;</span> password <span class="hljs-variable">$&#123;MYSQL_ROOT_PASSWD&#125;</span> &amp;&gt;<span class="hljs-regexp">/dev/</span>null<br>action <span class="hljs-string">&quot;数据库安装完成&quot;</span><br>&#125;<br><span class="hljs-comment"># 调用函数</span><br>check<br>install_mysql<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL数据库基础和安装使用</title>
    <link href="/2022/09/28/MySQL/"/>
    <url>/2022/09/28/MySQL/</url>
    
    <content type="html"><![CDATA[<p class="note note-success"> MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一 </p><span id="more"></span><h1 id="MySQL的特性"><a href="#MySQL的特性" class="headerlink" title="MySQL的特性"></a>MySQL的特性</h1><p><img src="/../image.assets/1668695639684.png" alt="1668695639684"></p><h1 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h1><h2 id="安装方式介绍"><a href="#安装方式介绍" class="headerlink" title="安装方式介绍"></a>安装方式介绍</h2><p>程序包管理器管理的程序包<br>源代码编译安装<br>二进制格式的程序包：展开至特定路径，并经过简单配置后即可使用</p><h3 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h3><p>CentOS 安装光盘<br>项目官方：<a href="https://downloads.mariadb.org/mariadb/repositories/">https://downloads.mariadb.org/mariadb/repositories/</a><br>国内镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/">https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/">https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/</a></p><p><strong>范例1：CentOS 7 利用yum源安装MySQL8.0</strong></p><p><a href="https://dev.mysql.com/downloads/repo/yum/">MySQL官网</a></p><ul><li>官网下载rpm包</li></ul><p> <img src="/../image.assets/1664415600826.png" alt="1664415600826"> </p><ul><li>利用rz命令将rpm包上传到主机</li></ul><p><strong>扩展：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">rz命令yum安装:yum install lrzsz<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1664415914209.png" alt="1664415914209"> </p><ul><li>安装rpm包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@centos7[~]-&gt;yum install mysql80-community-release-el7-7.noarch.rpm<br></code></pre></td></tr></table></figure><ul><li>安装MySQL</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@centos7[~]-&gt;yum install -y mysql-community-server<br></code></pre></td></tr></table></figure><p><strong>范例2：CentOS 7 利用yum源安装MySQL5.7</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]#tee /etc/yum.repos.d/mysql.repo &lt;&lt;EOF<br>[mysql]<br>name=mysql5.7<br>baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el7-<br>x86_64/<br>gpgcheck=0<br>EOF<br>[root@centos7 ~]#yum -y install mysql-community-server<br>[root@centos7 ~]#systemctl enable --now mysqld<br></code></pre></td></tr></table></figure><h3 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h3><p><strong>环境</strong></p><p>系统：rocky8.5</p><p>MySQL版本：mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz  </p><p><strong>步骤</strong></p><ul><li>安装相关包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">yum -y install libaio numactl-libs<br></code></pre></td></tr></table></figure><ul><li>准备用户</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">groupadd mysql<br>useradd -r -g mysql -s /bin/false mysql<br></code></pre></td></tr></table></figure><ul><li>下载二进制程序包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># -P下载到指定目录<br>wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz -P /usr/local/  <br><br> ln -s mysql-8.0.28-linux-glibc2.12-x86_64 mysql<br> <br> chown -R root.root /usr/local/mysql/<br></code></pre></td></tr></table></figure><ul><li>准备环境变量</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">echo &#x27;PATH=/usr/local/mysql/bin:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br></code></pre></td></tr></table></figure><ul><li>准备配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">vim /etc/my.cnf<br>[mysqld]<br>datadir=/data/mysql<br>skip_name_resolve=1<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br></code></pre></td></tr></table></figure><ul><li>初始化数据库文件并提取root密码</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mkdir -pv /data/mysql<br>grep password /data/mysql/mysql.log<br></code></pre></td></tr></table></figure><p>生成随机密码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysqld --initialize --user=mysql --datadir=/data/mysql<br></code></pre></td></tr></table></figure><p>生成空密码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysqld --initialize-insecure --user=mysql --datadir=/data/mysql<br></code></pre></td></tr></table></figure><ul><li>准备服务脚本和启动</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky local]# cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/mysqld<br><br>chkconfig --add mysqld<br># 启动服务<br>service mysqld start<br></code></pre></td></tr></table></figure><ul><li>修改口令</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 修改随机密码为指定密码<br>mysqladmin -uroot -p&#x27;9ATjCOB(jIef&#x27; password 123456<br><br>#修改前面生成的空密码为指定密码<br>mysqladmin -uroot password 123456<br></code></pre></td></tr></table></figure><ul><li>测试登录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysql -uroot -p&#x27;123456&#x27;<br></code></pre></td></tr></table></figure><p>注意：登录mysql报如下信息</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysql: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory<br></code></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ln -s /usr/lib64/libtinfo.so.6.1 /usr/lib64/libtinfo.so.5<br></code></pre></td></tr></table></figure><p>登录成功：</p><p> <img src="/../image.assets/1664459241867.png" alt="1664459241867"> </p><h3 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h3><h1 id="MySQL多实例"><a href="#MySQL多实例" class="headerlink" title="MySQL多实例"></a>MySQL多实例</h1><h1 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h1><h2 id="SQL语言的兴起与语法标准"><a href="#SQL语言的兴起与语法标准" class="headerlink" title="SQL语言的兴起与语法标准"></a>SQL语言的兴起与语法标准</h2><h3 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h3><ul><li>DDL: Data Defination Language 数据定义语言<br>CREATE，DROP，ALTER</li><li>DML: Data Manipulation Language 数据操纵语言<br>INSERT，DELETE，UPDATE<br>软件开发：CRUD</li><li>DQL：Data Query Language 数据查询语言<br>SELECT</li><li>DCL：Data Control Language 数据控制语言<br>GRANT，REVOKE</li><li>TCL：Transaction Control Language 事务控制语言<br>COMMIT，ROLLBACK，SAVEPOINT</li></ul><h3 id="字符集和排序"><a href="#字符集和排序" class="headerlink" title="字符集和排序"></a>字符集和排序</h3><ul><li>查看所有支持的字符集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span>;<br><span class="hljs-keyword">show</span> charset;<br></code></pre></td></tr></table></figure><ul><li>查看支持的所有排序</li></ul><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-keyword">show</span> collation;<br><span class="hljs-meta">#注意</span><br>utf8_general_ci不区分大小写<br>utf8_bin 区分大小写<br></code></pre></td></tr></table></figure><ul><li>查看当前使用的排序规则</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; show variables like &#x27;collation%&#x27;;</span><br><span class="hljs-section">+----------------------+-------------------+</span><br><span class="hljs-section">| Variable_name        | Value             |</span><br><span class="hljs-section">+----------------------+-------------------+</span><br>| collation<span class="hljs-emphasis">_connection | utf8_general_ci   |</span><br><span class="hljs-emphasis">| collation_database   | latin1_swedish_ci |</span><br><span class="hljs-emphasis">| collation_server     | latin1_swedish_</span>ci |<br><span class="hljs-code">+----------------------+</span>-------------------+<br>3 rows in set (0.01 sec)<br></code></pre></td></tr></table></figure><ul><li>设置服务器端默认字符集</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp">vim /etc/my.cnf<br><span class="hljs-meta">#针对mysql客户端</span><br>[<span class="hljs-meta">mysql</span>]<br><span class="hljs-literal">default</span>-character-<span class="hljs-keyword">set</span>=utf8mb4<br><span class="hljs-meta">#针对所有MySQL客户端</span><br>[<span class="hljs-meta">client</span>]<br><span class="hljs-literal">default</span>-character-<span class="hljs-keyword">set</span>=utf8mb4<br></code></pre></td></tr></table></figure><ul><li>查看当前字符集的使用情况</li></ul><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; show variables like &#x27;character%&#x27;;<br>+--------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> Variable_name            </span>|<span class="hljs-string"> Value                                                          </span>|<br>+--------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> character_set_client     </span>|<span class="hljs-string"> utf8mb4                                                        </span>|<br>|<span class="hljs-string"> character_set_connection </span>|<span class="hljs-string"> utf8mb4                                                        </span>|<br>|<span class="hljs-string"> character_set_database   </span>|<span class="hljs-string"> latin1                                                         </span>|<br>|<span class="hljs-string"> character_set_filesystem </span>|<span class="hljs-string"> binary                                                         </span>|<br>|<span class="hljs-string"> character_set_results    </span>|<span class="hljs-string"> utf8mb4                                                        </span>|<br>|<span class="hljs-string"> character_set_server     </span>|<span class="hljs-string"> latin1                                                         </span>|<br>|<span class="hljs-string"> character_set_system     </span>|<span class="hljs-string"> utf8                                                           </span>|<br>|<span class="hljs-string"> character_sets_dir       </span>|<span class="hljs-string"> /usr/local/mysql-5.7.39-linux-glibc2.12-x86_64/share/charsets/ </span>|<br>+--------------------------+----------------------------------------------------------------+<br>8 rows in set (0.00 sec)<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><p><strong>面试题: VARCHAR(50) 能存放几个 UTF8 编码的汉字？</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">存放的汉字个数与版本相关。<br>mysql <span class="hljs-number">4.0</span>以下版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字节，如果存放 UTF8 格式编码的汉字时（每个汉字<span class="hljs-number">3</span>字<br>节），只能存放<span class="hljs-number">16</span> 个。<br>mysql <span class="hljs-number">5.0</span>以上版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字符，无论存放的是数字、字母还是 UTF8 编码的汉字，<br>都可以存放 <span class="hljs-number">50</span> 个。<br></code></pre></td></tr></table></figure><h1 id="MySQL用户管理"><a href="#MySQL用户管理" class="headerlink" title="ＭySQL用户管理"></a>ＭySQL用户管理</h1><ul><li>相关数据库和表</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">元数据数据库：mysql<br>系统授权表：db, host, <span class="hljs-keyword">user</span>,columns_priv, tables_priv, procs_priv, proxies_priv<br></code></pre></td></tr></table></figure><ul><li>用户账号</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-string">&#x27;USERNAME&#x27;</span>@<span class="hljs-string">&#x27;HOST&#x27;</span><br>@<span class="hljs-string">&#x27;HOST&#x27;</span>: 主机名： <span class="hljs-symbol">user1@</span><span class="hljs-string">&#x27;web1.magedu.org&#x27;</span><br>IP地址或Network<br>通配符： % _<br>示例：<span class="hljs-symbol">wang@</span><span class="hljs-string">&#x27;172.16.%.%&#x27;</span><br><span class="hljs-symbol">user2@</span><span class="hljs-string">&#x27;192.168.1.%&#x27;</span><br><span class="hljs-symbol">mage@</span><span class="hljs-string">&#x27;10.0.0.0/255.255.0.0&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>创建用户：create user</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;USERNAME&#x27;</span>@<span class="hljs-string">&#x27;HOST&#x27;</span> [IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>]；<br>#示例:<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> test@<span class="hljs-string">&#x27;10.0.0.0/255.255.255.0&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> test2@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>新建用户的默认权限：USAGE</p><ul><li>用户重命名：RENAME USER</li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">RENAME <span class="hljs-keyword">USER</span> <span class="hljs-title">old_user_name</span> TO new_user_name;<br></code></pre></td></tr></table></figure><ul><li>删除用户</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;USERNAME&#x27;</span>@<span class="hljs-string">&#x27;HOST&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>删除空用户</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>修改密码</strong></p><ul><li>注意</li></ul><p>新版mysql中用户密码可以保存在mysql.user表的authentication_string字段中<br>如果mysql.user表的authentication_string和password字段都保存密码，authentication_string<br>优先生效</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#方法<span class="hljs-number">1</span>,用户可以也可通过此方式修改自已的密码<br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">PASSWORD</span> <span class="hljs-keyword">FOR</span> <span class="hljs-string">&#x27;user&#x27;</span>@<span class="hljs-string">&#x27;host&#x27;</span> = <span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">&#x27;password&#x27;</span>); #MySQL8<span class="hljs-number">.0</span> 版本不支持此方法,<br>因为<span class="hljs-keyword">password</span>函数被取消<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">for</span> root@<span class="hljs-string">&#x27;localhost&#x27;</span>=<span class="hljs-string">&#x27;123456&#x27;</span> ; #MySQL8<span class="hljs-number">.0</span>版本支持此方法,此方式直接将密码<br><span class="hljs-number">123456</span>加密后存放在mysql.<span class="hljs-keyword">user</span>表的authentication_string字段<br>#方法<span class="hljs-number">2</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> test@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;centos&#x27;</span>; #通用改密码方法, 用户可以也可通过此方式修<br>改自已的密码,MySQL8 版本修改密码<br>#方法<span class="hljs-number">3</span> 此方式MySQL8<span class="hljs-number">.0</span>不支持,因为<span class="hljs-keyword">password</span>函数被取消<br><span class="hljs-keyword">UPDATE</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">SET</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">&#x27;password&#x27;</span>) <span class="hljs-keyword">WHERE</span> clause;<br><span class="hljs-meta">#mariadb 10.3</span><br><span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> authentication_string=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;ubuntu&#x27;</span>) <span class="hljs-keyword">where</span><br><span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;mage&#x27;</span>;<br>#此方法需要执行下面指令才能生效：<br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure><p><strong>忘记管理员密码解决方法</strong></p><ol><li>启动mysqld进程时，为其使用如下选项：</li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-comment">--skip-grant-tables</span><br><span class="hljs-comment">--skip-networking</span><br></code></pre></td></tr></table></figure><ol start="2"><li>使用UPDATE命令修改管理员密码</li><li>关闭mysqld进程，移除上述两个选项，重启mysqld</li></ol><p>范例:Mariadb 和MySQL5.6版之前破解root密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@centos8 ~]#vim /etc/my.cnf<br>[mysqld]<br>skip-<span class="hljs-keyword">grant</span>-<span class="hljs-keyword">tables</span><br>skip-networking<br>[root@centos8 ~]#systemctl <span class="hljs-keyword">restart</span> mysqld|mariadb<br>[root@centos8 ~]#mysql<br>#方法<span class="hljs-number">1</span><br><span class="hljs-meta">#mariadb 旧版和MySQL5.6版之前</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;ubuntu&#x27;</span>) <span class="hljs-keyword">where</span><br><span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-meta">#mariadb 新版</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> authentication_string=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;ubuntu&#x27;</span>)<br><span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>;<br>#方法<span class="hljs-number">2</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; flush <span class="hljs-keyword">privileges</span>;<br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> root@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;ubuntu&#x27;</span>;<br>[root@centos8 ~]#vim /etc/my.cnf<br>[mysqld]<br><span class="hljs-meta">#skip-grant-tables</span><br><span class="hljs-meta">#skip-networking</span><br><br>[root@centos8 ~]#systemctl <span class="hljs-keyword">restart</span> mysqld|mariadb<br>[root@centos8 ~]#mysql -uroot -pubuntu<br></code></pre></td></tr></table></figure><p>范例: MySQL5.7和8.0 破解root密码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#vim /etc/my.cnf</span><br>[<span class="hljs-meta">mysqld</span>]<br>skip-grant-tables<br>skip-networking <span class="hljs-meta">#MySQL8.0不需要</span><br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#systemctl restart mysqld</span><br><span class="hljs-meta">#方法1</span><br>mysql&gt; update mysql.user <span class="hljs-keyword">set</span> authentication_string=<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">where</span> user=<span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">and</span><br>host=<span class="hljs-string">&#x27;localhost&#x27;</span>;<br><span class="hljs-meta">#方法2</span><br>mysql&gt; flush privileges;<br><span class="hljs-meta">#再执行下面任意一个命令</span><br>mysql&gt; alter user root@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;ubuntu&#x27;</span>;<br>mysql&gt; <span class="hljs-keyword">set</span> password <span class="hljs-keyword">for</span> root@<span class="hljs-string">&#x27;localhost&#x27;</span>=<span class="hljs-string">&#x27;ubuntu&#x27;</span>;<br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#vim /etc/my.cnf</span><br>[<span class="hljs-meta">mysqld</span>]<br><span class="hljs-meta">#skip-grant-tables</span><br><span class="hljs-meta">#skip-networking</span><br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#systemctl restart mysqld</span><br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#mysql -uroot -pubuntu</span><br></code></pre></td></tr></table></figure><p>范例: 删库跑路之清空root密码方法</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#此方法适用于包安装方式的MySQL或Mariadb</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#systemctl stop mysqld</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#rm -rf /var/lib/mysql/*</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#systemctl start mysqld</span><br></code></pre></td></tr></table></figure><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><p><strong>权限类别：</strong></p><ul><li><p>管理类</p></li><li><p>程序类</p></li><li><p>数据库级别</p></li><li><p>表级别</p></li><li><p>字段级别</p></li></ul><p><strong>管理类：</strong></p><ul><li>CREATE USER</li><li>FILE</li><li>SUPER</li><li>SHOW DATABASES</li><li>RELOAD</li><li>SHUTDOWN</li><li>REPLICATION SLAVE</li><li>REPLICATION CLIENT</li><li>LOCK TABLES</li><li>PROCESS</li><li>CREATE TEMPORARY TABLES</li></ul><p><strong>程序类：针对 FUNCTION、PROCEDURE、TRIGGER</strong></p><ul><li>CREATE</li><li>ALTER</li><li>DROP</li><li>EXCUTE<br><strong>库和表级别：针对 DATABASE、TABLE</strong></li><li>ALTER</li><li>CREATE</li><li>CREATE VIEW</li><li>DROP INDEX</li><li>SHOW VIEW</li><li>WITH GRANT OPTION：能将自己获得的权限转赠给其他用户<br><strong>数据操作</strong></li><li>SELECT<br>-INSERT</li><li>DELETE</li><li>UPDATE<br><strong>字段级别</strong></li><li>SELECT(col1,col2,…)</li><li>UPDATE(col1,col2,…)</li><li>INSERT(col1,col2,…)<br><strong>所有权限</strong></li><li>ALL PRIVILEGES 或 ALL</li></ul><p><strong>授权</strong></p><ul><li>授权：GRANT</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span> (col1), <span class="hljs-keyword">INSERT</span> (col1,col2) <span class="hljs-keyword">ON</span> mydb.mytbl <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;someuser&#x27;</span>@<span class="hljs-string">&#x27;somehost&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> wordpress.* <span class="hljs-keyword">TO</span> wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> ;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span>;<br>#创建用户和授权同时执行的方式在MySQL8<span class="hljs-number">.0</span>取消了<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> wordpress.* <span class="hljs-keyword">TO</span> wordpress@<span class="hljs-string">&#x27;192.168.8.%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;magedu&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;192.168.8.%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;magedu&#x27;</span><br><span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span>;<br></code></pre></td></tr></table></figure><p><strong>取消授权</strong></p><ul><li>取消授权：REVOKE</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">REVOKE</span> <span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">FROM</span> <span class="hljs-string">&#x27;testuser&#x27;</span>@<span class="hljs-string">&#x27;172.16.0.%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>查看指定用户获得的授权</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">Help <span class="hljs-keyword">SHOW</span> GRANTS<br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> <span class="hljs-string">&#x27;user&#x27;</span>@<span class="hljs-string">&#x27;host&#x27;</span>;<br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> <span class="hljs-built_in">CURRENT_USER</span>[()];<br></code></pre></td></tr></table></figure><p><strong>注意：</strong><br>MariaDB服务进程启动时会读取mysql库中所有授权表至内存<br>(1) GRANT或REVOKE等执行权限操作会保存于系统表中，MariaDB的服务进程通常会自动重读授权表，<br>使之生效<br>(2) 对于不能够或不能及时重读授权表的命令，可手动让MariaDB的服务进程重读授权表：<br>mysql&gt; FLUSH PRIVILEGES;</p><h1 id="MyISAM-存储引擎"><a href="#MyISAM-存储引擎" class="headerlink" title="MyISAM 存储引擎"></a>MyISAM 存储引擎</h1><h2 id="MyISAM-引擎特点"><a href="#MyISAM-引擎特点" class="headerlink" title="MyISAM 引擎特点"></a>MyISAM 引擎特点</h2><ul><li>不支持事务</li><li>表级锁定</li><li>读写相互阻塞，写入不能读，读时不能写</li><li>只缓存索引</li><li>不支持外键约束</li><li>不支持聚簇索引</li><li>读取数据较快，占用资源较少</li><li>不支持MVCC（多版本并发控制机制）高并发</li><li>崩溃恢复性较差</li><li>MySQL5.5.5 前默认的数据库引擎</li></ul><h2 id="MyISAM-存储引擎适用场景"><a href="#MyISAM-存储引擎适用场景" class="headerlink" title="MyISAM 存储引擎适用场景"></a>MyISAM 存储引擎适用场景</h2><ul><li>只读（或者写较少）</li><li>表较小（可以接受长时间进行修复操作）</li></ul><h2 id="MyISAM-引擎文件"><a href="#MyISAM-引擎文件" class="headerlink" title="MyISAM 引擎文件"></a>MyISAM 引擎文件</h2><ul><li>tbl_name.frm 表格式定义</li><li>tbl_name.MYD 数据文件</li><li>tbl_name.MYI 索引文件</li></ul><h1 id="InnoDB-引擎"><a href="#InnoDB-引擎" class="headerlink" title="InnoDB 引擎"></a>InnoDB 引擎</h1><h2 id="InnoDB引擎特点"><a href="#InnoDB引擎特点" class="headerlink" title="InnoDB引擎特点"></a>InnoDB引擎特点</h2><ul><li>行级锁</li><li>支持事务，适合处理大量短期事务</li><li>读写阻塞与事务隔离级别相关</li><li>可缓存数据和索引</li><li>支持聚簇索引</li><li>崩溃恢复性更好</li><li>支持MVCC高并发</li><li>从MySQL5.5后支持全文索引</li><li>从MySQL5.5.5开始为默认的数据库引擎</li></ul><h1 id="管理存储引擎"><a href="#管理存储引擎" class="headerlink" title="管理存储引擎"></a>管理存储引擎</h1><p>查看mysql支持的存储引擎</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">show engines<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>查看当前默认的存储引擎</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">show <span class="hljs-keyword">variables</span> like <span class="hljs-comment">&#x27;%storage_engine%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>设置默认的存储引擎</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/my</span>.cnf<br>[mysqld]<br>default_storage_engine= InnoDB<br></code></pre></td></tr></table></figure><p>查看库中所有表使用的存储引擎</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">table</span> status <span class="hljs-keyword">from</span> db_name;<br></code></pre></td></tr></table></figure><p>查看库中指定表的存储引擎</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">table</span> status <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;tb_name&#x27;</span>;<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tb_name;<br></code></pre></td></tr></table></figure><p>设置表的存储引擎：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">CREATE</span></span> <span class="hljs-keyword">TABLE</span> tb_name(... ) ENGINE=InnoDB;<br>ALTER <span class="hljs-keyword">TABLE</span> tb_name <span class="hljs-comment">ENGINE=InnoDB</span>;<br></code></pre></td></tr></table></figure><h1 id="实战案例：数据库冷备份和热备份"><a href="#实战案例：数据库冷备份和热备份" class="headerlink" title="实战案例：数据库冷备份和热备份"></a>实战案例：数据库冷备份和热备份</h1><p>MySQL8.0</p><p>冷备份：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs autoit">备份过程<br><span class="hljs-meta"># 停止数据库</span><br>systemctl stop mysql<br><span class="hljs-meta"># rsync可以保留文件属性</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#rsync -a /var/lib/mysql 10.0.0.28:/data/</span><br><span class="hljs-meta">#如果配置及二进制文件相关有特殊设置也需要备份</span><br><span class="hljs-meta">#还原</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#yum -y install mysql-server</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#cp -a /data/mysql/* /var/lib/mysql/</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#systemctl start mysqld</span><br></code></pre></td></tr></table></figure><h1 id="mysqldump备份工具"><a href="#mysqldump备份工具" class="headerlink" title="mysqldump备份工具"></a>mysqldump备份工具</h1><p>mysqldump 说明<br>逻辑备份工具：<br>mysqldump, mydumper, phpMyAdmin<br>Schema和数据存储在一起、巨大的SQL语句、单个巨大的备份文件<br>mysqldump是MySQL的客户端命令，通过mysql协议连接至mysql服务器进行备份<br>命令格式:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">mysqldump <span class="hljs-selector-attr">[OPTIONS]</span> database <span class="hljs-selector-attr">[tables]</span> #支持指定数据库和指定多表的备份，但数据库本身定义<br>不备份<br>mysqldump <span class="hljs-selector-attr">[OPTIONS]</span> -<span class="hljs-selector-tag">B</span> DB1 <span class="hljs-selector-attr">[DB2 DB3...]</span> #支持指定数据库备份，包含数据库本身定义也会备份<br>mysqldump <span class="hljs-selector-attr">[OPTIONS]</span> -<span class="hljs-selector-tag">A</span> <span class="hljs-selector-attr">[OPTIONS]</span> #备份所有数据库，包含数据库本身定义也会备份<br></code></pre></td></tr></table></figure><p>mysqldump参考：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>dev.mysql.com<span class="hljs-regexp">/doc/</span>refman<span class="hljs-regexp">/5.7/</span>en/mysqldump.html<br></code></pre></td></tr></table></figure><p>mysqldump 常见通用选项：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">-u, <span class="hljs-params">--user=name</span> User for login <span class="hljs-keyword">if</span> not current user<br>-p, <span class="hljs-params">--password</span>[=name] Password to use when connecting to server<br>-A, <span class="hljs-params">--all-databases</span> <span class="hljs-comment">#备份所有数据库，含create database</span><br>-B, <span class="hljs-params">--databases</span> db_name… <span class="hljs-comment">#指定备份的数据库，包括create database语句</span><br>-E, <span class="hljs-params">--events</span>：<span class="hljs-comment">#备份相关的所有event scheduler</span><br>-R, <span class="hljs-params">--routines</span>：<span class="hljs-comment">#备份所有存储过程和自定义函数</span><br><span class="hljs-params">--triggers</span>：<span class="hljs-comment">#备份表相关触发器，默认启用,用--skip-triggers，不备份触发器</span><br><span class="hljs-params">--default-character-set=utf8</span> <span class="hljs-comment">#指定字符集</span><br><span class="hljs-params">--master-data</span>[=<span class="hljs-comment">#]：#注意：MySQL8.0.26版以后，此选项变为--source-data</span><br><span class="hljs-comment">#此选项须启用二进制日志</span><br><span class="hljs-comment">#1：所备份的数据之前加一条记录为CHANGE MASTER TO语句，非注释，不指定#，默认为1，适合于主从复</span><br>制多机使用<br><span class="hljs-comment">#2：记录为被注释的#CHANGE MASTER TO语句，适合于单机使用,适用于备份还原</span><br><span class="hljs-comment">#此选项会自动关闭--lock-tables功能，自动打开-x | --lock-all-tables功能（除非开启--</span><br>single-transaction）<br>-F, <span class="hljs-params">--flush-logs</span> <span class="hljs-comment">#备份前滚动日志，锁定表完成后，执行flush logs命令,生成新的二进制日志文件，</span><br>配合-A 或 -B 选项时，会导致刷新多次数据库。建议在同一时刻执行转储和日志刷新，可通过和<span class="hljs-params">--single-</span><br>transaction或-x，<span class="hljs-params">--master-data</span> 一起使用实现，此时只刷新一次二进制日志<br><span class="hljs-params">--compact</span> <span class="hljs-comment">#去掉注释，适合调试，节约备份占用的空间,生产不使用</span><br>-d, <span class="hljs-params">--no-data</span> <span class="hljs-comment">#只备份表结构,不备份数据,即只备份create table</span><br>-t, <span class="hljs-params">--no-create-info</span> <span class="hljs-comment">#只备份数据,不备份表结构,即不备份create table</span><br>-n,<span class="hljs-params">--no-create-db</span> <span class="hljs-comment">#不备份create database，可被-A或-B覆盖</span><br><span class="hljs-params">--flush-privileges</span> <span class="hljs-comment">#备份mysql或相关时需要使用</span><br>-f, <span class="hljs-params">--force</span> <span class="hljs-comment">#忽略SQL错误，继续执行</span><br><span class="hljs-params">--hex-blob</span> <span class="hljs-comment">#使用十六进制符号转储二进制列，当有包括BINARY,VARBINARY,BLOB，</span><br>BIT的数据类型的列时使用，避免乱码<br>-q, <span class="hljs-params">--quick</span> <span class="hljs-comment">#不缓存查询，直接输出，加快备份速度</span><br></code></pre></td></tr></table></figure><p>mysqldump的MyISAM存储引擎相关的备份选项：<br>MyISAM不支持事务，只能支持温备；不支持热备，所以必须先锁定要备份的库，而后启动备份操作</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">-x,--<span class="hljs-keyword">lock</span>-all-tables <span class="hljs-meta">#加全局读锁，锁定所有库的所有表，同时加--single-transaction或--</span><br><span class="hljs-keyword">lock</span>-tables选项会关闭此选项功能，注意：数据量大时，可能会导致长时间无法并发访问数据库<br>-l,--<span class="hljs-keyword">lock</span>-tables <span class="hljs-meta">#对于需要备份的每个数据库，在启动备份之前分别锁定其所有表，默认为on,--</span><br>skip-<span class="hljs-keyword">lock</span>-tables选项可禁用,对备份MyISAM的多个库,可能会造成数据不一致<br><span class="hljs-meta">#注：以上选项对InnoDB表一样生效，实现温备，但不推荐使用</span><br></code></pre></td></tr></table></figure><p>mysqldump的InnoDB存储引擎相关的备份选项：<br>InnoDB 存储引擎支持事务,可以利用事务的相应的隔离级别,实现热备，也可以实现温备但不建议用</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">--single-transaction</span><br>#此选项Innodb中推荐使用，不适用MyISAM，此选项会开始备份前，先执行<span class="hljs-keyword">START</span> <span class="hljs-keyword">TRANSACTION</span>指令开启<br>事务<br>#此选项通过在单个事务中转储所有表来创建一致的快照。 仅适用于存储在支持多版本控制的存储引擎中的表<br>（目前只有InnoDB可以）; 转储不保证与其他存储引擎保持一致。 在进行单事务转储时，要确保有效的转储<br>文件（正确的表内容和二进制日志位置），没有其他连接应该使用以下语句：<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span>，<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span>，<br><span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TABLE</span>，<span class="hljs-keyword">TRUNCATE</span> <span class="hljs-keyword">TABLE</span>,此选项和<span class="hljs-comment">--lock-tables（此选项隐含提交挂起的事务）选项是相互</span><br>排斥,备份大型表时，建议将<span class="hljs-comment">--single-transaction选项和--quick结合一起使用</span><br></code></pre></td></tr></table></figure><h1 id="生产环境实战备份策略"><a href="#生产环境实战备份策略" class="headerlink" title="生产环境实战备份策略"></a>生产环境实战备份策略</h1><p>InnoDB建议备份策略</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mysqldump -uroot -p -A -F -E -R <span class="hljs-params">--triggers</span> <span class="hljs-params">--single-transaction</span> <span class="hljs-params">--master-data=1</span><br><span class="hljs-params">--flush-privileges</span> <span class="hljs-params">--default-character-set=utf8</span> <span class="hljs-params">--hex-blob</span><br>&gt;$&#123;BACKUP&#125;<span class="hljs-string">/fullbak_</span>$&#123;BACKUP_TIME&#125;<span class="hljs-string">.sql</span><br></code></pre></td></tr></table></figure><p>MyISAM建议备份策略</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mysqldump -uroot -p -A -F -E -R -x <span class="hljs-params">--master-data=1</span> <span class="hljs-params">--flush-privileges</span> --<br>triggers <span class="hljs-params">--default-character-set=utf8</span> <span class="hljs-params">--hex-blob</span><br>&gt;$&#123;BACKUP&#125;<span class="hljs-string">/fullbak_</span>$&#123;BACKUP_TIME&#125;<span class="hljs-string">.sql</span><br></code></pre></td></tr></table></figure><h1 id="mysqldump-备份还原实战案例"><a href="#mysqldump-备份还原实战案例" class="headerlink" title="mysqldump 备份还原实战案例"></a>mysqldump 备份还原实战案例</h1><h2 id="实战案例：特定数据库的备份脚本"><a href="#实战案例：特定数据库的备份脚本" class="headerlink" title="实战案例：特定数据库的备份脚本"></a>实战案例：特定数据库的备份脚本</h2><p>系统：centos8.5</p><p>mysql:8.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>TIME=`<span class="hljs-built_in">date</span> +%F_%H-%M-%S`<br><span class="hljs-comment"># 备份目录</span><br>DIR=/mysql_backup<br><span class="hljs-comment"># 备份数据库</span><br>DB=hellodb<br><span class="hljs-comment"># 数据库密码</span><br>PASSWD=123456<br><br><span class="hljs-comment"># 判断备份数据库目录是否存在</span><br><br>[ -d <span class="hljs-variable">$DIR</span> ] || <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$DIR</span><br><br><span class="hljs-comment"># 备份</span><br>mysqldump -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASSWD</span>&quot;</span> -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B <span class="hljs-variable">$DB</span> | gzip &gt; <span class="hljs-variable">$&#123;DIR&#125;</span>/<span class="hljs-variable">$&#123;DB&#125;</span>_<span class="hljs-variable">$&#123;TIME&#125;</span>.sql.gz<br></code></pre></td></tr></table></figure><h1 id="实战案例：分库备份的实战脚本"><a href="#实战案例：分库备份的实战脚本" class="headerlink" title="实战案例：分库备份的实战脚本"></a>实战案例：分库备份的实战脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>TIME=`<span class="hljs-built_in">date</span> +%F_%H-%M-%S`<br>DIR=/backup<br>PASS=123456<br>[ -d <span class="hljs-string">&quot;<span class="hljs-variable">$DIR</span>&quot;</span> ] || <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$DIR</span><br><span class="hljs-keyword">for</span> DB <span class="hljs-keyword">in</span> `mysql -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -e <span class="hljs-string">&#x27;show databases&#x27;</span> | grep -Ev <span class="hljs-string">&quot;^Database|.*schema$&quot;</span>`;<span class="hljs-keyword">do</span><br>    mysqldump -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -F --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B <span class="hljs-variable">$DB</span> | gzip &gt; <span class="hljs-variable">$&#123;DIR&#125;</span>/<span class="hljs-variable">$&#123;DB&#125;</span>_<span class="hljs-variable">$&#123;TIME&#125;</span>.sql.gz<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h1 id="实战案例：完全备份和还原"><a href="#实战案例：完全备份和还原" class="headerlink" title="实战案例：完全备份和还原"></a>实战案例：完全备份和还原</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#开启二进制日志<br>[root@centos8 ~]#vim /etc/my.cnf.d/mariadb-<span class="hljs-keyword">server</span>.cnf<br>[mysqld]<br><span class="hljs-keyword">log</span>-bin<br>#备份<br>[root@centos8 ~]#mysqldump -uroot -pmagedu -A -F <span class="hljs-comment">--single-transaction --master-</span><br>data=<span class="hljs-number">2</span> |gzip &gt; /backup/<span class="hljs-keyword">all</span>-`<span class="hljs-type">date</span> +%F`.<span class="hljs-keyword">sql</span>.gz<br>#还原<br>[root@centos8 backup]#dnf install mariadb-<span class="hljs-keyword">server</span><br>[root@centos8 backup]#gzip -d <span class="hljs-keyword">all</span><span class="hljs-number">-2019</span><span class="hljs-number">-11</span><span class="hljs-number">-27.</span><span class="hljs-keyword">sql</span>.gz<br>[root@centos8 ~]#mysql<br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">set</span> sql_log_bin=<span class="hljs-keyword">off</span>;<br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; source /backup/<span class="hljs-keyword">all</span><span class="hljs-number">-2019</span><span class="hljs-number">-11</span><span class="hljs-number">-27.</span><span class="hljs-keyword">sql</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">set</span> sql_log_bin=<span class="hljs-keyword">on</span>;<br></code></pre></td></tr></table></figure><h1 id="实战案例：恢复误删除的表"><a href="#实战案例：恢复误删除的表" class="headerlink" title="实战案例：恢复误删除的表"></a>实战案例：恢复误删除的表</h1><p>案例说明：每天2：30做完全备份，早上10：00误删除了表students，10：10才发现故障，现需要将数<br>据库还原到10：10的状态，且恢复被删除的students表</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">#查看数据库是否开启二进制<br><span class="hljs-section">mysql&gt; select @@log_bin;</span><br><span class="hljs-section">+-----------+</span><br><span class="hljs-section">| @@log_bin |</span><br><span class="hljs-section">+-----------+</span><br><span class="hljs-section">|         1 |</span><br><span class="hljs-section">+-----------+</span><br>1 row in set (0.01 sec)<br><br><span class="hljs-section">mysql&gt; select @@sql_log_bin;</span><br><span class="hljs-section">+---------------+</span><br><span class="hljs-section">| @@sql_log_bin |</span><br><span class="hljs-section">+---------------+</span><br><span class="hljs-section">|             1 |</span><br><span class="hljs-section">+---------------+</span><br>1 row in set (0.01 sec)<br><br>mysql&gt; <br><br># log_bin、sql_log_bin的值为1说明已经开启二进制日志<br><br># 查看当前二进制文件在什么位置<br><span class="hljs-section">mysql&gt; show master logs;</span><br><span class="hljs-section">+------------------+-----------+-----------+</span><br><span class="hljs-section">| Log_name         | File_size | Encrypted |</span><br><span class="hljs-section">+------------------+-----------+-----------+</span><br>| mysql-bin.000001 |       204 | No        |<br><span class="hljs-section">| mysql-bin.000002 |       157 | No        |</span><br><span class="hljs-section">+------------------+-----------+-----------+</span><br>2 rows in set (0.01 sec)<br><br>mysql&gt; <br># 备份的时候开启刷新二进制日志，会生成新的二进制的日志<br><br>#完全备份<br>[root@centos7 ~]# mysqldump -uroot -p123456 -A -F --single-transaction --master-data=2 | gzip &gt; /backup/all_<span class="hljs-code">`date +%F`</span>.sql.gz<br><br># 完全备份后进行数据更新<br>mysql&gt; insert students (name,age,gender) values(<span class="hljs-emphasis">&#x27;jack&#x27;</span>,22,<span class="hljs-emphasis">&#x27;M&#x27;</span>);<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; insert students (name,age,gender) values(<span class="hljs-emphasis">&#x27;rose&#x27;</span>,20,<span class="hljs-emphasis">&#x27;f&#x27;</span>);<br>Query OK, 1 row affected (0.01 sec)<br><br># 误删除学生表<br>mysql&gt; drop table students;<br>Query OK, 0 rows affected (0.07 sec)<br><br>mysql&gt; <br><br># 后续其他表继续更新<br>mysql&gt; insert teachers (name,age,gender)values(<span class="hljs-emphasis">&#x27;wang&#x27;</span>,30,<span class="hljs-emphasis">&#x27;M&#x27;</span>);<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; <br><br>mysql&gt; insert teachers (name,age,gender)values(<span class="hljs-emphasis">&#x27;mage&#x27;</span>,28,<span class="hljs-emphasis">&#x27;M&#x27;</span>);<br>Query OK, 1 row affected (0.05 sec)<br><br>mysql&gt; <br><br># 停止数据库访问<br><br># 备份从完全备份后的二进制日志<br>[root@centos7 ~]# mysqlbinlog --start-position=157 /data/mysql/mysql-bin.000003 &gt; /backup/inc.sql<br><br># 找到误删除的语句，从备份中删除此语句<br>#DROP TABLE <span class="hljs-code">`students`</span> /* generated by server */<br>#利用完全备份和修改过的二进制日志进行还原<br>[root@centos8 ~]#mysql -uroot -p<br>mysql&gt; set sql<span class="hljs-emphasis">_log_bin=0;</span><br><span class="hljs-emphasis">mysql&gt; source /backup/allbackup_2019-11-27_10:20:08.sql;</span><br><span class="hljs-emphasis">mysql&gt; source /backup/inc.sql</span><br><span class="hljs-emphasis">mysql&gt; set sql_log_</span>bin=1;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux防火墙</title>
    <link href="/2022/09/25/FireWall/"/>
    <url>/2022/09/25/FireWall/</url>
    
    <content type="html"><![CDATA[<p class="note note-success"> firewall一般指防火墙。 防火墙（英语：Firewall）技术是通过有机结合各类用于安全管理与筛选的软件和硬件设备，帮助计算机网络于其内、外网之间构建一道相对隔绝的保护屏障，以保护用户资料与信息安全性的一种技术。 </p><span id="more"></span>  <h1 id="防火墙基本认识"><a href="#防火墙基本认识" class="headerlink" title="防火墙基本认识"></a>防火墙基本认识</h1><h2 id="Netfilter"><a href="#Netfilter" class="headerlink" title="Netfilter"></a>Netfilter</h2><p> <img src="/../image.assets/1664334608880.png" alt="1664334608880"> </p><p>Linux防火墙是由Netfilter组件提供的，Netfilter工作在内核空间，集成在linux内核中。<br>Netfilter 是Linux 2.4.x之后新一代的Linux防火墙机制，是linux内核的一个子系统。Netfilter采用模块<br>化设计，具有良好的可扩充性，提供扩展各种网络服务的结构化底层框架。Netfilter与IP协议栈是无缝<br>契合，并允许对数据报进行过滤、地址转换、处理等操作。  </p><p><a href="https://netfilter.org/documentation/">Netfilter官网文档</a>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# grep -m 10 NETFILTER /boot/config-3.10.0-1160.el7.x86_64 <br>CONFIG_NETFILTER=y<br># CONFIG_NETFILTER_DEBUG is not set<br>CONFIG_NETFILTER_ADVANCED=y<br>CONFIG_BRIDGE_NETFILTER=m<br>CONFIG_NETFILTER_NETLINK=m<br>CONFIG_NETFILTER_NETLINK_ACCT=m<br>CONFIG_NETFILTER_NETLINK_QUEUE=m<br>CONFIG_NETFILTER_NETLINK_LOG=m<br>CONFIG_NETFILTER_NETLINK_QUEUE_CT=y<br>CONFIG_NETFILTER_SYNPROXY=m<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h2 id="防火墙工具介绍"><a href="#防火墙工具介绍" class="headerlink" title="防火墙工具介绍"></a>防火墙工具介绍</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>由软件包iptables提供的命令行工具，工作在用户空间，用来编写规则，写好的规则被送往netfilter，告<br>诉内核如何去处理信息包。</p><ul><li>查看iptables信息</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# rpm -qi iptables<br>Name        : iptables<br>Version     : 1.4.21<br>Release     : 35.el7<br>Architecture: x86_64<br>Install Date: Sat 17 Sep 2022 10:31:09 AM CST<br>Group       : System Environment/Base<br>Size        : 1556976<br>License     : GPLv2<br>Signature   : RSA/SHA256, Thu 15 Oct 2020 02:51:02 AM CST, Key ID 24c6a8a7f4a80eb5<br>Source RPM  : iptables-1.4.21-35.el7.src.rpm<br>Build Date  : Fri 02 Oct 2020 12:52:54 AM CST<br>Build Host  : x86-01.bsys.centos.org<br>Relocations : (not relocatable)<br>Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;<br>Vendor      : CentOS<br>URL         : http://www.netfilter.org/<br>Summary     : Tools for managing Linux kernel packet filtering capabilities<br>Description :<br>The iptables utility controls the network packet filtering code in the<br>Linux kernel. If you need to set up firewalls and/or IP masquerading,<br>you should install this package.<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>范例：安装iptables的server包</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 安装dnf<br>[root@centos7 ~]# yum install dnf<br># 安装iptables-services<br>[root@centos7 ~]# dnf -y install iptables-services<br># 查看iptables-services文件列表<br>[root@centos7 ~]# rpm -ql iptables-services<br>/etc/sysconfig/ip6tables<br>/etc/sysconfig/iptables<br>/usr/lib/systemd/system/ip6tables.service<br>/usr/lib/systemd/system/iptables.service<br>/usr/libexec/initscripts/legacy-actions/ip6tables<br>/usr/libexec/initscripts/legacy-actions/ip6tables/panic<br>/usr/libexec/initscripts/legacy-actions/ip6tables/save<br>/usr/libexec/initscripts/legacy-actions/iptables<br>/usr/libexec/initscripts/legacy-actions/iptables/panic<br>/usr/libexec/initscripts/legacy-actions/iptables/save<br>/usr/libexec/iptables<br>/usr/libexec/iptables/ip6tables.init<br>/usr/libexec/iptables/iptables.init<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h3 id="firewalld"><a href="#firewalld" class="headerlink" title="firewalld"></a>firewalld</h3><p>从CentOS 7 版开始引入了新的前端管理工具<br>软件包：</p><ul><li>firewalld  </li><li>firewalld-config</li></ul><p>管理工具：  </p><ul><li>firewall-cmd 命令行工具  </li><li>firewall-config 图形工作</li></ul><h3 id="nftables"><a href="#nftables" class="headerlink" title="nftables"></a>nftables</h3><p>它重用了netfilter框架的许多部分，例如连接跟踪和NAT功能。它还保留了命名法和基本iptables设计的几个部分，例如表，链和规则。就像iptables一样，表充当链的容器，并且链包含单独的规则，这些规则可以执行操作，例如丢弃数据包，移至下一个规则或跳至新链。<br>从用户的角度来看，nftables添加了一个名为nft的新工具，该工具替代了iptables，arptables和<br>ebtables中的所有其他工具。从体系结构的角度来看，它还替换了内核中处理数据包过滤规则集运行时评估的那些部分。</p><ul><li>查看软件信息</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# rpm -qi nftables<br>Name        : nftables<br>Epoch       : 1<br>Version     : 0.8<br>Release     : 14.el7<br>Architecture: x86_64<br>Install Date: Wed 28 Sep 2022 11:36:55 AM CST<br>Group       : Unspecified<br>Size        : 500068<br>License     : GPLv2<br>Signature   : RSA/SHA256, Fri 23 Aug 2019 05:36:19 AM CST, Key ID 24c6a8a7f4a80eb5<br>Source RPM  : nftables-0.8-14.el7.src.rpm<br>Build Date  : Fri 09 Aug 2019 09:13:15 AM CST<br>Build Host  : x86-01.bsys.centos.org<br>Relocations : (not relocatable)<br>Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;<br>Vendor      : CentOS<br>URL         : http://netfilter.org/projects/nftables/<br>Summary     : Netfilter Tables userspace utillites<br>Description :<br>Netfilter Tables userspace utilities.<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>范例：centos8支持三种防火墙服务</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky ~]# systemctl status iptables.service<br>● iptables.service - IPv4 firewall with iptables<br>   Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor preset: disabled)<br>   Active: inactive (dead)<br>[root@rocky ~]# systemctl status firewalld.service<br>● firewalld.service - firewalld - dynamic firewall daemon<br>   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)<br>   Active: inactive (dead)<br>     Docs: man:firewalld(1)<br>[root@rocky ~]# systemctl status nftables.service<br>● nftables.service - Netfilter Tables<br>   Loaded: loaded (/usr/lib/systemd/system/nftables.service; disabled; vendor preset: disabled)<br>   Active: inactive (dead)<br>     Docs: man:nft(8)<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><h2 id="netfilter中五个勾子函数和报文流向"><a href="#netfilter中五个勾子函数和报文流向" class="headerlink" title="netfilter中五个勾子函数和报文流向"></a>netfilter中五个勾子函数和报文流向</h2><p>Netfilter在内核中选取五个位置放了五个hook(勾子) function(INPUT、OUTPUT、FORWARD、<br>PREROUTING、POSTROUTING)，而这五个hook function向用户开放，用户可以通过一个命令工具<br>（iptables）向其写入规则。</p><p>由信息过滤表（table）组成，包含控制IP包处理的规则集（rules），规则被分组放在链（chain）上。</p><p> <img src="/../image.assets/1664336861788.png" alt="1664336861788"> </p><p>提示：从 Linux kernel 4.2 版以后，Netfilter 在prerouting 前加了一个 ingress 勾子函数。可以使用这<br>个新的入口挂钩来过滤来自第2层的流量，这个新挂钩比预路由要早，基本上是 tc 命令（流量控制工<br>具）的替代品。<br><strong>三种报文流向</strong></p><ul><li>流入本机：PREROUTING –&gt; INPUT–&gt;用户空间进程</li><li>流出本机：用户空间进程 –&gt;OUTPUT–&gt; POSTROUTING</li><li>转发：PREROUTING –&gt; FORWARD –&gt; POSTROUTING</li></ul><h2 id="iptables组成"><a href="#iptables组成" class="headerlink" title="iptables组成"></a>iptables组成</h2><p>iptables由五个表table和五个链chain以及一些规则组成</p><p> <img src="/../image.assets/1664337377531.png" alt="1664337377531"> </p><p><strong>链 chain：</strong></p><ul><li>内置链：每个内置链对应于一个钩子函数</li><li>自定义链：用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制；只有Hook钩子调<br>用自定义链时，才生效</li></ul><p><strong>五个内置链chain:</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">INPUT,OUTPUT,FORWARD,PREROUTING,POSTROUTING<br></code></pre></td></tr></table></figure><p><strong>五个表：filter、nat、mangle、raw、security</strong></p><ul><li>filter：过滤规则表，根据预定义的规则过滤符合条件的数据包,默认表</li><li>nat：network address translation 地址转换规则表</li><li>mangle：修改数据标记位规则表</li><li>raw：关闭启用的连接跟踪机制，加快封包穿越防火墙速度</li><li>security：用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现<br>优先级由高到低的顺序为：</li></ul><p><strong>优先级由高到低的顺序为</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">security --&gt;raw--&gt;mangle--&gt;nat--&gt;filter<br></code></pre></td></tr></table></figure><p><strong>表和链对应关系</strong></p><p> <img src="/../image.assets/1664338350371.png" alt="1664338350371"> </p><p><strong>数据包过滤匹配流程</strong></p><p> <img src="/../image.assets/1664338392568.png" alt="1664338392568"> </p><p><strong>内核中数据包的传输过程</strong></p><ul><li>当一个数据包进入网卡时，数据包首先进入PREROUTING链，内核根据数据包目的IP判断是否需要<br>转送出去</li><li>如果数据包是进入本机的，数据包就会沿着图向下移动，到达INPUT链。数据包到达INPUT链后，<br>任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达<br>POSTROUTING链输出</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会向右移动，经过FORWARD链，然后到<br>达POSTROUTING链输出</li></ul><p><strong>范例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky ~]# iptables -vnL -t filter <br>Chain INPUT (policy ACCEPT 0 packets, 0 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>  168 10248 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED<br>    0     0 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0           <br>    0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0           <br>    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            state NEW tcp dpt:22<br>    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited<br><br>Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited<br><br>Chain OUTPUT (policy ACCEPT 101 packets, 11034 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><p><strong>CentOS 6 nat表不支持INPUT链</strong></p><h1 id="iptables-1"><a href="#iptables-1" class="headerlink" title="iptables"></a>iptables</h1><h2 id="iptables规则说明"><a href="#iptables规则说明" class="headerlink" title="iptables规则说明"></a>iptables规则说明</h2><h3 id="iptables规则组成"><a href="#iptables规则组成" class="headerlink" title="iptables规则组成"></a>iptables规则组成</h3><p>规则rule：根据规则的匹配条件尝试匹配报文，对匹配成功的报文根据规则定义的处理动作作出处理，<br>规则在链接上的次序即为其检查时的生效次序<br>匹配条件：默认为与条件，同时满足<br>基本匹配：IP，端口，TCP的Flags（SYN,ACK等）<br>扩展匹配：通过复杂高级功能匹配<br>处理动作：称为target，跳转目标</p><ul><li>内建处理动作：ACCEPT,DROP,REJECT,SNAT,DNAT,MASQUERADE,MARK,LOG…</li><li>自定义处理动作：自定义chain，利用分类管理复杂情形</li></ul><p>规则要添加在链上，才生效；添加在自定义链上不会自动生效<br>白名单:只有指定的特定主机可以访问,其它全拒绝<br>黑名单:只有指定的特定主机拒绝访问,其它全允许,默认方式</p><h3 id="iptables规则添加时考量点"><a href="#iptables规则添加时考量点" class="headerlink" title="iptables规则添加时考量点"></a>iptables规则添加时考量点</h3><ul><li>要实现哪种功能：判断添加在哪张表上</li><li>报文流经的路径：判断添加在哪个链上</li><li>报文的流向：判断源和目的</li><li>匹配规则：业务需要</li></ul><h2 id="iptables用法说明"><a href="#iptables用法说明" class="headerlink" title="iptables用法说明"></a>iptables用法说明</h2><p>帮助：man 8 iptables<br>格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">iptables [-t table] &#123;-A|-C|-D&#125; chain rule-specification<br></code></pre></td></tr></table></figure><p><strong>范例：filter表中INPUT规则</strong></p><p> <img src="/../image.assets/1664348845247.png" alt="1664348845247"> </p><p><strong>iptables命令格式详解</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">iptables [-t table] SUBCOMMAND chain [-m matchname [per-match-options]]<br>-j targetname [per-target-options]<br></code></pre></td></tr></table></figure><p>1、-t table：指定表<br>raw, mangle, nat, [filter]默认<br>2、SUBCOMMAND：子命令<br>链管理类：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-N：new, 自定义一条新的规则链<br>-E：重命名自定义链；引用计数不为0的自定义链不能够被重命名，也不能被删除<br>-X：delete，删除自定义的空的规则链<br>-P：Policy，设置默认策略；对filter表中的链而言，其默认策略有：ACCEPT：接受, DROP：丢弃<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 定义新的规则链<br>[root@rocky ~]# iptables -N web_chain<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DNS服务</title>
    <link href="/2022/09/22/DNS/"/>
    <url>/2022/09/22/DNS/</url>
    
    <content type="html"><![CDATA[<p class="note note-success"> DNS一般指域名系统。 域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用UDP端口53 </p><span id="more"></span>  <h1 id="名字解析介绍和DNS"><a href="#名字解析介绍和DNS" class="headerlink" title="名字解析介绍和DNS"></a>名字解析介绍和DNS</h1><h2 id="DNS服务工作原理"><a href="#DNS服务工作原理" class="headerlink" title="DNS服务工作原理"></a>DNS服务工作原理</h2><p> <img src="/../image.assets/1664088991760.png" alt="1664088991760"> </p><h2 id="DNS查询类型"><a href="#DNS查询类型" class="headerlink" title="DNS查询类型"></a>DNS查询类型</h2><p> <img src="/../image.assets/1664089216470.png" alt="1664089216470"> </p><ul><li>递归查询：<br>是指DNS服务器在收到用户发起的请求时，必须向用户返回一个准确的查询结果。如果DNS服务器<br>本地没有存储与之对应的信息，则该服务器需要询问其他服务器，并将返回的查询结构提交给用<br>户。<br>一般客户机和本地DNS服务器之间属于递归查询，即当客户机向DNS服务器发出请求后,若DNS服<br>务器本身不能解析，则会向另外的DNS服务器发出查询请求，得到最终的肯定或否定的结果后转交<br>给客户机。此查询的源和目标保持不变,为了查询结果只需要发起一次查询<br>递归算法:客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道-&gt;他<br>代为帮客户端去查找–&gt;最后再返回最终结果</li><li>迭代查询：<br>是指DNS服务器在收到用户发起的请求时，并不直接回复查询结果，而是告诉另一台DNS服务器的<br>地址，用户再向这台DNS服务器提交请求，这样依次反复，直到返回查询结果。<br>一般情况下(有例外)本地的DNS服务器向其它DNS服务器的查询属于迭代查询,如：若对方不能返回<br>权威的结果，则它会向下一个DNS服务器(参考前一个DNS服务器返回的结果)再次发起进行查询，<br>直到返回查询的结果为止。此查询的源不变,但查询的目标不断变化,为查询结果一般需要发起多次<br>查询</li><li>迭代算法︰<br>客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道并<br>推荐客户端应该找谁–&gt;客户端自己去找它</li><li>DNS缓存:<br>DNS缓存是将解析数据存储在靠近发起请求的客户端的位置，也可以说DNS数据是可以缓存在任意<br>位置，最终目的是以此减少递归查询过程，可以更快的让用户获得请求结果。</li></ul><h2 id="解析类型"><a href="#解析类型" class="headerlink" title="解析类型"></a>解析类型</h2><ul><li>FQDN –&gt; IP 正向解析  </li><li>IP –&gt; FQDN 反向解析<br><strong>注意：正反向解析是两个不同的名称空间，是两棵不同的解析树</strong></li></ul><h2 id="完整查询流程"><a href="#完整查询流程" class="headerlink" title="完整查询流程"></a>完整查询流程</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">Client --&gt;hosts文件 --&gt; Client DNS Service Local Cache --&gt; DNS Server (recursion递<br>归) --&gt; DNS Server Cache --&gt;DNS iteration(迭代) --&gt; 根--&gt; 顶级域名DNS--&gt;二级域名DNS…<br></code></pre></td></tr></table></figure><h1 id="DNS服务相关概念和技术"><a href="#DNS服务相关概念和技术" class="headerlink" title="DNS服务相关概念和技术"></a>DNS服务相关概念和技术</h1><h2 id="各种资源记录"><a href="#各种资源记录" class="headerlink" title="各种资源记录"></a>各种资源记录</h2><p>区域解析库：由众多资源记录RR(Resource Record)组成<br>记录类型：A, AAAA, PTR, SOA, NS, CNAME, MX</p><ul><li>SOA：Start Of Authority，起始授权记录；一个区域解析库有且仅能有一个SOA记录，必须位于解析库的第一条记录  </li><li>A：internet Address，作用，FQDN –&gt; IP  </li><li>AAAA：FQDN –&gt; IPv6  </li><li>PTR：PoinTeR，IP –&gt; FQDN  </li><li>NS：Name Server，专用于标明当前区域的DNS服务器  </li><li>CNAME ： Canonical Name，别名记录  </li><li>MX：Mail eXchanger，邮件交换器  </li><li>TXT：对域名进行标识和说明的一种方式，一般做验证记录时会使用此项，如：SPF（反垃圾邮<br>件）记录，https验证等，如下示例：  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">_dnsauth TXT 2012011200000051qgs69bwoh4h6nht4n1h0lr038x<br></code></pre></td></tr></table></figure></li></ul><h3 id="SOA记录"><a href="#SOA记录" class="headerlink" title="SOA记录"></a>SOA记录</h3><p>name: 当前区域的名字，例如”magedu.org.”<br>value: 有多部分组成<br>注意：</p><ol><li>当前区域的主DNS服务器的FQDN，也可以使用当前区域的名字，只是注释功能，可以不需要配置<br>对应的NS记录和A记录</li><li>当前区域管理员的邮箱地址；但地址中不能使用@符号，一般用.替换，例如：admin.magedu.org</li><li>主从服务区域传输相关定义以及否定的答案的统一的TTL</li></ol><p><strong>范例</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">magedu.org. 86400 IN SOA ns.magedu.org. nsadmin.magedu.org. (<br>2015042201 ;序列号<br>2H ;刷新时间<br>10M ;重试时间<br>1W ;过期时间<br>1D ;否定答案的TTL值<br>)<br></code></pre></td></tr></table></figure><h3 id="NS记录"><a href="#NS记录" class="headerlink" title="NS记录"></a>NS记录</h3><p>name: 当前区域的名字<br>value: 当前区域的某DNS服务器的名字，例如: ns.magedu.org.<br>注意：</p><ol><li>相邻的两个资源记录的name相同时，后续的可省略</li><li>对NS记录而言，任何一个ns记录后面的服务器名字，都应该在后续有一个A记录</li><li>一个区域可以有多个NS记录<br>范例：  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">magedu.org. IN NS ns1.magedu.org.<br>magedu.org. IN NS ns2.magedu.org.<br></code></pre></td></tr></table></figure></li></ol><h3 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h3><p>name: 当前区域的名字<br>value: 当前区域的某邮件服务器(smtp服务器)的主机名<br><strong>注意：</strong>  </p><ol><li>一个区域内，MX记录可有多个；但每个记录的value之前应该有一个数字(0-99)，表示此服务器的优先级；数字越小优先级越高  </li><li>对MX记录而言，任何一个MX记录后面的服务器名字，都应该在后续有一个A记录<br>范例：<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">magedu.org. IN MX 10 mx1.magedu.org.<br>IN MX 20 mx2.magedu.org.<br>mx1 A 10.0.0.100<br>mx2 A 10.0.0.200  <br></code></pre></td></tr></table></figure></li></ol><h3 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h3><p>name: 某主机的FQDN，例如：<a href="http://www.magedu.org/">www.magedu.org</a>.<br>value: 主机名对应主机的IP地址<br>避免用户写错名称时给错误答案，可通过泛域名解析进行解析至某特定地址<br>范例：  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">www.magedu.org. IN A 1.1.1.1<br>www.magedu.org. IN A 2.2.2.2<br>mx1.magedu.org. IN A 3.3.3.3<br>mx2.magedu.org. IN A 4.4.4.4<br>$GENERATE 1-254 HOST$ IN A 1.2.3.$<br>*.magedu.org. IN A 5.5.5.5<br>magedu.org. IN A 6.6.6.6<br>#注意：如果有和DNS的IP相同的多个同名的A记录，优先返回DNS的本机IP  <br></code></pre></td></tr></table></figure><h3 id="AAAA记录"><a href="#AAAA记录" class="headerlink" title="AAAA记录"></a>AAAA记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">name: FQDN  <br>value: IPv6  <br></code></pre></td></tr></table></figure><h3 id="PTR记录"><a href="#PTR记录" class="headerlink" title="PTR记录"></a>PTR记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">name: IP，有特定格式，把IP地址反过来写，1.2.3.4，要写作4.3.2.1；而有特定后缀：in-<br>addr.arpa.，所以完整写法为：4.3.2.1.in-addr.arpa.<br>value: FQDN<br></code></pre></td></tr></table></figure><p>注意：网络地址及后缀可省略；主机地址依然需要反着写<br>例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">4.3.2.1.in-addr.arpa. IN PTR www.magedu.org.<br>#如1.2.3为网络地址，可简写成：<br>4 IN PTR www.magedu.org.<br></code></pre></td></tr></table></figure><h3 id="CNAME别名记录"><a href="#CNAME别名记录" class="headerlink" title="CNAME别名记录"></a>CNAME别名记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">name: 别名的FQDN<br>value: 真正名字的FQDN  <br></code></pre></td></tr></table></figure><p><strong>例如</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">www.magedu.org. IN CNAME websrv.magedu.org.<br></code></pre></td></tr></table></figure><h2 id="DNS软件bind"><a href="#DNS软件bind" class="headerlink" title="DNS软件bind"></a>DNS软件bind</h2><p>DNS服务器软件：bind，powerdns，dnsmasq，unbound，coredns  </p><h3 id="bind相关程序包"><a href="#bind相关程序包" class="headerlink" title="bind相关程序包"></a>bind相关程序包</h3><p>yum list all bind* </p><p>bind：服务器<br>bind-utils: 客户端<br>bind-libs：相关库,依赖关系自动安装<br>bind-chroot: 安全包，将dns相关文件放至 &#x2F;var&#x2F;named&#x2F;chroot&#x2F;</p><p><strong>范例：安装bind软件</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos8 ~]#dnf -y install bind bind-utils<br>[root@ubuntu2004 ~]#apt -y install bind9 bind9-utils<br></code></pre></td></tr></table></figure><h3 id="bind包相关文件"><a href="#bind包相关文件" class="headerlink" title="bind包相关文件"></a>bind包相关文件</h3><p>BIND主程序：&#x2F;usr&#x2F;sbin&#x2F;named<br>服务脚本和Unit名称：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;named，&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;named.service<br>主配置文件：&#x2F;etc&#x2F;named.conf, &#x2F;etc&#x2F;named.rfc1912.zones, &#x2F;etc&#x2F;rndc.key<br>管理工具：&#x2F;usr&#x2F;sbin&#x2F;rndc：remote name domain controller，默认与bind安装在同一主机，且<br>只能通过127.0.0.1连接named进程，提供辅助性的管理功能；953&#x2F;tcp<br>解析库文件：&#x2F;var&#x2F;named&#x2F;ZONE_NAME.ZONE<br>注意：<br>(1) 一台物理服务器可同时为多个区域提供解析<br>(2) 必须要有根区域文件；named.ca<br>(3) 应该有两个（如果包括ipv6的，应该更多）实现localhost和本地回环地址的解析库</p><h3 id="主配置文件"><a href="#主配置文件" class="headerlink" title="主配置文件"></a>主配置文件</h3><ul><li>全局配置：options {};</li><li>日志子系统配置：logging {};</li><li>区域定义：本机能够为哪些zone进行解析，就要定义哪些zone<br>zone “ZONE_NAME” IN {};<br><strong>注意：</strong></li><li>任何服务程序如果期望其能够通过网络被其它主机访问，至少应该监听在一个能与外部主机通信的<br>IP地址上 </li><li>缓存名称服务器的配置：监听外部地址即可  </li><li>dnssec: 建议关闭dnssec，设为no</li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时间同步机制和架构</title>
    <link href="/2022/09/17/TimeSynchronization/"/>
    <url>/2022/09/17/TimeSynchronization/</url>
    
    <content type="html"><![CDATA[<p class="note note-success">多主机协作工作时，各个主机的时间同步很重要，时间不一致会造成很多重要应用的故障，如：加密协议，日志，集群等， 利用NTP（Network Time Protocol） 协议使网络中的各个计算机时间达到同步。目前NTP协议属于运维基础架构中必备的基本服务之一</p><span id="more"></span><h1 id="时间同步服务"><a href="#时间同步服务" class="headerlink" title="时间同步服务"></a>时间同步服务</h1><p>时间同步软件  </p><ul><li>ntpdate</li><li>chrony</li></ul><p><strong>ntp:</strong></p><p>将系统时钟和世界协调时钟UTC同步，精度在局域网内可达0.1ms，在互联网上绝大多数的地方精度可以<br>达到1-50ms<br>项目官网：<a href="http://www.ntp.org/">http://www.ntp.org</a>  </p><p><strong>范例：ubuntu同步时间</strong></p><ul><li>安装ntpdate</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">apt install ntpdate<br></code></pre></td></tr></table></figure><ul><li>同步时间</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># ntp.aliyun.com阿里云时间同步服务器地址<br>ntpdate ntp.aliyun.com<br></code></pre></td></tr></table></figure><p>扩展：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">阿里云公共NTP服务器<br>Unix/linux类：ntp.aliyun.com，ntp1-7.aliyun.com<br>windows类： time.pool.aliyun.com<br>腾讯公共NTP<br>time1-5.cloud.tencent.com<br>大学ntp服务<br>s1a.time.edu.cn 北京邮电大学<br>s1b.time.edu.cn 清华大学<br>s1c.time.edu.cn 北京大学<br>国家授时中心服务器：210.72.145.44<br>美国标准技术院: time.nist.gov<br></code></pre></td></tr></table></figure><p  class="note note-warning" >注意：CentOS 8上已经没有ntpdate命令，因此该种时间同步方式不建议使用</p>**chrony：**实现NTP协议的的自由软件。可使系统时钟与NTP服务器，参考时钟（例如GPS接收器）以及使用手表和键盘的手动输入进行同步。还可以作为NTPv4（RFC 5905）服务器和对等体运行，为网络中的计算机提供时间服务。设计用于在各种条件下良好运行，包括间歇性和高度拥挤的网络连接，温度变化（计算机时钟对温度敏感），以及不能连续运行或在虚拟机上运行的系统。通过Internet同步的两台机器之间的典型精度在几毫秒之内，在LAN上，精度通常为几十微秒。利用硬件时间戳或硬件参考时钟，可实现亚微秒的精度  <h1 id="chrony"><a href="#chrony" class="headerlink" title="chrony"></a>chrony</h1><h2 id="chrony介绍"><a href="#chrony介绍" class="headerlink" title="chrony介绍"></a>chrony介绍</h2><p>chrony 的优势：  </p><ul><li>更快的同步只需要数分钟而非数小时时间，从而最大程度减少了时间和频率误差，对于并非全天<br>24 小时运行的虚拟计算机而言非常有用  </li><li>能够更好地响应时钟频率的快速变化，对于具备不稳定时钟的虚拟机或导致时钟频率发生变化的节<br>能技术而言非常有用  </li><li>在初始同步后，它不会停止时钟，以防对需要系统时间保持单调的应用程序造成影响  </li><li>在应对临时非对称延迟时（例如，在大规模下载造成链接饱和时）提供了更好的稳定性  </li><li>无需对服务器进行定期轮询，因此具备间歇性网络连接的系统仍然可以快速同步时钟<br>chrony官网：<a href="https://chrony.tuxfamily.org/">https://chrony.tuxfamily.org</a><br>chrony官方文档：<a href="https://chrony.tuxfamily.org/documentation.html">https://chrony.tuxfamily.org/documentation.html</a></li></ul><h2 id="chrony-文件组成"><a href="#chrony-文件组成" class="headerlink" title="chrony 文件组成"></a>chrony 文件组成</h2><p>包：chrony<br>两个主要程序：chronyd和chronyc  </p><ul><li>chronyd：后台运行的守护进程，用于调整内核中运行的系统时钟和时钟服务器同步。它确定计算<br>机增减时间的比率，并对此进行补偿  </li><li>chronyc：命令行用户工具，用于监控性能并进行多样化的配置。它可以在chronyd实例控制的计<br>算机上工作，也可在一台不同的远程计算机上工作<br>服务unit 文件： &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;chronyd.service<br>监听端口： 服务端: 123&#x2F;udp,客户端: 323&#x2F;udp<br>配置文件： &#x2F;etc&#x2F;chrony.conf</li></ul><h2 id="配置文件chrony-conf"><a href="#配置文件chrony-conf" class="headerlink" title="配置文件chrony.conf"></a>配置文件chrony.conf</h2><p>官网文档: <a href="https://chrony.tuxfamily.org/doc/3.5/chrony.conf.html">https://chrony.tuxfamily.org/doc/3.5/chrony.conf.html</a>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">server #可用于时钟服务器，iburst 选项当服务器可达时，发送一个八个数据包而不是通常的一个数据<br>包。 包间隔通常为2秒,可加快初始同步速度<br>pool #该指令的语法与server 指令的语法相似，不同之处在于它用于指定NTP服务器池而不是单个<br>NTP服务器。池名称应解析为随时间可能会变化的多个地址<br>driftfile #根据实际时间计算出计算机增减时间的比率，将它记录到一个文件中，会在重启后为系统时钟作<br>出补偿<br>rtcsync #启用内核模式，系统时间每11分钟会拷贝到实时时钟（RTC）<br>allow / deny #指定一台主机、子网，或者网络以允许或拒绝访问本服务器<br>cmdallow / cmddeny #可以指定哪台主机可以通过chronyd使用控制命令<br>bindcmdaddress #允许chronyd监听哪个接口来接收由chronyc执行的命令<br>makestep # 通常chronyd将根据需求通过减慢或加速时钟，使得系统逐步纠正所有时间偏差。在某些特定<br>情况下，系统时钟可能会漂移过快，导致该调整过程消耗很长的时间来纠正系统时钟。该指令强制chronyd在<br>调整期大于某个阀值时调整系统时钟<br>local stratum 10 #即使server指令中时间服务器不可用，也允许将本地时间作为标准时间授时给其它<br>客户端<br></code></pre></td></tr></table></figure><h2 id="NTP-客户端工具"><a href="#NTP-客户端工具" class="headerlink" title="NTP 客户端工具"></a>NTP 客户端工具</h2><p>chronyc 可以运行在交互式和非交互式两种方式，支持以下子命令  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">help 命令可以查看更多chronyc的交互命令<br>accheck 检查是否对特定主机可访问当前服务器<br>activity 显示有多少NTP源在线/离线<br>sources [-v] 显示当前时间源的同步信息<br>sourcestats [-v]显示当前时间源的同步统计信息<br>add server 手动添加一台新的NTP服务器<br>clients 报告已访问本服务器的客户端列表<br>delete 手动移除NTP服务器或对等服务器<br>settime 手动设置守护进程时间<br>tracking 显示系统时间信息<br></code></pre></td></tr></table></figure><h2 id="时间工具"><a href="#时间工具" class="headerlink" title="时间工具"></a>时间工具</h2><ul><li>timedatectl 时间和时区管理</li></ul><p><strong>查看日期时间和时区以及NTP状态</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# timedatectl<br>               Local time: Sat 2022-09-17 11:49:00 UTC<br>           Universal time: Sat 2022-09-17 11:49:00 UTC<br>                 RTC time: Sat 2022-09-17 11:49:00    <br>                Time zone: Etc/UTC (UTC, +0000)       <br>System clock synchronized: yes                        <br>              NTP service: active                     <br>          RTC in local TZ: no                         <br>root@ubuntu2004:~# <br></code></pre></td></tr></table></figure><p><strong>查看时区列表</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# <br>root@ubuntu2004:~# timedatectl list-timezones<br>Africa/Abidjan<br>Africa/Accra<br>Africa/Addis_Ababa<br>Africa/Algiers<br>Africa/Asmara<br>Africa/Asmera<br>Africa/Bamako<br>Africa/Bangui<br>Africa/Banjul<br>Africa/Bissau<br>Africa/Blantyre<br>Africa/Brazzaville<br>Africa/Bujumbura<br>Africa/Cairo<br>Africa/Casablanca<br>Africa/Ceuta<br>.........<br>.........<br></code></pre></td></tr></table></figure><p><strong>修改时区</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 修改时区亚洲上海<br>root@ubuntu2004:~# timedatectl set-timezone Asia/Shanghai<br>root@ubuntu2004:~# <br></code></pre></td></tr></table></figure><p><strong>修改时区方式2</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#修改时区<br>root@ubuntu2004:~# rm -f /etc/localtime<br>root@ubuntu2004:~# ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br>#修改日期时间：<br>timedatectl set-time &quot;2017-01-23 10:30:00&quot;<br>#开启NTP：<br>timedatectl set-ntp true/false<br></code></pre></td></tr></table></figure><p><strong>修改时间</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#修改日期时间：<br>timedatectl set-time &quot;2017-01-23 10:30:00&quot;  <br><br>#需要修改时间为24小时，可以修改/etc/default/locale，默认没有LC_TIME这个变量，在文件中增加一行：<br>LC_TIME=en_DK.UTF-8  <br><br>#开启NTP：<br>timedatectl set-ntp true/false<br></code></pre></td></tr></table></figure><h2 id="实战：实现私有的时间服务器"><a href="#实战：实现私有的时间服务器" class="headerlink" title="实战：实现私有的时间服务器"></a>实战：实现私有的时间服务器</h2><p> <img src="/../image.assets/1663418081035.png" alt="1663418081035"> </p><ul><li>安装chrony</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># centos系统检查是否安装<br>rpm -q chrony<br><br># 安装<br>yum install chrony<br><br># 启动服务  <br>systemctl start chronyd  <br><br># ubuntu系统上安装,ubuntu系统上安装完成后已经启动  <br>apt install chrony<br></code></pre></td></tr></table></figure><ul><li>服务器端配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># IP:192.168.179.146作为时间同步服务器端，192.168.179.146的时间与阿里云时间同步器服务器同步<br>[root@centos7 ~]# hostname -I<br>192.168.179.146 <br>[root@centos7 ~]#   <br><br># 修改192.168.179.146配置文件  /etc/chrony.conf<br>server ntp.aliyun.com iburst<br>server ntp1.aliyun.com iburst<br>server ntp2.aliyun.com iburst<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1663419170404.png" alt="1663419170404"> </p><p>allow 0.0.0.0&#x2F;0 #加此行,指定允许同步的网段</p><p> <img src="/../image.assets/1663419297813.png" alt="1663419297813"> </p><p>删除此行注释,当互联网无法连接,仍然可以为客户端提供时间同步服务 </p><p> <img src="/../image.assets/1663419361157.png" alt="1663419361157"> </p><p>重启chrony服务  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">systemctl restart chronyd<br></code></pre></td></tr></table></figure><p>服务启动后会打开端口123&#x2F;udp  </p><p> <img src="/../image.assets/1663419502330.png" alt="1663419502330"> </p><p>显示当前的时间源同步信息 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# chronyc sources -V<br>210 Number of sources = 2<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* 203.107.6.88                  2   6    37    58   -365us[-3079us] +/-   40ms<br>^? 120.25.115.20                 2   7   110   123   -773us[-3488us] +/-   26ms<br>[root@centos7 ~]# <br><br># *号表示当前同步的时间源地址<br></code></pre></td></tr></table></figure><p>客户端配置  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 客户端<br>root@ubuntu2004:~# hostname -I<br>192.168.179.147 <br>root@ubuntu2004:~# <br><br>#ubuntu系统配置文件与centos目录不一样<br>root@ubuntu2004:~# vim /etc/chrony/chrony.conf<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1663420018409.png" alt="1663420018409"> </p><p>重启chrony服务  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# systemctl restart chronyd<br></code></pre></td></tr></table></figure><p>确认同步成功  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# chronyc sources -V<br>210 Number of sources = 1<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* 192.168.179.146               3   6    17    44    +64us[ +218us] +/-   38ms<br>root@ubuntu2004:~# <br><br>#  ^* 192.168.179.146表示已经成功与192.168.179.146时间同步<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>批量修改多台主机的root密码为随机密码</title>
    <link href="/2022/09/12/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%AF%86%E7%A0%81%E4%B8%BA%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6/"/>
    <url>/2022/09/12/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%AF%86%E7%A0%81%E4%B8%BA%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<p class= "note note-success">批量修改多台主机的root密码为随机密码<p/><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br># 检查sshpass是否安装，没有安装则安装sshpass<br>rpm -q sshpass &amp;&gt; /dev/null || yum install sshpass<br><br># 主机root用户密码<br>export SSHPASS=123456<br><br># 主机地址<br>NET=192.168.179<br><br># 主机地址<br>for i in &#123;20..140&#125;;do<br><br>    &#123;<br>    # 生成随机密码<br>    PASS=`openssl rand -base64 9`<br>    # 链接远程主机并修改root用户密码  StrictHostKeyChecking=no 跳过检查<br>    sshpass -e ssh -o StrictHostKeyChecking=no $&#123;NET&#125;.$&#123;i&#125; &quot;echo root:$&#123;PASS&#125; | chpasswd &amp;&gt; /dev/null&quot;<br>    # IP和密码重定向到文件中<br>    echo $NET.$i:$PASS &gt;&gt; host.txt<br><br>     &#125;&amp; # 后台运行<br>done<br>wait<br><br></code></pre></td></tr></table></figure><p><strong>sshpass使用帮助</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 data]# sshpass --help<br>sshpass: invalid option -- &#x27;-&#x27;<br>Usage: sshpass [-f|-d|-p|-e] [-hV] command parameters<br>   -f filename   Take password to use from file<br>   -d number     Use number as file descriptor for getting password<br>   -p password   Provide password as argument (security unwise)<br>   -e            Password is passed as env-var &quot;SSHPASS&quot;<br>   With no parameters - password will be taken from stdin<br><br>   -P prompt     Which string should sshpass search for to detect a password prompt<br>   -v            Be verbose about what you&#x27;re doing<br>   -h            Show help (this screen)<br>   -V            Print version information<br>At most one of -f, -d, -p or -e should be used<br>[root@centos7 data]# <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH服务</title>
    <link href="/2022/09/12/ssh%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/09/12/ssh%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p class="note note-success">ssh: secure shell protocol, 22/tcp, 安全的远程登录，实现加密通信，代替传统的 telnet 协议</p><span id="more"></span><h1 id="ssh服务介绍"><a href="#ssh服务介绍" class="headerlink" title="ssh服务介绍"></a>ssh服务介绍</h1><p>ssh: secure shell protocol, 22&#x2F;tcp, 安全的远程登录，实现加密通信，代替传统的 telnet 协议<br><strong>具体的软件实现：</strong></p><ul><li>OpenSSH：ssh协议的开源实现，CentOS 默认安装</li><li>dropbear：另一个ssh协议的开源项目的实现</li></ul><p><strong>SSH 协议版本</strong></p><ul><li>v1：基于CRC-32做MAC，不安全；man-in-middle</li><li>v2：双方主机协议选择安全的MAC方式，基于DH算法做密钥交换，基于RSA或DSA实现身份认证</li></ul><h1 id="openssh-服务"><a href="#openssh-服务" class="headerlink" title="openssh 服务"></a>openssh 服务</h1><p>OpenSSH是SSH （Secure SHell） 协议的免费开源实现，一般在各种Linux版本中会默认安装，基于C&#x2F;S结构<br><strong>Openssh软件相关包：</strong></p><ul><li>openssh</li><li>openssh-clients</li><li>openssh-server</li></ul><h2 id="客户端-ssh命令"><a href="#客户端-ssh命令" class="headerlink" title="客户端 ssh命令"></a>客户端 ssh命令</h2><p>ssh命令是ssh客户端，允许实现对远程系统经验证地加密安全访问<br>当用户远程连接ssh服务器时，会复制ssh服务器&#x2F;etc&#x2F;ssh&#x2F;ssh_host*key.pub文件中的公钥到客户机的~&#x2F;.ssh&#x2F;know_hosts中。下次连接时，会自动匹配相对应的私钥，不能匹配，将拒绝连接<br> **ssh客户端配置文件： &#x2F;etc&#x2F;ssh&#x2F;ssh_config **<br>**主要配置:  **</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#StrictHostKeyChecking ask<br>#首次登录不显示检查提示<br>StrictHostKeyChecking no<br># IdentityFile ~/.ssh/id_rsa<br># IdentityFile ~/.ssh/id_dsa<br># IdentityFile ~/.ssh/id_ecdsa<br># IdentityFile ~/.ssh/id_ed25519<br># Port 22<br></code></pre></td></tr></table></figure><p><strong>范例：禁止首次连接的询问过程</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]#sed -i.bak &#x27;/StrictHostKeyChecking/s/.*/StrictHostKeyChecking<br>no/&#x27; /etc/ssh/ssh_config<br></code></pre></td></tr></table></figure><p><strong>格式</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh [user@]host [COMMAND]<br>ssh [-l user] host [COMMAND]<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-p port #远程服务器监听的端口<br>-b #指定连接的源IP<br>-v #调试模式<br>-C #压缩方式<br>-X #支持x11转发<br>-t #强制伪tty分配，如：ssh -t remoteserver1 ssh -t remoteserver2 ssh<br>remoteserver3<br>-o option 如：-o StrictHostKeyChecking=no<br>-i &lt;file&gt; #指定私钥文件路径，实现基于key验证，默认使用文件： ~/.ssh/id_dsa,<br>~/.ssh/id_ecdsa, ~/.ssh/id_ed25519，~/.ssh/id_rsa等<br></code></pre></td></tr></table></figure><p><strong>在远程主机执行本地脚本</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky ~]# cat test.sh <br>#!/bin/bash<br>hostname -I<br>[root@rocky ~]# ssh root@192.168.179.145 /bin/bash &lt;test.sh <br>root@192.168.179.145&#x27;s password: <br>192.168.179.145 <br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><h2 id="其他ssh客户端工具"><a href="#其他ssh客户端工具" class="headerlink" title="其他ssh客户端工具"></a>其他ssh客户端工具</h2><h3 id="scp命令"><a href="#scp命令" class="headerlink" title="scp命令"></a>scp命令</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp [options] SRC... DEST/<br></code></pre></td></tr></table></figure><p><strong>方式：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp [options] [user@]host:/sourcefile /destpath<br>scp [options] /sourcefile [user@]host:/destpath<br>scp [options] [user@]host1:/sourcetpath [user@]host2:/destpath<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-C 压缩数据流<br>-r 递归复制<br>-p 保持原文件的属性信息<br>-q 静默模式<br>-P PORT 指明remote host的监听的端口<br></code></pre></td></tr></table></figure><p><strong>范例:从远程机器复制文件到本地目录</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/ <br></code></pre></td></tr></table></figure><p><strong>范例： 上传本地文件到远程机器指定目录</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest<br></code></pre></td></tr></table></figure><p class="note note-success"> 注:复制目录加上选项-r</p>###  rsync命令<p>rsync工具可以基于ssh和rsync协议实现高效率的远程系统之间复制文件，使用安全的shell连接做为传输方式，比scp更快，基于增量数据同步，即只复制两方不同的文件，此工具来自于rsync包<br><strong>注意：通信两端主机都需要安装 rsync 软件</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">rsync -av /etc server1:/tmp/ #复制目录和目录下文件<br>rsync -av /etc/ server1:/tmp/ #只复制目录下文件<br></code></pre></td></tr></table></figure><p>** 常用选型**</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-n 模拟复制过程<br>-v 显示详细过程<br>-r 递归复制目录树<br>-p 保留权限<br>-t 保留修改时间戳<br>-g 保留组信息<br>-o 保留所有者信息<br>-l 将软链接文件本身进行复制（默认）<br>-L 将软链接文件指向的文件复制<br>-u 如果接收者的文件比发送者的文件较新，将忽略同步<br>-z 压缩，节约网络带宽<br>-a 存档，相当于-rlptgoD，但不保留ACL（-A）和SELinux属性（-X）<br>--delete 源数据删除，目标数据也自动同步删除<br>--progress 显示进度<br>--bwlimit=5120 #限速以KB为单位,5120表示5MB<br></code></pre></td></tr></table></figure><p><strong>范例:复制文件到远程主机目录下</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">rsync ./test.sh root@192.168.179.145:/root<br></code></pre></td></tr></table></figure><h3 id="自动登录-ssh工具-sshpass"><a href="#自动登录-ssh工具-sshpass" class="headerlink" title="自动登录 ssh工具 sshpass"></a>自动登录 ssh工具 sshpass</h3><p>由EPEL源提供，ssh登陆不能在命令行中指定密码。sshpass的出现，解决了这一问题。sshpass用于非<br>交互SSH的密码验证，一般用在sh脚本中，无须再次输入密码（本机known_hosts文件中有的主机才能<br>生效）。它允许你用 -p 参数指定明文密码，然后直接登录远程服务器，它支持密码从命令行、文件、环<br>境变量中读取。<br><strong>格式：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">sshpass [option] command parameters<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-p password #后跟密码它允许你用 -p 参数指定明文密码，然后直接登录远程服务器<br>-f filename #后跟保存密码的文件名，密码是文件内容的第一行<br>-e #将环境变量SSHPASS作为密码<br></code></pre></td></tr></table></figure><p><strong>范例:登录远程主机执行指定命令</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 检测sshpass是否安装<br>[root@rocky ~]# rpm -q sshpass<br>package sshpass is not installed<br># 安装sshpass<br>[root@rocky ~]# yum install sshpass<br># 登录远程主机，首次登录不显示检查提示，执行hostname -I命令<br>[root@rocky ~]# sshpass -p 123456 ssh -o StrictHostKeyChecking=no root@192.168.179.145 hostname -I<br>192.168.179.145 <br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><h2 id="实现基于密钥登录方式验证"><a href="#实现基于密钥登录方式验证" class="headerlink" title="实现基于密钥登录方式验证"></a>实现基于密钥登录方式验证</h2><p><strong>在客户端生成密钥对</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-keygen -t rsa [-P &#x27;password&#x27;] [-f “~/.ssh/id_rsa&quot;]<br></code></pre></td></tr></table></figure><p><strong>把公钥文件传输至远程服务器对应用户的家目录</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-copy-id [-i [identity_file]] [user@]host<br></code></pre></td></tr></table></figure><p><strong>重设私钥口令：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-keygen -p<br></code></pre></td></tr></table></figure><p>在SecureCRT或Xshell实现基于key验证<br>在SecureCRT工具—&gt;创建公钥—&gt;生成Identity.pub文件<br>转化为openssh兼容格式（适合SecureCRT，Xshell不需要转化格式），并复制到需登录主机上相应文<br>件authorized_keys中,注意权限必须为600，在需登录的ssh主机上执行：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-keygen -i -f Identity.pub &gt;&gt; .ssh/authorized_keys<br></code></pre></td></tr></table></figure><p><strong>范例：实现基于 key 验证</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos8 ~]#ssh-keygen<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/root/.ssh/id_rsa): #回车，接受默认值<br>Enter passphrase (empty for no passphrase): #回车，接受默认值，空密码<br>Enter same passphrase again: #回车，接受默认值<br>Your identification has been saved in /root/.ssh/id_rsa.<br>Your public key has been saved in /root/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:vpPtmqRv1llmoSvqT2Lx5C0LPGTE0pvdAqhDqlR5jLY root@centos8.wangxiaochun.com<br>The key&#x27;s randomart image is:<br>+---[RSA 3072]----+<br>| |<br>| ++ |<br>| .=oo= |<br>| oo.oo = . . |<br>|..oE * S .. . |<br>|o . + * o. + |<br>|. * B+.* |<br>| . B*== |<br>| .+*B=. |<br>+----[SHA256]-----+<br>[root@centos8 ~]#ll .ssh/<br>total 8<br>-rw------- 1 root root 2622 May 22 09:51 id_rsa<br>-rw-r--r-- 1 root root 583 May 22 09:51 id_rsa.pub<br>[root@centos8 ~]#<br><br># 将本主机的公钥复制到远程主机的authorized_keys中<br>[root@centos8 ~]#ssh-copy-id root@10.0.0.7<br>/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed:<br>&quot;/root/.ssh/id_rsa.pub&quot;<br>The authenticity of host &#x27;10.0.0.7 (10.0.0.7)&#x27; can&#x27;t be established.<br>ECDSA key fingerprint is SHA256:s//WMgPVXmOjqfOg3f3X0nmaPZF+Fj5vPdWCnAzDcpU.<br>Are you sure you want to continue connecting (yes/no/[fingerprint])? yes<br>/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter<br>out any that are already installed<br>/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are<br>prompted now it is to install the new keys<br>root@10.0.0.7&#x27;s password: #输入远程用户的密码<br>Number of key(s) added: 1<br>Now try logging into the machine, with: &quot;ssh &#x27;10.0.0.7&#x27;&quot;<br>and check to make sure that only the key(s) you wanted were added.<br><br>#对私钥加密<br>[root@centos8 ~]#ssh-keygen -p<br></code></pre></td></tr></table></figure><h2 id="ssh服务配置"><a href="#ssh服务配置" class="headerlink" title="ssh服务配置"></a>ssh服务配置</h2><p><strong>服务器端：sshd<br>服务器端的配置文件: &#x2F;etc&#x2F;ssh&#x2F;sshd_config<br>服务器端的配置文件帮助：man 5 sshd_config<br>常用参数：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">Port 22 #生产建议修改<br>ListenAddress ip<br>LoginGraceTime 2m<br>PermitRootLogin yes #默认ubuntu不允许root远程ssh登录<br>StrictModes yes #检查.ssh/文件的所有者，权限等<br>MaxAuthTries 6 #pecifies the maximum number of authentication<br>attempts permitted per connection. Once the number of failures reaches half this<br>value, additional failures are logged. The default is 6.<br>MaxSessions 10 #同一个连接最大会话<br>PubkeyAuthentication yes #基于key验证<br>PermitEmptyPasswords no #空密码连接<br>PasswordAuthentication yes #基于用户名和密码连接<br>GatewayPorts no<br>ClientAliveInterval 10 #单位:秒<br>ClientAliveCountMax 3 #默认3<br>UseDNS yes #提高速度可改为no<br>GSSAPIAuthentication yes #提高速度可改为no<br>MaxStartups #未认证连接最大值，默认值10<br>Banner /path/file<br>#以下可以限制可登录用户的办法：<br>AllowUsers user1 user2 user3<br>DenyUsers user1 user2 user3<br>AllowGroups g1 g2<br>DenyGroups g1 g2<br></code></pre></td></tr></table></figure><p><strong>范例：设置 ssh 空闲60s 自动注销</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">Vim /etc/ssh/sshd_config<br>ClientAliveInterval 60<br>ClientAliveCountMax 0<br>Service sshd restart<br>#注意：新开一个连接才有效<br></code></pre></td></tr></table></figure><p><strong>范例：解决ssh登录缓慢的问题</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">vim /etc/ssh/sshd_config<br>UseDNS no<br>GSSAPIAuthentication no<br>systemctl restart sshd<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rocky上实现私有CA和证书申请</title>
    <link href="/2022/09/11/Rocky%E4%B8%8A%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89CA%E5%92%8C%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
    <url>/2022/09/11/Rocky%E4%B8%8A%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89CA%E5%92%8C%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</url>
    
    <content type="html"><![CDATA[<p class= "note note-success"> OpenSSL计划在1998年开始，其目标是发明一套自由的加密工具，在互联网上使用。OpenSSL以Eric Young以及Tim Hudson两人开发的SSLeay为基础，随着两人前往RSA公司任职，SSLeay在1998年12月停止开发。因此在1998年12月，社群另外分支出OpenSSL，继续开发下去</p><span id="more"></span>  <h1 id="在rocky上实现私有CA和证书申请"><a href="#在rocky上实现私有CA和证书申请" class="headerlink" title="在rocky上实现私有CA和证书申请"></a>在rocky上实现私有CA和证书申请</h1><ul><li><strong>创建CA相关目录和文件&#x2F;etc&#x2F;pki&#x2F;CA</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky pki]# mkdir -pv /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;<br>mkdir: created directory &#x27;/etc/pki/CA&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/certs&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/crl&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/newcerts&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/private&#x27;<br>[root@rocky pki]#<br></code></pre></td></tr></table></figure><ul><li><strong>创建index.txt文件(&#x2F;etc&#x2F;pki&#x2F;CA目录下)</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# touch index.txt<br><br>#指定第一个颁发证书的序列号，为16进制数<br>[root@rocky CA]# echo 01 &gt; /etc/pki/CA/serial<br>0F /etc/pki/CA/certs<br>[root@rocky CA]# <br><br>[root@rocky CA]# tree<br>.<br>├── certs<br>├── crl<br>├── index.txt<br>├── newcerts<br>└── private<br><br>4 directories, 1 file<br>[root@rocky CA]# <br></code></pre></td></tr></table></figure><ul><li><strong>创建CA的私钥</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# pwd<br>/etc/pki/CA<br><br>#因为加了小括号，因此是在子进程中运行的，umask的值不会影响当前进程<br>[root@rocky CA]# (umask 066;openssl genrsa -out private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus (2 primes)<br>.................................................................................................................................+++++<br>.............+++++<br>e is 65537 (0x010001)<br>[root@rocky CA]# <br><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1662984286147.png" alt="1662984286147"> </p><p> <img src="/../image.assets/1662984391511.png" alt="1662984391511"> </p><ul><li><strong>给CA颁发自签名证书</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXET">[root@rocky pki]# openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -days 3650 -out /etc/pki/CA/cacert.pem<br><br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN   # 指定国家<br>State or Province Name (full name) []:guizhou   # 指定省<br>Locality Name (eg, city) [Default City]:duyun   # 指定城市<br>Organization Name (eg, company) [Default Company Ltd]:magedu     # 公司<br>Organizational Unit Name (eg, section) []:it   # 部门<br>Common Name (eg, your name or your server&#x27;s hostname) []:m48   # 指定给颁发者<br>Email Address []:    # 邮箱地址<br></code></pre></td></tr></table></figure><p><strong>参数说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXET">-new：生成新证书签署请求；<br><br>-x509：专用用于CA生成字签证书<br><br>-key：生成请求时用到的私钥文件<br><br>-day：证书的有效期限<br><br>-out：证书的保存路径（在配置文件当中有固定路径，该文件可以自动生成）<br></code></pre></td></tr></table></figure><ul><li><strong>用户生成私钥和证书申请</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# mkdir -pv /data/app1<br>mkdir: created directory &#x27;/data&#x27;<br>mkdir: created directory &#x27;/data/app1&#x27;<br>[root@rocky CA]# <br># 生成私钥文件  <br>[root@rocky app1]# (umask 066;openssl genrsa -out  /data/app1/app1.key 2048)<br>Generating RSA private key, 2048 bit long modulus (2 primes)<br>.......................+++++<br>.............+++++<br>e is 65537 (0x010001)<br>[root@rocky app1]# <br><br>#生成证书申请文件<br>[root@rocky app1]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:guizhou<br>string is too long, it needs to be no more than 2 bytes long<br>Country Name (2 letter code) [XX]:duyun^C<br>[root@rocky app1]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN<br>State or Province Name (full name) []:guizhou<br>Locality Name (eg, city) [Default City]:duyun<br>Organization Name (eg, company) [Default Company Ltd]:magedu<br>Organizational Unit Name (eg, section) []:it<br>Common Name (eg, your name or your server&#x27;s hostname) []:m48<br>Email Address []:<br></code></pre></td></tr></table></figure><p><strong>注意：默认要求 国家，省，公司名称三项必须和CA一致</strong></p><ul><li><strong>CA颁发证书</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# openssl  ca -in /data/app1/app1.csr -out /etc/pki/CA/certs/app1.crt -days 1000<br>Using configuration from /etc/pki/tls/openssl.cnf<br>Check that the request matches the signature<br>Signature ok<br>Certificate Details:<br>        Serial Number: 1 (0x1)<br>        Validity<br>            Not Before: Sep 12 04:28:42 2022 GMT<br>            Not After : Jun  8 04:28:42 2025 GMT<br>        Subject:<br>            countryName               = CN<br>            stateOrProvinceName       = guizhou<br>            organizationName          = magedu<br>            organizationalUnitName    = it<br>            commonName                = m48<br>        X509v3 extensions:<br>            X509v3 Basic Constraints: <br>                CA:FALSE<br>            Netscape Comment: <br>                OpenSSL Generated Certificate<br>            X509v3 Subject Key Identifier: <br>                F9:E4:5D:C9:C7:70:0C:E9:17:CC:90:88:7E:78:20:57:38:04:EC:69<br>            X509v3 Authority Key Identifier: <br>                keyid:EA:34:E4:C1:8C:1B:F2:F9:22:D5:A2:AE:BD:2F:EA:13:28:24:43:60<br><br>Certificate is to be certified until Jun  8 04:28:42 2025 GMT (1000 days)<br>Sign the certificate? [y/n]:y<br><br><br>1 out of 1 certificate requests certified, commit? [y/n]y<br>Write out database with 1 new entries<br>Data Base Updated<br>[root@rocky CA]# <br><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1662988208721.png" alt="1662988208721"> </p><ul><li><strong>查看证书</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# cat /etc/pki/CA/certs/app1.crt <br>Certificate:<br>    Data:<br>        Version: 3 (0x2)<br>        Serial Number: 1 (0x1)<br>        Signature Algorithm: sha256WithRSAEncryption<br>        Issuer: C=CN, ST=guizhou, L=duyun, O=magedu, OU=it, CN=m48<br>        Validity<br>            Not Before: Sep 12 04:28:42 2022 GMT<br>            Not After : Jun  8 04:28:42 2025 GMT<br>        Subject: C=CN, ST=guizhou, O=magedu, OU=it, CN=m48<br>        Subject Public Key Info:<br>            Public Key Algorithm: rsaEncryption<br>                RSA Public-Key: (2048 bit)<br>                Modulus:<br>                    00:b1:d4:eb:6e:8d:32:db:5e:ce:5d:6c:43:73:ef:<br>                    28:d3:08:8b:ae:8b:42:bf:6a:57:27:76:03:fe:ac:<br>                    55:62:2f:7a:9c:97:37:aa:53:40:df:35:6c:be:28:<br>                    c1:c2:b5:e0:af:f0:d3:be:40:3c:15:1e:59:47:40:<br>                    f0:85:20:c2:da:ca:83:a2:6f:7a:89:3d:35:ba:cf:<br>                    03:cb:cd:e0:15:96:76:56:23:30:ce:be:c6:1e:d0:<br>                    a1:fb:27:0c:0f:cf:19:1b:03:9a:08:c8:a2:f1:46:<br>                    18:b6:f0:08:ef:10:26:12:2b:de:ba:a3:9b:8e:f5:<br>                    13:ab:6a:4d:08:8c:59:30:ef:78:d1:29:6d:3a:4e:<br>                    df:c0:cc:d8:04:84:e8:3d:5f:90:67:45:b5:a8:22:<br>                    8f:6f:ad:83:c9:04:ba:5e:98:3f:f8:2b:49:45:31:<br>                    01:0e:7d:60:b3:ad:44:5f:9d:90:6c:34:9d:5c:31:<br>                    26:01:d3:75:fe:58:66:81:b5:d9:b3:83:99:e0:10:<br>                    62:26:37:62:0e:6c:ea:06:ff:3e:b6:a1:c0:e2:27:<br>                    0e:85:4c:44:eb:84:16:b6:36:b9:4f:74:fa:c7:89:<br>                    32:a2:c4:e3:d4:11:a2:7c:61:2d:82:a8:3d:2c:e3:<br>                    17:c4:ec:de:ae:28:07:07:94:3c:62:1d:49:c0:c0:<br>                    12:41<br>                Exponent: 65537 (0x10001)<br>        X509v3 extensions:<br>            X509v3 Basic Constraints: <br>                CA:FALSEs<br>            Netscape Comment: <br>                OpenSSL Generated Certificate<br>            X509v3 Subject Key Identifier: <br>                F9:E4:5D:C9:C7:70:0C:E9:17:CC:90:88:7E:78:20:57:38:04:EC:69<br>            X509v3 Authority Key Identifier: <br>                keyid:EA:34:E4:C1:8C:1B:F2:F9:22:D5:A2:AE:BD:2F:EA:13:28:24:43:60<br><br>    Signature Algorithm: sha256WithRSAEncryption<br>         0c:90:51:c2:89:75:d7:e1:92:e7:a3:90:cb:f0:c0:96:a7:0f:<br>         9f:e6:b5:2b:45:ed:be:ee:86:cf:0c:f9:06:9c:21:27:25:f8:<br>         6c:d9:1c:84:87:8f:df:c2:c9:8f:65:7a:e9:84:2c:13:a8:1d:<br>         d9:ab:65:02:c4:d5:8f:b3:17:a1:7c:d3:e3:06:83:06:43:5c:<br>         f6:a1:1a:b8:f4:98:7c:28:a9:4e:44:f5:82:ac:9f:77:b7:2f:<br>         cd:a6:c7:df:8c:24:84:0c:36:ad:2e:69:24:b7:0f:17:80:7d:<br>         f5:57:4c:df:8d:fb:7d:9e:27:22:bb:7e:b9:e4:aa:45:63:63:<br>         41:00:64:c6:ff:69:47:1c:b2:ca:49:2a:56:3a:9c:c0:3b:19:<br>         58:64:22:c2:e2:6c:27:bb:c1:d6:8f:55:a0:77:a0:a8:10:6d:<br>         5c:cb:01:50:91:ab:86:ac:88:ee:dc:0e:9d:6c:35:c4:7b:fe:<br>         33:52:a3:f8:a8:25:1d:51:51:ed:2c:25:cf:c7:d3:18:73:81:<br>         42:0f:6f:b7:e6:3f:87:2a:12:4b:71:9c:a1:c2:07:91:a6:10:<br>         5f:5f:c2:28:59:f6:2b:ba:ff:d6:56:69:03:c2:49:36:f0:35:<br>         b4:38:70:7c:29:b8:f6:7d:72:c7:6f:cf:23:ef:e2:5f:d3:73:<br>         fc:26:9a:ec<br>-----BEGIN CERTIFICATE-----<br>MIIDnDCCAoSgAwIBAgIBATANBgkqhkiG9w0BAQsFADBbMQswCQYDVQQGEwJDTjEQ<br>MA4GA1UECAwHZ3VpemhvdTEOMAwGA1UEBwwFZHV5dW4xDzANBgNVBAoMBm1hZ2Vk<br>dTELMAkGA1UECwwCaXQxDDAKBgNVBAMMA200ODAeFw0yMjA5MTIwNDI4NDJaFw0y<br>NTA2MDgwNDI4NDJaMEsxCzAJBgNVBAYTAkNOMRAwDgYDVQQIDAdndWl6aG91MQ8w<br>DQYDVQQKDAZtYWdlZHUxCzAJBgNVBAsMAml0MQwwCgYDVQQDDANtNDgwggEiMA0G<br>CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx1OtujTLbXs5dbENz7yjTCIuui0K/<br>alcndgP+rFViL3qclzeqU0DfNWy+KMHCteCv8NO+QDwVHllHQPCFIMLayoOib3qJ<br>PTW6zwPLzeAVlnZWIzDOvsYe0KH7JwwPzxkbA5oIyKLxRhi28AjvECYSK966o5uO<br>9ROrak0IjFkw73jRKW06Tt/AzNgEhOg9X5BnRbWoIo9vrYPJBLpemD/4K0lFMQEO<br>fWCzrURfnZBsNJ1cMSYB03X+WGaBtdmzg5ngEGImN2IObOoG/z62ocDiJw6FTETr<br>hBa2NrlPdPrHiTKixOPUEaJ8YS2CqD0s4xfE7N6uKAcHlDxiHUnAwBJBAgMBAAGj<br>ezB5MAkGA1UdEwQCMAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVk<br>IENlcnRpZmljYXRlMB0GA1UdDgQWBBT55F3Jx3AM6RfMkIh+eCBXOATsaTAfBgNV<br>HSMEGDAWgBTqNOTBjBvy+SLVoq69L+oTKCRDYDANBgkqhkiG9w0BAQsFAAOCAQEA<br>DJBRwol11+GS56OQy/DAlqcPn+a1K0Xtvu6Gzwz5BpwhJyX4bNkchIeP38LJj2V6<br>6YQsE6gd2atlAsTVj7MXoXzT4waDBkNc9qEauPSYfCipTkT1gqyfd7cvzabH34wk<br>hAw2rS5pJLcPF4B99VdM3437fZ4nIrt+ueSqRWNjQQBkxv9pRxyyykkqVjqcwDsZ<br>WGQiwuJsJ7vB1o9VoHegqBBtXMsBUJGrhqyI7twOnWw1xHv+M1Kj+KglHVFR7Swl<br>z8fTGHOBQg9vt+Y/hyoSS3GcocIHkaYQX1/CKFn2K7r/1lZpA8JJNvA1tDhwfCm4<br>9n1yx2/PI+/iX9Nz/Caa7A==<br>-----END CERTIFICATE-----<br>[root@rocky CA]# <br><br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -issuer<br>issuer=C = CN, ST = guizhou, L = duyun, O = magedu, OU = it, CN = m48<br>[root@rocky CA]# <br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 验证指定编号对应证书的有效性<br>[root@rocky CA]# openssl ca -status 01<br>Using configuration from /etc/pki/tls/openssl.cnf<br>01=Valid (V)<br>[root@rocky CA]# <br></code></pre></td></tr></table></figure><ul><li><strong>证书的吊销</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky newcerts]# openssl ca -revoke /etc/pki/CA/newcerts/01.pem <br>Using configuration from /etc/pki/tls/openssl.cnf<br>Revoking Certificate 01.<br>Data Base Updated<br><br>[root@rocky newcerts]# openssl ca -status 01<br>Using configuration from /etc/pki/tls/openssl.cnf<br>01=Revoked (R)<br>[root@rocky newcerts]# <br></code></pre></td></tr></table></figure><ul><li><strong>生成证书吊销列表文件</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky newcerts]#echo 01 &gt; /etc/pki/CA/crlnumber<br>[root@rocky newcerts]#openssl ca -gencrl -out /etc/pki/CA/crl.pem<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux定时执行任务</title>
    <link href="/2022/09/05/Linux%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1/"/>
    <url>/2022/09/05/Linux%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="一、at命令"><a href="#一、at命令" class="headerlink" title="一、at命令"></a>一、at命令</h1><h2 id="1、at命令的准备工作"><a href="#1、at命令的准备工作" class="headerlink" title="1、at命令的准备工作"></a>1、at命令的准备工作</h2><p><strong>1）安装 at 软件包</strong> </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# yum install -y at<br></code></pre></td></tr></table></figure><p><strong>2）需要 atd 服务的支持。atd 服务是独立的服务</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">查看atd服务状态：# systemctl status atd  <br><br>开启atd服务：# systemctl start atd<br><br>关闭atd服务：# systemctl stop atd<br></code></pre></td></tr></table></figure><p><strong>3）查看是否开始开机启动服务：如果弹出enabled，说明开机启动此服务</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@rocky ~]# systemctl is-enabled atd<br>enabled<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><p><strong>4）安装好 at 软件包并开启 atd 服务之后，at 命令才可以正常使用。</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@rocky ~]# systemctl start atd <br>[root@rocky ~]# systemctl status atd<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1662393874290.png" alt="1662393874290"> </p><h2 id="2、at-命令的访问控制"><a href="#2、at-命令的访问控制" class="headerlink" title="2、at 命令的访问控制"></a>2、at 命令的访问控制</h2><p>访问控制：是指允许哪些用户使用 at 命令设定定时任务，或者不允许哪些用户使用 at 命令。可以将其想象成设定黑名单或白名单。at 命令的访问控制是依靠 &#x2F;etc&#x2F;at.allow（白名单）和 &#x2F;etc&#x2F;at.deny（黑名单）这两个文件来实现的，具体规则如下：</p><ul><li><p>1)如果系统中有 &#x2F;etc&#x2F;at.allow 文件，那么只有写入 &#x2F;etc&#x2F;at.allow 文件（白名单）中的用户可以使用 at 命令，其他用户不能使用 at 命令(（注意，&#x2F;etc&#x2F;at.allow 文件的优先级更高，也就是说，如果同一个用户既写入 &#x2F;etc&#x2F;at.allow 文件，又写入 &#x2F;etc&#x2F;at.deny 文件，那么这个用户是可以使用 at 命令的);</p></li><li><p>2)如果系统中没有 &#x2F;etc&#x2F;at.allow 文件，只有 &#x2F;etc&#x2F;at.deny 文件，那么写入 &#x2F;etc&#x2F;at.deny 文件（黑名单）中的用户不能使用 at 命令，其他用户可以使用 at 命令。不过这个文件对 root 用户不生效;</p></li><li><p>3)如果系统中这两个文件都不存在，那么只有 root 用户可以使用 at 命令;</p></li><li><p>4)系统中默认只有 &#x2F;etc&#x2F;at.deny 文件，而且这个文件是空的，因此，系统中所有的用户都可以使用 at 命令。如果我们打算控制用户的 at 命令权限，那么只需把用户名写入 &#x2F;etc&#x2F;at.deny 文件即可。</p></li></ul><h2 id="3、at-命令语法添加定时执行任务"><a href="#3、at-命令语法添加定时执行任务" class="headerlink" title="3、at 命令语法添加定时执行任务"></a>3、at 命令语法添加定时执行任务</h2><p><strong>基本格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">at [选项] [时间] or at [option] TIME<br></code></pre></td></tr></table></figure><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-V 显示版本信息<br>-t time 时间格式 [[CC]YY]MMDDhhmm[.ss]<br>-l 列出指定队列中等待运行的作业；相当于atq<br>-d N 删除指定的N号作业；相当于atrm<br>-c N 查看具体作业N号任务<br>-f file 指定的文件中读取任务<br>-m 当任务被完成之后，将给用户发送邮件，即使没有标准输出  <br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>作业执行命令的结果中的标准输出和错误以执行任务的用户身份发邮件通知给 root</li><li>默认CentOS 8 最小化安装没有安装邮件服务,需要自行安装</li><li>TIME：定义出什么时候进行 at 这项任务的时间</li></ul><p><strong>此命令中关于时间参数可用的以下格式：</strong></p><table><thead><tr><th>格式</th><th>用法</th></tr></thead><tbody><tr><td>HH:MM</td><td>比如 04:00 AM。</td></tr><tr><td>Midnight（midnight）</td><td>代表 12:00 AM</td></tr><tr><td>Noon（noon）</td><td>代表 12:00 PM（相当于 12:00）</td></tr><tr><td>Teatime（teatime）</td><td>代表 4:00 PM（相当于 16:00）。</td></tr><tr><td>英文月名 日期 年份</td><td>比如 January 15 2018 表示 2018 年 1 月 15 号，年份可有可无。</td></tr><tr><td>MMDDYY、MM&#x2F;DD&#x2F;YY、MM.DD.YY</td><td>比如 011518 表示 2018 年 1 月 15 号。</td></tr><tr><td>now+时间</td><td>以 minutes、hours、days 或 weeks 为单位，例如 now+5 days 表示命令在 5 天之后的此时此刻执行。</td></tr><tr><td><strong>具体的使用方法：</strong></td><td></td></tr></tbody></table><p>at命令后想要输入执行程序的确切时间，然后回车，接着在 &gt; 后输入想要执行的命令，最后用 Ctrl+d 组合键退出 at 命令。</p><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# at now+2 min<br>at&gt; ls ./ &gt; a.log<br></code></pre></td></tr></table></figure><p><strong>范例: ubuntu at任务存放路径</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TXT">root@ubuntu200404-1:~# ll /var/spool/cron/<br>total 20<br>drwxr-xr-x 5 root   root    4096 Feb 23  2022 ./<br>drwxr-xr-x 4 root   root    4096 Feb 23  2022 ../<br>drwxrwx--T 2 daemon daemon  4096 Sep  6 13:32 atjobs/<br>drwxrwx--T 2 daemon daemon  4096 Nov 12  2018 atspool/<br>drwx-wx--T 2 root   crontab 4096 Feb 13  2020 crontabs/<br><br>root@ubuntu200404-1:~# ll /var/spool/cron/atjobs/<br>total 16<br>drwxrwx--T 2 daemon daemon 4096 Sep  6 13:32 ./<br>drwxr-xr-x 5 root   root   4096 Feb 23  2022 ../<br>-rwx------ 1 root   daemon 2838 Sep  6 13:33 a0000101a6c9d1*<br>-rw------- 1 daemon daemon    6 Sep  6 13:32 .SEQ<br>root@ubuntu200404-1:~# <br></code></pre></td></tr></table></figure><p><strong>范例：centos at任务存放路径</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# ll /var/spool/at/<br>total 4<br>-rwx------. 1 root root 2831 Sep  6 21:37 a0000501a6c9d5<br>drwx------. 2 root root   19 Sep  6 21:31 spool<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h1 id="二、-crontab命令"><a href="#二、-crontab命令" class="headerlink" title="二、 crontab命令"></a>二、 crontab命令</h1><p>  at 命令：是在指定的时间只能执行一次任务。 crontab 命令：可以循环重复的执行定时任务。</p><h2 id="1、crontab-命令的准备工作"><a href="#1、crontab-命令的准备工作" class="headerlink" title="1、crontab 命令的准备工作"></a>1、crontab 命令的准备工作</h2><p>crontab 命令需要 crond 服务支持。crond 是 Linux 下用来周期地执行某种任务或等待处理某些事件的一个守护进程，在安装完成操作系统后，默认会安装 crond 服务工具，且 crond 服务默认就是自启动的。crond 进程每分钟会定期检查是否有要执行的任务，如果有，则会自动执行该任务。</p><p>crontab 命令和 at 命令类似，也是通过 &#x2F;etc&#x2F;cron.allow 和 &#x2F;etc&#x2F;cron.deny 文件来限制某些用户是否可以使用 crontab 命令的。</p><p>启动crond服务之后才能使用crontab 命令：  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># systemctl start crond 或者  # systemctl enable crond<br></code></pre></td></tr></table></figure><h2 id="2、-crontab-命令语法"><a href="#2、-crontab-命令语法" class="headerlink" title="2、 crontab 命令语法"></a>2、 <strong>crontab 命令语法</strong></h2><p><strong>命令格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">crontab [-u user] [-l | -r | -e] [-i]<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-l 列出所有任务<br>-e 编辑任务<br>-r 移除所有任务<br>-i 同-r一同使用，以交互式模式移除指定任务<br>-u user 指定用户管理cron任务,仅root可运行<br></code></pre></td></tr></table></figure><p> crontab 定时任务非常简单，只需执“crontab -e”命令，然后输入想要定时执行的任务即可。注意文件格式如下： </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]## crontab -e<br>#进入 crontab 编辑界面。会打开Vim编辑你的任务<br>* * * * * 执行的任务<br></code></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;crontab 格式说明，详情参见 man 5 crontab<br>注释行以 # 开头</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs TXt">[root@centos7 ~]# cat /etc/crontab <br>SHELL=/bin/bash<br>PATH=/sbin:/bin:/usr/sbin:/usr/bin<br>MAILTO=root<br><br># For details see man 4 crontabs<br><br># Example of job definition:<br># .---------------- minute (0 - 59)<br># |  .------------- hour (0 - 23)<br># |  |  .---------- day of month (1 - 31)<br># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...<br># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat<br># |  |  |  |  |<br># *  *  *  *  * user-name  command to be executed<br><br>You have mail in /var/spool/mail/root<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><table><thead><tr><th>项目</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td>第一个”*”</td><td>一小时当中的第几分钟（minute）</td><td>0~59</td></tr><tr><td>第二个”*”</td><td>一天当中的第几小时（hour）</td><td>0~23</td></tr><tr><td>第三个”*”</td><td>一个月当中的第几天（day）</td><td>1~31</td></tr><tr><td>第四个”*”</td><td>一年当中的第几个月（month）</td><td>1~12</td></tr><tr><td>第五个”*”</td><td>一周当中的星期几（week）</td><td>0~7（0和7都代表星期日）</td></tr></tbody></table><p>**在这个时间的表达式中，还有一些特殊符号如下：    **</p><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td>*（星号）</td><td>代表任何时间。比如第一个”*”就代表一小时种每分钟都执行一次的意思。</td></tr><tr><td>,（逗号）</td><td>代表不连续的时间。比如”0 8，12，16***命令”就代表在每天的 8 点 0 分、12 点 0 分、16 点 0 分都执行一次命令。</td></tr><tr><td>-（中杠）</td><td>代表连续的时间范围。比如”0 5 ** 1-6命令”，代表在周一到周六的凌晨 5 点 0 分执行命令。</td></tr><tr><td>&#x2F;（正斜线）</td><td>代表每隔多久执行一次。比如”<em>&#x2F;10</em>***命令”，代表每隔 10 分钟就执行一次命令。</td></tr></tbody></table><p>当“crontab -e”编辑完成之后，一旦保存退出，那么这个定时任务实际就会写入 &#x2F;var&#x2F;spool&#x2F;cron&#x2F; 目录中，每个用户的定时任务用自己的用户名进行区分。而且 crontab 命令只要保存就会生效，只要 crond 服务是启动的。</p><p>这里举几个时间的例子来熟悉一下时间字段（星期几和几日最好不要同时出现，非常容易让管理员混淆）：</p><table><thead><tr><th>时间</th><th>含义</th></tr></thead><tbody><tr><td>1 2 * * *</td><td>在每天凌晨 2 点 1 分执行命令</td></tr><tr><td>0 17 * * 1</td><td>在每周一的 17 点 0 分执行命令</td></tr><tr><td>0 5 1,15 * *</td><td>在每月 1 日和 15 日的凌晨 5 点 0 分执行命令</td></tr><tr><td>40 4 * * 1-5</td><td>在每周一到周五的凌晨 4 点 40 分执行命令</td></tr><tr><td>*&#x2F;10 4 * * *</td><td>在每天的凌晨 4 点，每隔 10 分钟执行命令</td></tr><tr><td>3,15 8-11 *&#x2F;2 * *</td><td>在每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行命令。</td></tr></tbody></table><p> <img src="/../image.assets/join.gif" alt="img"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>进程和线程相关概念</title>
    <link href="/2022/09/04/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <url>/2022/09/04/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<p><strong>Linux系统状态的查看及管理工具：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXT">pstree<br>ps<br>pidof<br>pgrep<br>top<br>htop<br>glance<br>pmap<br>vmstat<br>dstat<br>kill<br>pkill<br>job<br>bg<br>fg<br>nohup<br></code></pre></td></tr></table></figure><h1 id="1-进程管理和性能相关工具"><a href="#1-进程管理和性能相关工具" class="headerlink" title="1 进程管理和性能相关工具"></a>1 进程管理和性能相关工具</h1><h2 id="1-1-进程树pstree"><a href="#1-1-进程树pstree" class="headerlink" title="1.1 进程树pstree"></a>1.1 进程树pstree</h2><p>pstree 可以用来显示进程的父子关系，以树形结构显示<br>格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">pstree [OPTION] [ PID | USER ]<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXt">-p 显示PID<br>-T 不显示线程thread,默认显示线程<br>-u 显示用户切换<br>-H pid 高亮显示指定进程及其前辈进程<br></code></pre></td></tr></table></figure><h2 id="1-2-进程信息PS"><a href="#1-2-进程信息PS" class="headerlink" title="1.2 进程信息PS"></a>1.2 进程信息PS</h2><p>ps 即 process state，可以进程当前状态的快照，默认显示当前终端中的进程，Linux系统各进程的相关<br>信息均保存在&#x2F;proc&#x2F;PID目录下的各文件中<br>ps格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ps [OPTION]...<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs TXT">a 选项包括所有终端中的进程<br>x 选项包括不链接终端的进程<br>u 选项显示进程所有者的信息<br>f 选项显示进程树,相当于 --forest<br>k|--sort 属性 对属性排序,属性前加 - 表示倒序<br>o 属性… 选项显示定制的信息 pid、cmd、%cpu、%mem<br>L 显示支持的属性列表<br>-C cmdlist 指定命令，多个命令用，分隔<br>-L 显示线程<br>-e 显示所有进程，相当于-A<br>-f 显示完整格式程序信息<br>-F 显示更完整格式的进程信息<br>-H 以进程层级格式显示进程相关信息<br>-u userlist 指定有效的用户ID或名称<br>-U userlist 指定真正的用户ID或名称<br>-g gid或groupname 指定有效的gid或组名称<br>-G gid或groupname 指定真正的gid或组名称<br>-p pid 显示指pid的进程<br>--ppid pid 显示属于pid的子进程<br>-t ttylist 指定tty,相当于 t<br>-M 显示SELinux信息，相当于Z<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络管理配置</title>
    <link href="/2022/08/21/network/"/>
    <url>/2022/08/21/network/</url>
    
    <content type="html"><![CDATA[<h1 id="1、网络配置"><a href="#1、网络配置" class="headerlink" title="1、网络配置"></a>1、网络配置</h1><h2 id="基本网络配置"><a href="#基本网络配置" class="headerlink" title="基本网络配置"></a><strong>基本网络配置</strong></h2><p>将Linux主机接入到网络，需要配置网络相关设置<br>一般包括如下内容：</p><ul><li>主机名</li><li>IP&#x2F;netmask</li><li>路由：默认网关<ul><li>DNS服务器</li><li>主DNS服务器</li><li>次DNS服务器</li><li>第三个DNS服务器</li></ul></li></ul><h2 id="1-1-修改主机名称"><a href="#1-1-修改主机名称" class="headerlink" title="1.1 修改主机名称"></a>1.1 修改主机名称</h2><ul><li>CentOs6 及之前的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">修改 /etc/sysconfig/network文件HOSTNAME的值</span><br>[root@centos6 sysconfig]# cat /etc/sysconfig/network<br>NETWORKING=yes<br>HOSTNAME=centos6<br>[root@centos6 sysconfig]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改hostname的值为centos6.mg.du</span><br>[root@centos6 sysconfig]# vi /etc/sysconfig/network<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改后不会马上生效,需要使用hostname命令重写一下</span><br>[root@centos6 sysconfig]# hostname centos6.mg.du<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启一下看主机名称是否修改成功</span><br>[root@centos6 sysconfig]# reboot<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">hostname命令查看主机名称</span><br>[root@centos6 ~]# hostname<br>centos6.mg.du<br>[root@centos6 ~]#<br></code></pre></td></tr></table></figure><ul><li>CentOs7 及之后的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">centos7 之后的版本主机名称文件  /etc/hostname</span><br>[root@centos7 ~]# cat /etc/hostname <br>centos7<br>[root@centos7 ~]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">centos7 之后的版本直接使用命令修改主机名称</span><br>[root@centos7 ~]# hostnamectl set-hostname centos7.mg<br>[root@centos7 ~]# hostname<br>centos7.mg<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><ul><li>ubuntu修改主机名称</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看主机名称配置文件</span><br>root@ubuntu200404-1:~# cat /etc/hostname <br>ubuntu200404-1<br>root@ubuntu200404-1:~# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改主机名称可以直接修改/etc/hostname文件，也可以直接使用命令修改</span><br>hostnamectl set-hostname 主机名<br></code></pre></td></tr></table></figure><h2 id="1-2-网卡名称"><a href="#1-2-网卡名称" class="headerlink" title="1.2 网卡名称"></a>1.2 网卡名称</h2><h3 id="1-2-1-centos-6之前版本的网卡名称"><a href="#1-2-1-centos-6之前版本的网卡名称" class="headerlink" title="1.2.1 centos 6之前版本的网卡名称"></a>1.2.1 centos 6之前版本的网卡名称</h3><p>接口命名方式：CentOS 6</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">以太网： eth[0,1,2,···]<br>ppp: ppp[0,1,2,···]<br></code></pre></td></tr></table></figure><ul><li>网络接口识别并命名相关的udev配置文件</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">/etc/udev/rules.d/70-persistent-net.rules<br></code></pre></td></tr></table></figure><ul><li>查看网卡</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">dmesg |grep –i eth<br>ethtool -i eth0<br></code></pre></td></tr></table></figure><ul><li>卸载网卡驱动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">modprobe -r e1000<br>rmmod e1000<br></code></pre></td></tr></table></figure><ul><li>装载网卡驱动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">modprobe e1000<br></code></pre></td></tr></table></figure><ul><li>范例：临时修改网卡名称</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">[root@centos6 ~]#ip link set eth0 down<br>[root@centos6 ~]#ip link set eth0 name abc<br>[root@centos6 ~]#ip link set abc up<br></code></pre></td></tr></table></figure><h3 id="1-2-2-Centos7-版本之后的网卡配置"><a href="#1-2-2-Centos7-版本之后的网卡配置" class="headerlink" title="1.2.2 Centos7 版本之后的网卡配置"></a>1.2.2 Centos7 版本之后的网卡配置</h3><p><strong>参考文档</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">https://access.redhat.com/documentation/en-<br>us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consisten<br>t-network-interface-device-naming_configuring-and-managing-networking<br></code></pre></td></tr></table></figure><p>CentOS 6之前，网络接口使用连续号码命名：eth0、eth1等,当增加或删除网卡时，名称可能会发生变化<br>CentOS 7 以上版使用基于硬件，设备拓扑和设置类型命名,可以保持网卡名称的稳定<br>CentOS 8 中已弃用network.service，采用NetworkManager（NM）为网卡启用命令。CentOS 8 仍可以安装network.service作为网卡服务，只是默认没有安装，具体方法为： dnf install network-scripts ，不过官方已明确在下一个大版本中，将彻底放弃network.service，不建议继续使用network.service管理网络。</p><p><strong>systemd对网络设备的命名方式</strong></p><ol><li><p>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，且可预测则根据此索引进行命<br> 名，如：eno1</p></li><li><p>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，<br> 如：ens1</p></li><li><p>如果硬件接口的物理位置信息可用，则根据此信息命名，如：enp2s0</p></li><li><p>如果用户显式启动，也可根据MAC地址进行命名，如：enx2387a1dc56</p></li><li><p>上述均不可用时，则使用传统命名机制</p></li></ol><p><strong>基于BIOS支持启用biosdevname软件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">内置网卡：em1,em2<br>pci卡：pYpX Y：slot ,X:port<br></code></pre></td></tr></table></figure><p><strong>网卡组成格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt">en: Ethernet 有线局域网<br>wl: wlan 无线局域网<br>ww: wwan无线广域网<br>o&lt;index&gt;: 集成设备的设备索引号<br>s&lt;slot&gt;: 扩展槽的索引号<br>x&lt;MAC&gt;: 基于MAC地址的命名<br>p&lt;bus&gt;s&lt;slot&gt;: enp2s1<br></code></pre></td></tr></table></figure><p><strong>使用传统方式命名</strong></p><p>（1）编辑&#x2F;etc&#x2F;default&#x2F;grub配置文件</p><ul><li>centos7</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GRUB_CMDLINE_LINUX</span>=<span class="hljs-string">&quot;net.ifnames=0 biosdevname=0&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1661261214996.png" alt="1661261214996"></p><ul><li>ubuntu</li></ul><p><img src="/../image.assets/1661261773303.png" alt="1661261773303"></p><p>(2) 为grub2生成其配置文件</p><ul><li>centos7</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg<br></code></pre></td></tr></table></figure><ul><li>ubuntu</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>(3) 重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br></code></pre></td></tr></table></figure><p><strong>自定义网卡名称</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# vi /etc/default/grub<br>GRUB_CMDLINE_LINUX=&quot;net.ifnames.prefix=yuankun&quot;<br><br><br>[root@centos8 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg<br>[root@centos8 ~]# reboot<br></code></pre></td></tr></table></figure><h2 id="1-3-网络配置文件"><a href="#1-3-网络配置文件" class="headerlink" title="1.3 网络配置文件"></a>1.3 网络配置文件</h2><p><strong>网络基本配置文件</strong></p><p>IP、MASK、GW、DNS相关的配置文件：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">/etc/sysconfig/network-scripts/ifcfg-IFACE<br></code></pre></td></tr></table></figure><p><strong>配置参考文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">/usr/share/doc/initcripts-*/sysconfig.txt<br></code></pre></td></tr></table></figure><p><strong>常用配置</strong></p><table><thead><tr><th>设置</th><th>说明</th></tr></thead><tbody><tr><td>TYPE</td><td>接口类型；常见有的Ethernet, Bridge</td></tr><tr><td>NAME</td><td>此配置文件应用到的设备</td></tr><tr><td>DEVICE</td><td>设备名</td></tr><tr><td>HWADDR</td><td>对应的设备的MAC地址</td></tr><tr><td>UUID</td><td>设备的唯一标识</td></tr><tr><td>BOOTPROTO</td><td>激活此设备时使用的地址配置协议，常用的dhcp，static, none, bootp</td></tr><tr><td>IPADDR</td><td>指明IP地址</td></tr><tr><td>NETMASK</td><td>子网掩码,如:255.255.255.0</td></tr><tr><td>PREFIX</td><td>网络ID的位数, 如:24</td></tr><tr><td>GATEWAY</td><td>默认网关</td></tr><tr><td>DNS1</td><td>第一个DNS服务器地址</td></tr><tr><td>DNS2</td><td>第二个DNS服务器地址</td></tr><tr><td>DOMAIN</td><td>主机不完整时，自动搜索的域名后缀</td></tr><tr><td>ONBOOT</td><td>在系统引导时是否激活此设备</td></tr><tr><td>USERCTL</td><td>普通用户是否可控制此设备</td></tr><tr><td>PEERDNS</td><td>如果BOOTPROTO的值为“dhcp”，YES将允许dhcp server分配的dns服务<br/>器信息直接覆盖至&#x2F;etc&#x2F;resolv.conf文件，NO不允许修改resolv.conf</td></tr><tr><td>NM_CONTROLLED</td><td>NM是NetworkManager的简写，此网卡是否接受NM控制</td></tr></tbody></table><p><strong>范例</strong></p><ul><li>修改&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-IFACE</li><li>必须以ifcfg-开头，为了规范一般后面跟网卡名</li><li>配置文件写入内容</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs txt"># 动态获取ip地址<br>DEVICE=eth0<br>NAME=eth0<br>BOOTPROTO=dhcp<br><br># 静态获取IP地址<br>DEVICE=eth0<br>NAME=eth0<br>BOOTPROTO=static<br>IPADDR=192.168.179.129<br>PREFIX=24<br>GATEWAY=192.168.179.1<br>DNS1=192.168.179.1<br>DNS2=180.76.76.76<br></code></pre></td></tr></table></figure><p>centos8还需要执行以下两条命令才会生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">CentOS8和rocky<br>nmcli connnection reload<br>nmcli connnettion up eth0<br></code></pre></td></tr></table></figure><p><strong>扩展：CentOS网卡配置文件生效方法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">CentOS6<br>service network restart<br>CentOS7<br>systemctl restart network<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">通用方法 重启</span><br>reboot<br></code></pre></td></tr></table></figure><h2 id="1-4-ifconfig命令"><a href="#1-4-ifconfig命令" class="headerlink" title="1.4 ifconfig命令"></a>1.4 ifconfig命令</h2><p>来自于net-tools包，建议使用 ip 代替</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#清除eth0上面的IP地址</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0 0.0.0.0</span><br><span class="hljs-meta">#启用和禁用网卡</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0 down</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0 up</span><br><span class="hljs-meta">#对一个网卡设置多个IP地址</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0:1 172.16.0.8/24</span><br></code></pre></td></tr></table></figure><h2 id="1-5-route命令"><a href="#1-5-route命令" class="headerlink" title="1.5 route命令"></a>1.5 route命令</h2><p>路由表管理命令<br>路由表主要构成:</p><ul><li>Destination: 目标网络ID,表示可以到达的目标网络ID,0.0.0.0&#x2F;0 表示所有未知网络,又称为默认路由,<br>优先级最低</li><li>Genmask:目标网络对应的netmask</li><li>Iface: 到达对应网络,应该从当前主机哪个网卡发送出来</li><li>Gateway: 到达非直连的网络,将数据发送到临近(下一个)路由器的临近本主机的接口的IP地址,如果<br>是直连网络,gateway是0.0.0.0</li><li>Metric: 开销cost,值越小,路由记录的优先级最高</li></ul><p><strong>查看路由表：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky ~]# route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         192.168.179.1   0.0.0.0         UG    100    0        0 eth0<br>192.168.179.0   0.0.0.0         255.255.255.0   U     100    0        0 eth0<br></code></pre></td></tr></table></figure><p><strong>添加路由：route add</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">route add [-net|-host|default] target [netmask Nm] [gw GW] [[dev] If]<br></code></pre></td></tr></table></figure><p><strong>删除路由route del</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">route del [-net|-host] target [gw Gw] [netmask Nm] [[dev] If]<br></code></pre></td></tr></table></figure><h2 id="1-6-ubuntu网络配置"><a href="#1-6-ubuntu网络配置" class="headerlink" title="1.6 ubuntu网络配置"></a>1.6 ubuntu网络配置</h2><h3 id="1-6-1-修改主机名"><a href="#1-6-1-修改主机名" class="headerlink" title="1.6.1 修改主机名"></a>1.6.1 修改主机名</h3><ul><li>方法一</li></ul><p>修改配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># <span class="hljs-regexp">/etc/</span>hostname<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> 主机名<br></code></pre></td></tr></table></figure><h3 id="1-6-2-网卡名称"><a href="#1-6-2-网卡名称" class="headerlink" title="1.6.2 网卡名称"></a>1.6.2 网卡名称</h3><p>默认ubuntu的网卡名称和 CentOS 7 类似，如：ens33，ens38等<br>修改网卡名称为传统命名方式：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># 修改配置文件    <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/grub<br>GRUB_CMDLINE_LINUX=<span class="hljs-string">&quot;net.ifnames=0&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1661777360041.png" alt="1661777360041"></p><p><strong>生成新的grub.cfg文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br><span class="hljs-comment">#或者</span><br>update-grub<br>grep net.ifnames <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br><br><span class="hljs-comment"># 重启生效</span><br>reboot<br></code></pre></td></tr></table></figure><h3 id="1-6-3-ubuntu网卡配置"><a href="#1-6-3-ubuntu网卡配置" class="headerlink" title="1.6.3 ubuntu网卡配置"></a>1.6.3 ubuntu网卡配置</h3><ul><li>配置自动获取IP</li></ul><p>网卡配置文件采用YAML格式,必须以 &#x2F;etc&#x2F;netplan&#x2F;XXX.yaml 文件命名方式存放<br>可以每个网卡对应一个单独的配置文件,也可以将所有网卡都放在一个配置文件里</p><p><strong>范例</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">root@ubuntu200404-1:~#</span> <span class="hljs-string">cat</span> <span class="hljs-string">/etc/netplan/eth0.yaml</span> <br><span class="hljs-comment"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">eth0:</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br>  <br> <span class="hljs-comment"># 修改网卡配置文件后需要执行命令生效</span><br> <span class="hljs-string">netplan</span> <span class="hljs-string">apply</span><br></code></pre></td></tr></table></figure><ul><li>配置静态IP</li></ul><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext">root@ubuntu200404-1:/etc/netplan# cat eth1.yaml <br><span class="hljs-comment"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="hljs-attribute">network</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">ethernets</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">eth1</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">addresses</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">192.168.179.139/24</span><br>      <span class="hljs-attribute">gateway4</span><span class="hljs-punctuation">:</span> <span class="hljs-string">192.168.0.2</span><br>      <span class="hljs-attribute">nameservers</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">search</span><span class="hljs-punctuation">:</span> <span class="hljs-string">[baidu.com]</span><br>        <span class="hljs-comment"># DNS</span><br>        <span class="hljs-attribute">addresses</span><span class="hljs-punctuation">:</span> <span class="hljs-string">[180.76.76.76]</span><br>  <span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br>  <br>  <br><span class="hljs-comment"># 修改网卡配置文件后需要执行命令生效</span><br> netplan apply<br></code></pre></td></tr></table></figure><p><strong>查看ip和网关</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看IP</span><br>root@ubuntu200404-1:/etc/netplan# ip address<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000<br>    link/ether 00:0c:29:79:b0:80 brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.179.138/24 brd 192.168.179.255 scope global dynamic eth0<br>       valid_lft 1698sec preferred_lft 1698sec<br>    inet6 fe80::20c:29ff:fe79:b080/64 scope link <br>       valid_lft forever preferred_lft forever<br>3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000<br>    link/ether 00:0c:29:79:b0:8a brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.179.139/24 brd 192.168.179.255 scope global eth1<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::20c:29ff:fe79:b08a/64 scope link <br>       valid_lft forever preferred_lft forever<br>root@ubuntu200404-1:/etc/netplan# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看网关</span><br>root@ubuntu200404-1:/etc/netplan# route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         192.168.179.2   0.0.0.0         UG    100    0        0 eth0<br>192.168.179.0   0.0.0.0         255.255.255.0   U     0      0        0 eth1<br>192.168.179.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0<br>192.168.179.2   0.0.0.0         255.255.255.255 UH    100    0        0 eth0<br>root@ubuntu200404-1:/etc/netplan# <br></code></pre></td></tr></table></figure><p><strong>查看DNS</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu2004</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># resolvectl status #Ubuntu 20.04新命令</span><br>root<span class="hljs-variable">@ubuntu1804</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># systemd-resolve --status</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件管理</title>
    <link href="/2022/08/08/%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/2022/08/08/%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="1、软件管理简介"><a href="#1、软件管理简介" class="headerlink" title="1、软件管理简介"></a>1、软件管理简介</h1><p>Redhat和Centos中软件管理是依靠软件包管理器(RPM)来实现的</p><p>RPM(Redhat Package Manager)软件包管理器提供了在Linux操作系统中安装、升级、卸载的方法，并提供对系统中的软件状态信息的查询；除了这些功能外，RPM软件包管理器还提供了制作软件包的功能</p><h1 id="2、软件包管理器简介"><a href="#2、软件包管理器简介" class="headerlink" title="2、软件包管理器简介"></a>2、软件包管理器简介</h1><h2 id="2-1-软件包管理器的职责"><a href="#2-1-软件包管理器的职责" class="headerlink" title="2.1 软件包管理器的职责"></a>2.1 软件包管理器的职责</h2><ul><li>将二进制文件、库文件、配置文件、帮助文件打包成一个文件</li><li>安装软件时按需将二进制、库文件、配置文件、帮助文件放到相应的位置</li><li>生成数据库，追踪所安装的每一个文件</li><li>软件卸载时根据安装时生成的数据库将相应的文件删除</li></ul><h2 id="2-2-软件包管理器的核心功能"><a href="#2-2-软件包管理器的核心功能" class="headerlink" title="2.2 软件包管理器的核心功能"></a>2.2 软件包管理器的核心功能</h2><ul><li>制作软件包</li><li>安装软件</li><li>卸载软件</li><li>升级软件</li><li>查询软件</li><li>校验软件</li></ul><h1 id="3、软件包简介"><a href="#3、软件包简介" class="headerlink" title="3、软件包简介"></a>3、软件包简介</h1><h2 id="3-1-软件包组成"><a href="#3-1-软件包组成" class="headerlink" title="3.1 软件包组成"></a>3.1 软件包组成</h2><ul><li>软件包的组成清单<ul><li>文件清单</li><li>安装或卸载的运行脚本</li></ul></li><li>数据库<ul><li>程序包名称及版本</li><li>依赖关系</li><li>功能说明</li><li>安装生成的各个文件的路径及校验码信息</li></ul></li></ul><h2 id="3-2-软件包分类"><a href="#3-2-软件包分类" class="headerlink" title="3.2 软件包分类"></a>3.2 软件包分类</h2><p><strong>源码格式</strong><br>特点：需要编译成二进制格式才能进行</p><ul><li>命名方式：name-VERSION.tar.gz<ul><li>VERSION：主版本号.次版本号.系统发行版本</li></ul></li></ul><p><strong>二进制格式</strong><br>特点：编译好的，安装之后可以直接运行</p><ul><li>软件的作者下载软件的源码，编译配置为二进制软件包</li><li>Redhat和Centos中使用的二进制包为rpm包</li></ul><p><strong>源码格式和二进制格式的区别</strong></p><ul><li>源码格式的包编译为二进制包时可以选择需要的特性，如果未选择，则编译后安装后的软件就不会有相应的功能</li><li>源码包在编译成为二进制包时可以实现软件功能的定制</li><li>二进制包的本版落后于源码包。</li></ul><h1 id="4、rpm简介"><a href="#4、rpm简介" class="headerlink" title="4、rpm简介"></a>4、rpm简介</h1><p>Redhat和Centos中二进制包的扩展包为.rpm，这是由红帽公司最先发布的一种用来打包软件的文件格式，我们叫做rpm包；RPM软件包管理器就是管理rpm包</p><p>4.1 rpm包命名规范</p><h1 id="5、软件包的获取途径"><a href="#5、软件包的获取途径" class="headerlink" title="5、软件包的获取途径"></a>5、软件包的获取途径</h1><h2 id="5-1-系统发行的光盘"><a href="#5-1-系统发行的光盘" class="headerlink" title="5.1 系统发行的光盘"></a>5.1 系统发行的光盘</h2><p>Linux的IOS镜像文件自带了非常多的系统扩展RPM安装包，且这些软件版本最适合当前Linux系统<br>IOS镜像文件自带的扩展RPM安装包的存放目录为：Packages<br>使用IOS镜像文件自带的扩展RPM安装包前必须先挂载ISO镜像，挂在方法如下：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># 创建挂载点，挂载光盘镜像到挂载点</span><br>[root@jlin ~]<span class="hljs-comment"># mkdir /mnt/cdrom</span><br>[root@jlin ~]<span class="hljs-comment"># mount /dev/sr0 /mnt/cdrom/</span><br><br><span class="hljs-comment"># 复制挂载点里面所有的文件到/media/目录，避免光盘断开连接就读取不到扩展RPM安装包</span><br>[root@jlin ~]<span class="hljs-comment"># cp -r /mnt/cdrom/ /media/</span><br>[root@jlin ~]<span class="hljs-comment"># cd /media/cdrom/</span><br>[root@jlin cdrom]<span class="hljs-comment"># ll</span><br>总用量 320<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root    <span class="hljs-number"> 14 </span>7月 <span class="hljs-number"> 10 </span>08:27 CentOS_BuildTag<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root    <span class="hljs-number"> 35 </span>7月 <span class="hljs-number"> 10 </span>08:27 EFI<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 227 </span>7月 <span class="hljs-number"> 10 </span>08:27 EULA<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 18009 </span>7月 <span class="hljs-number"> 10 </span>08:27 GPL<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root    <span class="hljs-number"> 57 </span>7月 <span class="hljs-number"> 10 </span>08:27 images<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root   <span class="hljs-number"> 198 </span>7月 <span class="hljs-number"> 10 </span>08:27 isolinux<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root    <span class="hljs-number"> 43 </span>7月 <span class="hljs-number"> 10 </span>08:27 LiveOS<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 221184 </span>7月 <span class="hljs-number"> 10 </span>08:29 Packages<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root  <span class="hljs-number"> 4096 </span>7月 <span class="hljs-number"> 10 </span>08:29 repodata<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 1690 </span>7月 <span class="hljs-number"> 10 </span>08:29 RPM-GPG-KEY-CentOS-7<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 1690 </span>7月 <span class="hljs-number"> 10 </span>08:29 RPM-GPG-KEY-CentOS-Testing-7<br>-r--r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 2883 </span>7月 <span class="hljs-number"> 10 </span>08:29 TRANS.TBL<br></code></pre></td></tr></table></figure><h2 id="5-2-开源镜像站"><a href="#5-2-开源镜像站" class="headerlink" title="5.2 开源镜像站"></a>5.2 开源镜像站</h2><p>开源镜像站上会存放RPM安装包</p><ul><li>阿里巴巴开源镜像站</li></ul><blockquote><p><a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com</a></p></blockquote><ul><li>网易开源镜像站</li></ul><blockquote><p><a href="http://mirrors.163.com/">http://mirrors.163.com</a></p></blockquote><ul><li>清华大学开源镜像站</li></ul><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn</a></p></blockquote><h2 id="5-3-搜索引擎"><a href="#5-3-搜索引擎" class="headerlink" title="5.3 搜索引擎"></a>5.3 搜索引擎</h2><p>有一些搜索引擎直接提供rpm包搜索功能</p><ul><li>rpmfind</li></ul><blockquote><p><a href="http://rpmfind.net/">http://rpmfind.net</a></p></blockquote><ul><li>rpm pbone</li></ul><blockquote><p><a href="http://rpm.pbone.net/">http://rpm.pbone.net</a></p></blockquote><ul><li>pkgs</li></ul><blockquote><p><a href="http://pkgs.org/">http://pkgs.org/</a></p></blockquote><h1 id="6、rpm包管理"><a href="#6、rpm包管理" class="headerlink" title="6、rpm包管理"></a>6、rpm包管理</h1><h2 id="6-1-RPM包安装"><a href="#6-1-RPM包安装" class="headerlink" title="6.1 RPM包安装"></a>6.1 RPM包安装</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">//</span> 语法：rpm -ivh <span class="hljs-string">/PATH/TO/PACKAGE_FILE</span> <span class="hljs-string">...</span><br><span class="hljs-string">//</span> 选项：<br>-i：安装<br>-v：显示详细信息<br>-h：显示安装进度条<br><span class="hljs-params">--test</span>：测试安装，但不真正执行安装过程<br><span class="hljs-params">--nodeps</span>：忽略依赖关系<br><span class="hljs-params">--force</span>：强行安装，可以实现重装或降级<br><span class="hljs-params">--replacepkgs</span>：重新安装，替换原有安装<br><span class="hljs-params">--oldpackage</span>：降级<br><span class="hljs-params">--nodigest</span>：不检查包的完整性<br><span class="hljs-params">--nosignature</span>：不检查报的来源合法性<br><span class="hljs-params">--noscripts</span>：不执行rpm包自带的四类脚本：<br><span class="hljs-params">--nopre</span>：不执行rpm包自带的preinstall脚本<br><span class="hljs-params">--nopost</span>：不执行rpm包自带的postinstall脚本<br><span class="hljs-params">--nopreun</span>：不执行rpm包自带的preuninstall脚本<br><span class="hljs-params">--nopostun</span>：不执行rpm包自带的postuninstall脚本<br>preinstall：安装过程开始之前运行的脚本，标记为%pre：<span class="hljs-params">--nopre</span><br>postinstall：安装过程完成之后运行的脚本，标记为%post：<span class="hljs-params">--nopost</span><br>preuninstall：卸载过程开始执行之前运行的脚本，标记为%preun：<span class="hljs-params">--nopreun</span><br>postunistall：写在过程完成之后运行的脚本，标记为%postrun：<span class="hljs-params">--nopostun</span><br><br><span class="hljs-string">//</span> 安装软件包，需要指定软件包绝对路径<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 在软件包所在目录下可以不指定绝对路径<br>[root@jlin ~]<span class="hljs-comment"># cd /mnt/cdrom/Packages/</span><br>[root@jlin Packages]<span class="hljs-comment"># rpm -ivh tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 测试一个软件包是否能在该系统上安装<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh --test /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 如果软件包已经安装，强制再次安装<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh --force /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 安装httpd服务需要依赖其他组件，使用<span class="hljs-params">--nodeps</span>可忽略以来强制安装<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh --nodeps /mnt/cdrom/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></code></pre></td></tr></table></figure><h2 id="6-2-RPM包查询"><a href="#6-2-RPM包查询" class="headerlink" title="6.2 RPM包查询"></a>6.2 RPM包查询</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 查询httpd的rpm包是否安装</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -q httpd</span><br><br><span class="hljs-comment">// 模糊查找系统已安装的rpm包</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qa | grep ftp</span><br><br><span class="hljs-comment">// 查询已安装的httpd软件包相关信息</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qi httpd</span><br><br><span class="hljs-comment">// 查询已安装的rpm包生成的文件</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -ql httpd</span><br><br><span class="hljs-comment">// 查询已安装的rpm包生成的配置文件</span><br>所有<br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qc httpd</span><br><br><span class="hljs-comment">// 查询配置文件或命令来自于哪个rpm包</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qf /etc/httpd/httpd.conf</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qf /usr/sbin/httpd</span><br><br><span class="hljs-comment">// 查询未安装的软件包会产生哪些文件</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qpl / mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br><br><span class="hljs-comment">// 查询未安装的软件包的说明信息</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qpi /mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></code></pre></td></tr></table></figure><h2 id="6-4-RPM包升级"><a href="#6-4-RPM包升级" class="headerlink" title="6.4 RPM包升级"></a>6.4 RPM包升级</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 升级tree软件包<br>[root@jlin ~]<span class="hljs-comment"># rpm -Uvh /mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></code></pre></td></tr></table></figure><h2 id="6-5-RPM包卸载"><a href="#6-5-RPM包卸载" class="headerlink" title="6.5 RPM包卸载"></a>6.5 RPM包卸载</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 先查询，然后卸载</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qa lgrep httpd</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -e httpd</span><br></code></pre></td></tr></table></figure><h2 id="6-6-RPM包校验"><a href="#6-6-RPM包校验" class="headerlink" title="6.6 RPM包校验"></a>6.6 RPM包校验</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 校验已经安装的软件包的文件是否被修改；如果执行以下命令无内容输出说明安装的软件<br>[root@jlin ~]<span class="hljs-comment"># rpm -v vsftpd</span><br><br>S <span class="hljs-comment">#文件的容量大小是否被改变</span><br>M <span class="hljs-comment">#文件的类型或者文件的属性是否被修改</span><br><span class="hljs-number">5</span> <span class="hljs-comment">#MD5加密的内容已经不同</span><br>D <span class="hljs-comment">#装置的主/次代码已经改变</span><br>L <span class="hljs-comment">#路径已经被改变</span><br>U <span class="hljs-comment">#文件的所属主已被修改</span><br>G <span class="hljs-comment">#文件的所属组已被修改</span><br>T <span class="hljs-comment">#文件的创建时间已被改变</span><br></code></pre></td></tr></table></figure><h2 id="6-7-RPM重建数据库"><a href="#6-7-RPM重建数据库" class="headerlink" title="6.7 RPM重建数据库"></a>6.7 RPM重建数据库</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 数据库信息在<span class="hljs-regexp">/var/</span>lib/rpm目录<br><br><span class="hljs-regexp">//</span> 重建数据库，重建Packages数据库，一定会重建<br>rpm --rebuilddb<br><br><span class="hljs-regexp">//</span> 初始化数据库，重建所有数据库，没有才建立，有就不建立<br>rpm --initdb<br></code></pre></td></tr></table></figure><h2 id="6-8-检查软件包来源合法性"><a href="#6-8-检查软件包来源合法性" class="headerlink" title="6.8 检查软件包来源合法性"></a>6.8 检查软件包来源合法性</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">加密类型:<br>对称加密 <span class="hljs-comment">#加密解密使用同一个密钥</span><br>公钥加密 <span class="hljs-comment">#一对密钥，公钥和私钥。公钥隐含于私钥中，可以提取出来并公布出去</span><br>单向加密 <span class="hljs-comment">#只能加密不能解密</span><br><br><span class="hljs-regexp">//</span> 红帽官方公钥存放位置<br><span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-redhat-release<br><br><span class="hljs-regexp">//</span> 检查指定rpm包合法性，出现oK字样表示包没问题<br>rpm -K PACKAGE_FILE<br><br><span class="hljs-regexp">//</span> 导入密钥文件<br>rpm --import <span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-redhat-release1<br><br>Centos <span class="hljs-number">7</span>发行版光盘提供的密钥文件名为:RPM-GPG-KEY-Centos-<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h1 id="7、yum和dnf"><a href="#7、yum和dnf" class="headerlink" title="7、yum和dnf"></a>7、yum和dnf</h1><p>CentOS 使用 yum, dnf 解决rpm的包依赖关系<br>YUM: Yellowdog Update Modifier，rpm的前端程序，可解决软件包相关依赖性，可在多个库之间定位<br>软件包，up2date的替代工具，CentOS 8 用dnf 代替了yum ,不过保留了和yum的兼容性，配置也是通<br>用的</p><h2 id="7-1-yum-x2F-dnf-工作原理"><a href="#7-1-yum-x2F-dnf-工作原理" class="headerlink" title="7.1 yum&#x2F;dnf 工作原理"></a>7.1 yum&#x2F;dnf 工作原理</h2><p><strong>yum&#x2F;dnf 是基于C&#x2F;S 模式</strong><br>yum 服务器存放rpm包和相关包的元数据库<br>yum 客户端访问yum服务器进行安装或查询等<br><strong>yum 实现过程</strong><br>先在yum服务器上创建 yum repository（仓库），在仓库中事先存储了众多rpm包，以及包的相关的<br>元数据文件（放置于特定目录repodata下），当yum客户端利用yum&#x2F;dnf工具进行安装时包时，会自动<br>下载repodata中的元数据，查询远数据是否存在相关的包及依赖关系，自动从仓库中找到相关包下载并<br>安装。</p><h2 id="7-2-yum客户端配置"><a href="#7-2-yum客户端配置" class="headerlink" title="7.2 yum客户端配置"></a>7.2 yum客户端配置</h2><p><strong>yum客户端配置文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/yum</span>.conf <span class="hljs-comment">#为所有仓库提供公共配置</span><br><span class="hljs-regexp">/etc/yum</span>.repos.d/*.repo： <span class="hljs-comment">#为每个仓库的提供配置文件</span><br></code></pre></td></tr></table></figure><p><strong>帮助参考： man 5 yum.conf</strong><br><strong>repo仓库配置文件指向的定义：</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[repositoryID]<br>name=Some name for this repository<br>baseurl=url://path/to/repository/<br>enabled=&#123;1|0&#125;<br>gpgcheck=&#123;1|0&#125;<br>gpgkey=URL<br>enablegroups=&#123;1|0&#125;<br>failovermethod=&#123;roundrobin|priority&#125;<br>roundrobin：意为随机挑选，默认值<br><span class="hljs-section">priority:按顺序访问</span><br>cost= 默认为1000<br></code></pre></td></tr></table></figure><p><strong>yum服务器的baseurl形式</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">file:<span class="hljs-regexp">//</span> 本地路径<br>http:<span class="hljs-regexp">//</span><br>https:<span class="hljs-regexp">//</span><br>ftp:<span class="hljs-regexp">//</span><br></code></pre></td></tr></table></figure><p><strong>注意：yum仓库指向的路径一定必须是repodata目录所在目录</strong><br><strong>相关变量</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">yum的repo配置文件中可用的变量：<br><span class="hljs-meta"><span class="hljs-keyword">$releasever</span>: 当前OS的发行版的主版本号，如：8，7，6</span><br><span class="hljs-meta"><span class="hljs-keyword">$arch</span>: CPU架构，如：aarch64, i586, i686，x86_64等</span><br><span class="hljs-meta"><span class="hljs-keyword">$basearch</span>：系统基础平台；i386, x86_64</span><br><span class="hljs-meta"><span class="hljs-keyword">$contentdir</span>：表示目录，比如：centos-8，centos-7</span><br><span class="hljs-meta"><span class="hljs-keyword">$YUM0</span>-$YUM9:自定义变量</span><br></code></pre></td></tr></table></figure><h2 id="7-3-yum命令"><a href="#7-3-yum命令" class="headerlink" title="7.3 yum命令"></a>7.3 yum命令</h2><p><strong>yum命令的用法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">yum <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[command]</span> <span class="hljs-selector-attr">[package ...]</span><br></code></pre></td></tr></table></figure><p><strong>yum的命令行选项</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>y <span class="hljs-comment">#自动回答为&quot;yes&quot;</span><br><span class="hljs-literal">-</span>q <span class="hljs-comment">#静默模式</span><br><span class="hljs-literal">-</span>-nogpgcheck <span class="hljs-comment">#禁止进行gpg check</span><br><span class="hljs-literal">-</span>-enablerepo=repoidglob <span class="hljs-comment">#临时启用此处指定的repo，支持通配符，如：&quot;*&quot;</span><br><span class="hljs-literal">-</span>-disablerepo=repoidglob <span class="hljs-comment">#临时禁用此处指定的repo,和上面语句同时使用，放在后面的生效</span><br></code></pre></td></tr></table></figure><h3 id="7-3-1-显示仓库列表"><a href="#7-3-1-显示仓库列表" class="headerlink" title="7.3.1 显示仓库列表"></a>7.3.1 显示仓库列表</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">yum repolist [all|<span class="hljs-type">enabled</span>|<span class="hljs-type">disabled</span>]<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><p><img src="/../image.assets/1660220348105.png" alt="1660220348105"></p><h3 id="7-3-2-显示程序包"><a href="#7-3-2-显示程序包" class="headerlink" title="7.3.2 显示程序包"></a>7.3.2 显示程序包</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">yum list<br>yum list <span class="hljs-comment">[all | glob_exp1]</span> <span class="hljs-comment">[glob_exp2]</span> <span class="hljs-comment">[...]</span><br>yum list &#123;available|installed|updates&#125; <span class="hljs-comment">[glob_exp1]</span> <span class="hljs-comment">[...]</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">yum list<br>yum list <span class="hljs-comment">[all | glob_exp1]</span> <span class="hljs-comment">[glob_exp2]</span> <span class="hljs-comment">[...]</span><br>yum list &#123;available|installed|updates&#125; <span class="hljs-comment">[glob_exp1]</span> <span class="hljs-comment">[...]</span><br></code></pre></td></tr></table></figure><p><strong>范例：只查看安装的包</strong></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@rocky</span> ~]# yum list installed|head<br>Installed Packages<br>NetworkManager.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-config-server.noarch  <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-libnm.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>          <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-team.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>           <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-tui.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>            <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>acl.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                           <span class="hljs-number">2.2</span>.<span class="hljs-number">53</span><span class="hljs-number">-1</span>.el<span class="hljs-number">8.1</span>                    <span class="hljs-title">@anaconda</span><br>adcli.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                         <span class="hljs-number">0.8</span>.<span class="hljs-number">2</span><span class="hljs-number">-12</span>.el<span class="hljs-number">8</span>                      <span class="hljs-title">@anaconda</span><br>alsa-sof-firmware.noarch             <span class="hljs-number">1.8</span><span class="hljs-number">-1</span>.el<span class="hljs-number">8</span>                         <span class="hljs-title">@anaconda</span><br>at.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                            <span class="hljs-number">3.1</span>.<span class="hljs-number">20</span><span class="hljs-number">-11</span>.el<span class="hljs-number">8</span>                     <span class="hljs-title">@anaconda</span><br>[root<span class="hljs-title">@rocky</span> ~]# <br></code></pre></td></tr></table></figure><p><strong>范例：查看可以安装的包</strong></p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@rocky ~]# yum list available | head<br>Last metadata expiration check: 2:21:04 ago on Tue 09 Aug 2022 09:50:19 AM CST.<br>Available Packages<br>CUnit.i686                                             2.1.3<span class="hljs-string">-17</span>.el8                                              appstream<br>CUnit.x86_64                                           2.1.3<span class="hljs-string">-17</span>.el8                                              appstream<br>GConf2.i686                                            3.2.6<span class="hljs-string">-22</span>.el8                                              appstream<br>GConf2.x86_64                                          3.2.6<span class="hljs-string">-22</span>.el8                                              appstream<br>HdrHistogram.noarch                                    2.1.11<span class="hljs-string">-3</span>.module+el8.4.0<span class="hljs-string">+405</span><span class="hljs-string">+66</span>dfe7da                      appstream<br>HdrHistogram-javadoc.noarch                            2.1.11<span class="hljs-string">-3</span>.module+el8.4.0<span class="hljs-string">+405</span><span class="hljs-string">+66</span>dfe7da                      appstream<br>HdrHistogram_c.i686                                    0.9.13<span class="hljs-string">-2</span>.el8                                              appstream<br>HdrHistogram_c.x86_64                                  0.9.13<span class="hljs-string">-2</span>.el8                                              appstream<br>[root@rocky ~]# <br><br></code></pre></td></tr></table></figure><p><strong>范例：查看可以升级的包</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yum list updates</span><br></code></pre></td></tr></table></figure><p><strong>范例：查看指定的包</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#yum list exim</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>磁盘存储和文件系统管理</title>
    <link href="/2022/08/07/Disk/"/>
    <url>/2022/08/07/Disk/</url>
    
    <content type="html"><![CDATA[<h1 id="磁盘管理与文件系统"><a href="#磁盘管理与文件系统" class="headerlink" title="磁盘管理与文件系统"></a>磁盘管理与文件系统</h1><p><strong>前言</strong><br>磁盘是计算机主要的存储介质，可以存储大量的二进制数据，并且断电后也能保持数据不丢失，使用磁盘存储数据的时候我们可以将磁盘划分成我们所需要的格式来进行使用</p><h1 id="1-磁盘结构"><a href="#1-磁盘结构" class="headerlink" title="1. 磁盘结构"></a>1. 磁盘结构</h1><p><strong>1、硬盘的物理结构</strong><br>盘片：硬盘有多个盘片，每个盘片有2面<br>磁头：每面有一个磁头</p><p><strong>2.硬盘数据结构</strong><br>扇区：磁盘上的每个磁道被等分为若干个弧段，这些弧段便是硬盘的扇区。硬盘的第一个扇区，叫做引导扇区 ，盘片被分为多个扇形区域，每个扇区存放512字节的数据，是硬盘最小的存储单元<br>磁道：当磁盘旋转时，磁头若保持在一个位置上，则每个磁头都会在磁盘表面划出一个圆形轨迹，这些圆形轨迹就叫做磁道<br>柱面：在有多个盘片构成的盘组中，由不同盘片的面，但处于同一半径圆的多个磁道组成的一个圆柱面</p><p><strong>3、磁盘结构</strong><br>硬盘存储容量 &#x3D; 磁头数 x 磁道（柱面）数 x 每道扇区数 x 每扇区字节数（512字节）<br>可以用柱面&#x2F;磁头&#x2F;扇区来唯一定位磁盘上的每一个区域<br>磁盘的接口类型：IDE、SATA、SCSI、SAS、光纤通道<br>用 fdisk -l 查看分区信息</p><h1 id="2-管理存储"><a href="#2-管理存储" class="headerlink" title="2. 管理存储"></a>2. 管理存储</h1><h2 id="2-1-磁盘分区"><a href="#2-1-磁盘分区" class="headerlink" title="2.1 磁盘分区"></a>2.1 磁盘分区</h2><h3 id="2-1-1-为什么分区"><a href="#2-1-1-为什么分区" class="headerlink" title="2.1.1 为什么分区"></a>2.1.1 为什么分区</h3><ul><li>优化I&#x2F;O性能</li><li>实现磁盘空间配额限制</li><li>提高修复速度</li><li>隔离系统和程序</li><li>安装多个OS</li><li>采用不同文件系统</li></ul><h3 id="2-1-2-分区方式"><a href="#2-1-2-分区方式" class="headerlink" title="2.1.2 分区方式"></a>2.1.2 分区方式</h3><p>两种分区方式：MBR，GPT</p><p><strong>MBR分区</strong></p><p>MBR：Master Boot Record，1982年，使用32位表示扇区数，分区不超过2T<br>划分分区的单位：<br>CentOS 5 之前按整柱面划分<br>CentOS 6 版本后可以按Sector划分<br>0磁道0扇区：512bytes<br>446bytes: boot loader 启动相关<br>64bytes：分区表，其中每16bytes标识一个分区<br>2bytes: 55AA，标识位<br>MBR分区中一块硬盘最多有4个主分区，也可以3主分区+1扩展(N个逻辑分区)<br>MBR分区：主和扩展分区对应的1–4，&#x2F;dev&#x2F;sda3，逻辑分区从5开始，&#x2F;dev&#x2F;sda5</p><p>问题：利用分区策略相同的另一台主机的分区表来还原和恢复当前主机破环的分区表？</p><p><strong>GPT分区</strong><br>GPT：GUID（Globals Unique Identifiers） partition table 支持128个分区，使用64位，支持8Z（<br>512Byte&#x2F;block ）64Z （ 4096Byte&#x2F;block）<br>使用128位UUID(Universally Unique Identifier) 表示磁盘和分区 GPT分区表自动备份在头和尾两份，<br>并有CRC校验位<br>UEFI (Unified Extensible Firmware Interface 统一可扩展固件接口)硬件支持GPT，使得操作系统可以<br>启动</p><p><strong>GPT分区结构分为4个区域：</strong></p><ul><li>GPT头</li><li>分区表</li><li>GPT分区</li><li>备份区域</li></ul><h2 id="2-2-管理分区"><a href="#2-2-管理分区" class="headerlink" title="2.2 管理分区"></a>2.2 管理分区</h2><p><strong>列出块设备</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lsblk</span><br></code></pre></td></tr></table></figure><p><strong>创建分区命令</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">fdisk</span> 管理MBR分区<br>gdisk 管理GPT分区<br>parted 高级分区操作，可以是交互或非交互方式<br></code></pre></td></tr></table></figure><p><strong>重新设置内存中的内核分区表版本，适合于除了CentOS 6 以外的其它版本 5，7，8</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">partprobe</span><br></code></pre></td></tr></table></figure><h3 id="2-2-1-添加并检测新硬盘"><a href="#2-2-1-添加并检测新硬盘" class="headerlink" title="2.2.1 添加并检测新硬盘"></a>2.2.1 添加并检测新硬盘</h3><p>1、添加新硬盘使用lsblk命令显示出块设备</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@ubuntu200404:~<span class="hljs-comment"># lsblk</span><br>NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>loop0                       7:0   <span class="hljs-number"> 0 </span>61.9M <span class="hljs-number"> 1 </span>loop /snap/core20/1328<br>loop1                       7:1   <span class="hljs-number"> 0 </span>67.2M <span class="hljs-number"> 1 </span>loop /snap/lxd/21835<br>loop2                       7:2   <span class="hljs-number"> 0 </span>  62M <span class="hljs-number"> 1 </span>loop /snap/core20/1587<br>loop3                       7:3   <span class="hljs-number"> 0 </span>43.6M <span class="hljs-number"> 1 </span>loop /snap/snapd/14978<br>loop4                       7:4   <span class="hljs-number"> 0 </span>  47M <span class="hljs-number"> 1 </span>loop /snap/snapd/16292<br>loop5                       7:5   <span class="hljs-number"> 0 </span>67.8M <span class="hljs-number"> 1 </span>loop /snap/lxd/22753<br>sda                         8:0   <span class="hljs-number"> 0 </span>  20G <span class="hljs-number"> 0 </span>disk <br>├─sda1                      8:1   <span class="hljs-number"> 0 </span>   1M <span class="hljs-number"> 0 </span>part <br>├─sda2                      8:2   <span class="hljs-number"> 0 </span> 1.5G <span class="hljs-number"> 0 </span>part /boot<br>└─sda3                      8:3   <span class="hljs-number"> 0 </span>18.5G <span class="hljs-number"> 0 </span>part <br>  └─ubuntu--vg-ubuntu--lv 253:0   <span class="hljs-number"> 0 </span>  10G <span class="hljs-number"> 0 </span>lvm  /<br>sr0                        11:0   <span class="hljs-number"> 1 </span> 1.2G <span class="hljs-number"> 0 </span>rom <br></code></pre></td></tr></table></figure><p>发现并没有检测出来新添加的硬盘</p><p> 2、检测新硬盘</p><p>方法1：可以重启电脑</p><p>方法2： 重新扫描存储设备的scsi总线 </p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># host后面的数字不是固定的，以实际为准<br>root@ubuntu200404:~# echo <span class="hljs-string">&#x27;- - -&#x27;</span> &gt; <span class="hljs-regexp">/sys/</span><span class="hljs-keyword">class</span><span class="hljs-regexp">/scsi_host/</span>host32/scan<br></code></pre></td></tr></table></figure><p>再次使用lsblk命令查看发现已经多了sda的硬盘，说明成功了</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@ubuntu200404:~<span class="hljs-comment"># lsblk</span><br>NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>loop0                       7:0   <span class="hljs-number"> 0 </span>61.9M <span class="hljs-number"> 1 </span>loop /snap/core20/1328<br>loop1                       7:1   <span class="hljs-number"> 0 </span>67.2M <span class="hljs-number"> 1 </span>loop /snap/lxd/21835<br>loop2                       7:2   <span class="hljs-number"> 0 </span>  62M <span class="hljs-number"> 1 </span>loop /snap/core20/1587<br>loop3                       7:3   <span class="hljs-number"> 0 </span>43.6M <span class="hljs-number"> 1 </span>loop /snap/snapd/14978<br>loop4                       7:4   <span class="hljs-number"> 0 </span>  47M <span class="hljs-number"> 1 </span>loop /snap/snapd/16292<br>loop5                       7:5   <span class="hljs-number"> 0 </span>67.8M <span class="hljs-number"> 1 </span>loop /snap/lxd/22753<br>sda                         8:0   <span class="hljs-number"> 0 </span>  20G <span class="hljs-number"> 0 </span>disk <br>├─sda1                      8:1   <span class="hljs-number"> 0 </span>   1M <span class="hljs-number"> 0 </span>part <br>├─sda2                      8:2   <span class="hljs-number"> 0 </span> 1.5G <span class="hljs-number"> 0 </span>part /boot<br>└─sda3                      8:3   <span class="hljs-number"> 0 </span>18.5G <span class="hljs-number"> 0 </span>part <br>  └─ubuntu--vg-ubuntu--lv 253:0   <span class="hljs-number"> 0 </span>  10G <span class="hljs-number"> 0 </span>lvm  /<br>sdb                         8:16  <span class="hljs-number"> 0 </span>  20G <span class="hljs-number"> 0 </span>disk<span class="hljs-comment"># 新添加的硬盘 </span><br>sr0                        11:0   <span class="hljs-number"> 1 </span> 1.2G <span class="hljs-number"> 0 </span>rom<br></code></pre></td></tr></table></figure><h3 id="2-2-2-partend命令"><a href="#2-2-2-partend命令" class="headerlink" title="2.2.2 partend命令"></a>2.2.2 partend命令</h3><p><strong>注意：parted的操作都是实时生效的，小心使用</strong></p><p>格式:</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">parted <span class="hljs-comment">[选项]</span>... <span class="hljs-comment">[设备 <span class="hljs-comment">[命令 <span class="hljs-comment">[参数]</span>...]</span>...]</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">parted /dev/sdb mklabel gpt|msdos<br>parted /dev/sdb print<br>parted /dev/sdb mkpart primary 1 200 （默认M）<br>parted /dev/sdb rm 1<br>parted -l 列出所有硬盘分区信息<br></code></pre></td></tr></table></figure><h3 id="2-2-3-分区工具fdisk和gdisk"><a href="#2-2-3-分区工具fdisk和gdisk" class="headerlink" title="2.2.3 分区工具fdisk和gdisk"></a>2.2.3 分区工具fdisk和gdisk</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">fdisk -l [-u] [device.<span class="hljs-string">..</span>] 查看分区<br>fdisk [device.<span class="hljs-string">..</span>] 管理MBR分区<br>gdisk [device.<span class="hljs-string">..</span>] 类fdisk 的GPT分区工具<br><br><span class="hljs-comment"># 范例：</span><br>fdisk <span class="hljs-string">/dev/sdb</span><br></code></pre></td></tr></table></figure><p><strong>子命令：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> 分区列表<br>t 更改分区类型<br>n 创建新分区<br>d 删除分区<br>v 校验分区<br>u 转换单位<br>w 保存并退出<br><span class="hljs-selector-tag">q</span> 不保存并退出<br></code></pre></td></tr></table></figure><p><strong>查看内核是否已经识别新的分区</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>partitions<br></code></pre></td></tr></table></figure><p><strong>CentOS 7,8 同步分区表:</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">partprobe</span><br></code></pre></td></tr></table></figure><h2 id="2-3-文件系统"><a href="#2-3-文件系统" class="headerlink" title="2.3 文件系统"></a>2.3 文件系统</h2><h3 id="2-3-1-文件系统概念"><a href="#2-3-1-文件系统概念" class="headerlink" title="2.3.1 文件系统概念"></a>2.3.1 文件系统概念</h3><p>文件系统是操作系统用于明确存储设备或分区上的文件的方法和数据结构；即在存储设备上组织文件的<br>方法。操作系统中负责管理和存储文件信息的软件结构称为文件管理系统，简称文件系统<br>从系统角度来看，文件系统是对文件存储设备的空间进行组织和分配，负责文件存储并对存入的文件进<br>行保护和检索的系统。具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的<br>存取，安全控制，日志，压缩，加密等<br>支持的文件系统：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/lib/m</span>odules<span class="hljs-regexp">/`uname -r`/</span>kernel/fs<br></code></pre></td></tr></table></figure><p>(各种文件系统)[<a href="https://en.wikipedia.org/wiki/Comparison_of_file_systems]">https://en.wikipedia.org/wiki/Comparison_of_file_systems]</a></p><p><strong>帮助：</strong>man 5 fs</p><h3 id="2-3-2-文件系统类型"><a href="#2-3-2-文件系统类型" class="headerlink" title="2.3.2 文件系统类型"></a>2.3.2 文件系统类型</h3><p><strong>Linux常用文件系统</strong></p><ul><li>ext2：Extended file system 适用于那些分区容量不是太大，更新也不频繁的情况，例如 &#x2F;boot 分<br>区</li><li>ext3：是 ext2 的改进版本，其支持日志功能，能够帮助系统从非正常关机导致的异常中恢复</li><li>ext4：是 ext 文件系统的最新版。提供了很多新的特性，包括纳秒级时间戳、创建和使用巨型文件<br>(16TB)、最大1EB的文件系统，以及速度的提升</li><li>xfs：SGI，支持最大8EB的文件系统</li><li>swap</li><li>iso9660 光盘</li><li>btrfs（Oracle）</li><li>reiserfs</li></ul><p><strong>Windows 常用文件系统</strong></p><ul><li>FAT32</li><li>NTFS</li><li>exFAT</li><li>Unix：</li><li>FFS（fast）</li><li>UFS（unix）</li><li>JFS2</li></ul><p><strong>网络文件系统：</strong></p><ul><li>NFS</li><li>CIFS</li></ul><p><strong>集群文件系统：</strong></p><ul><li>GFS2</li><li>OCFS2（oracle）</li></ul><p><strong>分布式文件系统：</strong></p><ul><li>fastdfs</li><li>ceph</li><li>moosefs</li><li>mogilefs</li><li>glusterfs</li><li>Lustre</li></ul><p><strong>RAW：</strong></p><p>裸文件系统,未经处理或者未经格式化产生的文件系统<br>常用的文件系统特性：</p><p><strong>FAT32</strong></p><ul><li>最多只能支持16TB的文件系统和4GB的文件</li></ul><p><strong>NTFS</strong></p><ul><li>最多只能支持16EB的文件系统和16EB的文件</li></ul><p><strong>EXT3</strong></p><ul><li>最多只能支持32TB的文件系统和2TB的文件，实际只能容纳2TB的文件系统和16GB的文件</li><li>Ext3目前只支持32000个子目录</li><li>Ext3文件系统使用32位空间记录块数量和 inode数量</li><li>当数据写入到Ext3文件系统中时，Ext3的数据块分配器每次只能分配一个4KB的块</li></ul><p><strong>EXT4：</strong></p><ul><li>EXT4是Linux系统下的日志文件系统，是EXT3文件系统的后继版本</li><li>Ext4的文件系统容量达到1EB，而支持单个文件则达到16TB</li><li>理论上支持无限数量的子目录</li><li>Ext4文件系统使用64位空间记录块数量和 inode数量</li><li>Ext4的多块分配器支持一次调用分配多个数据块</li><li>修复速度更快</li></ul><p><strong>XFS</strong></p><ul><li>根据所记录的日志在很短的时间内迅速恢复磁盘文件内容</li><li>用优化算法，日志记录对整体文件操作影响非常小</li><li>是一个全64-bit的文件系统，最大可以支持8EB的文件系统，而支持单个文件则达到8EB</li><li>能以接近裸设备I&#x2F;O的性能存储数据</li></ul><p><strong>查前支持的文件系统：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>filesystems<br></code></pre></td></tr></table></figure><h3 id="2-3-3-文件系统的组成部分"><a href="#2-3-3-文件系统的组成部分" class="headerlink" title="2.3.3 文件系统的组成部分"></a>2.3.3 文件系统的组成部分</h3><p>内核中的模块：ext4, xfs, vfat<br>Linux的虚拟文件系统：VFS<br>用户空间的管理工具：mkfs.ext4, mkfs.xfs,mkfs.vfat</p><h3 id="2-3-4-文件系统选择管理"><a href="#2-3-4-文件系统选择管理" class="headerlink" title="2.3.4 文件系统选择管理"></a>2.3.4 文件系统选择管理</h3><h4 id="2-3-4-1-创建文件系统"><a href="#2-3-4-1-创建文件系统" class="headerlink" title="2.3.4.1 创建文件系统"></a>2.3.4.1 创建文件系统</h4><p><strong>创建文件管理工具</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs命令：<br>(<span class="hljs-number">1</span>) mkfs.FS_TYPE <span class="hljs-regexp">/dev/</span>DEVICE<br>ext4<br>xfs<br>btrfs<br>vfat<br>(<span class="hljs-number">2</span>) mkfs -t FS_TYPE <span class="hljs-regexp">/dev/</span>DEVICE<br>-L <span class="hljs-string">&#x27;LABEL&#x27;</span> 设定卷标<br>mke2fs：ext系列文件系统专用管理工具<br></code></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>t &#123;ext2|ext3|ext4|xfs&#125; 指定文件系统类型<br><span class="hljs-literal">-</span>b &#123;1024|2048|4096&#125; 指定块 block 大小<br><span class="hljs-literal">-</span>L ‘LABEL’ 设置卷标<br><span class="hljs-literal">-</span>j 相当于 -t ext3， mkfs.ext3 = mkfs -t ext3 = mke2fs -j = mke2fs -t ext3<br><span class="hljs-literal">-</span>i <span class="hljs-comment"># 为数据空间中每多少个字节创建一个inode；不应该小于block大</span><br>小<br><span class="hljs-literal">-</span>N <span class="hljs-comment"># 指定分区中创建多少个inode</span><br><span class="hljs-literal">-</span>I 一个inode记录占用的磁盘空间大小，128---4096<br><span class="hljs-literal">-</span>m <span class="hljs-comment"># 默认5%,为管理人员预留空间占总空间的百分比</span><br><span class="hljs-literal">-</span>O FEATURE[,...] 启用指定特性<br><span class="hljs-literal">-</span>O ^FEATURE <br></code></pre></td></tr></table></figure><p><strong>案例：mkfs.ext4 &#x2F;dev&#x2F;sdb1</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">root</span>@ubuntu200404:~# mkfs.ext4 /dev/sdb1<br><span class="hljs-attribute">mke2fs</span> <span class="hljs-number">1</span>.<span class="hljs-number">45</span>.<span class="hljs-number">5</span> (<span class="hljs-number">07</span>-Jan-<span class="hljs-number">2020</span>)<br><span class="hljs-attribute">Creating</span> filesystem with <span class="hljs-number">2621440</span> <span class="hljs-number">4</span>k blocks and <span class="hljs-number">655360</span> inodes<br><span class="hljs-attribute">Filesystem</span> UUID: a7ef4142-<span class="hljs-number">26</span>e5-<span class="hljs-number">43</span>dd-b9d0-<span class="hljs-number">24</span>c4d09155a1<br><span class="hljs-attribute">Superblock</span> backups stored <span class="hljs-literal">on</span> blocks: <br><span class="hljs-attribute">32768</span>, <span class="hljs-number">98304</span>, <span class="hljs-number">163840</span>, <span class="hljs-number">229376</span>, <span class="hljs-number">294912</span>, <span class="hljs-number">819200</span>, <span class="hljs-number">884736</span>, <span class="hljs-number">1605632</span><br><br><span class="hljs-attribute">Allocating</span> group tables: done                            <br><span class="hljs-attribute">Writing</span> inode tables: done                            <br><span class="hljs-attribute">Creating</span> journal (<span class="hljs-number">16384</span> blocks): done<br><span class="hljs-attribute">Writing</span> superblocks and filesystem accounting information: done <br><br><span class="hljs-attribute">root</span>@ubuntu200404:~# <br></code></pre></td></tr></table></figure><h4 id="2-3-4-2-查看和管理分区信息"><a href="#2-3-4-2-查看和管理分区信息" class="headerlink" title="2.3.4.2 查看和管理分区信息"></a>2.3.4.2 查看和管理分区信息</h4><p>blkid 可以查看块设备属性信息<br>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">blkid <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[DEVICE]</span><br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">-U UUID 根据指定的UUID来查找对应的设备<br>-L <span class="hljs-selector-tag">LABEL</span> 根据指定的<span class="hljs-selector-tag">LABEL</span>来查找对应的设备<br>e2label：管理ext系列文件系统的<span class="hljs-selector-tag">LABEL</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">e2label</span> DEVICE<span class="hljs-meta"> [LABEL]</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># blkid /dev/sdb1</span><br>/dev/<span class="hljs-symbol">sdb1:</span> <span class="hljs-title class_">UUID</span>=<span class="hljs-string">&quot;a7ef4142-26e5-43dd-b9d0-24c4d09155a1&quot;</span> <span class="hljs-title class_">TYPE</span>=<span class="hljs-string">&quot;ext4&quot;</span> <span class="hljs-title class_">PARTUUID</span>=<span class="hljs-string">&quot;db60ac71-01&quot;</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>查找分区</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">findfs [<span class="hljs-keyword">options</span>] LABEL=&lt;label&gt;<br>findfs [<span class="hljs-keyword">options</span>] <span class="hljs-type">UUID</span>=&lt;<span class="hljs-type">uuid</span>&gt;<br></code></pre></td></tr></table></figure><p><strong>tune2fs：重新设定ext系列文件系统可调整参数的值</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>l 查看指定文件系统超级块信息；super block<br><span class="hljs-literal">-</span>L &#x27;LABEL’ 修改卷标<br><span class="hljs-literal">-</span>m <span class="hljs-comment"># 修预留给管理员的空间百分比</span><br><span class="hljs-literal">-</span>j 将ext2升级为ext3<br><span class="hljs-literal">-</span>O 文件系统属性启用或禁用, -O ^has_journal<br><span class="hljs-literal">-</span>o 调整文件系统的默认挂载选项，-o ^acl<br><span class="hljs-literal">-</span>U UUID 修改UUID号<br></code></pre></td></tr></table></figure><p><strong>dumpe2fs：显示ext文件系统信息，将磁盘块分组管理</strong><br>-h：查看超级块信息，不显示分组信息</p><p><strong>范例：查看ext文件系统的元数据和块组信息</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs nsis">root@ubuntu200404:~<span class="hljs-comment"># dumpe2fs /dev/sdb1</span><br>dumpe2fs <span class="hljs-number">1.45</span>.<span class="hljs-number">5</span> (<span class="hljs-number">07</span>-Jan-<span class="hljs-number">2020</span>)<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> volume <span class="hljs-keyword">name</span>:   &lt;<span class="hljs-literal">none</span>&gt;<br>Last mounted <span class="hljs-literal">on</span>:          &lt;not available&gt;<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> UUID:          a7ef4142-<span class="hljs-number">26</span>e5-<span class="hljs-number">43</span>dd-b9d0-<span class="hljs-number">24</span>c4d09155a1<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> magic number:  <span class="hljs-number">0</span>xEF53<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> revision <span class="hljs-comment">#:    1 (dynamic)</span><br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> features:      has_journal ext_attr resize_inode dir_index filetype extent <span class="hljs-number">64</span>bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> flags:         signed_directory_hash <br>Default mount options:    user_xattr acl<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> state:         clean<br>Errors behavior:          Continue<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> OS type:       Linux<br>Inode count:              <span class="hljs-number">655360</span><br>Block count:              <span class="hljs-number">2621440</span><br>Reserved block count:     <span class="hljs-number">131072</span><br>Free blocks:              <span class="hljs-number">2554687</span><br>Free inodes:              <span class="hljs-number">655349</span><br>First block:              <span class="hljs-number">0</span><br>......<br>......<br>......<br></code></pre></td></tr></table></figure><p><strong>xfs_info：显示示挂载或已挂载的 xfs 文件系统信息</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">xfs_info mountpoint<span class="hljs-string">|devname</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">xfs_info <span class="hljs-regexp">/dev/</span>sda1<br></code></pre></td></tr></table></figure><h4 id="2-3-4-3-文件系统检测和修复"><a href="#2-3-4-3-文件系统检测和修复" class="headerlink" title="2.3.4.3 文件系统检测和修复"></a>2.3.4.3 文件系统检测和修复</h4><p>文件系统夹故障常发生于死机或者非正常关机之后，挂载为文件系统标记为“no clean”<br><strong>注意：一定不要在挂载状态下执行下面命令修复</strong></p><p>fsck: File System Check</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">fsck.FS<span class="hljs-emphasis">_TYPE</span><br><span class="hljs-emphasis">fsck -t FS_</span>TYPE<br></code></pre></td></tr></table></figure><p><strong>注意：FS_TYPE 一定要与分区上已经文件类型相同</strong></p><p><strong>常用选项</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a 自动修复</span><br><span class="hljs-deletion">-r 交互式修复错误</span><br></code></pre></td></tr></table></figure><p><strong>e2fsck：ext系列文件专用的检测修复工具</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-y 自动回答为yes</span><br><span class="hljs-deletion">-f 强制修复</span><br><span class="hljs-deletion">-p 自动进行安全的修复文件系统问题</span><br></code></pre></td></tr></table></figure><p><strong>用法：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">e2fsck <span class="hljs-regexp">/dev/</span>sdb2<br></code></pre></td></tr></table></figure><p><strong>xfs_repair：xfs文件系统专用检测修复工具</strong><br><strong>常用选项：</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-f 修复文件，而设备</span><br><span class="hljs-deletion">-n 只检查</span><br><span class="hljs-deletion">-d 允许修复只读的挂载设备，在单用户下修复 / 时使用，然后立即reboot</span><br></code></pre></td></tr></table></figure><p><strong>用法：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">xfs_repair <span class="hljs-regexp">/dev/</span>sda1 <br></code></pre></td></tr></table></figure><h2 id="2-4-挂载"><a href="#2-4-挂载" class="headerlink" title="2.4 挂载"></a>2.4 挂载</h2><p>挂载:将额外文件系统与根文件系统某现存的目录建立起关联关系，进而使得此目录做为其它文件访问入<br>口的行为<br>卸载:为解除此关联关系的过程<br>把设备关联挂载点：mount Point<br>挂载点下原有文件在挂载完成后会被临时隐藏，因此，挂载点目录一般为空<br>进程正在使用中的设备无法被卸载</p><h3 id="2-4-1-挂载文件系统-mount"><a href="#2-4-1-挂载文件系统-mount" class="headerlink" title="2.4.1 挂载文件系统 mount"></a>2.4.1 挂载文件系统 mount</h3><p><strong>格式</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mount <span class="hljs-selector-attr">[-fnrsvw]</span> <span class="hljs-selector-attr">[-t vfstype]</span> <span class="hljs-selector-attr">[-o options]</span> device mountpoint<br></code></pre></td></tr></table></figure><p>device：指明要挂载的设备</p><ul><li>设备文件：例如:&#x2F;dev&#x2F;sda5</li><li>卷标：-L ‘LABEL’, 例如 -L ‘MYDATA’</li><li>UUID： -U ‘UUID’：例如 -U ‘0c50523c-43f1-45e7-85c0-a126711d406e’</li><li>伪文件系统名称：proc, sysfs, devtmpfs, configfs</li></ul><p>mountpoint：挂载点目录必须事先存在，建议使用空目录<br>mount 常用命令选项  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">-t fstype 指定要挂载的设备上的文件系统类型,如:ext4,xfs<br>-r <span class="hljs-built_in">readonly</span>，只读挂载<br>-w <span class="hljs-built_in">read</span> and write, 读写挂载,此为默认设置,可省略<br>-n 不更新/etc/mtab，mount不可见<br>-a 自动挂载所有支持自动挂载的设备(定义在了/etc/fstab文件中，且挂载选项中有<br>auto功能)<br>-L <span class="hljs-string">&#x27;LABEL&#x27;</span> 以卷标指定挂载设备<br>-U <span class="hljs-string">&#x27;UUID&#x27;</span> 以UUID指定要挂载的设备<br>-B, --<span class="hljs-built_in">bind</span> 绑定目录到另一个目录上<br>-o options：(挂载文件系统的选项)，多个选项使用逗号分隔<br>async 异步模式,内存更改时,写入缓存区buffer,过一段时间再写到磁盘中，效率高，但不安全<br><span class="hljs-built_in">sync</span> 同步模式,内存更改时，同时写磁盘，安全，但效率低下<br>atime/noatime 包含目录和文件<br>diratime/nodiratime 目录的访问时间戳<br>auto/noauto 是否支持开机自动挂载，是否支持-a选项<br><span class="hljs-built_in">exec</span>/noexec 是否支持将文件系统上运行应用程序<br>dev/nodev 是否支持在此文件系统上使用设备文件<br>suid/nosuid 是否支持suid和sgid权限<br>remount 重新挂载<br>ro/rw 只读、读写<br>user/nouser 是否允许普通用户挂载此设备，/etc/fstab使用<br>acl/noacl 启用此文件系统上的acl功能<br>loop 使用loop设备<br>_netdev 当网络可用时才对网络资源进行挂载，如：NFS文件系统<br>defaults 相当于rw, suid, dev, <span class="hljs-built_in">exec</span>, auto, nouser, async<br></code></pre></td></tr></table></figure><p><strong>挂载规则:</strong></p><ul><li>一个挂载点同一时间只能挂载一个设备</li><li>一个挂载点同一时间挂载了多个设备，只能看到最后一个设备的数据，其它设备上的数据将被隐藏</li><li>一个设备可以同时挂载到多个挂载点</li><li>通常挂载点一般是已存在空的目录</li></ul><p><strong>范例:挂载案例</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data</span><span class="hljs-comment"># mount /dev/sdb1 /data/mysql_mount/</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data</span><span class="hljs-comment"># df</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1659865748687.png" alt="1659865748687"></p><h3 id="2-4-2-卸载文件系统-umount"><a href="#2-4-2-卸载文件系统-umount" class="headerlink" title="2.4.2 卸载文件系统 umount"></a>2.4.2 卸载文件系统 umount</h3><p>卸载时：可使用设备，也可以使用挂载点</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">umount 设备名<span class="hljs-string">|挂载点</span><br></code></pre></td></tr></table></figure><h3 id="2-4-3-查看挂载情况"><a href="#2-4-3-查看挂载情况" class="headerlink" title="2.4.3 查看挂载情况"></a>2.4.3 查看挂载情况</h3><p><strong>查看挂载</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#通过查看/etc/mtab文件显示当前已挂载的所有设备</span><br>mount<br><span class="hljs-comment">#查看内核追踪到的已挂载的所有设备</span><br>cat <span class="hljs-regexp">/proc/m</span>ounts<br></code></pre></td></tr></table></figure><p><strong>查看挂载点情况</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">findmnt MOUNT_POINT<span class="hljs-string">|device</span><br></code></pre></td></tr></table></figure><p><strong>查看正在访问指定文件系统的进程</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">lsof MOUNT<span class="hljs-emphasis">_POINT</span><br><span class="hljs-emphasis">fuser -v MOUNT_</span>POINT<br></code></pre></td></tr></table></figure><p><strong>终止所有在正访问指定的文件系统的进程</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">fuser -km MOUNT_POINT</span><br></code></pre></td></tr></table></figure><h3 id="2-4-4-持久挂载"><a href="#2-4-4-持久挂载" class="headerlink" title="2.4.4 持久挂载"></a>2.4.4 持久挂载</h3><p>将挂载保存到 &#x2F;etc&#x2F;fstab 中可以下次开机时，自动启用挂载<br>&#x2F;etc&#x2F;fstab格式帮助：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">man</span> <span class="hljs-number">5</span> fstab<br></code></pre></td></tr></table></figure><p>每行定义一个要挂载的文件系统,，其中包括共 6 项</p><ul><li>要挂载的设备或伪文件系统设备文件<br>LABEL：LABEL&#x3D;””<br>UUID：UUID&#x3D;””<br>伪文件系统名称：proc, sysfs</li><li>挂载点：必须是事先存在的目录</li><li>文件系统类型：ext4，xfs，iso9660，nfs，none</li><li>挂载选项：defaults ，acl，bind</li><li>转储频率：0：不做备份 1：每天转储 2：每隔一天转储</li><li>fsck检查的文件系统的顺序：允许的数字是0 1 2<br>0：不自检 ，1：首先自检；一般只有rootfs才用 2：非rootfs使用</li></ul><p><strong>添加新的挂载项，需要执行下面命令生效</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mount -<span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p><strong>范例：centos7, 8 &#x2F;etc&#x2F;fstab 的分区UUID错误，无法启动</strong>*</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">自动进入emergency mode,输入root 密码<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">cat</span> /proc/mounts 可以查看到/ 以rw方式挂载</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">vim /etc/fstab</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">reboot</span><br></code></pre></td></tr></table></figure><p><strong>范例：centos 6 &#x2F;etc&#x2F;fstab 的分区UUID错误，无法启动</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle">如果<span class="hljs-regexp">/etc/</span>fstab 的挂载设备出错，比如文件系统故障，并且文件系统检测项（即第<span class="hljs-number">6</span>项为非<span class="hljs-number">0</span>），将导致无<br>法启动<br>自动进入emergency mode,输入root 密码<br>#cat <span class="hljs-regexp">/proc/m</span>ounts 可以查看到/ 以ro方式挂载，无法直接修改配置文件<br>#mount -o remount,rw /<br>#vim <span class="hljs-regexp">/etc/</span>fstab<br>将故障行的最后<span class="hljs-number">1</span>项，即第<span class="hljs-number">6</span>项修改为<span class="hljs-number">0</span>，开机不检测此项挂载设备的健康性，从而忽略错误，能实现启动<br></code></pre></td></tr></table></figure><p><strong>范例：&#x2F;etc&#x2F;fstab格式</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">root@ubuntu200404:<span class="hljs-regexp">/data# cat /</span>etc/fstab <br><span class="hljs-comment"># /etc/fstab: static file system information.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="hljs-comment"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="hljs-comment"># that works even if disks are added and removed. See fstab(5).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="hljs-comment"># / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-id/</span>dm-uuid-LVM-<span class="hljs-number">3</span>aQ0WgB04ZXwNPYVAYy9ssb3Wd06E34ggUUxCcYQaVwAb0L03K40wpOxbnqqqa3f / ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br><span class="hljs-comment"># /boot was on /dev/sda2 during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-uuid/</span><span class="hljs-number">5</span>e8f9763-<span class="hljs-number">2</span>db8-<span class="hljs-number">48</span>d0-<span class="hljs-number">85</span>e2-a26d76521e2f /boot ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br>/swap.imgnoneswapsw<span class="hljs-number">0</span><span class="hljs-number">0</span><br>root@ubuntu200404:/data<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>范例：添加新的挂载点后修改&#x2F;etc&#x2F;fstab文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># /etc/fstab: static file system information.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="hljs-comment"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="hljs-comment"># that works even if disks are added and removed. See fstab(5).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="hljs-comment"># / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-id/</span>dm-uuid-LVM-<span class="hljs-number">3</span>aQ0WgB04ZXwNPYVAYy9ssb3Wd06E34ggUUxCcYQaVwAb0L03K40wpOxbnqqqa3f / ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br><span class="hljs-comment"># /boot was on /dev/sda2 during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-uuid/</span><span class="hljs-number">5</span>e8f9763-<span class="hljs-number">2</span>db8-<span class="hljs-number">48</span>d0-<span class="hljs-number">85</span>e2-a26d76521e2f /boot ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br>/swap.img       none    swap    sw      <span class="hljs-number">0</span>       <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 添加该行后、重启系统</span><br>UUID=<span class="hljs-number">0</span>e850a4a-<span class="hljs-number">028</span>d-<span class="hljs-number">48</span>b2-aa18-dd8b16090aa6  <span class="hljs-regexp">/data/my</span>sql_mount  ext4  defaults  <span class="hljs-number">0</span>  <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="2-5-处理交换文件和分区"><a href="#2-5-处理交换文件和分区" class="headerlink" title="2.5 处理交换文件和分区"></a>2.5 处理交换文件和分区</h2><h3 id="2-5-1-swap分区"><a href="#2-5-1-swap分区" class="headerlink" title="2.5.1 swap分区"></a>2.5.1 swap分区</h3><p>swap交换分区是系统RAM的补充，swap 分区支持虚拟内存。当没有足够的 RAM 保存系统处理的数据<br>时会将数据写入 swap 分区，当系统缺乏 swap 空间时，内核会因 RAM 内存耗尽而终止进程。配置过<br>多 swap 空间会造成存储设备处于分配状态但闲置，造成浪费，过多 swap 空间还会掩盖内存泄露<br>注意：为优化性能，可以将swap 分布存放，或高性能磁盘存放  </p><h3 id="2-5-2-交换分区实现过程"><a href="#2-5-2-交换分区实现过程" class="headerlink" title="2.5.2 交换分区实现过程"></a>2.5.2 交换分区实现过程</h3><ol><li>创建交换分区或者文件</li><li>使用mkswap写入特殊签名</li><li>在&#x2F;etc&#x2F;fstab文件中添加适当的条目</li><li>使用swapon -a 激活交换空间</li></ol><p><strong>启用swap分区</strong> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">swapon <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[DEVICE]</span><br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>a <span class="hljs-comment">#激活所有的交换分区</span><br><span class="hljs-literal">-</span>p PRIORITY <span class="hljs-comment">#指定优先级(-1到32767之间)，值越大,优先级越高.也可在/etc/fstab文件中的第4列指</span><br>定：pri=value<br></code></pre></td></tr></table></figure><p><strong>范例:创建swap分区</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#mkswap /dev/sdc1</span><br></code></pre></td></tr></table></figure><p><strong>禁用swap分区</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">swapoff <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[DEVICE]</span><br></code></pre></td></tr></table></figure><p><strong>范例:禁用swap分区</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#sed</span> -<span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.bak</span> <span class="hljs-string">&#x27;/swap/d&#x27;</span> /etc/fstab<br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#swapoff</span> -a<br></code></pre></td></tr></table></figure><h3 id="2-5-3-swap的使用策略"><a href="#2-5-3-swap的使用策略" class="headerlink" title="2.5.3 swap的使用策略"></a>2.5.3 swap的使用策略</h3><p>&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness 的值决定了当内存占用达到一定的百分比时，会启用swap分区的空间<br>使用规则</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">当内存使用率达到<span class="hljs-number">100</span>-swappiness时,会启用交换分区<br>简单地说这个参数定义了系统对<span class="hljs-keyword">swap</span>的使用倾向，此值越大表示越倾向于使用<span class="hljs-keyword">swap</span>。<br>可以设为<span class="hljs-number">0</span>，这样做并不会禁止对<span class="hljs-keyword">swap</span>的使用，只是最大限度地降低了使用<span class="hljs-keyword">swap</span>的可能性<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#说明：CentOS7和<span class="hljs-number">8</span>默认值为<span class="hljs-number">30</span>，内存在使用到<span class="hljs-number">100</span>-<span class="hljs-number">30</span>=<span class="hljs-number">70</span>%的时候，就开始出现有交换分区的使用。<br>[root@centos8 ~]# cat <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/vm/</span>swappiness<br></code></pre></td></tr></table></figure><h2 id="2-6-磁盘常见工具"><a href="#2-6-磁盘常见工具" class="headerlink" title="2.6 磁盘常见工具"></a>2.6 磁盘常见工具</h2><h3 id="2-6-1-df"><a href="#2-6-1-df" class="headerlink" title="2.6.1 df"></a>2.6.1 df</h3><p>文件系统空间实际真正占用等信息的查看工具 df</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">df [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-H 以10为单位</span><br><span class="hljs-deletion">-T 文件系统类型</span><br><span class="hljs-deletion">-h human-readable</span><br><span class="hljs-deletion">-i inodes instead of blocks</span><br><span class="hljs-deletion">-P 以Posix兼容的格式输出</span><br></code></pre></td></tr></table></figure><h3 id="2-6-3-du"><a href="#2-6-3-du" class="headerlink" title="2.6.3 du"></a>2.6.3 du</h3><p>查看某目录总体空间实际占用状态 du</p><p>显示指定目录下面各个子目录的大小,单位为KB</p><p><strong>常用选项</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>a --all 显示所有文件和目录的大小,默认只显示目录大小<br><span class="hljs-literal">-</span>h human-readable<br><span class="hljs-literal">-</span>s summary<br><span class="hljs-literal">-</span>-max-depth=<span class="hljs-comment"># 指定最大目录层级</span><br><span class="hljs-literal">-</span>x, --one-file-system <span class="hljs-comment">#忽略不在同一个文件系统的目录</span><br></code></pre></td></tr></table></figure><p><strong>面试题</strong></p><p>1.df 和 du 区别?什么时候df &gt;du（空分区的时候)<br>df 查看是文件系统的空间使用，包括元数据和数据，删除文件后，如果此文件正在使用，不会立即释放空间;du 查看是文件数据空间使用，不包括元数据，删除文件后空间立即释放。</p><p>2.什么时候df &lt; du?<br>目录内挂载有其它分区时的情况</p><p>3.当删除文件但不释放空间时,有什么不同?<br>du 查看文件空间释放,df不释放</p><h1 id="3-RAID"><a href="#3-RAID" class="headerlink" title="3. RAID"></a>3. RAID</h1>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shell编程</title>
    <link href="/2022/08/03/shell%E7%BC%96%E7%A8%8B/"/>
    <url>/2022/08/03/shell%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="内容简述"><a href="#内容简述" class="headerlink" title="内容简述"></a>内容简述</h1><p>shell 是操作系统的最外层。shell 合并编程语言以控制进程和文件，以及启动和控制其它程序。shell 通过提示您输入，向操作系统解释该输入，然后处理来自操作系统的任何结果输出来管理您与操作系统之间的交互。</p><h1 id="1-编程基础"><a href="#1-编程基础" class="headerlink" title="1.编程基础"></a>1.编程基础</h1><p>Linus：Talk is cheap, show me the code</p><h2 id="1-1-程序组成"><a href="#1-1-程序组成" class="headerlink" title="1.1 程序组成"></a>1.1 程序组成</h2><ul><li>程序：算法+数据结构</li><li>算法：处理数据的方式</li><li>数据结构：数据在计算机中的类型和组织方式</li><li>数据：是程序的核心，程序为数据提供服务</li></ul><h2 id="1-2-程序编程风格"><a href="#1-2-程序编程风格" class="headerlink" title="1.2 程序编程风格"></a>1.2 程序编程风格</h2><ul><li>面向过程语言<ul><li>做一件事情，排出个步骤，第一步干什么，第二步干什么，如果出现情况A，做什么处理，如果出现了情况B，做什么处理</li><li>问题规模小，可以步骤化，按部就班处理</li><li>以指令为中心，数据服务于指令</li><li>C，shell</li></ul></li><li>面向对象语言<ul><li>将编程看成是一个事物，对外界来说，事物是直接使用的,不用关心事物内部的情况。而编程就是设置事物能够完成功能。</li><li>一种认识世界、分析世界的方法论。将万事万物抽象为各种对象</li><li>类是抽象的概念，是万事万物的抽象，是一类事物的共同特征的集合</li><li>对象是类的具体实现，是一个实体</li><li>问题规模大，复杂系统</li><li>以数据为中心，指令服务于数据</li><li>java，C#，python，golang等</li></ul></li></ul><h2 id="1-3-编程语言"><a href="#1-3-编程语言" class="headerlink" title="1.3 编程语言"></a>1.3 编程语言</h2><p><strong>编程语言排行榜链接</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">https://www.tiobe.com/tiobe-index/<br></code></pre></td></tr></table></figure><p>计算机：运行二进制指令<br>编程语言：人与计算机之间交互的语言。分为两种：低级语言和高级语言  </p><ul><li>低级编程语言：  <ul><li>机器：二进制的0和1的序列，称为机器指令。与自然语言差异太大，难懂、难写  </li><li>汇编：用一些助记符号替代机器指令，称为汇编语言<br>如：ADD A,B 将寄存器A的数与寄存器B的数相加得到的数放到寄存器A中<br>汇编语言写好的程序需要汇编程序转换成机器指令<br>汇编语言稍微好理解，即机器指令对应的助记符，助记符更接近自然语言</li></ul></li><li>高级编程语言：  <ul><li>编译：高级语言–&gt;编译器–&gt;机器代码文件–&gt;执行，如：C，C++  </li><li>解释：高级语言–&gt;执行–&gt;解释器–&gt;机器代码，如：shell，python，php，JavaScript，perl</li></ul></li><li>编译和解释型语言<br><img src="/../image.assets/1659747737724.png" alt="1659747737724"></li></ul><h2 id="1-4-编程逻辑处理方式"><a href="#1-4-编程逻辑处理方式" class="headerlink" title="1.4 编程逻辑处理方式"></a>1.4 编程逻辑处理方式</h2><p><img src="/../image.assets/1659747842228.png" alt="1659747842228"></p><p><img src="/../image.assets/1659747863045.png" alt="1659747863045"></p><p><strong>三种处理逻辑</strong></p><ul><li>顺序执行：程序按从上到下顺序执行</li><li>选择执行：程序执行过程中，根据条件的不同，进行选择不同分支继续执行</li><li>循环执行：程序执行过程中需要重复执行多次某段语句</li></ul><h1 id="2-shell-脚本语言的基本用法"><a href="#2-shell-脚本语言的基本用法" class="headerlink" title="2.shell 脚本语言的基本用法"></a>2.shell 脚本语言的基本用法</h1><h2 id="2-1-shell-脚本的用途"><a href="#2-1-shell-脚本的用途" class="headerlink" title="2.1 shell 脚本的用途"></a>2.1 shell 脚本的用途</h2><ul><li>将简单的命令组合完成复杂的工作,自动化执行命令,提高工作效率</li><li>减少手工命令的输入，一定程度上避免人为错误</li><li>将软件或应用的安装及配置实现标准化</li><li>用于实现日常性的,重复性的,非交互式的运维工作,如:文件打包压缩备份,监控系统运行状态并实现告警等</li></ul><h2 id="2-2-shell脚本基本结构"><a href="#2-2-shell脚本基本结构" class="headerlink" title="2.2 shell脚本基本结构"></a>2.2 shell脚本基本结构</h2><p><strong>shell脚本编程：是基于过程式、解释执行的语言</strong>  </p><hr><p><strong>编程语言的基本结构：</strong></p><ul><li>各种系统命令的组合</li><li>数据存储：变量、数组</li><li>表达式：a + b</li><li>控制语句：if</li></ul><p>shell脚本：包含一些命令或声明，并符合一定格式的文本文件<br>格式要求：首行shebang机制</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br>#!/usr/bin/python<br>#!/usr/bin/perl<br>#!/usr/bin/ruby<br>#!/usr/bin/lua<br></code></pre></td></tr></table></figure><h2 id="2-3-shell脚本创建过程"><a href="#2-3-shell脚本创建过程" class="headerlink" title="2.3 shell脚本创建过程"></a>2.3 shell脚本创建过程</h2><p><strong>第一步：使用文本编编辑器来创建文本文件</strong></p><p><strong>第一行必须包括shell声明序列：#!</strong><br>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash<span class="hljs-comment"># 使用bash，添加注释,注释以#开头</span></span><br></code></pre></td></tr></table></figure><p>第二步：加执行权限<br>给予执行权限，在命令行上指定脚本的绝对或相对路径<br>第三步：运行脚本<br>直接运行解释器，将脚本作为解释器程序的参数运行</p><p><strong>扩展：查看当前使用的是何种shell，终端输入：echo $SHELL</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:~# echo $SHELL<br>/bin/bash<br>root@ubuntu200404:~#<br></code></pre></td></tr></table></figure><h2 id="2-4-shell脚本注释规范"><a href="#2-4-shell脚本注释规范" class="headerlink" title="2.4 shell脚本注释规范"></a>2.4 shell脚本注释规范</h2><ul><li>第一行一般为调用使用的语言</li><li>程序名，避免更改文件名为无法找到正确的文件</li><li>版本号</li><li>更改后的时间</li><li>作者相关信息</li><li>该程序的作用，及注意事项</li><li>最后是各版本的更新简要说明</li></ul><h2 id="2-5-第一个shell脚本"><a href="#2-5-第一个shell脚本" class="headerlink" title="2.5 第一个shell脚本"></a>2.5 第一个shell脚本</h2><p><strong>范例：第一个shell脚本hello world</strong></p><p><strong>参考文档：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">https://zh.wikipedia.org/wiki/Hello_World<br>https://zh.wikipedia.org/wiki/Hello_World%E7%A8%8B%E5%BA%8F%E6%A0%B7%E4%BE%8B<br></code></pre></td></tr></table></figure><p>(程序样例)[<a href="https://zh.wikipedia.org/wiki/Hello_World]">https://zh.wikipedia.org/wiki/Hello_World]</a></p><p><strong>第一步：vim创建hello.sh文本</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># vim hello.sh</span><br></code></pre></td></tr></table></figure><p><strong>第二步：声明序列和添加脚本名称、日期等</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">#!/bin/bash<br>#******************<br>#filename:hello.<span class="hljs-keyword">sh</span><br>#Dat<span class="hljs-variable">a:2022</span>-<span class="hljs-number">08</span>-<span class="hljs-number">06</span><br>#author:admin<br>#******************<br></code></pre></td></tr></table></figure><p><strong>第三步：编写代码</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">经典写法</span><br>echo &quot;hello, world&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">流行写法</span><br>echo &#x27;Hello, world!&#x27;<br></code></pre></td></tr></table></figure><p><strong>第四步：执行shell脚本</strong></p><p>方法一：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:~# bash hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:~# <br></code></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# cat /data/scripts/hello.sh | bash<br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><p>方法三：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# bash &lt; /data/scripts/hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p>方法四：添加执行权限使用绝对路径和相对路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">绝对路径</span><br>root@ubuntu200404:/data/scripts# /data/scripts/hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">相对路径</span><br>root@ubuntu200404:/data/scripts# pwd<br>/data/scripts<br>root@ubuntu200404:/data/scripts# ./hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><p>方法五：将脚本添加到path变量中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">当前path位置</span><br>root@ubuntu200404:/data/scripts# echo $PATH<br>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin<br>root@ubuntu200404:/data/scripts#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">给hello.sh文件创建软链接放到/usr/local/bin目录下</span><br>root@ubuntu200404:/data/scripts# ln -s /data/scripts/hello.sh /usr/local/bin/ <br>root@ubuntu200404:/data/scripts# ls /usr/local/bin/<br>hello.sh<br>root@ubuntu200404:/data/scripts#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行shell脚本</span><br>root@ubuntu200404:/data/scripts# hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><p>方法六：本方法可以实现执行远程主机的shell脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">扩展：curl加-s选项不显示下载信息</span><br>root@ubuntu200404:/data# curl -s http://wangxiaochun.com/testdir/hello.sh |bash<br>hello, world<br>Hello, world!<br>root@ubuntu200404:/data# <br></code></pre></td></tr></table></figure><p>案例：备份脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">脚本内容</span><br>root@ubuntu200404:/data/scripts# cat -n bacup.sh <br>     1#!/bin/bash<br>     2#------------------<br>     3#filename:bacup.sh<br>     4#备份脚本<br>     5#------------------<br>     6<br>     7<br>     8tar zcf /data/scripts-`date +%F_%s`.tar.gz /data/ &amp;&gt; /dev/null<br>     9<br>    10echo -e &quot;\E[1;32mbacup is success!\E[0m&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行脚本</span><br>root@ubuntu200404:/data/scripts# bash bacup.sh <br>bacup is success!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><h2 id="2-6-shell脚本调试"><a href="#2-6-shell脚本调试" class="headerlink" title="2.6 shell脚本调试"></a>2.6 shell脚本调试</h2><p><strong>只检测脚本中的语法错误，但无法检查出命令错误，但不真正执行脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash -n /path/to/some_script<br></code></pre></td></tr></table></figure><p><strong>调试并执行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash -x /path/to/some_script<br></code></pre></td></tr></table></figure><p><strong>案例1：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# bash -x hello.sh <br>+ echo &#x27;hello world!&#x27;<br>hello world!<br>+ echo &#x27;******************&#x27;<br>******************<br>+ echo &#x27;hello world!&#x27;<br>hello world!<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p><strong>案例2:多行重定向</strong></p><p>脚本内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">多行重定向</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">data:2022-08-06</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">author:admin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--------------------------------------------</span><br><br>echo start<br><br>cat &gt;/data/demo.conf &lt;&lt;EOF<br>line 1<br>line 2<br>line 3<br>EOF <br><br>echo end<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p>检查错误：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# bash -n demo1.sh <br>demo1.sh: line 17: warning: here-document at line 11 delimited by end-of-file (wanted `EOF&#x27;)<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p>检查出第十七行有错误，肉眼观察没有错误，这是因为有些错误不显示在屏幕上的，可以通过cat -A filename或者在vi命令行模式下输入：set list</p><p><img src="/../image.assets/1659754821095.png" alt="1659754821095"></p><p>使用cat -A filename命令后发现EOF后面多了个空格导致错误。删除掉空格脚本即可成功运行。</p><p>在vi命令行模式下输入set list</p><p><img src="/../image.assets/1659754927224.png" alt="1659754927224"></p><p><strong>总结：脚本错误常见的有三种</strong></p><ul><li>语法错误，会导致后续的命令不继续执行，可以用bash -n 检查错误，提示的出错行数不一定是准<br>确的</li><li>命令错误，默认后续的命令还会继续执行，用bash -n 无法检查出来 ，可以使用 bash -x 进行观察</li><li>逻辑错误：只能使用 bash -x 进行观察</li></ul><h2 id="2-7-变量"><a href="#2-7-变量" class="headerlink" title="2.7 变量"></a>2.7 变量</h2><h3 id="2-7-1-变量"><a href="#2-7-1-变量" class="headerlink" title="2.7.1 变量"></a>2.7.1 变量</h3><p><strong>变量表示命名的内存空间，将数据放在内存空间中，通过变量名引用，获取数据</strong>  </p><hr><h3 id="2-7-2-变量类型"><a href="#2-7-2-变量类型" class="headerlink" title="2.7.2 变量类型"></a>2.7.2 变量类型</h3><p><strong>变量类型：</strong></p><ul><li>内置变量，如：PS1，PATH，UID，HOSTNAME，$$，BASHPID，PPID，$?，HISTSIZE</li><li>用户自定义变量</li></ul><p><strong>不同的变量存放的数据不同，决定了以下</strong></p><ul><li>数据存储方式</li><li>参与的运算</li><li>表示的数据范围</li></ul><p><strong>变量数据类型：</strong></p><ul><li>字符</li><li>数值：整型、浮点型,bash 不支持浮点数</li></ul><h3 id="2-7-3-shell中变量命令规则"><a href="#2-7-3-shell中变量命令规则" class="headerlink" title="2.7.3 shell中变量命令规则"></a>2.7.3 shell中变量命令规则</h3><h4 id="2-7-3-1-命名要求"><a href="#2-7-3-1-命名要求" class="headerlink" title="2.7.3.1 命名要求"></a>2.7.3.1 命名要求</h4><ul><li><p>区分大小写</p></li><li><p>不能使程序中的保留字和内置变量：如：if, for<br>只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线 “ - ”，和主机名相反</p></li><li><p>只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线 “ - ”，和主机名相反</p></li></ul><h4 id="2-7-3-2-命令习惯"><a href="#2-7-3-2-命令习惯" class="headerlink" title="2.7.3.2 命令习惯"></a>2.7.3.2 命令习惯</h4><ul><li>见名知义，用英文单词命名，并体现出实际作用，不要用简写，如：ATM</li><li>变量名大写</li><li>局部变量小写</li><li>函数名小写</li><li>大驼峰StudentFirstName,由多个单词组成，且每个单词的首字母是大写，其它小写</li><li>小驼峰studentFirstName ,由多个单词组成，第一个单词的首字母小写，后续每个单词的首字母是大写，其它小写</li><li>下划线: student_name</li></ul><h3 id="2-7-4-变量定义和引用"><a href="#2-7-4-变量定义和引用" class="headerlink" title="2.7.4 变量定义和引用"></a>2.7.4 变量定义和引用</h3><p><strong>变量的生效范围等标准划分变量类型</strong></p><ul><li>普通变量：生效范围为当前shell进程；对当前shell之外的其它shell进程，包括当前shell的子shell进程均无效</li><li>环境变量：生效范围为当前shell进程及其子进程</li><li>本地变量：生效范围为当前shell进程中某代码片断，通常指函数</li></ul><p><strong>变量赋值：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">name=&#x27;value&#x27;<br></code></pre></td></tr></table></figure><p><strong>value 可以是以下多种形式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">直接字串：name=&#x27;root&#x27;<br>变量引用：name=&quot;$USER&quot;<br>命令引用：name=`COMMAND` 或者 name=$(COMMAND)<br></code></pre></td></tr></table></figure><p><strong>注意：</strong>变量赋值是临时生效，当退出终端后，变量会自动删除，无法持久保存，脚本中的变量会随着脚本结束，也会自动删除</p><p><strong>变量引用：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$</span><span class="language-bash">name</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;name&#125;</span><br></code></pre></td></tr></table></figure><p><strong>弱引用和强引用</strong></p><ul><li>“$name” 弱引用，其中的变量引用会被替换为变量值</li><li>‘$name’ 强引用，其中的变量引用不会被替换为变量值，而保持原字符串</li></ul><p><strong>范例：变量的各种赋值方式和引用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs shell">方式1：<br>root@ubuntu200404:/data/scripts# TITLE=cto<br>root@ubuntu200404:/data/scripts# echo $TITLE<br>cto<br>root@ubuntu200404:/data/scripts#<br><br>方式二：<br>root@ubuntu200404:/data/scripts# T=ceo<br>root@ubuntu200404:/data/scripts# NAME=$T<br>root@ubuntu200404:/data/scripts# echo $NAME<br>ceo<br>root@ubuntu200404:/data/scripts#<br><br>方式三：<br>root@ubuntu200404:/data/scripts# NAME=`whoami`<br>root@ubuntu200404:/data/scripts# echo $NAME<br>root<br>root@ubuntu200404:/data/scripts#<br><br>方式四：<br>root@ubuntu200404:/data/scripts# seq 10<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>root@ubuntu200404:/data/scripts#<br><span class="hljs-meta prompt_"># </span><span class="language-bash">弱引用</span><br>root@ubuntu200404:/data/scripts# echo &quot;$NUM&quot;<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p><strong>删除变量： unset name</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">unset &lt;name&gt;<br>案例：<br>root@ubuntu200404:/data/scripts# NUM=`seq 10`<br>root@ubuntu200404:/data/scripts# echo $NUM<br>1 2 3 4 5 6 7 8 9 10<br>root@ubuntu200404:/data/scripts# unset NUM<br>root@ubuntu200404:/data/scripts# echo $NUM<br><br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p><strong>显示已有的变量</strong></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">set</span><br></code></pre></td></tr></table></figure><h3 id="2-7-5-环境变量"><a href="#2-7-5-环境变量" class="headerlink" title="2.7.5 环境变量"></a>2.7.5 环境变量</h3><p><strong>环境变量：</strong></p><ul><li>可以使子进程（包括孙子进程）继承父进程的变量，但是无法让父进程使用子进程的变量</li><li>一旦子进程修改从父进程继承的变量，将会新的值传递给孙子进</li><li>一般只在系统配置文件中使用，在脚本中较少使用</li></ul><p><strong>变量声明和赋值：</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#声明并赋值</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">name</span>=VALUE<br>declare -x <span class="hljs-attribute">name</span>=VALUE<br><span class="hljs-comment">#或者分两步实现</span><br><span class="hljs-attribute">name</span>=VALUE<br><span class="hljs-built_in">export</span> name<br></code></pre></td></tr></table></figure><p><strong>变量引用：</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$name</span></span><br><span class="hljs-symbol">$</span>&#123;name&#125;<br></code></pre></td></tr></table></figure><p><strong>显示所有环境变量：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">env</span><br><span class="hljs-built_in">printenv</span><br><span class="hljs-built_in">export</span><br><span class="hljs-built_in">declare</span> -x<br></code></pre></td></tr></table></figure><p><strong>查看指定进程的环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/<span class="hljs-variable">$PID</span>/environ<br></code></pre></td></tr></table></figure><p><strong>删除变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">unset</span> name<br></code></pre></td></tr></table></figure><p><strong>bash内建的环境变量</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">PATH<br>SHELL<br><span class="hljs-keyword">USER</span><br><span class="hljs-title">UID</span><br>HOME<br>PWD<br>SHLVL <span class="hljs-comment">#shell的嵌套层数，即深度</span><br>LANG<br>MAIL<br>HOSTNAME<br>HISTSIZE<br>_ <span class="hljs-comment">#下划线,表示前一命令的最后一个参数</span><br></code></pre></td></tr></table></figure><p><strong>扩展：pstree -p</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# pstree -p<br>systemd(1)─┬─VGAuthService(757)<br>           ├─accounts-daemon(811)─┬─&#123;accounts-daemon&#125;(818)<br>           │                      └─&#123;accounts-daemon&#125;(864)<br>           ├─atd(837)<br>           ├─cron(815)<br>           ├─dbus-daemon(817)<br>           ├─irqbalance(824)───&#123;irqbalance&#125;(853)<br>           ├─login(1206)───bash(1402)───sudo(1413)───bash(1420)<br>           ├─multipathd(702)─┬─&#123;multipathd&#125;(703)<br>           │                 ├─&#123;multipathd&#125;(704)<br>           │                 ├─&#123;multipathd&#125;(705)<br>           │                 ├─&#123;multipathd&#125;(706)<br>           │                 ├─&#123;multipathd&#125;(707)<br>           │                 └─&#123;multipathd&#125;(708)<br>           ├─networkd-dispat(825)<br>           ├─polkitd(872)─┬─&#123;polkitd&#125;(875)<br>           │              └─&#123;polkitd&#125;(877)<br>           ├─rsyslogd(826)─┬─&#123;rsyslogd&#125;(839)<br>           │               ├─&#123;rsyslogd&#125;(840)<br>           │               └─&#123;rsyslogd&#125;(841)<br>           ├─snapd(828)─┬─&#123;snapd&#125;(915)<br>           │            ├─&#123;snapd&#125;(916)<br>           │            ├─&#123;snapd&#125;(917)<br>           │            ├─&#123;snapd&#125;(918)<br>           │            ├─&#123;snapd&#125;(919)<br>           │            ├─&#123;snapd&#125;(945)<br>           │            ├─&#123;snapd&#125;(946)<br>           │            ├─&#123;snapd&#125;(952)<br>           │            ├─&#123;snapd&#125;(954)<br>           │            └─&#123;snapd&#125;(975)<br>           ├─sshd(859)─┬─sshd(3292)───bash(3421)───pstree(13708)<br>           │           └─sshd(6603)───bash(6736)<br>           ├─systemd(1477)───(sd-pam)(1478)<br>           ├─systemd(1392)───(sd-pam)(1393)<br>           ├─systemd-journal(495)<br>           ├─systemd-logind(830)<br>           ├─systemd-network(2826)<br>           ├─systemd-resolve(799)<br>           ├─systemd-timesyn(746)───&#123;systemd-timesyn&#125;(778)<br>           ├─systemd-udevd(525)<br>           ├─udisksd(836)─┬─&#123;udisksd&#125;(863)<br>           │              ├─&#123;udisksd&#125;(866)<br>           │              ├─&#123;udisksd&#125;(883)<br>           │              └─&#123;udisksd&#125;(906)<br>           ├─unattended-upgr(878)───&#123;unattended-upgr&#125;(908)<br>           ├─upowerd(2940)─┬─&#123;upowerd&#125;(2942)<br>           │               └─&#123;upowerd&#125;(2943)<br>           └─vmtoolsd(758)─┬─&#123;vmtoolsd&#125;(781)<br>                           └─&#123;vmtoolsd&#125;(2774)<br></code></pre></td></tr></table></figure><h3 id="2-7-6-只读变量"><a href="#2-7-6-只读变量" class="headerlink" title="2.7.6 只读变量"></a>2.7.6 只读变量</h3><p><strong>只读变量：只能声明定义，但后续不能修改和删除，即常量</strong><br><strong>声明只读变量：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">readonly name<br>declare -r name<br></code></pre></td></tr></table></figure><p><strong>查看只读变量：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">readonly [-p]<br>declare -r<br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># readonly PI=3.14159</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $PI</span><br><span class="hljs-number">3.14159</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># PI=3.14</span><br>-<span class="hljs-symbol">bash:</span> <span class="hljs-symbol">PI:</span> readonly variable<br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="2-7-7-位置变量"><a href="#2-7-7-位置变量" class="headerlink" title="2.7.7 位置变量"></a>2.7.7 位置变量</h3><p><strong>位置变量：在bash shell中内置的变量, 在脚本代码中调用通过命令行传递给脚本的参数</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$1</span>, $2, ... 对应第1个、第2个等参数，shift [n]换位置</span><br><span class="hljs-meta"><span class="hljs-keyword">$0</span> 命令本身,包括路径</span><br><span class="hljs-symbol">$</span>* 传递给脚本的所有参数，全部参数合为一个字符串<br><span class="hljs-symbol">$</span>@ 传递给脚本的所有参数，每个参数为独立字符串<br><span class="hljs-symbol">$</span># 传递给脚本的参数的个数<br>注意：<span class="hljs-symbol">$</span>@ <span class="hljs-symbol">$</span>* 只在被双引号包起来的时候才会有差异<br></code></pre></td></tr></table></figure><p><strong>清空所有位置变量</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">set</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1st arg is <span class="hljs-variable">$1</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;2st arg is <span class="hljs-variable">$2</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;3st arg is <span class="hljs-variable">$3</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;10st arg is <span class="hljs-variable">$&#123;10&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;11st arg is <span class="hljs-variable">$&#123;11&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The number of arg is <span class="hljs-variable">$#</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;All args are $*&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;All args are <span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The scriptname is `basename <span class="hljs-variable">$0</span>`&quot;</span><br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># bash args.sh &#123;a..z&#125;</span><br>1st arg is a<br>2st arg is b<br>3st arg is c<br>10st arg is j<br>11st arg is k<br>The number of arg is 26<br>All args are a b c d e f g h i j k l m n o p q r s t u v w x y z<br>All args are a b c d e f g h i j k l m n o p q r s t u v w x y z<br>The scriptname is args.sh<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>范例：删库跑路之安全命令</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># 查看命令</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># cat /data/scripts/rm.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#-----------------</span><br><span class="hljs-comment">#删库跑路之安全命令</span><br><span class="hljs-comment">#-----------------</span><br><span class="hljs-comment">#filename:rm.sh</span><br><span class="hljs-comment">#data:2022-08-06</span><br><span class="hljs-comment">#author:admin</span><br><span class="hljs-comment">#-----------------</span><br><br><span class="hljs-variable constant_">WARNING_COLOR</span>=<span class="hljs-string">&quot;echo -e \E[1;31m&quot;</span><br><br><span class="hljs-variable constant_">END</span>=<span class="hljs-string">&quot;\E[0m&quot;</span><br><br><span class="hljs-variable constant_">DIR</span>=<span class="hljs-regexp">/tmp/</span><span class="hljs-string">`date +%F_%H-%M-%S`</span><br><br>mkdir <span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">DIR</span>&#125;<br><br>mv <span class="hljs-variable">$*</span> <span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">DIR</span>&#125;<br><br><span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">WARNING_COLOR</span>&#125;Move <span class="hljs-variable">$*</span> to <span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">END</span>&#125;<br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 给/data/scripts/rm.sh添加执行权限</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># chmod a+x /data/scripts/rm.sh</span><br><br><span class="hljs-comment"># 添加别名</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment">#alias rm=&#x27;/data/scripts/rm.sh&#x27;</span><br><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># touch &#123;1..9&#125;.TXT</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># rm *.TXT</span><br>Move <span class="hljs-number">1</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">2</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">3</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">4</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">5</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">6</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">7</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">8</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">9</span>.<span class="hljs-variable constant_">TXT</span> to <br></code></pre></td></tr></table></figure><p>*<em>范例：$<em>和$@的区别</em></em></p><ol><li>当 $* 和 $@ 不带双引号时它们两个是没有区别的，都是接收所有参数然后分别单独处理每个参数！而当$*带双引号的时候，会把接收的所有参数当成一个字段处理 </li><li>将$@与$* 赋值给变量之后，结果跟不带引号是一样的！这是我们需要注意的地方，当$* 赋值给变量的时候还是跟不带引号的作用是一样的！</li></ol><h3 id="2-7-8-利用软链接实现同一个脚本不同功能"><a href="#2-7-8-利用软链接实现同一个脚本不同功能" class="headerlink" title="2.7.8  利用软链接实现同一个脚本不同功能"></a>2.7.8  利用软链接实现同一个脚本不同功能</h3><p><strong>范例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@centos8 ~]#cat test.sh<br><span class="hljs-section">#!/bin/bash</span><br><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br>echo $0<br>[root@centos8 ~]#ln -s test.sh a.sh<br>[root@centos8 ~]#ln -s test.sh b.sh<br>[root@centos8 ~]#./a.sh<br>./a.sh<br>[root@centos8 ~]#./b.sh<br>./b.sh<br></code></pre></td></tr></table></figure><h3 id="2-7-9-退出状态码变量"><a href="#2-7-9-退出状态码变量" class="headerlink" title="2.7.9 退出状态码变量"></a>2.7.9 退出状态码变量</h3><p><strong>进程执行后，将使用变量 $? 保存状态码的相关数字，不同的值反应成功或失败，$?取值范例 0-255</strong></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$?</span>的值为<span class="hljs-number">0</span> <span class="hljs-comment">#代表成功</span><br><span class="hljs-variable">$?</span>的值是<span class="hljs-number">1</span>到<span class="hljs-number">255</span> <span class="hljs-comment">#代表失败</span><br></code></pre></td></tr></table></figure><p><strong>范例：状态码为0</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@ubuntu200404:/data/scripts<span class="hljs-comment"># ll</span><br>total 40<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Aug <span class="hljs-number"> 6 </span>07:29 ./<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root<span class="hljs-number"> 4096 </span>Aug <span class="hljs-number"> 6 </span>02:41 ../<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 241 </span>Aug <span class="hljs-number"> 6 </span>06:48 args.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 192 </span>Aug <span class="hljs-number"> 6 </span>02:40 bacup.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 185 </span>Aug <span class="hljs-number"> 6 </span>03:38 demo1.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 85 </span>Aug <span class="hljs-number"> 6 </span>07:26 f1.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 41 </span>Aug <span class="hljs-number"> 6 </span>07:29 file.sh<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 208 </span>Aug <span class="hljs-number"> 6 </span>01:42 hello.sh*<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 285 </span>Aug <span class="hljs-number"> 6 </span>07:20 rm.sh*<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 284 </span>Aug <span class="hljs-number"> 6 </span>07:01 rm.sh.bak*<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># echo $?</span><br>0<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>范例：状态码不是0</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># ls ajdksh</span><br><span class="hljs-symbol">ls:</span> cannot access <span class="hljs-string">&#x27;ajdksh&#x27;</span>: <span class="hljs-title class_">No</span> such file <span class="hljs-keyword">or</span> directory<br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">2</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>用户可以在脚本中使用以下命令自定义退出状态码</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span> [n]<br></code></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># cat exit.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>echo -e `hostname`<br><br><span class="hljs-keyword">exit</span> <span class="hljs-number">200</span><br><br>echo -e <span class="hljs-string">&#x27;success&#x27;</span><br>root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># </span><br>root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># bash exit.sh </span><br>ubuntu200404<br><span class="hljs-keyword">exit</span>.sh: line <span class="hljs-number">4</span>: <span class="hljs-keyword">exit</span>: <span class="hljs-number">200</span>: numeric argument required<br>root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>脚本中一旦遇到exit命令，脚本会立即终止；终止退出状态取决于exit命令后面的数字</li><li>如果exit后面无数字,终止退出状态取决于exit命令前面命令执行结果</li><li>如果没有exit命令, 即未给脚本指定退出状态码，整个脚本的退出状态码取决于脚本中执行的最后一条命令的状态码</li></ul><h3 id="2-7-10-脚本安全和-set"><a href="#2-7-10-脚本安全和-set" class="headerlink" title="2.7.10 脚本安全和 set"></a>2.7.10 脚本安全和 set</h3><p><strong>set 命令：可以用来定制 shell 环境</strong><br>$- 变量<br>h：hashall，打开选项后，Shell 会将命令所在的路径hash下来，避免每次都要查询。通过set +h将h选<br>项关闭<br>i：interactive-comments，包含这个选项说明当前的 shell 是一个交互式的 shell。所谓的交互式shell,<br>在脚本中，i选项是关闭的<br>m：monitor，打开监控模式，就可以通过Job control来控制进程的停止、继续，后台或者前台执行等<br>B：braceexpand，大括号扩展<br>H：history，H选项打开，可以展开历史列表中的命令，可以通过!感叹号来完成，例如“!!”返回上最近的<br>一个历史命令，“!n”返回第 n 个历史命令</p><p><strong>set 命令实现脚本安全</strong><br>-u 在扩展一个没有设置的变量时，显示错误信息， 等同set -o nounset<br>-e 如果一个命令返回一个非0退出状态值(失败)就退出， 等同set -o errexit<br>-o option 显示，打开或者关闭选项<br>显示选项：set -o<br>打开选项：set -o 选项<br>关闭选项：set +o 选项<br>-x 当执行命令时，打印命令及其参数,类似 bash -x<br>范例：-e -u</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#******************</span><br><span class="hljs-comment">#filename:hello.sh</span><br><span class="hljs-comment">#Data:2022-08-06</span><br><span class="hljs-comment">#author:admin</span><br><span class="hljs-comment">#******************</span><br><br><br><span class="hljs-built_in">set</span> -e -u<br><br><span class="hljs-comment">#echo &quot;经典写法&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello world!&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;******************&#x27;</span><br><br><span class="hljs-comment"># 流行写法</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;hello world!&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="2-8-算术运算"><a href="#2-8-算术运算" class="headerlink" title="2.8 算术运算"></a>2.8 算术运算</h2><p>Shell允许在某些情况下对算术表达式进行求值，比如：let和declare 内置命令，(( ))复合命令和算术扩<br>展。求值以固定宽度的整数进行，不检查溢出，尽管除以0 被困并标记为错误。运算符及其优先级，关联性和值与C语言相同。以下运算符列表分组为等优先级运算符级别。级别按降序排列优先。<br><strong>注意：bash 只支持整数，不支持小数</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">+ - addition, subtraction<br><span class="hljs-bullet">* </span>/ % multiplication, division, remainder, %表示取模，即取余数，示例：9%4=1，5%3=2<br>i++ i-- variable post-increment and post-decrement<br>++i --i variable pre-increment and pre-decrement<br><span class="hljs-section">= *= /= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= |= assignment</span><br><span class="hljs-bullet">- </span>+ unary minus and plus<br>! ~ logical and bitwise negation<br><span class="hljs-bullet">** </span>exponentiation 乘方,即指数运算<br>&lt;&lt; &gt;&gt; left and right bitwise shifts<br>&lt;= &gt;= &lt; &gt; comparison<br><span class="hljs-section">== != equality and inequality</span><br>&amp; bitwise AND<br>| bitwise OR<br>^ bitwise exclusive OR<br>&amp;&amp; logical AND<br>|| logical OR<br>expr?expr:expr conditional operator<br>expr1 , expr2 comma<br></code></pre></td></tr></table></figure><p><strong>乘法符号有些场景中需要转义</strong><br><strong>实现算术运算：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-comment">(1)</span> let var=算术表达式<br><span class="hljs-comment">(2)</span> <span class="hljs-comment">((var=算术表达式)</span>) 和上面等价<br><span class="hljs-comment">(3)</span> var=$[算术表达式]<br><span class="hljs-comment">(4)</span> var=$<span class="hljs-comment">((算术表达式)</span>)<br><span class="hljs-comment">(5)</span> var=$<span class="hljs-comment">(expr arg1 arg2 arg3 ...)</span><br><span class="hljs-comment">(6)</span> declare -i var = 数值<br><span class="hljs-comment">(7)</span> echo <span class="hljs-string">&#x27;算术表达式&#x27;</span> | bc<br></code></pre></td></tr></table></figure><p><strong>内建的随机数生成器变量：</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$RANDOM</span> 取值范围：0-32767</span><br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#生成 0 - 49 之间随机数</span><br>echo $[$RANDOM%<span class="hljs-number">50</span>]<br><span class="hljs-meta">#随机字体颜色</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo -e <span class="hljs-string">&quot;\033[1;$[RANDOM%7+31]mhello\033[0m&quot;</span></span><br>magedu<br></code></pre></td></tr></table></figure><h2 id="2-9-逻辑运算"><a href="#2-9-逻辑运算" class="headerlink" title="2.9 逻辑运算"></a>2.9 逻辑运算</h2><p><img src="/../image.assets/1659774970166.png" alt="1659774970166"></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-number">1</span>,真<br><span class="hljs-number">0</span>,假<br><span class="hljs-meta">#注意,以上为二进制</span><br></code></pre></td></tr></table></figure><p><strong>与或非符号：&amp; | ！</strong></p><p><strong>异或：^</strong></p><p>**异或：^ **<br>异或的两个值，相同为假，不同为真。两个数字X,Y异或得到结果Z，Z再和任意两者之一X异或，将得出另一个值Y</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>^ <span class="hljs-number">0</span> = <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span>^ <span class="hljs-number">1</span> = <span class="hljs-number">1</span><br><span class="hljs-symbol">1 </span>^ <span class="hljs-number">0</span> = <span class="hljs-number">1</span><br><span class="hljs-symbol">1 </span>^ <span class="hljs-number">1</span> = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="2-10-条件测试命令"><a href="#2-10-条件测试命令" class="headerlink" title="2.10 条件测试命令"></a>2.10 条件测试命令</h2><p>条件测试：判断某需求是否满足，需要由测试机制来实现，专用的测试表达式需要由测试命令辅助完成<br>测试过程，实现评估布尔声明，以便用在条件性环境下进行执行<br>若真，则状态码变量 $? 返回0<br>若假，则状态码变量 $? 返回1<br>条件测试命令</p><ul><li>test EXPRESSIO</li><li>[ EXPRESSION ] #和test 等价，建议使用 [ ]</li><li>[[ EXPRESSION ]] 相关于增强版的 [ ], 支持[]的用法,且支持扩展正则表达式和通配</li></ul><p><strong>注意：EXPRESSION前后必须有空白字符</strong></p><p><strong>帮助：</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs applescript">root@ubuntu200404:/data/scripts<span class="hljs-comment"># type [</span><br>[ <span class="hljs-keyword">is</span> a shell builtin<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br><br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># help test</span><br>test: test [expr]<br>    Evaluate conditional expression.<br>    <br>    Exits <span class="hljs-keyword">with</span> a status <span class="hljs-keyword">of</span> <span class="hljs-number">0</span> (<span class="hljs-literal">true</span>) <span class="hljs-keyword">or</span> <span class="hljs-number">1</span> (<span class="hljs-literal">false</span>) depending <span class="hljs-keyword">on</span><br>    <span class="hljs-keyword">the</span> evaluation <span class="hljs-keyword">of</span> EXPR.  Expressions may be unary <span class="hljs-keyword">or</span> binary.  Unary<br>    expressions are often used <span class="hljs-keyword">to</span> examine <span class="hljs-keyword">the</span> status <span class="hljs-keyword">of</span> a <span class="hljs-built_in">file</span>.  There<br>    are <span class="hljs-built_in">string</span> operators <span class="hljs-keyword">and</span> numeric comparison operators <span class="hljs-keyword">as</span> well.<br>    <br>    The behavior <span class="hljs-keyword">of</span> test depends <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> arguments.  Read <span class="hljs-keyword">the</span><br>    bash manual page <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> complete specification.<br>    <br>    File operators:<br>    <br>      -a FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists.<br>      -b FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> block special.<br>      -c FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> <span class="hljs-built_in">character</span> special.<br>      -d FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a directory.<br>      -e FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists.<br>      -f FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> a regular <span class="hljs-built_in">file</span>.<br>      -g FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span>-group-<span class="hljs-built_in">id</span>.<br>      -h FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a symbolic link.<br>      -L FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a symbolic link.<br>      -k FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> has <span class="hljs-keyword">its</span> `sticky&#x27; bit <span class="hljs-keyword">set</span>.<br>      -p FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a named pipe.<br>      -r FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> readable <span class="hljs-keyword">by</span> you.<br>      -s FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> empty.<br>      -S FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a socket.<br>      -t FD          True <span class="hljs-keyword">if</span> FD <span class="hljs-keyword">is</span> opened <span class="hljs-keyword">on</span> a terminal.<br>      -u FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span>-user-<span class="hljs-built_in">id</span>.<br>      -w FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> writable <span class="hljs-keyword">by</span> you.<br>      -x FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> executable <span class="hljs-keyword">by</span> you.<br>      -O FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> effectively owned <span class="hljs-keyword">by</span> you.<br>      -G FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> effectively owned <span class="hljs-keyword">by</span> your group.<br>      -N FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> has been modified <span class="hljs-keyword">since</span> <span class="hljs-keyword">it</span> was <span class="hljs-keyword">last</span> <span class="hljs-built_in">read</span>.<br>    <br>      FILE1 -nt FILE2  True <span class="hljs-keyword">if</span> file1 <span class="hljs-keyword">is</span> newer than file2 (according <span class="hljs-keyword">to</span><br>                       modification <span class="hljs-built_in">date</span>).<br>    <br>      FILE1 -ot FILE2  True <span class="hljs-keyword">if</span> file1 <span class="hljs-keyword">is</span> older than file2.<br>    <br>      FILE1 -ef FILE2  True <span class="hljs-keyword">if</span> file1 <span class="hljs-keyword">is</span> a hard link <span class="hljs-keyword">to</span> file2.<br>    <br>    All <span class="hljs-built_in">file</span> operators except -h <span class="hljs-keyword">and</span> -L are acting <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> target <span class="hljs-keyword">of</span> a symbolic<br>    link, <span class="hljs-keyword">not</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> symlink itself, <span class="hljs-keyword">if</span> FILE <span class="hljs-keyword">is</span> a symbolic link.<br>    <br>    String operators:<br>    <br>      -z STRING      True <span class="hljs-keyword">if</span> <span class="hljs-built_in">string</span> <span class="hljs-keyword">is</span> empty.<br>    <br>      -n STRING<br>         STRING      True <span class="hljs-keyword">if</span> <span class="hljs-built_in">string</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> empty.<br>    <br>      STRING1 = STRING2<br>                     True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> strings are <span class="hljs-keyword">equal</span>.<br>      STRING1 != STRING2<br>                     True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> strings are <span class="hljs-keyword">not</span> <span class="hljs-keyword">equal</span>.<br>      STRING1 &lt; STRING2<br>                     True <span class="hljs-keyword">if</span> STRING1 sorts <span class="hljs-keyword">before</span> STRING2 lexicographically.<br>      STRING1 &gt; STRING2<br>                     True <span class="hljs-keyword">if</span> STRING1 sorts <span class="hljs-keyword">after</span> STRING2 lexicographically.<br>    <br>    Other operators:<br>    <br>      -o OPTION      True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> shell option OPTION <span class="hljs-keyword">is</span> enabled.<br>      -v VAR         True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> shell variable VAR <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span>.<br>      -R VAR         True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> shell variable VAR <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> a <span class="hljs-built_in">name</span><br>                     <span class="hljs-keyword">reference</span>.<br>      ! EXPR         True <span class="hljs-keyword">if</span> expr <span class="hljs-keyword">is</span> <span class="hljs-literal">false</span>.<br>      EXPR1 -a EXPR2 True <span class="hljs-keyword">if</span> both expr1 AND expr2 are <span class="hljs-literal">true</span>.<br>      EXPR1 -o EXPR2 True <span class="hljs-keyword">if</span> either expr1 OR expr2 <span class="hljs-keyword">is</span> <span class="hljs-literal">true</span>.<br>    <br>      arg1 OP arg2   Arithmetic tests.  OP <span class="hljs-keyword">is</span> one <span class="hljs-keyword">of</span> -eq, -ne,<br>                     -lt, -le, -gt, <span class="hljs-keyword">or</span> -ge.<br>    <br>    Arithmetic binary operators <span class="hljs-literal">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> ARG1 <span class="hljs-keyword">is</span> <span class="hljs-keyword">equal</span>, <span class="hljs-keyword">not</span>-<span class="hljs-keyword">equal</span>,<br>    less-than, less-than-<span class="hljs-keyword">or</span>-<span class="hljs-keyword">equal</span>, greater-than, <span class="hljs-keyword">or</span> greater-than-<span class="hljs-keyword">or</span>-<span class="hljs-keyword">equal</span><br>    than ARG2.<br>    <br>    See <span class="hljs-keyword">the</span> bash manual page bash(<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> handling <span class="hljs-keyword">of</span> parameters (i.e.<br>    missing parameters).<br>    <br>    Exit Status:<br>    Returns success <span class="hljs-keyword">if</span> EXPR evaluates <span class="hljs-keyword">to</span> <span class="hljs-literal">true</span>; fails <span class="hljs-keyword">if</span> EXPR evaluates <span class="hljs-keyword">to</span><br>    <span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> an invalid argument <span class="hljs-keyword">is</span> <span class="hljs-keyword">given</span>.<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br><br></code></pre></td></tr></table></figure><h3 id="2-10-1-变量测试"><a href="#2-10-1-变量测试" class="headerlink" title="2.10.1 变量测试"></a>2.10.1 变量测试</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi">#判断 <span class="hljs-keyword">NAME</span> 变量是否定义<br>[ -v <span class="hljs-keyword">NAME</span> ]<br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># NAME=&#x27;tom&#x27;</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -v NAME ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -v AGE ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">1</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="2-10-2-数值测试"><a href="#2-10-2-数值测试" class="headerlink" title="2.10.2 数值测试"></a>2.10.2 数值测试</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-eq 是否等于</span><br><span class="hljs-deletion">-ne 是否不等于</span><br><span class="hljs-deletion">-gt 是否大于</span><br><span class="hljs-deletion">-ge 是否大于等于</span><br><span class="hljs-deletion">-lt 是否小于</span><br><span class="hljs-deletion">-le 是否小于等于</span><br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#i=10<br>[root@centos8 ~]#j=8<br>[root@centos8 ~]#[ $i -lt $j ]<br>[root@centos8 ~]#echo $?<br>1<br></code></pre></td></tr></table></figure><h3 id="2-10-3-算术表达式比较"><a href="#2-10-3-算术表达式比较" class="headerlink" title="2.10.3 算术表达式比较"></a>2.10.3 算术表达式比较</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">== 相等</span><br>!= 不相等<br>&lt;=<br>&gt;=<br>&lt;<br>&gt;<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gcode">[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">10</span>;<span class="hljs-comment">(( x == y )</span>);echo $?<br><span class="hljs-number">0</span><br>[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">20</span>;<span class="hljs-comment">(( x == y )</span>);echo $?<br><span class="hljs-number">1</span><br>[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">20</span>;<span class="hljs-comment">(( x != y )</span>);echo $?<br><span class="hljs-number">0</span><br>[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">10</span>;<span class="hljs-comment">(( x != y )</span>);echo $?<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="2-10-4-字符窜测试"><a href="#2-10-4-字符窜测试" class="headerlink" title="2.10.4 字符窜测试"></a>2.10.4 字符窜测试</h3><p><strong>test和 [ ] 字符串测试用法</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">-z <span class="hljs-built_in">STRING</span> 字符串是否为空，没定义或空为真，不空为假，<br>-n <span class="hljs-built_in">STRING</span> 字符串是否不空，不空为真，空为假<br><span class="hljs-built_in">STRING</span> 同上<br>STRING1 = STRING2 是否等于，注意 = 前后有空格<br>STRING1 != STRING2 是否不等于<br>&gt; ascii码是否大于ascii码<br>&lt; 是否小于<br></code></pre></td></tr></table></figure><p><strong>[[]] 字符串测试用法</strong></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-string">[[ expression ]]</span> 用法<br>== 左侧字符串是否和右侧的PATTERN相同<br>注意:此表达式用于<span class="hljs-string">[[ ]]</span>中，PATTERN为通配符<br>=~ 左侧字符串是否能够被右侧的正则表达式的PATTERN所匹配<br>注意: 此表达式用于<span class="hljs-string">[[ ]]</span>中为扩展的正则表达式<br></code></pre></td></tr></table></figure><p><strong>建议：当使用正则表达式或通配符使用[[ ]]，其它情况一般使用 [ ]</strong>  </p><hr><p><strong>范例：使用 [ ]</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#unset str</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ -z <span class="hljs-string">&quot;$str&quot;</span> ]</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo $?</span><br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><strong>范例：在比较字符串时，建议变量放在“ ”中</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ <span class="hljs-string">&quot;$NAME&quot;</span> ]</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#NAME=<span class="hljs-string">&quot;I love linux&quot;</span></span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ $NAME ]</span><br>-bash: [: love: <span class="hljs-built_in">binary</span> operator expected<br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ <span class="hljs-string">&quot;$NAME&quot;</span> ]</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo $?</span><br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><strong>[[]]中如果不想使用通配符*,只想表达*本身,可以用” “引起来</strong>  </p><hr><p><em><em>#[[]]中如果不想使用通配符</em>,只想表达*本身,也可以使用转义符*</em></p><h3 id="2-10-5-文件测试"><a href="#2-10-5-文件测试" class="headerlink" title="2.10.5 文件测试"></a>2.10.5 文件测试</h3><p><strong>存在性测试</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a FILE：同 -e</span><br><span class="hljs-deletion">-e FILE: 文件存在性测试，存在为真，否则为假</span><br><span class="hljs-deletion">-b FILE：是否存在且为块设备文件</span><br><span class="hljs-deletion">-c FILE：是否存在且为字符设备文件</span><br><span class="hljs-deletion">-d FILE：是否存在且为目录文件</span><br><span class="hljs-deletion">-f FILE：是否存在且为普通文件</span><br><span class="hljs-deletion">-h FILE 或 -L FILE：存在且为符号链接文件</span><br><span class="hljs-deletion">-p FILE：是否存在且为命名管道文件</span><br><span class="hljs-deletion">-S FILE：是否存在且为套接字文件</span><br></code></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -e /data/scripts/rm.sh ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>文件权限测试</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmake">-r <span class="hljs-keyword">FILE</span>：是否存在且可读<br>-w <span class="hljs-keyword">FILE</span>: 是否存在且可写<br>-x <span class="hljs-keyword">FILE</span>: 是否存在且可执行<br>-u <span class="hljs-keyword">FILE</span>：是否存在且拥有suid权限<br>-g <span class="hljs-keyword">FILE</span>：是否存在且拥有sgid权限<br>-k <span class="hljs-keyword">FILE</span>：是否存在且拥有sticky权限<br></code></pre></td></tr></table></figure><p><strong>注意：最终结果由用户对文件的实际权限决定，而非文件属性决定</strong>  </p><hr><p><strong>范例:</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -w /data/scripts/rm.sh ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>文件属性测试</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>s FILE <span class="hljs-comment">#是否存在且非空</span><br><span class="hljs-literal">-</span>t fd <span class="hljs-comment">#fd 文件描述符是否在某终端已经打开</span><br><span class="hljs-literal">-</span>N FILE <span class="hljs-comment">#文件自从上一次被读取之后是否被修改过</span><br><span class="hljs-literal">-</span>O FILE <span class="hljs-comment">#当前有效用户是否为文件属主</span><br><span class="hljs-literal">-</span>G FILE <span class="hljs-comment">#当前有效用户是否为文件属组</span><br>FILE1 -ef FILE2 <span class="hljs-comment">#FILE1是否是FILE2的硬链接</span><br>FILE1 -nt FILE2 <span class="hljs-comment">#FILE1是否新于FILE2（mtime）</span><br>FILE1 -ot FILE2 <span class="hljs-comment">#FILE1是否旧于FILE2</span><br></code></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -s /data/scripts/rm.sh ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="2-11-关于（）和"><a href="#2-11-关于（）和" class="headerlink" title="2.11 关于（）和{}"></a>2.11 关于（）和{}</h2><p><strong>（CMD1;CMD2;…）和 { CMD1;CMD2;…; } 都可以将多个命令组合在一起，批量执行</strong>**</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs scss">( list ) 会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境<br>帮助参看:man bash 搜索(list)<br>&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境<br>帮助参看:man bash 搜索&#123; list; &#125;<br><br>( list ) 会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境<br>帮助参看:man bash 搜索(list)<br>&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境<br>帮助参看:man bash 搜索&#123; list; &#125;<br><br>#（）会开启子shell<br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#echo</span> <span class="hljs-variable">$BASHPID</span><br><span class="hljs-number">1920</span><br><span class="hljs-selector-attr">[root@centos8 ~]</span>#( echo $BASHPID;sleep <span class="hljs-number">100</span>)<br><span class="hljs-number">1979</span><br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#pstree</span> -<span class="hljs-selector-tag">p</span><br>├─<span class="hljs-built_in">sshd</span>(<span class="hljs-number">719</span>)───<span class="hljs-built_in">sshd</span>(<span class="hljs-number">1906</span>)───<span class="hljs-built_in">sshd</span>(<span class="hljs-number">1919</span>)─┬─<span class="hljs-built_in">bash</span>(<span class="hljs-number">1920</span>)───<span class="hljs-built_in">bash</span>(<span class="hljs-number">1979</span>)───<span class="hljs-built_in">sleep</span>(<span class="hljs-number">1980</span>)<br>#&#123; &#125; 不会开启子shell<br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#echo</span> <span class="hljs-variable">$BASHPID</span><br><span class="hljs-number">1920</span><br></code></pre></td></tr></table></figure><h2 id="2-12-组合测试"><a href="#2-12-组合测试" class="headerlink" title="2.12 组合测试"></a>2.12 组合测试</h2><h3 id="2-12-1-第一种方式"><a href="#2-12-1-第一种方式" class="headerlink" title="2.12.1 第一种方式"></a>2.12.1 第一种方式</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">[ EXPRESSION1 -a EXPRESSION2 ] <span class="hljs-meta">#并且，EXPRESSION1和EXPRESSION2都是真，结果才为真</span><br>[ EXPRESSION1 -o EXPRESSION2 ] <span class="hljs-meta">#或者，EXPRESSION1和EXPRESSION2只要有一个真，结果就为</span><br>真<br>[ ! EXPRESSION ] <span class="hljs-meta">#取反</span><br></code></pre></td></tr></table></figure><p><strong>说明： -a 和 -o 需要使用测试命令进行，[[ ]] 不支持</strong></p><h3 id="2-12-2-第二种方式"><a href="#2-12-2-第二种方式" class="headerlink" title="2.12.2 第二种方式"></a>2.12.2 第二种方式</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmake">COMMAND1 &amp;&amp; COMMAND2 <span class="hljs-comment">#并且，短路与，代表条件性的AND THEN</span><br>如果COMMAND1 成功,将执行COMMAND2,否则,将不执行COMMAND2<br>COMMAND1 || COMMAND2 <span class="hljs-comment">#或者，短路或，代表条件性的OR ELSE</span><br>如果COMMAND1 成功,将不执行COMMAND2,否则,将执行COMMAND2<br>! <span class="hljs-keyword">COMMAND</span> <span class="hljs-comment">#非,取反</span><br></code></pre></td></tr></table></figure><p><strong>如果&amp;&amp; 和 || 混合使用，&amp;&amp; 要在前，|| 放在后</strong>  </p><hr><p><strong>练习</strong><br>1、编写脚本 argsnum.sh，接受一个文件路径作为参数；如果参数个数小于1，则提示用户“至少应该给一个参数”，并立即退出；如果参数个数不小于1，则显示第一个参数所指向的文件中的空白行数<br>2、编写脚本 hostping.sh，接受一个主机的IPv4地址做为参数，测试是否可连通。如果能ping通，则提示用户“该IP地址可访问”；如果不可ping通，则提示用户“该IP地址不可访问”<br>3、编写脚本 checkdisk.sh，检查磁盘分区空间和inode使用率，如果超过80%，就发广播警告空间将满<br>4、编写脚本 per.sh，判断当前用户对指定参数文件，是否不可读并且不可写<br>5、编写脚本 excute.sh ，判断参数文件是否为sh后缀的普通文件，如果是，添加所有人可执行权限，否则提示用户非脚本文件<br>6、编写脚本 nologin.sh和 login.sh，实现禁止和允许普通用户登录系统</p><h2 id="2-13-使用read命令来接受输入"><a href="#2-13-使用read命令来接受输入" class="headerlink" title="2.13 使用read命令来接受输入"></a>2.13 使用read命令来接受输入</h2><p>使用read来把输入值分配给一个或多个shell变量，read从标准输入中读取值，给每个单词分配一个变量，所有剩余单词都被分配给最后一个变量，如果变量名没有指定，默认标准输入的值赋值给系统内置变量REPLY<br>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">read <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[name ...]</span><br></code></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-p 指定要显示的提示<br>-s 静默输入，一般用于密码<br>-n N 指定输入的字符长度N<br>-d &#x27;字符&#x27; 输入结束符<br>-t N TIMEOUT为N秒<br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky</span> ~]<span class="hljs-meta"># read -p <span class="hljs-string">&#x27;请输入任意内容&#x27;</span> NAME</span><br>请输入任意内容yuan<br>[root<span class="hljs-symbol">@rocky</span> ~]<span class="hljs-meta"># echo $&#123;NAME&#125;</span><br>yuan<br>[root<span class="hljs-symbol">@rocky</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h1 id="3-条件选择if"><a href="#3-条件选择if" class="headerlink" title="3  条件选择if"></a>3  条件选择if</h1><p><strong>格式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> COMMANDS; <span class="hljs-keyword">then</span> COMMANDS; [ <span class="hljs-keyword">elif</span> COMMANDS; <span class="hljs-keyword">then</span> COMMANDS; ]... [ <span class="hljs-keyword">else</span><br>COMMANDS; ] <span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p><strong>单分支：</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> 判断条件;<span class="hljs-attribute">then</span><br>条件为真的分支代码<br>fi<br></code></pre></td></tr></table></figure><p><strong>双分支：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> 判断条件; <span class="hljs-keyword">then</span><br>条件为真的分支代码<br><span class="hljs-keyword">else</span><br>条件为假的分支代码<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p><strong>多分支：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> 判断条件1; <span class="hljs-keyword">then</span><br>条件1为真的分支代码<br><span class="hljs-keyword">elif</span> 判断条件2; <span class="hljs-keyword">then</span><br>条件2为真的分支代码<br><span class="hljs-keyword">elif</span> 判断条件3; <span class="hljs-keyword">then</span><br>条件3为真的分支代码<br>...<br><span class="hljs-keyword">else</span><br>以上条件都为假的分支代码<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h1 id="4-循环"><a href="#4-循环" class="headerlink" title="4 循环"></a>4 循环</h1><h2 id="4-1-for循环"><a href="#4-1-for循环" class="headerlink" title="4.1 for循环"></a>4.1 for循环</h2><p><strong>帮助：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span><br></code></pre></td></tr></table></figure><p><strong>格式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> NAME [<span class="hljs-keyword">in</span> WORDS ... ] ; <span class="hljs-keyword">do</span> COMMANDS; <span class="hljs-keyword">done</span><br><span class="hljs-comment">#方式1</span><br><span class="hljs-keyword">for</span> 变量名 <span class="hljs-keyword">in</span> 列表;<span class="hljs-keyword">do</span><br>循环体<br><span class="hljs-keyword">done</span><br><span class="hljs-comment">#方式2</span><br><span class="hljs-keyword">for</span> 变量名 <span class="hljs-keyword">in</span> 列表<br><span class="hljs-keyword">do</span><br>循环体<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p><strong>执行机制：</strong></p><ul><li>依次将列表中的元素赋值给“变量名”; 每次赋值后即执行一次循环体; 直到列表中的元素耗尽，循环结束</li><li>如果省略 [in WORDS … ] ，此时使用位置参数变量 in “$@”</li></ul><p><strong>for 循环列表生成方式：</strong></p><ul><li>直接给出列表</li><li>整数列表：</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">&#123;start..<span class="hljs-keyword">end</span>&#125;<br><span class="hljs-constructor">$(<span class="hljs-params">seq</span> [<span class="hljs-params">start</span> [<span class="hljs-params">step</span>]] <span class="hljs-params">end</span>)</span><br></code></pre></td></tr></table></figure><ul><li>返回列表的命令</li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">$(COMMAND)<br></code></pre></td></tr></table></figure><ul><li>使用glob，如：*.sh*</li><li>*变量引用，如：$@，$*，$#</li></ul><p><strong>范例：计算1+···+100的值</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#sum=0;for i in &#123;1..100&#125;;do let sum+=i;done ;echo sum=$sum<br>sum=5050<br>[root@centos8 ~]#seq -s+ 100|bc5050<br>5050<br>[root@centos8 ~]#echo &#123;1..100&#125;|tr &#x27; &#x27; +|bc<br>5050<br>[root@centos8 ~]#seq 100|paste -sd +|bc<br>5050<br></code></pre></td></tr></table></figure><h2 id="4-2-while循环"><a href="#4-2-while循环" class="headerlink" title="4.2 while循环"></a>4.2 while循环</h2><p><strong>格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">while COMMANDS; do COMMANDS; done<br>while CONDITION; do<br>循环体<br>done<br></code></pre></td></tr></table></figure><p><strong>扩展:nc命令</strong></p><p>nc命令 全称netcat，用于设置路由器。它能通过 TCP 和 UDP 在网络中读写数据。通过与其他工具结合和重定向，你可以在脚本中以多种方式使用它。使用 netcat 命令所能完成的事情令人惊讶。</p><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。<br>-G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。<br>-h 在线帮助。<br>-i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描通信端口。<br>-l 使用监听模式，管控传入的资料。<br>-n 直接使用IP地址，而不通过域名服务器。<br>-o&lt;输出文件&gt; 指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。<br>-p&lt;通信端口&gt; 设置本地主机使用的通信端口。<br>-r 乱数指定本地与远端主机的通信端口。<br>-s&lt;来源位址&gt; 设置本地主机送出数据包的IP地址。<br>-u 使用UDP传输协议。<br>-v 显示指令执行过程。<br>-w&lt;超时秒数&gt; 设置等待连线的时间。<br>-z 使用0输入/输出模式，只在扫描通信端口时使用。<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">TCP端口扫描</span><br>[root@rocky ~]# nc -zv 192.168.179.129 80<br>Ncat: Version 7.70 ( https://nmap.org/ncat )<br>Ncat: Connected to 192.168.179.129:80.<br>Ncat: 0 bytes sent, 0 bytes received in 0.01 seconds.<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><p><strong>范例:写一个扫描某个主机端口的状态的脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">变量</span><br>i=1<br><span class="hljs-meta prompt_"># </span><span class="language-bash">主机IP</span><br>host=192.168.179.138<br><span class="hljs-meta prompt_"># </span><span class="language-bash">清空文件内容</span><br>cat /dev/null &gt;port.TXT<br><span class="hljs-meta prompt_"># </span><span class="language-bash">循环端口1-100</span><br>while [ $i -le 100 ];do<br><span class="hljs-meta prompt_"># </span><span class="language-bash">扫描端口并将信息放入垃圾箱</span><br>    if nc -z $&#123;host&#125; $&#123;i&#125; &amp;&gt; /dev/null;then<br>    # 屏幕打印IP+port,输出重定向到port.TXT<br>        echo $&#123;host&#125;:$&#123;i&#125; | tee -a port.TXT<br>    fi<br>    # i++<br>    let i++<br>done<br></code></pre></td></tr></table></figure><h1 id="5-其他脚本相关工具"><a href="#5-其他脚本相关工具" class="headerlink" title="5 其他脚本相关工具"></a>5 其他脚本相关工具</h1><h2 id="5-1-trap命令"><a href="#5-1-trap命令" class="headerlink" title="5.1 trap命令"></a>5.1 trap命令</h2><p>trap命令可以捕捉信号，修改信号原有的功能，实现自定义功能</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 查看信号trap -l 或者kill -l<br>root@ubuntu200404-1:/data/scripts# kill -l<br> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP<br> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1<br>11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM<br>16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP<br>21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ<br>26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR<br>31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3<br>38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8<br>43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13<br>48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12<br>53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7<br>58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2<br>63) SIGRTMAX-164) SIGRTMAX<br>root@ubuntu200404-1:/data/scripts#<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 进程收到系统发出的制定信号后，将执行自定义指令，而不会执原操作</span><br>trap <span class="hljs-string">&#x27;触发指令&#x27;</span> 信号<br><br><span class="hljs-comment"># 忽略信号的操作</span><br>trap <span class="hljs-string">&#x27;&#x27;</span> 信号<br><br><span class="hljs-comment"># 恢复原信号的操作</span><br>trap <span class="hljs-string">&#x27;-&#x27;</span> 信号<br><br><span class="hljs-comment"># 列出自定义的操作</span><br>trap -p<br><br><span class="hljs-comment"># 当脚本退出时，执行finish函数</span><br>trap finish <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br><br># 打印press ctrl+c or ctrl+\   replace int quit<br>trap &quot;echo &#x27;press ctrl+c or ctrl+\ &#x27;&quot; 2 3<br><br># 列出 自定义的操作    <br>trap -p<br><br># 循环并打印1-10<br># 打印1-10键盘按ctrl+c打印press ctrl+c or ctrl<br>for ((i=1;i&lt;=10;i++))<br>do<br>sleep 1<br>echo $&#123;i&#125;<br>done<br><br># 忽略2 3信号操作<br>trap &#x27;&#x27; 2 3<br><br># 打印出自定义操作<br>trap -p<br><br># 打印11-20<br># 打印11-20的时候键盘按ctrl+c没有任何操作<br>for((i=11;i&lt;=20;i++))<br>do<br>sleep 1<br>echo $&#123;i&#125;<br>done<br><br># 恢复原信号操作<br>trap &#x27;-&#x27; int<br><br># 列出信号操作<br>trap -p<br><br># 打印21-30键盘按ctrl+c 退出<br>for((i=21;i&lt;=30;i++))<br>do<br>        sleep 1<br>        echo $&#123;i&#125;<br>done<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br><br>finsh()&#123;<br>echo `date +%F-%T`-finsh | tee -a /data/finsh.log<br><br>&#125;<br># 捕捉到退出执行finsh   trap或者exit<br>trap finsh exit<br><br>while true;do<br>echo running<br>sleep 1<br>done<br></code></pre></td></tr></table></figure><p><strong>创建临时文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># mktemp testXXXX<br>root@ubuntu200404-1:/data/scripts# mktemp testXXXXXX.log<br>testdnlqM9.log<br>root@ubuntu200404-1:/data/scripts# <br><br># 创建临时目录<br>root@ubuntu200404-1:/data/scripts# mktemp -d testXXX<br>testGio<br>root@ubuntu200404-1:/data/scripts#<br></code></pre></td></tr></table></figure><h2 id="5-2-except实现自动化的非交互操作"><a href="#5-2-except实现自动化的非交互操作" class="headerlink" title="5. 2 except实现自动化的非交互操作"></a>5. 2 except实现自动化的非交互操作</h2><p>expect 是由Don Libes基于 Tcl（ Tool Command Language ）语言开发的，主要应用于自动化交互式<br>操作的场景，借助 expect 处理交互的命令，可以将交互过程如：ssh登录，ftp登录等写在一个脚本<br>上，使之自动化完成。尤其适用于需要对多台服务器执行相同操作的环境中，可以大大提高系统管理人<br>员的工作效率。</p><p><strong>expect语法</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">expect [选项] [ -c cmds ] [ [ -[f|b] ] cmdfile ] [ args ]<br></code></pre></td></tr></table></figure><p><strong>常见选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-c：从命令行执行expect脚本，默认expect是交互地执行的<br>-d：可以调试信息<br></code></pre></td></tr></table></figure><p><strong>expect中相关命令</strong></p><ul><li>spawn启动新的进程</li><li>expect    从进程接收字符串</li><li>send 用于向进程发送字符串</li><li>interact 允许用户交互</li><li>exp_continue 匹配多个字符串在执行动作后加此命令</li></ul><p><strong>范例1:自动登录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 创建文件<br>vim filename<br><br># 脚本内容<br>#!/usr/bin/expect<br><br># 启动新的进程<br>spawn ssh 192.168.179.138<br># 从进程接收字符串<br>expect &#123;<br># 匹配到yse/no，输入yes<br>&quot;yes/no&quot; &#123;send &quot;yes\n&quot;;exp_continue &#125;<br>&quot;password&quot; &#123; send &quot;123456\n&quot; &#125;<br>&#125;<br># 允许用户交互<br>interact<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 添加可执行权限<br>chmod +x filename<br># 执行<br>./filename<br></code></pre></td></tr></table></figure><p><strong>扩展：scp命令</strong></p><p><strong>语法</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp 选项 参数<br></code></pre></td></tr></table></figure><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-1：使用ssh协议版本1；<br>-2：使用ssh协议版本2；<br>-4：使用ipv4；<br>-6：使用ipv6；<br>-B：以批处理模式运行；<br>-C：使用压缩；<br>-F：指定ssh配置文件；<br>-i：identity_file 从指定文件中读取传输时使用的密钥文件（例如亚马逊云pem），此参数直接传递给ssh；<br>-l：指定宽带限制；<br>-o：指定使用的ssh选项；<br>-P：指定远程主机的端口号；<br>-p：保留文件的最后修改时间，最后访问时间和权限模式；<br>-q：不显示复制进度；<br>-r：以递归方式复制。<br></code></pre></td></tr></table></figure><p><strong>实例</strong><br>从远程复制到本地的scp命令与上面的命令雷同，只要将从本地复制到远程的命令后面2个参数互换顺序就行了。</p><p><strong>从远程机器复制文件到本地目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/<br></code></pre></td></tr></table></figure><p>从10.10.10.10机器上的&#x2F;opt&#x2F;soft&#x2F;的目录中下载nginx-0.5.38.tar.gz 文件到本地&#x2F;opt&#x2F;soft&#x2F;目录中。</p><p><strong>从远程机器复制目录到本地</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp -r root@10.10.10.10:/opt/soft/mongodb /opt/soft/<br></code></pre></td></tr></table></figure><p>从10.10.10.10机器上的&#x2F;opt&#x2F;soft&#x2F;中下载mongodb目录到本地的&#x2F;opt&#x2F;soft&#x2F;目录来。</p><p><strong>上传本地文件到远程机器指定目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest<br># 指定端口 2222<br>scp -rp -P 2222 /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest<br></code></pre></td></tr></table></figure><p>复制本地&#x2F;opt&#x2F;soft&#x2F;目录下的文件nginx-0.5.38.tar.gz到远程机器10.10.10.10的opt&#x2F;soft&#x2F;scptest目录。</p><p><strong>上传本地目录到远程机器指定目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp -r /opt/soft/mongodb root@10.10.10.10:/opt/soft/scptest<br></code></pre></td></tr></table></figure><p>上传本地目录&#x2F;opt&#x2F;soft&#x2F;mongodb到远程机器10.10.10.10上&#x2F;opt&#x2F;soft&#x2F;scptest的目录中去。</p><p><strong>范例2:非交互式复制文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 开启新的进程,复制当前主机下的/root/hello.sh到远程主机<br>spawn scp /root/hello.sh root@192.168.179.129:/root<br><br>expect &#123;<br># 匹配到yes/no，输入yes<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;123456\n&quot;&#125;<br>&#125;<br>expect eof<br></code></pre></td></tr></table></figure><p><strong>范例3:变量</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 添加变量<br>set ip 192.168.179.138<br>set user root<br>set passwd 123456<br>set timeout 10<br><br># 启动新的进程<br>spawn ssh $&#123;user&#125;@$&#123;ip&#125;<br><br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;<br>&#125;<br><br># 允许交互式操作<br>interact<br></code></pre></td></tr></table></figure><p><strong>范例4:位置参数</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 添加变量<br>set ip [lindex $argv 0]<br>set user [lindex $argv 1]<br>set passwd [lindex $argv 2]<br>set timeout 10<br><br># 启动新的进程<br>spawn ssh $&#123;user&#125;@$&#123;ip&#125;<br><br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;<br><br><br>&#125;<br># 允许交互式操作<br>interact<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 添加执行权限<br>[root@centos7 ~]# chmmod +x expect3<br># 后面跟三个参数<br>[root@centos7 ~]# ./expect3 192.168.179.138 root 123456<br></code></pre></td></tr></table></figure><p><strong>范例5:执行多个命令</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 添加变量<br>set ip [lindex $argv 0]<br>set user [lindex $argv 1]<br>set passwd [lindex $argv 2]<br>set timeout 10<br><br># 启动新的进程<br>spawn ssh $&#123;user&#125;@$&#123;ip&#125;<br><br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;<br><br>&#125;<br># adduser haha<br>expect &quot;]#&quot; &#123; send &quot;useradd haha\n&quot; &#125;<br># passwd set 123456<br>expect &quot;]#&quot; &#123; send &quot;echo 123456 |passwd --stdin haha\n&quot; &#125;<br># logout<br>send &quot;exit\n&quot;<br>expect eof<br><br>[root@centos7 ~]# ./expect4 192.168.179.141 root 123456<br></code></pre></td></tr></table></figure><p><strong>范例6:shell脚本调用expect</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br>ip=$1<br>user=$2<br>password=$3<br>expect &lt;&lt;EOF<br>set timeout 20<br># 开启新的进程，登录远程主机<br>spawn ssh $user@$ip<br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;<br>&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;<br>&#125;<br><br># 添加新的用户<br>expect &quot;]#&quot; &#123; send &quot;useradd hehe\n&quot; &#125;<br># 设置新密码<br>expect &quot;]#&quot; &#123; send &quot;echo 123456 |passwd --stdin hehe\n&quot; &#125;<br># logout<br>expect &quot;]#&quot; &#123; send &quot;exit\n&quot; &#125;<br>expect eof<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# bash expect5.sh 192.168.179.141 root 123456<br></code></pre></td></tr></table></figure><p><strong>范例7: shell脚本利用循环调用expect在CentOS和Ubuntu上批量创建用户</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs TXT">NET=10.0.0<br>user=root<br>password=magedu<br>IPLIST=&quot;<br>7<br>18<br>101<br>&quot;<br>for ID in $IPLIST;do<br>ip=$NET.$ID<br>expect &lt;&lt;EOF<br>set timeout 20<br>spawn ssh $user@$ip<br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;<br>&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;<br>&#125;<br>expect &quot;#&quot; &#123; send &quot;useradd test\n&quot; &#125;<br>expect &quot;#&quot; &#123; send &quot;exit\n&quot; &#125;<br>expect eof<br>EOF<br>done<br></code></pre></td></tr></table></figure><h1 id="6-数组"><a href="#6-数组" class="headerlink" title="6 数组"></a>6 数组</h1><h2 id="6-1-数组介绍"><a href="#6-1-数组介绍" class="headerlink" title="6.1 数组介绍"></a>6.1 数组介绍</h2><p>变量：存储单个元素的内存空间<br>数组：存储多个元素的连续的内存空间，相当于多个变量的集合<br>数组名和索引</p><ul><li>索引的编号从0开始，属于数值索引</li><li>索引可支持使用自定义的格式，而不仅是数值格式，即为关联索引，bash 4.0版本之后开始支持</li><li>bash的数组支持稀疏格式（索引不连续）</li></ul><h2 id="6-2-声明数组"><a href="#6-2-声明数组" class="headerlink" title="6.2 声明数组"></a>6.2 声明数组</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#普通数组可以不事先声明,直接使用<br>declare -a ARRAY_NAME<br>#关联数组必须先声明,再使用<br>declare -A ARRAY_NAME<br></code></pre></td></tr></table></figure><p><strong>注:两者不可相互转换</strong></p><h2 id="6-3-数组赋值"><a href="#6-3-数组赋值" class="headerlink" title="6.3 数组赋值"></a>6.3 数组赋值</h2><p>数组元素的赋值<br>**(1) 一次只赋值一个元素  **</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXt">ARRAY_NAME[INDEX]=VALUE<br></code></pre></td></tr></table></figure><p><strong>范例：</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">weekdays[0]=&quot;Sunday&quot;<br>weekdays[4]=&quot;Thursday&quot;<br></code></pre></td></tr></table></figure><p><strong>(2) 一次赋值全部元素</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ARRAY_NAME=(&quot;VAL1&quot; &quot;VAL2&quot; &quot;VAL3&quot; ...)<br></code></pre></td></tr></table></figure><p><strong>范例:</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT">title=(&quot;ceo&quot; &quot;coo&quot; &quot;cto&quot;)<br>num=(&#123;0..10&#125;)<br>alpha=(&#123;a..g&#125;)<br>file=( *.sh )<br></code></pre></td></tr></table></figure><p><strong>(3)只赋值特定元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ARRAY_NAME=([0]=&quot;VAL1&quot; [3]=&quot;VAL2&quot; ...)<br></code></pre></td></tr></table></figure><p><strong>(4)交互式赋值元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">read -a ARRAY<br></code></pre></td></tr></table></figure><h2 id="6-4-显示所有数组"><a href="#6-4-显示所有数组" class="headerlink" title="6.4 显示所有数组"></a>6.4 显示所有数组</h2><p><strong>显示所有数组</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">declare -a<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# declare -a<br>declare -a BASH_ARGC=&#x27;()&#x27;<br>declare -a BASH_ARGV=&#x27;()&#x27;<br>declare -a BASH_LINENO=&#x27;()&#x27;<br>declare -a BASH_SOURCE=&#x27;()&#x27;<br>declare -ar BASH_VERSINFO=&#x27;([0]=&quot;4&quot; [1]=&quot;2&quot; [2]=&quot;46&quot; [3]=&quot;2&quot; [4]=&quot;release&quot; [5]=&quot;x86_64-redhat-linux-gnu&quot;)&#x27;<br>declare -a DIRSTACK=&#x27;()&#x27;<br>declare -a FUNCNAME=&#x27;()&#x27;<br>declare -a GROUPS=&#x27;()&#x27;<br>declare -a PIPESTATUS=&#x27;([0]=&quot;0&quot;)&#x27;<br>[root@centos7 ~]# <br><br></code></pre></td></tr></table></figure><h2 id="6-5-引用数组"><a href="#6-5-引用数组" class="headerlink" title="6.5 引用数组"></a>6.5 引用数组</h2><p><strong>引用特定的数组元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;ARRAY_NAME[INDEX]&#125;<br>#如果省略[INDEX]表示引用下标为0的元素<br></code></pre></td></tr></table></figure><p><strong>引用所有数组元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;ARRAY_NAME[*]&#125;<br>$&#123;ARRAY_NAME[@]&#125;<br></code></pre></td></tr></table></figure><p><strong>数组的长度，即数组的元素的个数</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;#ARRAY_NAME[*]&#125;<br>$&#123;#ARRAY_NAME[@]&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# title[0]=1<br>[root@centos7 ~]# title[1]=1<br>[root@centos7 ~]# title[2]=1<br>[root@centos7 ~]# echo $&#123;#title[*]&#125;<br>3<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>数组的所有下标</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;!ARRAY_NAME[*]&#125;<br>$&#123;!ARRAY_NAME[@]&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# title[0]=1<br>[root@centos7 ~]# title[1]=1<br>[root@centos7 ~]# title[2]=1<br>[root@centos7 ~]# echo $&#123;!title[*]&#125;<br>0 1 2<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h2 id="6-6-删除数组"><a href="#6-6-删除数组" class="headerlink" title="6.6 删除数组"></a>6.6 删除数组</h2><p><strong>删除数组中的某个元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">unset ARRAY[INDEX]<br></code></pre></td></tr></table></figure><p><strong>删除整个数组</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">unset ARRAY<br></code></pre></td></tr></table></figure><h2 id="6-7-数组数据处理"><a href="#6-7-数组数据处理" class="headerlink" title="6.7 数组数据处理"></a>6.7 数组数据处理</h2><p><strong>数据切片</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;ARRAY[@]:offset:number&#125;<br>$&#123;ARRAY[*]:offset:number&#125;<br>offset #要跳过的元素个数<br>number #要取出的元素个数<br>#取偏移量之后的所有元素<br>&#123;ARRAY[@]:offset&#125;<br>&#123;ARRAY[*]:offset&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos8 ~]#num=(&#123;0..10&#125;)<br>[root@centos8 ~]#echo $&#123;num[*]:2:3&#125;<br>2 3 4<br>[root@centos8 ~]#echo $&#123;num[*]:6&#125;<br>6 7 8 9 10<br></code></pre></td></tr></table></figure><p><strong>向数组中追加元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ARRAY[$&#123;#ARRAY[*]&#125;]=value<br>ARRAY[$&#123;#ARRAY[@]&#125;]=value<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos8 ~]#num[$&#123;#num[@]&#125;]=11<br>[root@centos8 ~]#echo $&#123;#num[@]&#125;<br>12<br>[root@centos8 ~]#echo $&#123;num[@]&#125;<br>0 1 2 3 4 5 6 7 8 9 10 11<br></code></pre></td></tr></table></figure><p><strong>范例：生成10个随机数保存于数组中，并找出其最大值和最小值</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br>declare -i min max<br>declare -a nums<br>for ((i=0;i&lt;10;i++));do<br>nums[$i]=$RANDOM<br>[ $i -eq 0 ] &amp;&amp; min=$&#123;nums[0]&#125; &amp;&amp; max=$&#123;nums[0]&#125;&amp;&amp; continue<br>[ $&#123;nums[$i]&#125; -gt $max ] &amp;&amp; max=$&#123;nums[$i]&#125; &amp;&amp; continue<br>[ $&#123;nums[$i]&#125; -lt $min ] &amp;&amp; min=$&#123;nums[$i]&#125;<br>done<br>echo &quot;All numbers are $&#123;nums[*]&#125;&quot;<br>echo Max is $max<br>echo Min is $min<br></code></pre></td></tr></table></figure><h1 id="7-字符串处理"><a href="#7-字符串处理" class="headerlink" title="7 字符串处理"></a>7 字符串处理</h1><h2 id="7-1-字符串切片"><a href="#7-1-字符串切片" class="headerlink" title="7.1 字符串切片"></a>7.1 字符串切片</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#返回字符串变量var的字符的长度,一个汉字算一个字符<br>$&#123;#var&#125;<br>#返回字符串变量var中从第offset个字符后（不包括第offset个字符）的字符开始，到最后的部分，<br>offset的取值在0 到 $&#123;#var&#125;-1 之间(bash4.2后，允许为负值)<br>$&#123;var:offset&#125;<br>#返回字符串变量var中从第offset个字符后（不包括第offset个字符）的字符开始，长度为number的部分<br>$&#123;var:offset:number&#125;<br>#取字符串的最右侧几个字符,取字符串的最右侧几个字符, 注意：冒号后必须有一空白字符<br>$&#123;var: -length&#125;<br>#从最左侧跳过offset字符，一直向右取到距离最右侧lengh个字符之前的内容,即:掐头去尾<br>$&#123;var:offset:-length&#125;<br>#先从最右侧向左取到length个字符开始，再向右取到距离最右侧offset个字符之间的内容,注意：-<br>length前空格,并且length必须大于offset<br>$&#123;var: -length:-offset&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos8 script40]#str=abcdef我你他<br>[root@centos8 script40]#echo $&#123;#str&#125;<br>9<br>[root@centos8 script40]#echo $&#123;str:2&#125;<br>cdef我你他<br>[root@centos8 script40]#echo $&#123;str:2:3&#125;<br>cde<br>[root@centos8 script40]#echo $&#123;str:-3&#125;<br>abcdef我你他<br>[root@centos8 script40]#echo $&#123;str: -3&#125;<br>我你他<br>[root@centos8 script40]#echo $&#123;str:2:-3&#125;<br>cdef<br>[root@centos8 script40]#echo $&#123;str: -2:-3&#125;<br>-bash: -3: substring expression &lt; 0<br>[root@centos8 script40]#echo $&#123;str: -3:-2&#125;<br>我<br>[root@centos8 script40]#echo $&#123;str:-3:-2&#125;<br>abcdef我你他<br>[root@centos8 script40]#echo $&#123;str: -3:-2&#125;<br>我<br>[root@centos8 script40]#echo $&#123;str: -5:-2&#125;<br>ef我<br></code></pre></td></tr></table></figure><h2 id="7-2-基于模式取子串"><a href="#7-2-基于模式取子串" class="headerlink" title="7.2 基于模式取子串"></a>7.2 基于模式取子串</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#其中word可以是指定的任意字符,自左而右，查找var变量所存储的字符串中，第一次出现的word, 删除字<br>符串开头至第一次出现word字符串（含）之间的所有字符,即懒惰模式,以第一个word为界删左留右<br>$&#123;var#*word&#125;<br>#从var变量的值中删除以word开头的部分<br>$&#123;var#word&#125;<br>#同上，贪婪模式，不同的是，删除的是字符串开头至最后一次由word指定的字符之间的所有内容,即贪婪模<br>式,以最后一个word为界删左留右<br>$&#123;var##*word&#125;<br>$&#123;var##word&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXt">[root@centos8 ~]#file=&quot;var/log/messages&quot;<br>[root@centos8 ~]#echo $&#123;file#*/&#125;<br>log/messages<br>[root@centos8 ~]#echo $&#123;file##*/&#125;<br>messages<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#其中word可以是指定的任意字符,功能：自右而左，查找var变量所存储的字符串中，第一次出现的word,<br>删除字符串最后一个字符向左至第一次出现word字符串（含）之间的所有字符,即懒惰模式,以从右向左的第<br>一个word为界删右留左<br>$&#123;var%word*&#125;<br>$&#123;var%word&#125;<br>#同上，只不过删除字符串最右侧的字符向左至最后一次出现word字符之间的所有字符,即贪婪模式,以从右向<br>左的最后一个word为界删右留左<br>$&#123;var%%word*&#125;<br>$&#123;var%%word&#125;<br></code></pre></td></tr></table></figure><h2 id="7-3-查找和替换"><a href="#7-3-查找和替换" class="headerlink" title="7.3 查找和替换"></a>7.3 查找和替换</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#查找var所表示的字符串中，第一次被pattern所匹配到的字符串，以substr替换之<br>$&#123;var/pattern/substr&#125;<br>#查找var所表示的字符串中，所有能被pattern所匹配到的字符串，以substr替换之<br>$&#123;var//pattern/substr&#125;<br>#查找var所表示的字符串中，行首被pattern所匹配到的字符串，以substr替换之<br>$&#123;var/#pattern/substr&#125;<br>#查找var所表示的字符串中，行尾被pattern所匹配到的字符串，以substr替换之<br>$&#123;var/%pattern/substr&#125;<br></code></pre></td></tr></table></figure><h2 id="7-4-查找和删除"><a href="#7-4-查找和删除" class="headerlink" title="7.4 查找和删除"></a>7.4 查找和删除</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var表示的字符串中第一次被pattern匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var/pattern&#125;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var表示的字符串中所有被pattern匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var//pattern&#125;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var表示的字符串中所有以pattern为行首匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var/<span class="hljs-comment">#pattern&#125;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var所表示的字符串中所有以pattern为行尾所匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var/%pattern&#125;</span><br></code></pre></td></tr></table></figure><h2 id="7-5-字符大小写转换"><a href="#7-5-字符大小写转换" class="headerlink" title="7.5 字符大小写转换"></a>7.5 字符大小写转换</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXt">#把var中的所有小写字母转换为大写<br>$&#123;var^^&#125;<br>#把var中的所有大写字母转换为小写<br>$&#123;var,,&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件查找和打包压缩</title>
    <link href="/2022/08/01/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E5%92%8C%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/"/>
    <url>/2022/08/01/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E5%92%8C%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="文件查找和打包压缩"><a href="#文件查找和打包压缩" class="headerlink" title="文件查找和打包压缩"></a>文件查找和打包压缩</h1>  <p class="note note-success">内容概述</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">- locate  <br>- find  <br>- xargs  <br>- compress和uncompress  <br>- gzip和gunzip  <br>- bzip2和bunzip2  <br>- xz和unxz  <br>- zip和unzip  <br>- tar <br></code></pre></td></tr></table></figure><h2 id="1-查找工具"><a href="#1-查找工具" class="headerlink" title="1 查找工具"></a>1 查找工具</h2><p>在文件系统上查找符合条件的文件<br>文件查找：</p><ul><li>非实时查找(数据库查找)：locate</li><li>实时查找：find</li></ul><h3 id="1-1-locate"><a href="#1-1-locate" class="headerlink" title="1.1 locate"></a>1.1 locate</h3><p>locate 查询系统上预建的文件索引数据库&#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db<br>索引的构建是在系统较为空闲时自动进行(周期性任务)，执行updatedb可以更新数据库<br>索引构建过程需要遍历整个根文件系统，很消耗资源<br>locate和updatedb命令来自于mlocate包<br>工作特点:</p><ul><li>查找速度快</li><li>模糊查找</li><li>非实时查找</li><li>搜索的是文件的全路径，不仅仅是文件名</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">locate [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">PATTERN</span>]...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-i 不区分大小写的搜索</span><br><span class="hljs-deletion">-n N 只列举前N个匹配项目</span><br><span class="hljs-deletion">-r 使用基本正则表达式</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 终端">#搜索名称或路径中包含“conf&quot;的文件<br>locate conf<br>#使用Regex来搜索以“.conf&quot;结尾的文件<br>locate -r &#x27;\.conf$&#x27;<br></code></pre></td></tr></table></figure><p>范例：创建locatedb数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# updatedb<br>[root@rocky8 data]# locate -n 3 conf<br>/boot/config-4.18.0-372.13.1.el8_6.x86_64<br>/boot/config-4.18.0-372.9.1.el8.x86_64<br>/boot/grub2/i386-pc/configfile.mod<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>范例: 文件新创建和删除,无法马上更新locate数据库</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 创建yuankun.txt文件查找没有结果</span><br>[root@rocky8 data]<span class="hljs-comment"># touch yuankun.txt</span><br>[root@rocky8 data]<span class="hljs-comment"># locate yuankun.txt </span><br>[root@rocky8 data]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 已经删除/data/a.txt文件，查找a.txt文件还能找到</span><br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total <span class="hljs-number">8</span><br>-rw-r--r-- <span class="hljs-number">1</span> root root   <span class="hljs-number">22</span> Jul <span class="hljs-number">30</span> <span class="hljs-number">04</span>:<span class="hljs-number">07</span> a.txt<br>-rw-r--r-- <span class="hljs-number">1</span> root root <span class="hljs-number">1511</span> Jul <span class="hljs-number">30</span> <span class="hljs-number">05</span>:<span class="hljs-number">11</span> passwd<br>-rw-r--r-- <span class="hljs-number">1</span> root root    <span class="hljs-number">0</span> Aug  <span class="hljs-number">1</span> <span class="hljs-number">22</span>:<span class="hljs-number">06</span> yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># rm -rf a.txt </span><br>[root@rocky8 data]<span class="hljs-comment"># locate a.txt</span><br><span class="hljs-regexp">/data/</span>a.txt<br><span class="hljs-regexp">/home/yu</span>ankun/a.txt<br><span class="hljs-regexp">/root/</span>a.txt<br><span class="hljs-regexp">/root/</span>data.txt<br><span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/firmware/</span>brcm/brcmfmac43340-sdio.pov-tab-p1006w-data.txt<br><span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/firmware/</span>brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-ultra.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>DEFAULT/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>EMPTY/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>FIPS/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>FUTURE/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>LEGACY/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/doc/</span>perl-CPAN-Meta<span class="hljs-regexp">/t/</span>README-data.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/doc/</span>vim-common/README_extra.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/gnupg/</span>help.ca.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/gnupg/</span>help.da.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/gnupg/</span>help.ja.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/</span>ft_ada.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/i</span>f_lua.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/</span>os_amiga.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/ug</span>anda.txt<br><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>pyenv<span class="hljs-regexp">/lib/</span>python3.<span class="hljs-number">7</span><span class="hljs-regexp">/test/</span>test_email<span class="hljs-regexp">/data/m</span>sg_12a.txt<br>[root@rocky8 data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="1-2-find"><a href="#1-2-find" class="headerlink" title="1.2 find"></a>1.2 find</h3><p>find 是实时查找工具，通过遍历指定路径完成文件查找。<br>工作特点：</p><ul><li>查找速度略慢</li><li>精确查找</li><li>实时查找</li><li>查找条件丰富</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">find <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[查找路径]</span> <span class="hljs-selector-attr">[查找条件]</span> <span class="hljs-selector-attr">[处理动作]</span><br></code></pre></td></tr></table></figure><p>查找路径：指定具体目标路径；默认为当前目录<br>查找条件：指定的查找标准，可以文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所<br>有文件<br>处理动作：对符合条件的文件做操作，默认输出至屏幕</p><h4 id="1-2-1-指定搜索目录层级"><a href="#1-2-1-指定搜索目录层级" class="headerlink" title="1.2.1 指定搜索目录层级"></a>1.2.1 指定搜索目录层级</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-maxdepth level 最大搜索目录深度,指定目录下的文件为第1级</span><br><span class="hljs-deletion">-mindepth level 最小搜索目录深度</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">find</span> /etc -maxdepth <span class="hljs-number">2</span> -mindepth <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h4 id="1-2-2-对每个目录先处理目录内的文件，再处理目录本身"><a href="#1-2-2-对每个目录先处理目录内的文件，再处理目录本身" class="headerlink" title="1.2.2 对每个目录先处理目录内的文件，再处理目录本身"></a>1.2.2 对每个目录先处理目录内的文件，再处理目录本身</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">-depth<br>-d #<span class="hljs-built_in">warning</span>: the -d <span class="hljs-keyword">option</span> <span class="hljs-keyword">is</span> deprecated; please use -depth <span class="hljs-keyword">instead</span>, because the latter <span class="hljs-keyword">is</span> a POSIX-compliant feature<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@centos8 data]#tree <span class="hljs-regexp">/data/</span>test<br><span class="hljs-regexp">/data/</span>test<br>├── f1.txt<br>├── f2.txt<br>└── test2<br>└── test3<br>├── f3.txt<br>└── f4.txt<br><span class="hljs-number">4</span> directories, <span class="hljs-number">2</span> files<br>[root@centos8 data]#<span class="hljs-keyword">find</span> <span class="hljs-regexp">/data/</span>test<br><span class="hljs-regexp">/data/</span>test<br><span class="hljs-regexp">/data/</span>test/f1.txt<br><span class="hljs-regexp">/data/</span>test/f2.txt<br><span class="hljs-regexp">/data/</span>test/test2<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f3.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f4.txt<br>[root@centos8 data]#<span class="hljs-keyword">find</span> <span class="hljs-regexp">/data/</span>test -depth<br><span class="hljs-regexp">/data/</span>test/f1.txt<br><span class="hljs-regexp">/data/</span>test/f2.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f3.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f4.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3<br><span class="hljs-regexp">/data/</span>test/test2<br><span class="hljs-regexp">/data/</span>test<br></code></pre></td></tr></table></figure><h4 id="1-2-3-根据文件名和inode查找"><a href="#1-2-3-根据文件名和inode查找" class="headerlink" title="1.2.3 根据文件名和inode查找"></a>1.2.3 根据文件名和inode查找</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>name &quot;文件名称&quot; <span class="hljs-comment">#支持使用glob，如：*, ?, [], [^],通配符要加双引号引起来</span><br><span class="hljs-literal">-</span>iname &quot;文件名称&quot; <span class="hljs-comment">#不区分字母大小写</span><br><span class="hljs-literal">-</span>inum n <span class="hljs-comment">#按inode号查找</span><br><span class="hljs-literal">-</span>samefile name <span class="hljs-comment">#相同inode号的文件</span><br><span class="hljs-literal">-</span>links n <span class="hljs-comment">#链接数为n的文件</span><br><span class="hljs-literal">-</span>regex “PATTERN&quot; <span class="hljs-comment">#以PATTERN匹配整个文件路径，而非文件名称</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-根据属主、属组查找"><a href="#1-2-4-根据属主、属组查找" class="headerlink" title="1.2.4 根据属主、属组查找"></a>1.2.4 根据属主、属组查找</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">-<span class="hljs-keyword">user</span> <span class="hljs-title">USERNAME</span> <span class="hljs-comment">#查找属主为指定用户(UID)的文件</span><br>-<span class="hljs-keyword">group</span> <span class="hljs-title">GRPNAME</span> <span class="hljs-comment">#查找属组为指定组(GID)的文件</span><br>-uid UserID <span class="hljs-comment">#查找属主为指定的UID号的文件</span><br>-gid GroupID <span class="hljs-comment">#查找属组为指定的GID号的文件</span><br>-nouser <span class="hljs-comment">#查找没有属主的文件</span><br>-nogroup <span class="hljs-comment">#查找没有属组的文件</span><br></code></pre></td></tr></table></figure><h4 id="1-2-5-根据文件类型查找"><a href="#1-2-5-根据文件类型查找" class="headerlink" title="1.2.5 根据文件类型查找"></a>1.2.5 根据文件类型查找</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>type TYPE<br>TYPE可以是以下形式：<br><span class="hljs-attribute">f</span>: 普通文件<br><span class="hljs-attribute">d</span>: 目录文件<br><span class="hljs-attribute">l</span>: 符号链接文件<br>s：套接字文件<br><span class="hljs-attribute">b</span>: 块设备文件<br><span class="hljs-attribute">c</span>: 字符设备文件<br><span class="hljs-attribute">p</span>: 管道文件<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看/home的目录</span><br>find /home –<span class="hljs-built_in">type</span> d -<span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><h4 id="1-2-6-空文件或目录"><a href="#1-2-6-空文件或目录" class="headerlink" title="1.2.6 空文件或目录"></a>1.2.6 空文件或目录</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-empty</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">[root@centos8 ~]#find /app -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-empty<br></code></pre></td></tr></table></figure><h4 id="1-2-7-组合条件"><a href="#1-2-7-组合条件" class="headerlink" title="1.2.7 组合条件"></a>1.2.7 组合条件</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">与：-<span class="hljs-selector-tag">a</span> ，默认多个条件是与关系，所以可以省略-<span class="hljs-selector-tag">a</span><br>或：-o<br>非：-not !<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">[root@centos8 ~]#find /etc/ -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-o -<span class="hljs-keyword">type</span> <span class="hljs-type">l </span>|wc -l<br><span class="hljs-number">307</span><br>[root@centos8 ~]#find /etc/ -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-o -<span class="hljs-keyword">type</span> <span class="hljs-type">l </span>-ls |wc -l<br><span class="hljs-number">101</span><br>[root@centos8 ~]#find /etc/ \( -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-o -<span class="hljs-keyword">type</span> <span class="hljs-type">l </span>\) -ls |wc -l<br><span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><p>德·摩根定律：</p><ul><li>非 A) 且 (非 B) &#x3D; 非(A 或 B)</li><li>(非 A) 或 (非 B) &#x3D; 非(A 且 B)</li></ul><p>示例：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!A -a !B = !(A -o B)<br>!A -o !B = !(A -a B)<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#找出/tmp目录下，属主不是root，且文件名不以f开头的文件</span><br>find /tmp \( -not -user root -a -not -name <span class="hljs-string">&#x27;f*&#x27;</span> \) -<span class="hljs-built_in">ls</span><br>find /tmp -not \( -user root -o -name <span class="hljs-string">&#x27;f*&#x27;</span> \) –<span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><h4 id="1-2-8-排除目录"><a href="#1-2-8-排除目录" class="headerlink" title="1.2.8 排除目录"></a>1.2.8 排除目录</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#查找/etc/下，除/etc/<span class="hljs-keyword">security</span>目录的其它所有.conf后缀的文件<br>find /etc -<span class="hljs-type">path</span> <span class="hljs-string">&#x27;/etc/security&#x27;</span> -a -prune -o -<span class="hljs-type">name</span> &quot;*.conf&quot;<br>#查找/etc/下，除/etc/<span class="hljs-keyword">security</span>和/etc/systemd,/etc/dbus<span class="hljs-number">-1</span>三个目录的所有.conf后缀的文件<br>find /etc \( -<span class="hljs-type">path</span> &quot;/etc/security&quot; -o -<span class="hljs-type">path</span> &quot;/etc/systemd&quot; -o -<span class="hljs-type">path</span> &quot;/etc/dbus-<br>1&quot; \) -a -prune -o -<span class="hljs-type">name</span> &quot;*.conf&quot;<br>#排除/proc和/sys目录<br>find / \( -<span class="hljs-type">path</span> &quot;/sys&quot; -o -<span class="hljs-type">path</span> &quot;/proc&quot; \) -a -prune -o -<span class="hljs-keyword">type</span> f -a -mmin <span class="hljs-number">-1</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span> / -<span class="hljs-keyword">size</span> +<span class="hljs-number">10</span>G<br>[root@centos8 ~]#<span class="hljs-keyword">find</span> / -<span class="hljs-keyword">size</span> +<span class="hljs-number">10</span>G<br><span class="hljs-regexp">/proc/</span>kcore<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/task/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fd/</span><span class="hljs-number">6</span>’: No such <span class="hljs-keyword">file</span> or directory<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/task/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fdinfo/</span><span class="hljs-number">6</span>’: No such <span class="hljs-keyword">file</span> or directory<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fd/</span><span class="hljs-number">5</span>’: No such <span class="hljs-keyword">file</span> or directory<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fdinfo/</span><span class="hljs-number">5</span>’: No such <span class="hljs-keyword">file</span> or directory<br>[root@centos8 ~]#ll -h <span class="hljs-regexp">/proc/</span>kcore<br>-r-------- <span class="hljs-number">1</span> root root <span class="hljs-number">128</span>T Dec <span class="hljs-number">14</span> <span class="hljs-number">2020</span> <span class="hljs-regexp">/proc/</span>kcore<br>[root@centos8 ~]#du -sh <span class="hljs-regexp">/proc/</span>kcore<br><span class="hljs-number">0</span> <span class="hljs-regexp">/proc/</span>kcore<br></code></pre></td></tr></table></figure><h4 id="1-2-9-根据时间戳"><a href="#1-2-9-根据时间戳" class="headerlink" title="1.2.9 根据时间戳"></a>1.2.9 根据时间戳</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment">#以“天&quot;为单位</span><br><span class="hljs-literal">-</span>atime [+|-]<span class="hljs-comment">#</span><br><span class="hljs-comment"># #表示[#,#+1)</span><br>+<span class="hljs-comment"># #表示[#+1,∞]</span><br><span class="hljs-literal">-</span><span class="hljs-comment"># #表示[0,#)</span><br><span class="hljs-literal">-</span>mtime<br><span class="hljs-literal">-</span>ctime<br><span class="hljs-comment">#以“分钟&quot;为单位</span><br><span class="hljs-literal">-</span>amin<br><span class="hljs-literal">-</span>mmin<br><span class="hljs-literal">-</span>cmin<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1659365798543.png" alt="1659365798543"></p><h4 id="1-2-10-根据权限查找"><a href="#1-2-10-根据权限查找" class="headerlink" title="1.2.10 根据权限查找"></a>1.2.10 根据权限查找</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>perm [/|-]MODE<br>MODE <span class="hljs-comment">#精确权限匹配</span><br>/MODE <span class="hljs-comment">#任何一类(u,g,o)对象的权限中只要有一位匹配即可，或关系，+ 从CentOS 7开始淘汰</span><br><span class="hljs-literal">-</span>MODE <span class="hljs-comment">#每一类对象都必须同时拥有指定权限，与关系</span><br>0 表示不关注<br></code></pre></td></tr></table></figure><p>说明：<br>find -perm 755 会匹配权限模式恰好是755的文件<br>只要当任意人有写权限时，find -perm &#x2F;222就会匹配<br>只有当每个人都有写权限时，find -perm -222才会匹配<br>只有当其它人（other）有写权限时，find -perm -002才会匹配</p><h4 id="1-2-11-处理动作"><a href="#1-2-11-处理动作" class="headerlink" title="1.2.11 处理动作"></a>1.2.11 处理动作</h4><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mel">-<span class="hljs-keyword">print</span>：默认的处理动作，显示至屏幕<br>-<span class="hljs-keyword">ls</span>：类似于对查找到的文件执行<span class="hljs-string">&quot;ls -dils&quot;</span>命令格式输出<br>-fls <span class="hljs-keyword">file</span>：查找到的所有文件的长格式信息保存至指定文件中，相当于 -<span class="hljs-keyword">ls</span> &gt; <span class="hljs-keyword">file</span><br>-<span class="hljs-keyword">delete</span>：删除查找到的文件，慎用！<br>-ok COMMAND &#123;&#125; \; 对查找到的每个文件执行由COMMAND指定的命令，对于每个文件执行命令之前，都会<br>交互式要求用户确认<br>-<span class="hljs-keyword">exec</span> COMMAND &#123;&#125; \; 对查找到的每个文件执行由COMMAND指定的命令<br>&#123;&#125;: 用于引用查找到的文件名称自身<br></code></pre></td></tr></table></figure><p>关于 {} ;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>askubuntu.com<span class="hljs-regexp">/questions/</span><span class="hljs-number">339015</span>/what-does-mean-<span class="hljs-keyword">in</span>-the-find-command<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment">#备份配置文件，添加.orig这个扩展名</span><br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total 4<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file1.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file2.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file3.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file4.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1511 </span>Jul<span class="hljs-number"> 30 </span>05:11 passwd<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 1 </span>22:06 yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># find ./ -name &#x27;file*.conf&#x27;</span><br>./file1.conf<br>./file2.conf<br>./file3.conf<br>./file4.conf<br>[root@rocky8 data]<span class="hljs-comment"># find ./ -name &#x27;file*.conf&#x27; -exec cp &#123;&#125; &#123;&#125;.orig \;</span><br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total 4<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file1.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file1.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file2.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file2.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file3.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file3.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file4.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file4.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1511 </span>Jul<span class="hljs-number"> 30 </span>05:11 passwd<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 1 </span>22:06 yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提示删除存在时间超过３天以上的joe的临时文件</span><br>find /tmp -ctime +3 -user joe -ok <span class="hljs-built_in">rm</span> &#123;&#125; \;<br><span class="hljs-comment">#在主目录中寻找可被其它用户写入的文件</span><br>find ~ -perm -002 -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">chmod</span> o-w &#123;&#125; \;<br><span class="hljs-comment">#查找/data下的权限为644，后缀为sh的普通文件，增加执行权限</span><br>find /data –<span class="hljs-built_in">type</span> f -perm 644 -name <span class="hljs-string">&quot;*.sh&quot;</span> –<span class="hljs-built_in">exec</span> <span class="hljs-built_in">chmod</span> 755 &#123;&#125; \;<br></code></pre></td></tr></table></figure><h3 id="1-3-参数替换xargs"><a href="#1-3-参数替换xargs" class="headerlink" title="1.3 参数替换xargs"></a>1.3 参数替换xargs</h3><p>由于很多命令不支持管道|来传递参数，xargs用于产生某个命令的参数，xargs 可以读入 stdin 的数<br>据，并且以空格符或回车符将 stdin 的数据分隔成为参数<br>另外，许多命令不能接受过多参数，命令执行可能会失败，xargs 可以解决<br>注意：文件名或者是其他意义的名词内含有空格符的情况<br>find 经常和 xargs 命令进行组合,形式如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">find</span> | xargs COMMAND<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#显示10个数字</span><br>[root@centos8 ~]<span class="hljs-comment">#seq 10 | xargs</span><br>1 2 3 4 5 6 7 8 9 10<br><span class="hljs-comment">#删除当前目录下的大量文件</span><br><span class="hljs-keyword">ls</span> | xargs rm<br><br><span class="hljs-comment">#</span><br>find -name <span class="hljs-string">&quot;*.sh&quot;</span> | xargs <span class="hljs-keyword">ls</span> -Sl<br><br>[root@centos8 data]<span class="hljs-comment">#echo &#123;1..10&#125; |xargs</span><br>1 2 3 4 5 6 7 8 9 10<br>[root@centos8 data]<span class="hljs-comment">#echo &#123;1..10&#125; |xargs -n1</span><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>[root@centos8 data]<span class="hljs-comment">#echo &#123;1..10&#125; |xargs -n2</span><br>1 2<br>3 4<br>5 6<br>7 8<br>9 10<br><br><span class="hljs-comment">#批量创建和删除用户</span><br><span class="hljs-keyword">echo</span> user&#123;1.<span class="hljs-string">.10</span>&#125; |xargs -n1 useradd<br><span class="hljs-keyword">echo</span> user&#123;1.<span class="hljs-string">.100</span>&#125; | xargs -n1 userdel -r<br><br><span class="hljs-comment">#这个命令是错误的</span><br>find <span class="hljs-string">/sbin/</span> -perm <span class="hljs-string">/700</span> | <span class="hljs-keyword">ls</span> -l<br><span class="hljs-comment">#查找有特殊权限的文件，并排序</span><br>find <span class="hljs-string">/bin/</span> -perm <span class="hljs-string">/7000</span> | xargs <span class="hljs-keyword">ls</span> -Sl<br><span class="hljs-comment">#此命令和上面有何区别？</span><br>find <span class="hljs-string">/bin/</span> -perm -7000 | xargs <span class="hljs-keyword">ls</span> -Sl<br><span class="hljs-comment">#以字符nul分隔</span><br>find -type f -name <span class="hljs-string">&quot;*.txt&quot;</span> -print0 | xargs -0 rm<br><span class="hljs-comment">#并发执行多个进程</span><br>seq 100 |xargs -i -P10 wget -P <span class="hljs-string">/data</span> http:<span class="hljs-string">//10.0.0.8/</span>&#123;&#125;<span class="hljs-string">.html</span><br><span class="hljs-comment">#并行下载bilibili视频</span><br>yum install python3-pip -y<br>pip3 install you-get<br>seq 60 | xargs -i -P3 you-get https:<span class="hljs-string">//www.bilibili.com/video/BV14K411W7UF</span>?p=&#123;&#125;<br></code></pre></td></tr></table></figure><p>练习<br>1、查找&#x2F;var目录下属主为root，且属组为mail的所有文件<br>2、查找&#x2F;var目录下不属于root、lp、gdm的所有文件<br>3、查找&#x2F;var目录下最近一周内其内容修改过，同时属主不为root，也不是postfix的文件<br>4、查找当前系统上没有属主或属组，且最近一个周内曾被访问过的文件<br>5、查找&#x2F;etc目录下大于1M且类型为普通文件的所有文件<br>6、查找&#x2F;etc目录下所有用户都没有写权限的文件<br>7、查找&#x2F;etc目录下至少有一类用户没有执行权限的文件<br>8、查找&#x2F;etc&#x2F;init.d目录下，所有用户都有执行权限，且其它用户有写权限的文件</p><h2 id="2-压缩和解压缩"><a href="#2-压缩和解压缩" class="headerlink" title="2 压缩和解压缩"></a>2 压缩和解压缩</h2><p>主要针对单个文件压缩，而非目录</p><h3 id="2-1-compress和uncompress"><a href="#2-1-compress和uncompress" class="headerlink" title="2.1 compress和uncompress"></a>2.1 compress和uncompress</h3><p>此工具来自于ncompress包,此工具目前已经很少使用<br>对应的文件是 .Z 后缀</p><p>常用选项</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-d 解压缩，相当于uncompress</span><br><span class="hljs-deletion">-c 结果输出至标准输出,不删除原文件</span><br><span class="hljs-deletion">-v 显示详情</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs \">compress filename #压缩<br>uncompress filename # 解压缩<br></code></pre></td></tr></table></figure><p>zcat file.Z 不显式解压缩的前提下查看文本文件内容</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">zcat <span class="hljs-built_in">file</span>.Z &gt;<span class="hljs-built_in">file</span><br></code></pre></td></tr></table></figure><h3 id="2-2-gzip和gunzip"><a href="#2-2-gzip和gunzip" class="headerlink" title="2.2 gzip和gunzip"></a>2.2 gzip和gunzip</h3><p>来自于 gzip 包<br>对应的文件是 .gz 后缀<br>格式：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">gzip [<span class="hljs-keyword">OPTION</span>] ···<span class="hljs-keyword">file</span>···<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>k keep, 保留原文件,CentOS 8 新特性<br><span class="hljs-literal">-</span>d 解压缩，相当于gunzip<br><span class="hljs-literal">-</span>c 结果输出至标准输出，保留原文件不改变<br><span class="hljs-literal">-</span><span class="hljs-comment"># 指定压缩比，#取值为1-9，值越大压缩比越大</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tcl"><span class="hljs-comment"># 压缩</span><br>gzip <span class="hljs-keyword">filename</span><br><br><span class="hljs-comment"># 解压缩</span><br>gunzip <span class="hljs-keyword">file</span>.gz<br><br><span class="hljs-comment">#不显式解压缩的前提下查看文本文件内容</span><br>zcat <span class="hljs-keyword">file</span>.gz<br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">gzip -<span class="hljs-keyword">c</span> <span class="hljs-keyword">messages</span> &gt;<span class="hljs-keyword">messages</span>.gz<br>gzip -<span class="hljs-keyword">c</span> -d <span class="hljs-keyword">messages</span>.gz &gt; <span class="hljs-keyword">messages</span><br>zcat <span class="hljs-keyword">messages</span>.gz &gt; <span class="hljs-keyword">messages</span><br><span class="hljs-keyword">cat</span> <span class="hljs-keyword">messages</span> | gzip &gt; <span class="hljs-keyword">m</span>.gz<br></code></pre></td></tr></table></figure><h3 id="2-3-bzip2和bunzip2"><a href="#2-3-bzip2和bunzip2" class="headerlink" title="2.3 bzip2和bunzip2"></a>2.3 bzip2和bunzip2</h3><p>来自于 bzip2 包<br>对应的文件是 .bz2 后缀<br>格式：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">bzip2 [<span class="hljs-keyword">OPTION</span>]... <span class="hljs-keyword">FILE</span> ...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>k keep, 保留原文件<br><span class="hljs-literal">-</span>d 解压缩<br><span class="hljs-literal">-</span>c 结果输出至标准输出，保留原文件不改变<br><span class="hljs-literal">-</span><span class="hljs-comment"># 1-9，压缩比，默认为9</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">bzip2 </span>file <span class="hljs-comment"># 压缩</span><br><span class="hljs-keyword">bunzip2 </span>file.<span class="hljs-keyword">bz2 </span>解压缩<br><span class="hljs-keyword">bzcat </span>file.<span class="hljs-keyword">bz2 </span>不显式解压缩的前提下查看文本文件内容<br></code></pre></td></tr></table></figure><h3 id="2-4-xz和unxz"><a href="#2-4-xz和unxz" class="headerlink" title="2.4 xz和unxz"></a>2.4 xz和unxz</h3><p>来自于 xz 包<br>对应的文件是 .xz 后缀<br>格式:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">xz [<span class="hljs-keyword">OPTION</span>]... <span class="hljs-keyword">FILE</span> ...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>k keep, 保留原文件<br><span class="hljs-literal">-</span>d 解压缩<br><span class="hljs-literal">-</span>c 结果输出至标准输出，保留原文件不改变<br><span class="hljs-literal">-</span><span class="hljs-comment"># 压缩比，取值1-9，默认为6</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">unxz <span class="hljs-built_in">file</span>.xz <span class="hljs-comment">#解压缩</span><br>xzcat <span class="hljs-built_in">file</span>.xz <span class="hljs-comment">#不显式解压缩的前提下查看文本文件内容</span><br></code></pre></td></tr></table></figure><h3 id="2-5-zip和unzip"><a href="#2-5-zip和unzip" class="headerlink" title="2.5 zip和unzip"></a>2.5 zip和unzip</h3><p>zip 可以实现打包目录和多个文件成一个文件并压缩，但可能会丢失文件属性信息，如：所有者和组信<br>息，一般建议使用 tar 代替<br>分别来自于 zip 和 unzip 包<br>对应的文件是 .zip 后缀<br>范例: zip帮助</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#打包并压缩</span><br>zip -r <span class="hljs-regexp">/backup/</span>sysconfig.zip <span class="hljs-regexp">/etc/</span>sysconfig/<br><span class="hljs-comment">#不包括目录本身，只打包目录内的文件和子目录</span><br>cd <span class="hljs-regexp">/etc/</span>sysconfig; zip -r <span class="hljs-regexp">/root/</span>sysconfig.zip *<br><span class="hljs-comment">#默认解压缩至当前目录</span><br>unzip <span class="hljs-regexp">/backup/</span>sysconfig.zip<br><span class="hljs-comment">#解压缩至指定目录,如果指定目录不存在，会在其父目录（必须事先存在）下自动生成</span><br>unzip <span class="hljs-regexp">/backup/</span>sysconfig.zip -d <span class="hljs-regexp">/tmp/</span>config<br>cat <span class="hljs-regexp">/var/</span>log/messages | zip messages -<br><span class="hljs-comment">#-p 表示管道</span><br>unzip -p message.zip &gt; message<br></code></pre></td></tr></table></figure><p>范例: 交互式加密和解密</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@rocky8 data]<span class="hljs-comment"># zip -e file1.conf.zip file1.conf</span><br>Enter password: <br>Verify password: <br>  adding: file1.conf (stored 0%)<br>[root@rocky8 data]<span class="hljs-comment"># unzip file1.conf.zip </span><br>Archive:  file1.conf.zip<br>[file1.conf.zip] file1.conf password: <br>replace file1.conf? [y]es, [n]o, [A]ll, [N]one, [r]ename: y<br> extracting: file1.conf              <br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total 8<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file1.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file1.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 198 </span>Aug <span class="hljs-number"> 2 </span>22:06 file1.conf.zip<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file2.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file2.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file3.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file3.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file4.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file4.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1511 </span>Jul<span class="hljs-number"> 30 </span>05:11 passwd<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 1 </span>22:06 yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>范例: 非交互式加密和解密</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@rocky8 data]# <span class="hljs-keyword">zip</span> -P 123456 file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span> file2.<span class="hljs-keyword">conf</span>  # p是大P<br>  adding: file2.<span class="hljs-keyword">conf</span> (stored 0%)<br># 解压<br>[root@rocky8 data]# unzip file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span> <br>Archive:  file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span><br>[file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span>] file2.<span class="hljs-keyword">conf</span> password: <br><span class="hljs-keyword">replace</span> file2.<span class="hljs-keyword">conf</span>? [y]es, [<span class="hljs-keyword">n</span>]o, [A]ll, [<span class="hljs-keyword">N</span>]<span class="hljs-keyword">one</span>, [r]ename: y<br> extracting: file2.<span class="hljs-keyword">conf</span>              <br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><h2 id="3-打包和解包"><a href="#3-打包和解包" class="headerlink" title="3 打包和解包"></a>3 打包和解包</h2><h3 id="3-1-tar"><a href="#3-1-tar" class="headerlink" title="3.1 tar"></a>3.1 tar</h3><p>tar 即 Tape ARchive 磁带归档，可以对目录和多个文件打包一个文件，并且可以压缩，保留文件属性不<br>丢失，常用于备份功能，推荐使用<br>对应的文件是 .tar 后缀<br>格式</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs inform7">tar <span class="hljs-comment">[-ABcdgGhiklmMoOpPrRsStuUvwWxzZ]</span><span class="hljs-comment">[-b &lt;区块数目&gt;]</span><span class="hljs-comment">[-C &lt;目的目录&gt;]</span><span class="hljs-comment">[-f &lt;备份文件&gt;]</span><span class="hljs-comment">[-F</span><br><span class="hljs-comment">&lt;Script文件&gt;]</span><span class="hljs-comment">[-K &lt;文件&gt;]</span><span class="hljs-comment">[-L &lt;媒体容量&gt;]</span><span class="hljs-comment">[-N &lt;日期时间&gt;]</span><span class="hljs-comment">[-T &lt;范本文件&gt;]</span><span class="hljs-comment">[-V &lt;卷册名称&gt;]</span><span class="hljs-comment">[-X</span><br><span class="hljs-comment">&lt;范本文件&gt;]</span><span class="hljs-comment">[-&lt;设备编号&gt;&lt;存储密度&gt;]</span><span class="hljs-comment">[--after-date=&lt;日期时间&gt;]</span><span class="hljs-comment">[--atime-preserve]</span><span class="hljs-comment">[--</span><br><span class="hljs-comment">backuup=&lt;备份方式&gt;]</span><span class="hljs-comment">[--checkpoint]</span><span class="hljs-comment">[--concatenate]</span><span class="hljs-comment">[--confirmation]</span><span class="hljs-comment">[--delete]</span><span class="hljs-comment">[--</span><br><span class="hljs-comment">exclude=&lt;范本样式&gt;]</span><span class="hljs-comment">[--force-local]</span><span class="hljs-comment">[--group=&lt;群组名称&gt;]</span><span class="hljs-comment">[--help]</span><span class="hljs-comment">[--ignore-failed-</span><br><span class="hljs-comment">read]</span><span class="hljs-comment">[--new-volume-script=&lt;Script文件&gt;]</span><span class="hljs-comment">[--newer-mtime]</span><span class="hljs-comment">[--no-recursion]</span><span class="hljs-comment">[--null]</span><span class="hljs-comment">[--</span><br><span class="hljs-comment">numeric-owner]</span><span class="hljs-comment">[--owner=&lt;用户名称&gt;]</span><span class="hljs-comment">[--posix]</span><span class="hljs-comment">[--erve]</span><span class="hljs-comment">[--preserve-order]</span><span class="hljs-comment">[--preserve-</span><br><span class="hljs-comment">permissions]</span><span class="hljs-comment">[--record-size=&lt;区块数目&gt;]</span><span class="hljs-comment">[--recursive-unlink]</span><span class="hljs-comment">[--remove-files]</span><span class="hljs-comment">[--rsh-</span><br><span class="hljs-comment">command=&lt;执行指令&gt;]</span><span class="hljs-comment">[--same-owner]</span><span class="hljs-comment">[--suffix=&lt;备份字尾字符串&gt;]</span><span class="hljs-comment">[--totals]</span><span class="hljs-comment">[--use-</span><br><span class="hljs-comment">compress-program=&lt;执行指令&gt;]</span><span class="hljs-comment">[--version]</span><span class="hljs-comment">[--volno-file=&lt;编号文件&gt;]</span><span class="hljs-comment">[文件或目录...]</span><br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">-A或<span class="hljs-params">--catenate</span> 新增文件到已存在的备份文件。<br>-b&lt;区块数目&gt;或<span class="hljs-params">--blocking-factor=</span>&lt;区块数目&gt; 设置每笔记录的区块数目，每个区块大小为12Bytes。<br>-B或<span class="hljs-params">--read-full-records</span> 读取数据时重设区块大小。<br>-c或<span class="hljs-params">--create</span> 建立新的备份文件。<br>-C&lt;目的目录&gt;或<span class="hljs-params">--directory=</span>&lt;目的目录&gt; 切换到指定的目录。<br>-d或<span class="hljs-params">--diff</span>或<span class="hljs-params">--compare</span> 对比备份文件内和文件系统上的文件的差异。<br>-f&lt;备份文件&gt;或<span class="hljs-params">--file=</span>&lt;备份文件&gt; 指定备份文件。<br>-F&lt;Script文件&gt;或<span class="hljs-params">--info-script=</span>&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件。<br>-g或<span class="hljs-params">--listed-incremental</span> 处理GNU格式的大量备份。<br><br>-G或<span class="hljs-params">--incremental</span> 处理旧的GNU格式的大量备份。<br>-h或<span class="hljs-params">--dereference</span> 不建立符号连接，直接复制该连接所指向的原始文件。<br>-i或<span class="hljs-params">--ignore-zeros</span> 忽略备份文件中的0 Byte区块，也就是EOF。<br>-k或<span class="hljs-params">--keep-old-files</span> 解开备份文件时，不覆盖已有的文件。<br>-K&lt;文件&gt;或<span class="hljs-params">--starting-file=</span>&lt;文件&gt; 从指定的文件开始还原。<br>-l或<span class="hljs-params">--one-file-system</span> 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相<br>同，否则不予复制。<br>-L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。<br>-m或<span class="hljs-params">--modification-time</span> 还原文件时，不变更文件的更改时间。<br>-M或<span class="hljs-params">--multi-volume</span> 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。<br>-N&lt;日期格式&gt;或<span class="hljs-params">--newer=</span>&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。<br>-o或<span class="hljs-params">--old-archive</span>或<span class="hljs-params">--portability</span> 将资料写入备份文件时使用V7格式。<br>-O或<span class="hljs-params">--stdout</span> 把从备份文件里还原的文件输出到标准输出设备。<br>-p或<span class="hljs-params">--same-permissions</span> 用原来的文件权限还原文件。<br>-P或<span class="hljs-params">--absolute-names</span> 文件名使用绝对名称，不移除文件名称前的<span class="hljs-string">&quot;/&quot;</span>号。<br>-r或<span class="hljs-params">--append</span> 新增文件到已存在的备份文件的结尾部分。<br>-R或<span class="hljs-params">--block-number</span> 列出每个信息在备份文件中的区块编号。<br>-s或<span class="hljs-params">--same-order</span> 还原文件的顺序和备份文件内的存放顺序相同。<br>-S或<span class="hljs-params">--sparse</span> 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。<br>-t或<span class="hljs-params">--list</span> 列出备份文件的内容。<br>-T&lt;范本文件&gt;或<span class="hljs-params">--files-from=</span>&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或<br>建立符合设置条件的文件。<br>-u或<span class="hljs-params">--update</span> 仅置换较备份文件内的文件更新的文件。<br>-U或<span class="hljs-params">--unlink-first</span> 解开压缩文件还原文件之前，先解除文件的连接。<br>-v或<span class="hljs-params">--verbose</span> 显示指令执行过程。<br>-V&lt;卷册名称&gt;或<span class="hljs-params">--label=</span>&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。<br>-w或<span class="hljs-params">--interactive</span> 遭遇问题时先询问用户。<br>-W或<span class="hljs-params">--verify</span> 写入备份文件后，确认文件正确无误。<br>-x或<span class="hljs-params">--extract</span>或<span class="hljs-params">--get</span> 从备份文件中还原文件。<br>-X&lt;范本文件&gt;或<span class="hljs-params">--exclude-from=</span>&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除<br>符合设置条件的文件。<br>-z或<span class="hljs-params">--gzip</span>或<span class="hljs-params">--ungzip</span> 通过gzip指令处理备份文件。<br>-Z或<span class="hljs-params">--compress</span>或<span class="hljs-params">--uncompress</span> 通过compress指令处理备份文件。<br>-&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。<br><span class="hljs-params">--after-date=</span>&lt;日期时间&gt; 此参数的效果和指定<span class="hljs-string">&quot;-N&quot;</span>参数相同。<br><span class="hljs-params">--atime-preserve</span> 不变更文件的存取时间。<br><span class="hljs-params">--backup=</span>&lt;备份方式&gt;或<span class="hljs-params">--backup</span> 移除文件前先进行备份。<br><span class="hljs-params">--checkpoint</span> 读取备份文件时列出目录名称。<br><span class="hljs-params">--concatenate</span> 此参数的效果和指定<span class="hljs-string">&quot;-A&quot;</span>参数相同。<br><span class="hljs-params">--confirmation</span> 此参数的效果和指定<span class="hljs-string">&quot;-w&quot;</span>参数相同。<br><span class="hljs-params">--delete</span> 从备份文件中删除指定的文件。<br><span class="hljs-params">--exclude=</span>&lt;范本样式&gt; 排除符合范本样式的文件。<br><span class="hljs-params">--group=</span>&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。<br><span class="hljs-params">--help</span> 在线帮助。<br><span class="hljs-params">--ignore-failed-read</span> 忽略数据读取错误，不中断程序的执行。<br><span class="hljs-params">--new-volume-script=</span>&lt;Script文件&gt; 此参数的效果和指定<span class="hljs-string">&quot;-F&quot;</span>参数相同。<br><span class="hljs-params">--newer-mtime</span> 只保存更改过的文件。<br><span class="hljs-params">--no-recursion</span> 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。<br><span class="hljs-params">--null</span> 从null设备读取文件名称。<br><span class="hljs-params">--numeric-owner</span> 以用户识别码及群组识别码取代用户名称和群组名称。<br><span class="hljs-params">--owner=</span>&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。<br><span class="hljs-params">--posix</span> 将数据写入备份文件时使用POSIX格式。<br><span class="hljs-params">--preserve</span> 此参数的效果和指定<span class="hljs-string">&quot;-ps&quot;</span>参数相同。<br><span class="hljs-params">--preserve-order</span> 此参数的效果和指定<span class="hljs-string">&quot;-A&quot;</span>参数相同。<br><span class="hljs-params">--preserve-permissions</span> 此参数的效果和指定<span class="hljs-string">&quot;-p&quot;</span>参数相同。<br><span class="hljs-params">--record-size=</span>&lt;区块数目&gt; 此参数的效果和指定<span class="hljs-string">&quot;-b&quot;</span>参数相同。<br><span class="hljs-params">--recursive-unlink</span> 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。<br><span class="hljs-params">--remove-files</span> 文件加入备份文件后，就将其删除。<br><br><span class="hljs-params">--rsh-command=</span>&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。<br><span class="hljs-params">--same-owner</span> 尝试以相同的文件拥有者还原文件。<br><span class="hljs-params">--suffix=</span>&lt;备份字尾字符串&gt; 移除文件前先行备份。<br><span class="hljs-params">--totals</span> 备份文件建立后，列出文件大小。<br><span class="hljs-params">--use-compress-program=</span>&lt;执行指令&gt; 通过指定的指令处理备份文件。<br><span class="hljs-params">--version</span> 显示版本信息。<br><span class="hljs-params">--volno-file=</span>&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。<br></code></pre></td></tr></table></figure><p>范例：打包并压缩</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">tar zcvf <span class="hljs-keyword">filename</span>.tar.gz <span class="hljs-keyword">filename</span><br></code></pre></td></tr></table></figure><p>范例：解压缩</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">tar</span> xf filename.tar.gz<br></code></pre></td></tr></table></figure><h3 id="3-2-split"><a href="#3-2-split" class="headerlink" title="3.2 split"></a>3.2 split</h3><p>split 命令可以分割一个文件为多个文件<br>范例：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#分割大的 tar 文件为多份小文件</span><br><span class="hljs-built_in">split</span> -b Size –d tar-<span class="hljs-built_in">file</span>-name prefix-name<br>示例:<br><span class="hljs-built_in">split</span> -b <span class="hljs-number">1</span>M mybackup.tgz mybackup-parts<br><span class="hljs-comment">#切换成的多个小分文件使用数字后缀</span><br><span class="hljs-built_in">split</span> -b <span class="hljs-number">1</span>M –d mybackup.tgz mybackup-parts<br></code></pre></td></tr></table></figure><p>将多个切割的小文件合并成一个大文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cat</span> my<span class="hljs-built_in">backup-parts</span>* &gt; mybackup.tar.gz<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文本处理工具和正则表达式</title>
    <link href="/2022/07/26/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2022/07/26/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="1-文本编辑工具之神VIM"><a href="#1-文本编辑工具之神VIM" class="headerlink" title="1.文本编辑工具之神VIM"></a>1.文本编辑工具之神VIM</h1><h2 id="1-1使用vim初步"><a href="#1-1使用vim初步" class="headerlink" title="1.1使用vim初步"></a>1.1使用vim初步</h2><h3 id="1-1-1vim命令格式"><a href="#1-1-1vim命令格式" class="headerlink" title="1.1.1vim命令格式"></a>1.1.1vim命令格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 常用">vim [option]··· FILE ···<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">+# 打开文件后，让光标处于第#行的行首，+默认行尾<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vim</span> +<span class="hljs-number">10</span> passwd<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658842039807.png" alt="1658842039807"></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">+/PATTERN 让光标处于第一个被PATTERN匹配到的行行首<br>-<span class="hljs-keyword">b</span> <span class="hljs-keyword">file</span> 二进制方式打开文件<br>-d file1 file2… 比较多个文件，相当于 vimdiff<br>-<span class="hljs-keyword">m</span> <span class="hljs-keyword">file</span> 只读打开文件<br>-<span class="hljs-keyword">e</span> <span class="hljs-keyword">file</span> 直接进入<span class="hljs-keyword">ex</span>模式，相当于执行<span class="hljs-keyword">ex</span> <span class="hljs-keyword">file</span><br>-<span class="hljs-keyword">y</span> <span class="hljs-keyword">file</span> Easy <span class="hljs-keyword">mode</span> (like <span class="hljs-string">&quot;evim&quot;</span>, modeless)，直接可以操作文件，ctrl+<span class="hljs-keyword">o</span>:<span class="hljs-keyword">wq</span>|q! 保存和不<br>保存退出<br></code></pre></td></tr></table></figure><p>说明：</p><ul><li>如果该文件存在，文件被打开并显示内容</li><li>如果该文件不存在，当编辑后第一次存盘时创建它</li></ul><h3 id="1-1-2三种主要模式"><a href="#1-1-2三种主要模式" class="headerlink" title="1.1.2三种主要模式"></a>1.1.2三种主要模式</h3><p>三种常见模式：</p><ul><li><p>命令或普通(Normal)模式：默认模式，可以实现移动光标，剪切&#x2F;粘贴文本</p></li><li><p>插入(Insert)或编辑模式：用于修改文本</p></li><li><p>扩展命令(extended command )或命令(末)行模式：保存，退出等</p></li><li><p>命令模式–》插入模式</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">i</span> insert, 在光标所在处输入<br><span class="hljs-selector-tag">I</span> 在当前光标所在行的行首输入<br><span class="hljs-selector-tag">a</span> append, 在光标所在处后面输入<br><span class="hljs-selector-tag">A</span> 在当前光标所在行的行尾输入<br>o 在当前光标所在行的下方打开一个新行<br>O 在当前光标所在行的上方打开一个新行<br></code></pre></td></tr></table></figure><ul><li>插入模式 — ESC—–&gt; 命令模式</li><li>命令模式 —- : —-&gt; 扩展命令模式</li><li>扩展命令模式 —-ESC,enter—-&gt; 命令模式</li></ul><p>范例: 插入颜色字符</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>切换至插入模式<br><span class="hljs-symbol">2 </span>按ctrl+v+[ 三个键,显示^[<br><span class="hljs-symbol">3 </span>后续输入颜色信息,如:^[[<span class="hljs-number">32</span>mhello^[[<span class="hljs-number">0</span>m<br><span class="hljs-symbol">4 </span>切换至扩展命令模式,保存退出<br><span class="hljs-symbol">5 </span>cat 文件可以看到下面显示<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658842714254.png" alt="1658842714254"></p><p><img src="/../image.assets/1658842736134.png" alt="1658842736134"></p><h2 id="1-2扩展命令模式"><a href="#1-2扩展命令模式" class="headerlink" title="1.2扩展命令模式"></a>1.2扩展命令模式</h2><p>按“:”（冒号）进入Ex模式，创建一个命令提示符：处于底部的屏幕左侧</p><h3 id="1-2-1扩展模式基本命令"><a href="#1-2-1扩展模式基本命令" class="headerlink" title="1.2.1扩展模式基本命令"></a>1.2.1扩展模式基本命令</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">w 写（存）磁盘文件<br>wq 写入并退出<br>x 写入并退出<br>X 加密<br><span class="hljs-selector-tag">q</span> 退出<br><span class="hljs-selector-tag">q</span>！ 不存盘退出，即使更改都将丢失<br></code></pre></td></tr></table></figure><ul><li>读取文件内容到当前文件中</li></ul><p>用法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">r</span> filename<span class="hljs-comment"># 读文件内容到当前文件中</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs less"># 将当前目录下的<span class="hljs-selector-tag">b</span>文件的内容读取到当前文件中<br><span class="hljs-selector-tag">vim</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br>:<span class="hljs-selector-tag">r</span> <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span><br></code></pre></td></tr></table></figure><ul><li>将当前文件内容写入另一个文件</li></ul><p>用法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">w</span> filename <span class="hljs-comment"># 将当前文件内容写入另一个文件</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"># 将当前文件(<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span>文件)内容写入到<span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span>中去<br>vim <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br>w c<span class="hljs-selector-class">.txt</span><br></code></pre></td></tr></table></figure><ul><li>执行命令</li></ul><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">!<span class="hljs-built_in">command</span><span class="hljs-comment">#执行命令</span><br></code></pre></td></tr></table></figure><p>范例：</p><p><img src="/../image.assets/1658844469691.png" alt="1658844469691"></p><ul><li>读入命令的输入</li></ul><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">r!<span class="hljs-built_in">command</span><span class="hljs-comment">#读入命令的输入</span><br></code></pre></td></tr></table></figure><p>范例：执行hostname命令输入到当前文件中</p><p><img src="/../image.assets/1658844624368.png" alt="1658844624368"></p><h3 id="1-2-2地址定界"><a href="#1-2-2地址定界" class="headerlink" title="1.2.2地址定界"></a>1.2.2地址定界</h3><p>格式：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">:start_pos,end_pos <span class="hljs-keyword">CMD</span><br></code></pre></td></tr></table></figure><h4 id="1-2-2-1地址定界格式"><a href="#1-2-2-1地址定界格式" class="headerlink" title="1.2.2.1地址定界格式"></a>1.2.2.1地址定界格式</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs clean"># #具体第#行，例如<span class="hljs-number">2</span>表示第<span class="hljs-number">2</span>行<br>#,# #从左侧#表示起始行，到右侧#表示结尾行<br>#,+# #从左侧#表示的起始行，加上右侧#表示的行数，范例：<span class="hljs-number">2</span>,+<span class="hljs-number">3</span> 表示<span class="hljs-number">2</span>到<span class="hljs-number">5</span>行<br>. #当前行<br>$ #最后一行<br>.,$<span class="hljs-number">-1</span> #当前行到倒数第二行<br>% #全文, 相当于<span class="hljs-number">1</span>,$<br>/pattern/ #从当前行向下查找，直到匹配pattern的第一行,即:正则表达式<br>/pat1/,/pat2/ #从第一次被pat1模式匹配到的行开始，一直到第一次被pat2匹配到的行结束<br>#,/pat/ #从指定行开始，一直找到第一个匹配pattern的行结束<br>/pat/,$ #向下找到第一个匹配patttern的行到整个文件的结尾的所有行<br></code></pre></td></tr></table></figure><h4 id="1-2-2-2地址定界后跟一个编辑命令"><a href="#1-2-2-2地址定界后跟一个编辑命令" class="headerlink" title="1.2.2.2地址定界后跟一个编辑命令"></a>1.2.2.2地址定界后跟一个编辑命令</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript">d <span class="hljs-comment">#删除</span><br>y <span class="hljs-comment">#复制</span><br>w <span class="hljs-built_in">file</span> <span class="hljs-comment">#将范围内的行另存至指定文件中</span><br>r <span class="hljs-built_in">file</span> <span class="hljs-comment">#在指定位置插入指定文件中的所有内容</span><br>t<span class="hljs-comment">#行号 将前面指定的行复制到#行后</span><br>m<span class="hljs-comment">#行号 将前面指定的行移动到#行后</span><br></code></pre></td></tr></table></figure><p>范例：</p><ul><li>删除文件内容第几行到第几行</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">:<span class="hljs-number">1</span>,<span class="hljs-number">3</span>d    <span class="hljs-meta">#删除第一行到第三行</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658925029163.png" alt="1658925029163"></p><ul><li>复制文件全部内容</li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">:.,$y<br><span class="hljs-meta"># 通过键盘上下键选择要复制在什么地方，选择后位置后按p键复制</span><br></code></pre></td></tr></table></figure><ul><li>删除文件全部内容</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">:%d</span><br></code></pre></td></tr></table></figure><h3 id="1-2-3查找和替换"><a href="#1-2-3查找和替换" class="headerlink" title="1.2.3查找和替换"></a>1.2.3查找和替换</h3><p>格式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">s<span class="hljs-regexp">/查找的内容/</span>替换为内容/修饰符<br></code></pre></td></tr></table></figure><p>说明：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livescript">要查找的内容：可使用基本正则表达式模式<br>替换为的内容：不能使用模式，但可以使用<span class="hljs-string">\1,</span> <span class="hljs-string">\2,</span> ...等后向引用符号；还可以使用“&amp;”引用前面查找时查<br>找到的整个内容<br></code></pre></td></tr></table></figure><p>修饰符：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">i</span> <span class="hljs-comment">#忽略大小写</span><br>g <span class="hljs-comment">#全局替换，默认情况下，每一行只替换第一次出现</span><br>gc <span class="hljs-comment">#全局替换，每次替换前询问</span><br></code></pre></td></tr></table></figure><p>查找替换中的分隔符&#x2F;可替换为其它字符，如：#,@<br>范例：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">s<span class="hljs-meta">@/etc</span><span class="hljs-meta">@/var</span><span class="hljs-meta">@g</span><br>s<span class="hljs-comment">#/boot#/#i</span><br></code></pre></td></tr></table></figure><ul><li>复制&#x2F;etc&#x2F;passwd到家目录下，将文件内的root全部替换为ROOT</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:%s/root/ROOT/g<br></code></pre></td></tr></table></figure><h3 id="1-2-4定制vim的工作特性"><a href="#1-2-4定制vim的工作特性" class="headerlink" title="1.2.4定制vim的工作特性"></a>1.2.4定制vim的工作特性</h3><p>扩展命令模式的配置只是对当前vim进程有效，可将配置存放在文件中持久保存<br>配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>vimrc <span class="hljs-comment">#全局</span><br>~/.vimrc <span class="hljs-comment">#个人</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-1行号"><a href="#1-2-4-1行号" class="headerlink" title="1.2.4.1行号"></a>1.2.4.1行号</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">显示：<span class="hljs-built_in">set</span> number，简写 <span class="hljs-built_in">set</span> nu<br>取消显示：<span class="hljs-built_in">set</span> nonumber, 简写 <span class="hljs-built_in">set</span> nonu<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658926795326.png" alt="1658926795326"></p><h4 id="1-2-4-2忽略字符的大小写"><a href="#1-2-4-2忽略字符的大小写" class="headerlink" title="1.2.4.2忽略字符的大小写"></a>1.2.4.2忽略字符的大小写</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> ignorecase，简写 <span class="hljs-built_in">set</span> ic<br>不忽略：<span class="hljs-built_in">set</span> noic<br></code></pre></td></tr></table></figure><h4 id="1-2-4-3自动缩进"><a href="#1-2-4-3自动缩进" class="headerlink" title="1.2.4.3自动缩进"></a>1.2.4.3自动缩进</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> autoindent，简写 <span class="hljs-built_in">set</span> ai<br>禁用：<span class="hljs-built_in">set</span> noai<br></code></pre></td></tr></table></figure><h4 id="1-2-4-4复制保留格式"><a href="#1-2-4-4复制保留格式" class="headerlink" title="1.2.4.4复制保留格式"></a>1.2.4.4复制保留格式</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> paste<br>禁用：<span class="hljs-built_in">set</span> nopaste<br></code></pre></td></tr></table></figure><h4 id="1-2-4-5显示Tab-I和换行符-和-显示"><a href="#1-2-4-5显示Tab-I和换行符-和-显示" class="headerlink" title="1.2.4.5显示Tab ^I和换行符 和$显示"></a>1.2.4.5显示Tab ^I和换行符 和$显示</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> list<br>禁用：<span class="hljs-built_in">set</span> nolist<br></code></pre></td></tr></table></figure><h4 id="1-2-4-6高亮搜索"><a href="#1-2-4-6高亮搜索" class="headerlink" title="1.2.4.6高亮搜索"></a>1.2.4.6高亮搜索</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> hlsearch<br>禁用：<span class="hljs-built_in">set</span> nohlsearch 简写：nohl<br></code></pre></td></tr></table></figure><h4 id="1-2-4-7语法高亮"><a href="#1-2-4-7语法高亮" class="headerlink" title="1.2.4.7语法高亮"></a>1.2.4.7语法高亮</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata">启用：<span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br>禁用：<span class="hljs-keyword">syntax</span> off<br></code></pre></td></tr></table></figure><h4 id="1-2-4-8文件格式"><a href="#1-2-4-8文件格式" class="headerlink" title="1.2.4.8文件格式"></a>1.2.4.8文件格式</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用windows格式：<span class="hljs-built_in">set</span> <span class="hljs-attribute">fileformat</span>=dos<br>启用unix格式：<span class="hljs-built_in">set</span> <span class="hljs-attribute">fileformat</span>=unix<br>简写 <span class="hljs-built_in">set</span> <span class="hljs-attribute">ff</span>=dos|unix<br></code></pre></td></tr></table></figure><h4 id="1-2-4-9Tab-用空格代替"><a href="#1-2-4-9Tab-用空格代替" class="headerlink" title="1.2.4.9Tab 用空格代替"></a>1.2.4.9Tab 用空格代替</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams">启用：<span class="hljs-keyword">set</span> expandtab 默认为<span class="hljs-comment">8</span>个空格代替<span class="hljs-comment">Tab</span><br>禁用：<span class="hljs-keyword">set</span> <span class="hljs-comment">noexpandtab</span><br>简写：<span class="hljs-keyword">set</span> <span class="hljs-comment">et</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-10Tab用指定空格的个数代替"><a href="#1-2-4-10Tab用指定空格的个数代替" class="headerlink" title="1.2.4.10Tab用指定空格的个数代替"></a>1.2.4.10Tab用指定空格的个数代替</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> <span class="hljs-attribute">tabstop</span>=# 指定#个空格代替Tab<br>简写：<span class="hljs-built_in">set</span> <span class="hljs-attribute">ts</span>=4<br></code></pre></td></tr></table></figure><h4 id="1-2-4-11设置缩进宽度"><a href="#1-2-4-11设置缩进宽度" class="headerlink" title="1.2.4.11设置缩进宽度"></a>1.2.4.11设置缩进宽度</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#向右缩进 命令模式&gt;&gt;</span><br><span class="hljs-comment">#向左缩进 命令模式&lt;&lt;</span><br><span class="hljs-comment">#设置缩进为4个字符</span><br><span class="hljs-built_in">set</span> <span class="hljs-attribute">shiftwidth</span>=4<br></code></pre></td></tr></table></figure><h4 id="1-2-4-12设置文本宽度"><a href="#1-2-4-12设置文本宽度" class="headerlink" title="1.2.4.12设置文本宽度"></a>1.2.4.12设置文本宽度</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">textwidth</span>=65 (vim only) #从左向右计数<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">wrapmargin</span>=15 #从右到左计数<br></code></pre></td></tr></table></figure><h4 id="1-2-4-13-设置光标所在行的标识线"><a href="#1-2-4-13-设置光标所在行的标识线" class="headerlink" title="1.2.4.13 设置光标所在行的标识线"></a>1.2.4.13 设置光标所在行的标识线</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> cursorline，简写 <span class="hljs-built_in">set</span> cul<br>禁用：<span class="hljs-built_in">set</span> nocursorline<br></code></pre></td></tr></table></figure><h4 id="1-2-4-14加密"><a href="#1-2-4-14加密" class="headerlink" title="1.2.4.14加密"></a>1.2.4.14加密</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用： <span class="hljs-built_in">set</span> <span class="hljs-attribute">key</span>=password<br>禁用： <span class="hljs-built_in">set</span> key=<br></code></pre></td></tr></table></figure><h4 id="1-2-4-15了解更多"><a href="#1-2-4-15了解更多" class="headerlink" title="1.2.4.15了解更多"></a>1.2.4.15了解更多</h4><p>set帮助</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">:help option-list<br><span class="hljs-meta">:set or :set</span> all<br></code></pre></td></tr></table></figure><h2 id="1-3命令模式"><a href="#1-3命令模式" class="headerlink" title="1.3命令模式"></a>1.3命令模式</h2><h3 id="1-3-1退出vim"><a href="#1-3-1退出vim" class="headerlink" title="1.3.1退出vim"></a>1.3.1退出vim</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ZZ</span> 保存退出<br>ZQ不保存退出<br></code></pre></td></tr></table></figure><h3 id="1-3-2光标跳转"><a href="#1-3-2光标跳转" class="headerlink" title="1.3.2光标跳转"></a>1.3.2光标跳转</h3><ul><li>字符间跳转</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">h:</span> 左<br><span class="hljs-symbol">l:</span> 右<br><span class="hljs-symbol">j:</span> 下<br><span class="hljs-symbol">k:</span> 上<br><span class="hljs-meta">#COMMAND：跳转由#指定的个数的字符如：3l</span><br></code></pre></td></tr></table></figure><ul><li>单词间跳转</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">w：下一个单词的词首<br>e：当前或下一单词的词尾<br>b：当前或前一个单词的词首<br>#COMMAND：由#指定一次跳转的单词数<br></code></pre></td></tr></table></figure><ul><li>当前页跳转</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">H</span>：页首<br>M：页中间行<br>L：页底<br>zt：将光标所在当前行移到屏幕顶端<br>zz：将光标所在当前行移到屏幕中间<br>zb：将光标所在当前行移到屏幕底端<br></code></pre></td></tr></table></figure><ul><li>行首行尾</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crystal">^ 跳转至行首的第一个非空白字符<br><span class="hljs-number">0</span> 跳转至行首<br><span class="hljs-variable">$ </span>跳转至行尾<br></code></pre></td></tr></table></figure><ul><li>行间移动</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">#G 或者扩展命令模式下<br>:# 跳转至由第#行<br>G 最后一行<br><span class="hljs-number">1</span>G, gg 第一行<br></code></pre></td></tr></table></figure><ul><li>句间移动</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">) 下一句<br>( 上一句<br></code></pre></td></tr></table></figure><ul><li>段落间移动</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">&#125; 下一段<br>&#123; 上一段<br></code></pre></td></tr></table></figure><ul><li>命令模式翻屏操作</li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">Ctrl</span>+f 向文件尾部翻一屏,相当于Pagedown<br><span class="hljs-symbol">Ctrl</span>+<span class="hljs-keyword">b</span> 向文件首部翻一屏,相当于Pageup<br><span class="hljs-symbol">Ctrl</span>+d 向文件尾部翻半屏<br><span class="hljs-symbol">Ctrl</span>+u 向文件首部翻半屏<br></code></pre></td></tr></table></figure><h3 id="1-3-3字符编辑"><a href="#1-3-3字符编辑" class="headerlink" title="1.3.3字符编辑"></a>1.3.3字符编辑</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">x</span> 剪切光标处的字符<span class="hljs-comment"># p键可复制剪切的字符</span><br><span class="hljs-comment">#x 剪切光标处起始的#个字符</span><br>xp 交换光标所在处的字符及其后面字符的位置<br><span class="hljs-regexp">~ 转换大小写</span><br>J 删除当前行后的换行符<br></code></pre></td></tr></table></figure><h3 id="1-3-4替换"><a href="#1-3-4替换" class="headerlink" title="1.3.4替换"></a>1.3.4替换</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">r 只替换光标所在处的一个字符<br>R 切换成<span class="hljs-built_in">REPLACE</span>模式（在末行出现-- <span class="hljs-built_in">REPLACE</span> -- 提示）,按ESC回到命令模式<br></code></pre></td></tr></table></figure><h3 id="1-3-5删除命令"><a href="#1-3-5删除命令" class="headerlink" title="1.3.5删除命令"></a>1.3.5删除命令</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell">d 删除命令，可结合光标跳转字符，实现范围删除<br>d<span class="hljs-variable">$</span> 删除到行尾<br>d^ 删除到非空行首<br>d0 删除到行首<br>dw<br>de<br>db<br><span class="hljs-comment">#COMMAND</span><br>dd： 剪切光标所在的行<br><span class="hljs-comment">#dd 多行删除</span><br>D：从当前光标位置一直删除到行尾，等同于d<span class="hljs-variable">$</span><br></code></pre></td></tr></table></figure><h3 id="1-3-6复制命令"><a href="#1-3-6复制命令" class="headerlink" title="1.3.6复制命令"></a>1.3.6复制命令</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs crystal">y 复制，行为相似于d命令<br>y<span class="hljs-variable">$</span><br><span class="hljs-variable"></span>y0<br>y^<br>ye<br>yw<br>yb<br><span class="hljs-comment">#COMMAND</span><br>yy：复制行<br><span class="hljs-comment">#yy 复制多行</span><br>Y：复制整行<br></code></pre></td></tr></table></figure><h3 id="1-3-7粘贴命令"><a href="#1-3-7粘贴命令" class="headerlink" title="1.3.7粘贴命令"></a>1.3.7粘贴命令</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> 缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面<br><span class="hljs-selector-tag">P</span> 缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面<br></code></pre></td></tr></table></figure><h3 id="1-3-8查找"><a href="#1-3-8查找" class="headerlink" title="1.3.8查找"></a>1.3.8查找</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">/PATTERN：从当前光标所在处向文件尾部查找<br>?PATTERN：从当前光标所在处向文件首部查找<br><span class="hljs-built_in">n</span>：与命令同方向<br><span class="hljs-built_in">N</span>：与命令反方向<br></code></pre></td></tr></table></figure><h4 id="1-3-9撤销更改"><a href="#1-3-9撤销更改" class="headerlink" title="1.3.9撤销更改"></a>1.3.9撤销更改</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean">u 撤销最近的更改，相当于windows中ctrl+z<br>#u 撤销之前多次更改<br>U 撤消光标落在这行后所有此行的更改<br>Ctrl-r 重做最后的“撤消”更改，相当于windows中crtl+y<br>. 重复前一个操作<br>#. 重复前一个操作#次<br></code></pre></td></tr></table></figure><h4 id="1-3-10高级用法"><a href="#1-3-10高级用法" class="headerlink" title="1.3.10高级用法"></a>1.3.10高级用法</h4><p>常见Command：y 复制、d 删除、gU 变大写、gu 变小写<br>范例：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-number">0</span>y<span class="hljs-variable">$ </span>命令<br><span class="hljs-number">0</span> → 先到行头<br>y → 从这里开始拷贝<br><span class="hljs-variable">$ </span>→ 拷贝到本行最后一个字符<br></code></pre></td></tr></table></figure><p>范例：粘贴“wang”100次</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">100iwang</span><span class="hljs-meta"> [ESC]</span><br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">di&quot; 光标在” “之间，则删除” “之间的内容<br><span class="hljs-built_in">yi</span>( 光标在()之间，则复制()之间的内容<br>vi<span class="hljs-selector-attr">[ 光标在[]</span>之间，则选中<span class="hljs-selector-attr">[]</span>之间的内容<br>dtx 删除字符直到遇见光标之后的第一个 x 字符<br>ytx 复制字符直到遇见光标之后的第一个 x 字符<br></code></pre></td></tr></table></figure><h2 id="1-4可视化模式"><a href="#1-4可视化模式" class="headerlink" title="1.4可视化模式"></a>1.4可视化模式</h2><p>在末行有”– VISUAL – “指示，表示在可视化模式<br>允许选择的文本块</p><ul><li>v 面向字符，– VISUAL –</li><li>V 面向整行，– VISUAL LINE –</li><li>ctrl-v 面向块，– VISUAL BLOCK –<br>可视化键可用于与移动键结合使用<br>w ) } 箭头等<br>突出显示的文字可被删除，复制，变更，过滤，搜索，替换等<br>范例：在文件指定行的行首插入#</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-number">1</span>、先将光标移动到指定的第一行的行首<br><span class="hljs-number">2</span>、输入ctrl+v 进入可视化模式<br><span class="hljs-number">3</span>、向下移动光标，选中希望操作的每一行的第一个字符<br><span class="hljs-number">4</span>、输入大写字母 I 切换至插入模式<br><span class="hljs-number">5</span>、输入 <span class="hljs-meta">#</span><br><span class="hljs-number">6</span>、按 ESC 键<br></code></pre></td></tr></table></figure><p>范例：在指定的块位置插入相同的内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">1</span>、光标定位到要操作的地方<br><span class="hljs-number">2</span>、CTRL+v 进入“可视块”模式，选取这一列操作多少行<br><span class="hljs-number">3</span>、SHIFT+<span class="hljs-selector-tag">i</span>(<span class="hljs-selector-tag">I</span>)<br><span class="hljs-number">4</span>、输入要插入的内容<br><span class="hljs-number">5</span>、按 ESC 键<br></code></pre></td></tr></table></figure><h2 id="1-5多文件模式"><a href="#1-5多文件模式" class="headerlink" title="1.5多文件模式"></a>1.5多文件模式</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> FILE1 FILE2 FILE3 ...<br>:<span class="hljs-keyword">next</span> 下一个<br>:<span class="hljs-keyword">prev</span> 前一个<br>:<span class="hljs-keyword">first</span> 第一个<br>:<span class="hljs-keyword">last</span> 最后一个<br>:<span class="hljs-keyword">wall</span> 保存所有<br>:<span class="hljs-keyword">qall</span> 不保存退出所有<br>:<span class="hljs-keyword">wqall</span>保存退出所有<br></code></pre></td></tr></table></figure><h2 id="1-6多窗口模式"><a href="#1-6多窗口模式" class="headerlink" title="1.6多窗口模式"></a>1.6多窗口模式</h2><h3 id="1-6-1多文件分割"><a href="#1-6-1多文件分割" class="headerlink" title="1.6.1多文件分割"></a>1.6.1多文件分割</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">vim</span> <span class="hljs-operator">-</span><span class="hljs-variable">o</span><span class="hljs-operator">|-</span><span class="hljs-built_in">O</span> <span class="hljs-variable">FILE1</span> <span class="hljs-variable">FILE2</span> <span class="hljs-operator">...</span><br><span class="hljs-operator">-</span><span class="hljs-variable">o</span><span class="hljs-operator">:</span> 水平或上下分割<br><span class="hljs-operator">-</span><span class="hljs-built_in">O</span><span class="hljs-operator">:</span> 垂直或左右分割（<span class="hljs-variable">vim</span> <span class="hljs-variable">only</span>）<br>在窗口间切换：<span class="hljs-variable">Ctrl</span><span class="hljs-operator">+</span><span class="hljs-variable">w</span><span class="hljs-operator">,</span> <span class="hljs-built_in">Arrow</span><br></code></pre></td></tr></table></figure><h3 id="1-6-2单文件窗口"><a href="#1-6-2单文件窗口" class="headerlink" title="1.6.2单文件窗口"></a>1.6.2单文件窗口</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">Ctrl+<span class="hljs-keyword">w</span>,s：<span class="hljs-keyword">split</span>, 水平分割，上下分屏<br>Ctrl+<span class="hljs-keyword">w</span>,v：<span class="hljs-keyword">vertical</span>, 垂直分割，左右分屏<br>ctrl+<span class="hljs-keyword">w</span>,q：取消相邻窗口<br>ctrl+<span class="hljs-keyword">w</span>,<span class="hljs-keyword">o</span>：取消全部窗口<br>:<span class="hljs-keyword">wqall</span> 退出<br></code></pre></td></tr></table></figure><h2 id="1-7帮助"><a href="#1-7帮助" class="headerlink" title="1.7帮助"></a>1.7帮助</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">:help<br>:help topic<br>Use :q to <span class="hljs-keyword">exit</span> help<br><span class="hljs-comment">#vimtutor</span><br></code></pre></td></tr></table></figure><h1 id="2-常见文本处理工具"><a href="#2-常见文本处理工具" class="headerlink" title="2.常见文本处理工具"></a>2.常见文本处理工具</h1><h2 id="2-1文件内容查看命令"><a href="#2-1文件内容查看命令" class="headerlink" title="2.1文件内容查看命令"></a>2.1文件内容查看命令</h2><h3 id="2-1-1查看文本文件内容"><a href="#2-1-1查看文本文件内容" class="headerlink" title="2.1.1查看文本文件内容"></a>2.1.1查看文本文件内容</h3><h4 id="2-1-1-1-cat"><a href="#2-1-1-1-cat" class="headerlink" title="2.1.1.1 cat"></a>2.1.1.1 cat</h4><p>cat可以查看文本内容</p><p>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">cat [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-E：显示行结束符$</span><br><span class="hljs-deletion">-A：显示所有控制符</span><br><span class="hljs-deletion">-n：对显示出的每一行进行编号</span><br><span class="hljs-deletion">-b：非空行编号</span><br><span class="hljs-deletion">-s：压缩连续的空行成一行</span><br></code></pre></td></tr></table></figure><h4 id="2-1-1-2-nl"><a href="#2-1-1-2-nl" class="headerlink" title="2.1.1.2 nl"></a>2.1.1.2 nl</h4><p>显示行号，相当于cat -b</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># nl data.txt </span><br>     <span class="hljs-number">1</span><span class="hljs-number">1</span><br>     <span class="hljs-number">2</span><span class="hljs-number">2</span><br>     <span class="hljs-number">3</span><span class="hljs-number">3</span><br>     <span class="hljs-number">4</span><span class="hljs-number">4</span><br>     <span class="hljs-number">5</span><span class="hljs-number">5</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h4 id="2-1-1-3-tac"><a href="#2-1-1-3-tac" class="headerlink" title="2.1.1.3 tac"></a>2.1.1.3 tac</h4><p>逆向显示文本内容</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># cat data.txt </span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># tac data.txt </span><br><span class="hljs-number">5</span><br><span class="hljs-number">4</span><br><span class="hljs-number">3</span><br><span class="hljs-number">2</span><br><span class="hljs-number">1</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># </span><br><br></code></pre></td></tr></table></figure><h4 id="2-1-1-4-rev"><a href="#2-1-1-4-rev" class="headerlink" title="2.1.1.4 rev"></a>2.1.1.4 rev</h4><p>将同一行的内容逆向显示</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@rocky8 ~]</span># cat readme<span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span><br><span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">b</span> c d e f<br><span class="hljs-selector-attr">[root@rocky8 ~]</span># rev readme<span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span><br>f e d c <span class="hljs-selector-tag">b</span> <span class="hljs-selector-tag">a</span><br><span class="hljs-selector-attr">[root@rocky8 ~]</span>#<br></code></pre></td></tr></table></figure><h3 id="2-1-2查看非文本文件内容"><a href="#2-1-2查看非文本文件内容" class="headerlink" title="2.1.2查看非文本文件内容"></a>2.1.2查看非文本文件内容</h3><p>范例：hexdump</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hexdump</span> -C -n <span class="hljs-number">512</span> /dev/sda<br><span class="hljs-attribute">00000000</span> eb <span class="hljs-number">63</span> <span class="hljs-number">90</span> <span class="hljs-number">10</span> <span class="hljs-number">8</span>e d0 bc <span class="hljs-number">00</span> b0 b8 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">8</span>e d8 <span class="hljs-number">8</span>e c0 |.c..............|<br><span class="hljs-attribute">echo</span> &#123;a..z&#125; | tr -d &#x27; &#x27;|hexdump -C<br><span class="hljs-attribute">00000000</span> <span class="hljs-number">61</span> <span class="hljs-number">62</span> <span class="hljs-number">63</span> <span class="hljs-number">64</span> <span class="hljs-number">65</span> <span class="hljs-number">66</span> <span class="hljs-number">67</span> <span class="hljs-number">68</span> <span class="hljs-number">69</span> <span class="hljs-number">6</span>a <span class="hljs-number">6</span>b <span class="hljs-number">6</span>c <span class="hljs-number">6</span>d <span class="hljs-number">6</span>e <span class="hljs-number">6</span>f <span class="hljs-number">70</span> |abcdefghijklmnop|<br><span class="hljs-attribute">00000010</span> <span class="hljs-number">71</span> <span class="hljs-number">72</span> <span class="hljs-number">73</span> <span class="hljs-number">74</span> <span class="hljs-number">75</span> <span class="hljs-number">76</span> <span class="hljs-number">77</span> <span class="hljs-number">78</span> <span class="hljs-number">79</span> <span class="hljs-number">7</span>a <span class="hljs-number">0</span>a |qrstuvwxyz.|<br><span class="hljs-attribute">0000001b</span><br></code></pre></td></tr></table></figure><h2 id="2-2-分页查看文件内容"><a href="#2-2-分页查看文件内容" class="headerlink" title="2.2. 分页查看文件内容"></a>2.2. 分页查看文件内容</h2><h3 id="2-2-1-more"><a href="#2-2-1-more" class="headerlink" title="2.2.1 more"></a>2.2.1 more</h3><p>可以实现分页查看文件，可以配合管道符实现输出信息的分页</p><p>格式：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">more [<span class="hljs-keyword">OPTIONS</span>...] <span class="hljs-keyword">FILE</span>...<br></code></pre></td></tr></table></figure><p>选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-d: 显示翻页及退出提示</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">more</span> passwd<br></code></pre></td></tr></table></figure><p>使用空格键往下查看，可显示进度百分比，“q”退出</p><h3 id="2-2-2-less"><a href="#2-2-2-less" class="headerlink" title="2.2.2 less"></a>2.2.2 less</h3><p>less 也可以实现分页查看文件或STDIN输出，less 命令是man命令使用的分页器<br>查看时有用的命令包括：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">/文本 搜索 文本<br><span class="hljs-built_in">n</span>/<span class="hljs-built_in">N</span> 跳到下一个 或 上一个匹配<br></code></pre></td></tr></table></figure><p>范例：#less 配合管道对其它命令的执行结果进行分页显示</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">cat passwd <span class="hljs-string">|less</span><br></code></pre></td></tr></table></figure><h2 id="2-3显示文本前面的或后面的内容"><a href="#2-3显示文本前面的或后面的内容" class="headerlink" title="2.3显示文本前面的或后面的内容"></a>2.3显示文本前面的或后面的内容</h2><h3 id="2-3-1-head"><a href="#2-3-1-head" class="headerlink" title="2.3.1 head"></a>2.3.1 head</h3><p>可以显示文件或标准输入的前面行<br>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">head [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>选项：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">-c # 指定获取前#字节<br>-n # 指定获取前#行,#如果为负数,表示从文件头取到倒数第#前<br>-# 同上<br></code></pre></td></tr></table></figure><p>范例：查看passwd文件前三行</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># head -n 3 passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>范例：查看倒数三行</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># head -3 passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>范例：查看首行到倒数第三行内容</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">head</span> -n -<span class="hljs-number">3</span> passwd<br></code></pre></td></tr></table></figure><h3 id="2-3-2-tail"><a href="#2-3-2-tail" class="headerlink" title="2.3.2 tail"></a>2.3.2 tail</h3><p>tail 和head 相反，查看文件或标准输入的倒数行<br>格式:</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">tail [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>c <span class="hljs-comment"># 指定获取后#字节</span><br><span class="hljs-literal">-</span>n <span class="hljs-comment"># 指定获取后#行,如果#是负数,表示从第#行开始到文件结束</span><br><span class="hljs-literal">-</span><span class="hljs-comment"># 同上</span><br><span class="hljs-literal">-</span>f 跟踪显示文件fd新追加的内容,常用日志监控，相当于 --follow=descriptor,当文件删除再新<br>建同名文件,将无法继续跟踪文件<br><span class="hljs-literal">-</span>F 跟踪文件名，相当于--follow=name --retry，当文件删除再新建同名文件,将可以继续跟踪文<br>件<br>tailf 类似 tail –f，当文件不增长时并不访问文件,节约资源,CentOS8已经无此工具<br></code></pre></td></tr></table></figure><h2 id="2-4按列抽取文本-cut"><a href="#2-4按列抽取文本-cut" class="headerlink" title="2.4按列抽取文本 cut"></a>2.4按列抽取文本 cut</h2><p>cut 命令可以提取文本文件或STDIN数据的指定列<br>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs \">cut [OPTION]... [FILE]...<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean">-d DELIMITER: 指明分隔符，默认tab<br>-f FILEDS:<br>#: 第#个字段,例如:<span class="hljs-number">3</span><br>#,#[,#]：离散的多个字段，例如:<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span><br>#-#：连续的多个字段, 例如:<span class="hljs-number">1</span><span class="hljs-number">-6</span><br>混合使用：<span class="hljs-number">1</span><span class="hljs-number">-3</span>,<span class="hljs-number">7</span><br>-c 按字符切割<br>--output-delimiter=STRING指定输出分隔符<br></code></pre></td></tr></table></figure><h2 id="2-5合并多个文件-paste"><a href="#2-5合并多个文件-paste" class="headerlink" title="2.5合并多个文件 paste"></a>2.5合并多个文件 paste</h2><p>paste 合并多个文件同行号的列到一行<br>格式</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">paste [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>d <span class="hljs-comment">#分隔符：指定分隔符，默认用TAB</span><br><span class="hljs-literal">-</span>s <span class="hljs-comment">#所有行合成一行显示</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># echo &#123;a..d&#125;&gt;alpha.log</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># cat alpha.log </span><br>a b c d<br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># echo &#123;1..4&#125;&gt;seq.log</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># cat seq.log </span><br><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># paste alpha.log seq.log </span><br>a b c d<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@rocky8 ~]# <span class="hljs-keyword">cat</span> alpha.<span class="hljs-built_in">log</span> <br><span class="hljs-keyword">a</span><br><span class="hljs-keyword">b</span><br><span class="hljs-keyword">c</span><br>d<br>[root@rocky8 ~]# <span class="hljs-keyword">echo</span> &#123;<span class="hljs-number">1</span>..<span class="hljs-number">4</span>&#125; |<span class="hljs-keyword">tr</span> <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&quot;\n&quot;</span>&gt;seq.<span class="hljs-built_in">log</span><br>[root@rocky8 ~]# <span class="hljs-keyword">cat</span> seq.<span class="hljs-built_in">log</span> <br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br>[root@rocky8 ~]# paste -d: alpha.<span class="hljs-built_in">log</span> seq.<span class="hljs-built_in">log</span> <br><span class="hljs-variable">a:1</span><br><span class="hljs-variable">b:2</span><br><span class="hljs-keyword">c</span>:<span class="hljs-number">3</span><br>d:<span class="hljs-number">4</span><br>[root@rocky8 ~]# <br></code></pre></td></tr></table></figure><h2 id="2-6分析文本的工具"><a href="#2-6分析文本的工具" class="headerlink" title="2.6分析文本的工具"></a>2.6分析文本的工具</h2><p>文本数据统计：wc<br>整理文本：sort<br>比较文件：diff和patch</p><h3 id="2-6-1-收集文本统计数据-wc"><a href="#2-6-1-收集文本统计数据-wc" class="headerlink" title="2.6.1 收集文本统计数据 wc"></a>2.6.1 收集文本统计数据 wc</h3><p>wc 命令可用于统计文件的行总数、单词总数、字节总数和字符总数<br>可以对文件或STDIN中的数据统计<br>常用选项</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-l 只计数行数</span><br><span class="hljs-deletion">-w 只计数单词总数</span><br><span class="hljs-deletion">-c 只计数字节总数</span><br><span class="hljs-deletion">-m 只计数字符总数</span><br><span class="hljs-deletion">-L 显示文件中最长行的长度</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@rocky8 ~]# wc <span class="hljs-regexp">/etc/</span>passwd<br>  <span class="hljs-number">30</span>   <span class="hljs-number">58</span> <span class="hljs-number">1511</span> <span class="hljs-regexp">/etc/</span>passwd<br>  行数  单词数  字节数<br>  <br> [root@rocky8 ~]# wc -l <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">30</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -w <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">58</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -c <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">1511</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -m <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">1511</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -L <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">85</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# <br></code></pre></td></tr></table></figure><h3 id="2-6-2-文本排序-sort"><a href="#2-6-2-文本排序-sort" class="headerlink" title="2.6.2 文本排序 sort"></a>2.6.2 文本排序 sort</h3><p>把整理过的文本显示在STDOUT，不改变原始文件<br>格式：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">sort</span> [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">file</span>(s)<br></code></pre></td></tr></table></figure><p>常用选项:</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>r 执行反方向（由上至下）整理<br><span class="hljs-literal">-</span>R 随机排序<br><span class="hljs-literal">-</span>n 执行按数字大小整理<br><span class="hljs-literal">-</span>h 人类可读排序,如: 2K 1G<br><span class="hljs-literal">-</span>f 选项忽略（fold）字符串中的字符大小写<br><span class="hljs-literal">-</span>u 选项（独特，unique），合并重复项，即去重<br><span class="hljs-literal">-</span>t c 选项使用c做为字段界定符<br><span class="hljs-literal">-</span>k <span class="hljs-comment"># 选项按照使用c字符分隔的 # 列来整理能够使用多次</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#统计日志访问量<br>[root@centos8 data]#cut -d<span class="hljs-string">&quot; &quot;</span> -f1 <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/nginx/</span>access_log |<span class="hljs-keyword">sort</span> -u|wc -l<br><span class="hljs-number">201</span><br></code></pre></td></tr></table></figure><p>范例：统计分区利用率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span>| <span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">&#x27;%&#x27;</span>|<span class="hljs-built_in">cut</span> -d% -f5|<span class="hljs-built_in">sort</span> -nr|<span class="hljs-built_in">head</span> -n1<br></code></pre></td></tr></table></figure><h3 id="2-6-3-去重"><a href="#2-6-3-去重" class="headerlink" title="2.6.3 去重"></a>2.6.3 去重</h3><p>uniq命令从输入中删除前后相接的重复的行<br>格式：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">uni<span class="hljs-string">q [OPTION]</span>... [FILE]...<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-c: 显示每行重复出现的次数</span><br><span class="hljs-deletion">-d: 仅显示重复过的行</span><br><span class="hljs-deletion">-u: 仅显示不曾重复的行</span><br></code></pre></td></tr></table></figure><p>uniq常和sort 命令一起配合使用：<br>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sort</span> userlist.txt | <span class="hljs-built_in">uniq</span> -c<br></code></pre></td></tr></table></figure><p>范例：统计日志访问量最多的请求</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@centos8 data]#<span class="hljs-built_in">cut</span> -d<span class="hljs-string">&quot; &quot;</span> -f1 access_log |<span class="hljs-type">sort</span> |<span class="hljs-type">uniq</span> -c|<span class="hljs-type">sort</span> -nr |<span class="hljs-type">head</span> <span class="hljs-number">-3</span><br><span class="hljs-number">4870</span> <span class="hljs-number">172.20</span><span class="hljs-number">.116</span><span class="hljs-number">.228</span><br><span class="hljs-number">3429</span> <span class="hljs-number">172.20</span><span class="hljs-number">.116</span><span class="hljs-number">.208</span><br><span class="hljs-number">2834</span> <span class="hljs-number">172.20</span><span class="hljs-number">.0</span><span class="hljs-number">.222</span><br>[root@centos8 data]#lastb -f btmp<span class="hljs-number">-34</span> | <span class="hljs-type">tr</span> -s &#x27; &#x27; |<span class="hljs-type">cut</span> -d &#x27; &#x27; -f3|<span class="hljs-type">sort</span> |<span class="hljs-type">uniq</span> -c<br>|<span class="hljs-type">sort</span> -nr | <span class="hljs-type">head</span> <span class="hljs-number">-3</span><br><span class="hljs-number">86294</span> <span class="hljs-number">58.218</span><span class="hljs-number">.92</span><span class="hljs-number">.37</span><br><span class="hljs-number">43148</span> <span class="hljs-number">58.218</span><span class="hljs-number">.92</span><span class="hljs-number">.26</span><br><span class="hljs-number">18036</span> <span class="hljs-number">112.85</span><span class="hljs-number">.42</span><span class="hljs-number">.201</span><br></code></pre></td></tr></table></figure><p>范例：并发连接最多的远程主机IP</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@centos8 ~]#ss -nt|<span class="hljs-type">tail</span> -n+<span class="hljs-number">2</span> |<span class="hljs-type">tr</span> -s &#x27; &#x27; : |<span class="hljs-type">cut</span> -d: -f6|<span class="hljs-type">sort</span>|<span class="hljs-type">uniq</span> -c|<span class="hljs-type">sort</span> -<br>nr |<span class="hljs-type">head</span> -n2<br><span class="hljs-number">7</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br><span class="hljs-number">2</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.7</span><br></code></pre></td></tr></table></figure><p>范例：取两个文件的相同和不同的行</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test1</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-selector-tag">a</span><br><span class="hljs-selector-tag">b</span><br><span class="hljs-number">1</span><br><span class="hljs-selector-tag">c</span><br><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test2</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-selector-tag">b</span><br><span class="hljs-selector-tag">e</span><br><span class="hljs-selector-tag">f</span><br><span class="hljs-selector-tag">c</span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br>#取文件的共同行<br><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test1</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">test2</span><span class="hljs-selector-class">.txt</span> | <span class="hljs-selector-tag">sort</span> |<span class="hljs-selector-tag">uniq</span> <span class="hljs-selector-tag">-d</span><br><span class="hljs-number">1</span><br><span class="hljs-selector-tag">b</span><br><span class="hljs-selector-tag">c</span><br>#取文件的不同行<br><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test1</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">test2</span><span class="hljs-selector-class">.txt</span> | <span class="hljs-selector-tag">sort</span> |<span class="hljs-selector-tag">uniq</span> <span class="hljs-selector-tag">-u</span><br><span class="hljs-number">2</span><br><span class="hljs-selector-tag">a</span><br><span class="hljs-selector-tag">e</span><br><span class="hljs-selector-tag">f</span><br></code></pre></td></tr></table></figure><h3 id="2-6-4-比较文件"><a href="#2-6-4-比较文件" class="headerlink" title="2.6.4 比较文件"></a>2.6.4 比较文件</h3><h4 id="2-6-4-1-diff"><a href="#2-6-4-1-diff" class="headerlink" title="2.6.4.1 diff"></a>2.6.4.1 diff</h4><p>diff命令比较两个文件之间的区别</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">-u 选项来输出<span class="hljs-string">&quot;统一的(unified)&quot;</span><span class="hljs-built_in">diff</span>格式文件，最适用于补丁文件<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat a.txt </span><br><span class="hljs-string">a</span><br><span class="hljs-string">b</span><br><span class="hljs-string">c</span><br><span class="hljs-string">d</span><br>[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat b.txt </span><br><span class="hljs-string">a</span><br><span class="hljs-number">2</span><br><span class="hljs-string">c</span><br><span class="hljs-string">d</span><br>[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># diff a.txt b.txt </span><br><span class="hljs-string">2c2</span><br><span class="hljs-string">&lt;</span> <span class="hljs-string">b</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">&gt;</span> <span class="hljs-number">2</span><br>[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br></code></pre></td></tr></table></figure><h4 id="2-6-4-2-patch"><a href="#2-6-4-2-patch" class="headerlink" title="2.6.4.2 patch"></a>2.6.4.2 patch</h4><p><strong>patch 复制在其它文件中进行的改变（要谨慎使用）</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">-<span class="hljs-keyword">b</span> 选项来自动备份改变了的文件<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">diff -u foo<span class="hljs-selector-class">.conf</span> foo2<span class="hljs-selector-class">.conf</span> &gt; foo<span class="hljs-selector-class">.patch</span><br>patch -<span class="hljs-selector-tag">b</span> foo<span class="hljs-selector-class">.conf</span> foo.patch<br></code></pre></td></tr></table></figure><h4 id="2-6-4-3vimdiff"><a href="#2-6-4-3vimdiff" class="headerlink" title="2.6.4.3vimdiff"></a>2.6.4.3vimdiff</h4><p>相当于 vim -d</p><p>范例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@rocky8 data]</span># cat <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-selector-tag">a</span><br><span class="hljs-number">2</span><br>c<br>d<br><span class="hljs-selector-attr">[root@rocky8 data]</span># cat <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-selector-tag">a</span><br><span class="hljs-number">2</span><br>c<br>d<br><span class="hljs-selector-attr">[root@rocky8 data]</span># vimdiff <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">2</span> files <span class="hljs-selector-tag">to</span> edit<br><span class="hljs-selector-attr">[root@rocky8 data]</span># <br><br></code></pre></td></tr></table></figure><h4 id="2-6-4-3cmp"><a href="#2-6-4-3cmp" class="headerlink" title="2.6.4.3cmp"></a>2.6.4.3cmp</h4><p>范例：查看二进制文件的不同</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@centos8 data]#ll <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir /u</span>sr<span class="hljs-regexp">/bin/</span>ls<br>-rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/dir<br>-rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/ls<br>[root@centos8 data]#ll <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir /u</span>sr<span class="hljs-regexp">/bin/</span>ls -i<br><span class="hljs-number">201839444</span> -rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/dir<br><span class="hljs-number">201839465</span> -rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/ls<br>[root@centos8 data]#diff <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir /u</span>sr<span class="hljs-regexp">/bin/</span>ls<br>Binary files <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir and /u</span>sr<span class="hljs-regexp">/bin/</span>ls differ<br>[root@centos8 ~]#cmp <span class="hljs-regexp">/bin/</span>dir <span class="hljs-regexp">/bin/</span>ls<br><span class="hljs-regexp">/bin/</span>dir <span class="hljs-regexp">/bin/</span>ls differ: <span class="hljs-keyword">byte</span> <span class="hljs-number">737</span>, line <span class="hljs-number">2</span><br>#跳过前<span class="hljs-number">735</span>个字节,观察后面<span class="hljs-number">30</span>个字节<br>[root@centos8 ~]#hexdump -s <span class="hljs-number">735</span> -Cn <span class="hljs-number">30</span> <span class="hljs-regexp">/bin/</span>ls<br><span class="hljs-number">000002</span>df <span class="hljs-number">00</span> <span class="hljs-number">05</span> <span class="hljs-number">6</span>d da <span class="hljs-number">3</span>f <span class="hljs-number">1</span>b <span class="hljs-number">77</span> <span class="hljs-number">91</span> <span class="hljs-number">91</span> <span class="hljs-number">63</span> a7 de <span class="hljs-number">55</span> <span class="hljs-number">63</span> a2 b9 |..m.?.w..c..Uc..|<br><span class="hljs-number">000002</span>ef d9 d2 <span class="hljs-number">45</span> <span class="hljs-number">55</span> <span class="hljs-number">4</span>c <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">03</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">7</span>d |..EUL........&#125;|<br><span class="hljs-number">000002</span>fd<br>[root@centos8 ~]#hexdump -s <span class="hljs-number">735</span> -Cn <span class="hljs-number">30</span> <span class="hljs-regexp">/bin/</span>dir<br><span class="hljs-number">000002</span>df <span class="hljs-number">00</span> f1 <span class="hljs-number">21</span> <span class="hljs-number">4</span>e f2 <span class="hljs-number">19</span> <span class="hljs-number">7</span>e ef <span class="hljs-number">38</span> <span class="hljs-number">0</span>d <span class="hljs-number">9</span>b <span class="hljs-number">3</span>e d7 <span class="hljs-number">54</span> <span class="hljs-number">08</span> <span class="hljs-number">39</span> |..!N..~.<span class="hljs-number">8</span>..&gt;.T.<span class="hljs-number">9</span>|<br><span class="hljs-number">000002</span>ef e4 <span class="hljs-number">74</span> <span class="hljs-number">4</span>d <span class="hljs-number">69</span> <span class="hljs-number">25</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">03</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">7</span>d |.tMi%........&#125;|<br><span class="hljs-number">000002</span>fd<br></code></pre></td></tr></table></figure><p>练习<br>1、找出ifconfig “网卡名” 命令结果中本机的IPv4地址</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@rocky8 data]# ifconfig | <span class="hljs-type">tail</span> -n +<span class="hljs-number">2</span> |<span class="hljs-type">head</span> -n1|<span class="hljs-type">tr</span> -s <span class="hljs-string">&quot; &quot;</span>|<span class="hljs-type">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f3<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.13</span><br></code></pre></td></tr></table></figure><p>2、查出分区空间使用率的最大百分比值</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@rocky8 data]# df |<span class="hljs-type">tr</span> -s <span class="hljs-string">&quot; &quot;</span> | <span class="hljs-type">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f5|<span class="hljs-type">sort</span> -nr|<span class="hljs-type">head</span> -n1<br><span class="hljs-number">26</span>%<br></code></pre></td></tr></table></figure><p>3、查出用户UID最大值的用户名、UID及shell类型</p><p>4、查出&#x2F;tmp的权限，以数字方式显示<br>5、统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序</p><h1 id="3-正则表达式"><a href="#3-正则表达式" class="headerlink" title="3 正则表达式"></a>3 正则表达式</h1><p>REGEXP： Regular Expressions，由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）<br>不表示字符字面意义，而表示控制或通配的功能，类似于增强版的通配符功能，但与通配符不同，通配<br>符功能是用来处理文件名，而正则表达式是处理文本内容中字符<br>正则表达式被很多程序和开发语言所广泛支持：vim, less,grep,sed,awk, nginx,mysql 等<br>正则表达式分两类：</p><ul><li><p>基本正则表达式：BRE Basic Regular Expressions</p></li><li><p>扩展正则表达式：ERE Extended Regular Expressions</p></li></ul><p>正则表达式引擎：<br>采用不同算法，检查处理正则表达式的软件模块，如：PCRE（Perl Compatible Regular<br>Expressions）<br>正则表达式的元字符分类：字符匹配、匹配次数、位置锚定、分组<br>帮助：man 7 regex  </p><h2 id="3-1基本正则表达式元字符"><a href="#3-1基本正则表达式元字符" class="headerlink" title="3.1基本正则表达式元字符"></a>3.1基本正则表达式元字符</h2><h3 id="3-1-1字符匹配"><a href="#3-1-1字符匹配" class="headerlink" title="3.1 .1字符匹配"></a>3.1 .1字符匹配</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs txt">. 匹配任意单个字符(除了\n)，可以是一个汉字或其它国家的文字<br>[] 匹配指定范围内的任意单个字符，示例：[wang] [0-9] [a-z] [a-zA-Z]<br>[^] 匹配指定范围外的任意单个字符,示例：[^wang]<br>[:alnum:] 字母和数字<br>[:alpha:] 代表任何英文大小写字符，亦即 A-Z, a-z<br>[:lower:] 小写字母,示例:[[:lower:]],相当于[a-z]<br>[:upper:] 大写字母<br>[:blank:] 空白字符（空格和制表符）<br>[:space:] 包括空格、制表符(水平和垂直)、换行符、回车符等各种类型的空白,比[:blank:]包含的范围<br>广<br>[:cntrl:] 不可打印的控制字符（退格、删除、警铃...）<br>[:digit:] 十进制数字<br>[:xdigit:]十六进制数字<br>[:graph:] 可打印的非空白字符<br>[:print:] 可打印字符<br>[:punct:] 标点符号<br>-----------------<br>\s #匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [\f\r\t\v]。注意 Unicode<br>正则表达式会匹配全角空格符<br>\S #匹配任何非空白字符。等价于 [^\f\r\t\v]<br>\w #匹配一个字母,数字,下划线,汉字,其它国家文字的字符，等价于[_[:alnum:]字]<br>\W #匹配一个非字母,数字,下划线,汉字,其它国家文字的字符，等价于[^_[:alnum:]字]<br></code></pre></td></tr></table></figure><p>案例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># ls /etc/ | grep <span class="hljs-string">&#x27;rc[.0-6]&#x27;</span></span><br>rc0.d<br>rc1.d<br>rc2.d<br>rc3.d<br>rc4.d<br>rc5.d<br>rc6.d<br>rc.d<br>rc.<span class="hljs-keyword">local</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h3 id="3-1-2-匹配次数"><a href="#3-1-2-匹配次数" class="headerlink" title="3.1.2 匹配次数"></a>3.1.2 匹配次数</h3><p>用在要指定次数的字符后面，用于指定前面的字符要出现的次数</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs txt">* #匹配前面的字符任意次，包括0次，贪婪模式：尽可能长的匹配<br>.* #任意长度的任意字符<br>\? #匹配其前面的字符出现0次或1次,即:可有可无<br>\+ #匹配其前面的字符出现最少1次,即:肯定有且 &gt;=1 次<br>\&#123;n\&#125; #匹配前面的字符n次<br>\&#123;m,n\&#125; #匹配前面的字符至少m次，至多n次<br>\&#123;,n\&#125; #匹配前面的字符至多n次,&lt;=n<br>\&#123;n,\&#125; #匹配前面的字符至少n次<br></code></pre></td></tr></table></figure><p>范例: 取IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# ifconfig ens160 | grep -o &quot;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&quot; | head -n1<br>192.168.37.130<br></code></pre></td></tr></table></figure><h3 id="3-1-3-位置锚定"><a href="#3-1-3-位置锚定" class="headerlink" title="3.1.3 位置锚定"></a>3.1.3 位置锚定</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">^ 行首<br>$ 行尾<br>\&lt;或者\b 语首<br>\&gt;,或者\b 语尾<br></code></pre></td></tr></table></figure><p>案例： 行首</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># grep &quot;^root&quot; passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>案例： 行尾</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># grep &quot;bash$&quot; passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">yuankun:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:yuankun</span><span class="hljs-symbol">:/home/yuankun</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">test:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1002</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/test</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">test1:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1003</span><span class="hljs-symbol">:</span><span class="hljs-number">1003</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/test1</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>案例：语首</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># echo <span class="hljs-string">&#x27;yuankunsir&#x27;</span> | grep <span class="hljs-string">&quot;\&lt;yuan&quot;</span></span><br>yuankunsir<br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><p>案例： 语尾</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># echo <span class="hljs-string">&#x27;yuankunsir&#x27;</span> | grep <span class="hljs-string">&quot;sir\&gt;&quot;</span></span><br>yuankunsir<br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h3 id="3-1-4-分组其他"><a href="#3-1-4-分组其他" class="headerlink" title="3.1.4 分组其他"></a>3.1.4 分组其他</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livescript">() 分组<br>后向引用：<span class="hljs-string">\1,</span> <span class="hljs-string">\2,</span> ... 注意: <span class="hljs-string">\0</span> 表示正则表达式匹配的所有字符<br>| 或者<br>a|b <span class="hljs-comment">#a或b</span><br>C|cat <span class="hljs-comment">#C或cat</span><br>(C|c)at <span class="hljs-comment">#Cat或cat</span><br></code></pre></td></tr></table></figure><p>案例：分组</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># abc至少出现三次</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># echo <span class="hljs-string">&#x27;abcabcabc&#x27;</span> | grep <span class="hljs-string">&quot;\(abc\)\&#123;3,\&#125;&quot;</span></span><br>abcabcabc<br></code></pre></td></tr></table></figure><p>案例：或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# echo &#x27;abc&#x27; |grep &#x27;a\|b&#x27;<br>abc<br></code></pre></td></tr></table></figure><h1 id="4-文本处理三剑客"><a href="#4-文本处理三剑客" class="headerlink" title="4 文本处理三剑客"></a>4 文本处理三剑客</h1><p>grep 命令主要对文本的（正则表达式）行基于模式进行过滤<br>sed：stream editor，文本编辑工具<br>awk：Linux上的实现gawk，文本报告生成器</p><h2 id="4-1-文本处理三剑客之grep"><a href="#4-1-文本处理三剑客之grep" class="headerlink" title="4.1 文本处理三剑客之grep"></a>4.1 文本处理三剑客之grep</h2><p>grep: Global search REgular expression and Print out the line<br>作用：文本搜索工具，根据用户指定的“模式”对目标文本逐行进行匹配检查；打印匹配到的行<br>模式：由正则表达式字符及文本字符所编写的过滤条件<br>帮助:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://man7.org/linux/man-pages/man1/grep.1.html<br></code></pre></td></tr></table></figure><p>格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">grep [OPTIONS] PATTERN [FILE...]<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs txt">--color=auto 对匹配到的文本着色显示<br>-m # 匹配#次后停止<br>-v 显示不被pattern匹配到的行,即取反<br>-i 忽略字符大小写<br>-n 显示匹配的行号<br>-c 统计匹配的行数<br>-o 仅显示匹配到的字符串<br>-q 静默模式，不输出任何信息<br>-A # after, 后#行<br>-B # before, 前#行<br>-C # context, 前后各#行<br>-e 实现多个选项间的逻辑or关系,如：grep –e ‘cat &#x27; -e ‘dog&#x27; file<br>-w 匹配整个单词<br>-E 使用ERE，相当于egrep<br>-F 不支持正则表达式，相当于fgrep<br>-P 支持Perl格式的正则表达式<br>-f file 根据模式文件处理<br>-r 递归目录，但不处理软链接<br>-R 递归目录，但处理软链接<br></code></pre></td></tr></table></figure><p>案例：-m</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -m1 root passwd <br>root:x:0:0:root:/root:/bin/bash<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-v</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -v root passwd<br></code></pre></td></tr></table></figure><p>案例：-i</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -i root passwd <br>root:x:0:0:root:/root:/bin/bash<br>operator:x:11:0:operator:/root:/sbin/nologin<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-n</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -n root passwd <br>1:root:x:0:0:root:/root:/bin/bash<br>10:operator:x:11:0:operator:/root:/sbin/nologin<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-o</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -o bash passwd <br>bash<br>bash<br>bash<br>bash<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-q</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -q root passwd <br>[root@rocky8 data]# echo $?<br>0<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# cat a.txt <br>a<br>b<br>c<br>d<br>e<br>f<br>g<br>h<br>j<br>k<br>l<br>[root@rocky8 data]# grep -A3 a a.txt <br>a<br>b<br>c<br>d<br>[root@rocky8 data]#<br></code></pre></td></tr></table></figure><p>案例: -B</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# cat a.txt <br>a<br>b<br>c<br>d<br>e<br>f<br>g<br>h<br>j<br>k<br>l<br>[root@rocky8 data]# grep -B3 f a.txt <br>c<br>d<br>e<br>f<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -C</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# cat a.txt <br>a<br>b<br>c<br>d<br>e<br>f<br>g<br>h<br>j<br>k<br>l<br>[root@rocky8 data]# grep -C2 f a.txt <br>d<br>e<br>f<br>g<br>h<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -e root -e yuankun  passwd <br>root:x:0:0:root:/root:/bin/bash<br>operator:x:11:0:operator:/root:/sbin/nologin<br>yuankun:x:1000:1000:yuankun:/home/yuankun:/bin/bash<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -w</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -w root passwd <br>root:x:0:0:root:/root:/bin/bash<br>operator:x:11:0:operator:/root:/sbin/nologin<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -f</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">取两个文件的相同行</span><br>grep -f a.txt b.txt<br></code></pre></td></tr></table></figure><h2 id="4-2-文本处理工具之sed"><a href="#4-2-文本处理工具之sed" class="headerlink" title="4.2 文本处理工具之sed"></a>4.2 文本处理工具之sed</h2><h3 id="4-2-1-sed基本用法"><a href="#4-2-1-sed基本用法" class="headerlink" title="4.2.1 sed基本用法"></a>4.2.1 sed基本用法</h3><p>格式:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sed [option]<span class="hljs-string">...</span> &#x27;script;script;<span class="hljs-string">...</span>&#x27; [inputfile.<span class="hljs-string">..</span>]<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>n 不输出模式空间内容到屏幕，即不自动打印<br><span class="hljs-literal">-</span>e 多点编辑<br><span class="hljs-literal">-</span>f FILE 从指定文件中读取编辑脚本<br><span class="hljs-literal">-</span>r, -E 使用扩展正则表达式<br><span class="hljs-literal">-</span>i.bak 备份文件并原处编辑<br><span class="hljs-literal">-</span>s 将多个文件视为独立文件，而不是单个连续的长文件流<br><span class="hljs-comment">#说明:</span><br><span class="hljs-literal">-</span>ir 不支持<br><span class="hljs-literal">-</span>i -r 支持<br><span class="hljs-literal">-</span>ri 支持<br><span class="hljs-literal">-</span>ni 危险选项,会清空文件<br></code></pre></td></tr></table></figure><p>script格式：</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme"><span class="hljs-symbol">&#x27;地址命令</span>&#x27;<br></code></pre></td></tr></table></figure><p>地址格式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span>. 不给地址：对全文进行处理<br><span class="hljs-number">2</span>. 单地址：<br><span class="hljs-comment">#：指定的行，$：最后一行</span><br><span class="hljs-regexp">/pattern/</span>：被此处模式所能够匹配到的每一行<br><span class="hljs-number">3</span>. 地址范围：<br><span class="hljs-comment">#,# #从#行到第#行，3，6 从第3行到第6行</span><br><span class="hljs-comment">#,+# #从#行到+#行，3,+4 表示从3行到第7行</span><br><span class="hljs-regexp">/pat1/</span>,<span class="hljs-regexp">/pat2/</span><br><span class="hljs-comment">#,/pat/</span><br><span class="hljs-regexp">/pat/</span>,<span class="hljs-comment">#</span><br><span class="hljs-number">4</span>. 步进：~<br><span class="hljs-number">1</span>~<span class="hljs-number">2</span> 奇数行<br><span class="hljs-number">2</span>~<span class="hljs-number">2</span> 偶数行<br></code></pre></td></tr></table></figure><p>命令：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs excel">p 打印当前模式空间内容，追加到默认输出之后<br>Ip 忽略大小写输出<br>d 删除模式空间匹配的行，并立即启用下一轮循环<br>a [\]<span class="hljs-built_in">text</span> 在指定行后面追加文本，支持使用\n实现多行追加<br>i [\]<span class="hljs-built_in">text</span> 在行前面插入文本<br>c [\]<span class="hljs-built_in">text</span> 替换行为单行或多行文本<br>w file 保存模式匹配的行至指定文件<br>r file 读取指定文件的文本至模式空间中匹配到的行后<br>= 为模式空间中的行打印行号<br>! 模式空间中匹配行取反处理<br>q 结束或退出sed<br></code></pre></td></tr></table></figure><p>查找和替换：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">s<span class="hljs-regexp">/pattern/</span>string/修饰符 查找替换,支持使用其它分隔符，可以是其它形式：s@@@，s<span class="hljs-comment">###</span><br>替换修饰符：<br>g 行内全局替换<br>p 显示替换成功的行<br>w <span class="hljs-regexp">/PATH/</span>FILE 将替换成功的行保存至文件中<br>I,i 忽略大小写<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-meta"># sed默认会将输入信息输出到屏幕</span><br>[root@rocky8 <span class="hljs-class"><span class="hljs-keyword">data</span>]# sed &quot;&quot;</span><br><span class="hljs-title">hello</span><br><span class="hljs-title">hello</span><br><span class="hljs-title">yuan</span><br><span class="hljs-title">yuan</span><br><span class="hljs-class"><span class="hljs-keyword">data</span></span><br><span class="hljs-class"><span class="hljs-keyword">data</span></span><br></code></pre></td></tr></table></figure><p>案例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 打印第三行，默认会输出所有，-n选项不输出模式空间内容到屏幕，即不自动打印</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed <span class="hljs-string">&#x27;3p&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br><span class="hljs-meta"># p 打印当前模式空间内容，追加到默认输出之后</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;3p&#x27;</span></span><br><span class="hljs-number">3</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 删除第三行</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed  <span class="hljs-string">&#x27;3d&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 输出第三行至最后一行</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n  <span class="hljs-string">&#x27;3,$p&#x27;</span></span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 输出奇数行</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;1~2p&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">3</span><br><span class="hljs-number">5</span><br><span class="hljs-number">7</span><br><span class="hljs-number">9</span><br><br><span class="hljs-meta"># 输出偶数行</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;2~2p&#x27;</span></span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">6</span><br><span class="hljs-number">8</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 追加，在偶数行追加hello</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># seq 10 | sed  <span class="hljs-string">&#x27;2~2ahello&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br>hello<br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br>hello<br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br>hello<br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br>hello<br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br>hello<br></code></pre></td></tr></table></figure><p>案例：行前和行首添加文本</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br>hello my name <span class="hljs-keyword">is</span> lihua<br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# sed -i <span class="hljs-string">&#x27;/hello/a12138&#x27;</span> <span class="hljs-keyword">data</span>.txt <br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br>hello my name <span class="hljs-keyword">is</span> lihua<br><span class="hljs-number">12138</span><br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# sed -i <span class="hljs-string">&#x27;/hello/i12138&#x27;</span> <span class="hljs-keyword">data</span>.txt <br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br><span class="hljs-number">12138</span><br>hello my name <span class="hljs-keyword">is</span> lihua<br><span class="hljs-number">12138</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1659531426952.png" alt="1659531426952"></p><p>案例：替换行为单行或多行文本</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br><span class="hljs-number">852</span>   a<br><span class="hljs-number">852</span>   b<br><span class="hljs-number">852</span>   c<br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# sed -i <span class="hljs-string">&#x27;/852/c hello&#x27;</span> <span class="hljs-keyword">data</span>.txt <br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br>hello<br>hello<br>hello<br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# <br></code></pre></td></tr></table></figure><p>案例：保存模式匹配的行至指定文件</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># cat a.txt </span><br><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;1~2w a.txt&#x27;</span></span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># cat a.txt </span><br><span class="hljs-number">1</span><br><span class="hljs-number">3</span><br><span class="hljs-number">5</span><br><span class="hljs-number">7</span><br><span class="hljs-number">9</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><p>案例：读取指定文件的文本至模式空间中匹配到的行后</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@rocky8 data]<span class="hljs-comment"># seq 10 | sed &#x27;1~2r /etc/issue&#x27;</span><br><span class="hljs-number">1</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">10</span><br>[root@rocky8 data]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>案例：! 模式空间中匹配行取反处理</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 1~2奇数行，加上！取反就是偶数行</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;1~2!p&#x27;</span></span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">6</span><br><span class="hljs-number">8</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h2 id="4-3-文本处理工具之awk"><a href="#4-3-文本处理工具之awk" class="headerlink" title="4.3 文本处理工具之awk"></a>4.3 文本处理工具之awk</h2>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>权限管理及文本编辑工具</title>
    <link href="/2022/07/25/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%8F%8A%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
    <url>/2022/07/25/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%8F%8A%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="1-新建文件和目录的默认权限"><a href="#1-新建文件和目录的默认权限" class="headerlink" title="1.新建文件和目录的默认权限"></a>1.新建文件和目录的默认权限</h1><p>umask 的值可以用来保留在创建文件权限<br>实现方式：</p><ul><li>新建文件的默认权限: 666-umask，如果所得结果某位存在执行（奇数）权限，则将其权限+1,偶<br>数不变</li><li>新建目录的默认权限: 777-umask</li></ul><p>非特权用户umask默认是002</p><p>root的umask默认是022</p><p>查看umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span><br><span class="hljs-comment">#模式方式显示</span><br><span class="hljs-built_in">umask</span> –S<br><span class="hljs-comment">#输出可被调用</span><br><span class="hljs-built_in">umask</span> –p<br></code></pre></td></tr></table></figure><p>修改umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span> <span class="hljs-comment">#bash</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash<br><span class="hljs-built_in">umask</span> 002<br><span class="hljs-built_in">umask</span> u=rw,g=r,o=<br></code></pre></td></tr></table></figure><p>持久保存umask:</p><ul><li>全局设置：&#x2F;etc&#x2F;bashrc</li><li>用户设置：~&#x2F;.bashrc</li></ul><p>创建临时权限为000的文件三种方法：</p><ul><li>方法一</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> a.txt;<span class="hljs-built_in">chmod</span> 000 a.txt<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span> 777;<span class="hljs-built_in">touch</span> a.txt;<span class="hljs-built_in">umask</span> 022<br></code></pre></td></tr></table></figure><ul><li>方法三</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-built_in">umask</span> 777;<span class="hljs-built_in">touch</span> a.txt)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux运维面试葵花宝典</title>
    <link href="/2022/07/23/TheInterviewQuestions/"/>
    <url>/2022/07/23/TheInterviewQuestions/</url>
    
    <content type="html"><![CDATA[<p><strong>df和du的区别？</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">df 查看是文件系统的空间使用，包括元数据和数据，删除文件后，如果此文件正在使用，不会立即释放空间<br>du 查看是文件数据空间使用，不包括元数据，删除文件后空间立即释放<br></code></pre></td></tr></table></figure><p><strong>RAID0，1，5，6，10,01级别区别</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">1 磁盘利用率<br>2 最少几盘硬盘实现<br>3 容错性，防止几块硬盘损坏<br>4 性能好坏？<br></code></pre></td></tr></table></figure><p><strong>如何判断linux系统网线是联通的还是断了</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">link</span> ok 说明网线是联通的</span><br>root@ubuntu200404:~# mii-tool ens33<br>ens33: negotiated 1000baseT-FD flow-control, link ok<br>root@ubuntu200404:~# <br></code></pre></td></tr></table></figure><p><strong>三次握手过程以及为什么是三次握手</strong></p><p><strong>探测ip冲突arping命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 /]# arping 192.168.179.129<br>ARPING 192.168.179.129 from 192.168.179.130 ens33<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.689ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.797ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.746ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.874ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.712ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.845ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.706ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.741ms<br></code></pre></td></tr></table></figure><p><strong>简述 TCP&#x2F;IP三次握手和四次挥手的工作原理?</strong><br><strong>Centos7,8 Linux操作系统如何临时和永久配置IP地址?请写出操作步骤</strong><br><strong>用一行命令找出ifconfig命令结果中的IP地址?</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig | grep inet |grep -v inet6 | tr -s &quot; &quot; | cut -d&quot; &quot; -f3<br></code></pre></td></tr></table></figure><p><strong>使用tcpdump 监听主机为192.168.1.1,tcp端口为80的数据,同时将输出结果保存成文件?</strong><br><strong>写一个She11脚本,实现判断192.168.1.0&#x2F;24网络里,当前在线的IP有哪些，能ping 通则认为在线</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">变量</span><br>NET=192.168.1.0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">清空文件内容</span><br>cat /dev/null &gt; hosts.txt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">循环</span><br>for i in &#123;1..254&#125;;do<br><span class="hljs-meta prompt_"># </span><span class="language-bash">ping 1秒钟不回应则认为不通</span><br>  if ping -c1 -W1 $NET.$i;then<br><span class="hljs-meta prompt_"># </span><span class="language-bash">屏幕打印，并将结果重定向到hosts.txt中</span><br>    echo $NET.$i is up | tee -a hosts.txt<br>  fi<br>done<br></code></pre></td></tr></table></figure><p><strong>写一个扫描某个主机端口的状态的脚本</strong></p><h1 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h1><p><strong>解释uptime top w命令第一行</strong></p><ul><li>uptime</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># uptime命令<br>[root@rocky ~]# uptime<br> 21:14:45 up  1:31,  2 users,  load average: 0.02, 0.01, 0.00<br><br></code></pre></td></tr></table></figure><ul><li>w命令</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TXt"># w命令<br>[root@rocky ~]# w <br> 21:15:57 up  1:32,  2 users,  load average: 0.00, 0.00, 0.00<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>root     tty1     -                06Aug22  1:19m  0.10s  0.10s -bash<br>root     pts/0    192.168.179.1    19:45    1.00s  0.06s  0.00s w<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><ul><li>top命令</li></ul><p><img src="/../img/1662383968738.png" alt="1662383968738"></p><table><thead><tr><th>21:15:57</th><th>up  1:32</th><th>2 users</th><th>load average: 0.00, 0.00, 0.00</th></tr></thead><tbody><tr><td>当前系统时间</td><td>系统运行了多长时间</td><td>登录的用户数</td><td>系统1分钟、5分钟、15分钟的平均负载，一般不会超过1，超过5时建议警报</td></tr></tbody></table><p><strong>top命令详解</strong></p><p><img src="/../img/1662383968738.png" alt="1662383968738"></p><p><img src="/../img/1662386034301.png" alt="1662386034301"></p><p><strong>面试题</strong><br>4.1 解释top命令每一行的意义<br>4.2 如果查看一个进程的是否是多线程<br>4.3 如果实现秒级的计划任务<br>4.4 说明cron计划任务的格式</p><h1 id="iptables有几个表以及每个表有几个链？"><a href="#iptables有几个表以及每个表有几个链？" class="headerlink" title="iptables有几个表以及每个表有几个链？"></a>iptables有几个表以及每个表有几个链？</h1><p>五表五链</p><h1 id="MySQL相关面试题"><a href="#MySQL相关面试题" class="headerlink" title="MySQL相关面试题"></a>MySQL相关面试题</h1><p> <strong>面试题: VARCHAR(50) 能存放几个 UTF8 编码的汉字？</strong> </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">存放的汉字个数与版本相关。<br>mysql <span class="hljs-number">4.0</span>以下版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字节，如果存放 UTF8 格式编码的汉字时（每个汉字<span class="hljs-number">3</span>字<br>节），只能存放<span class="hljs-number">16</span> 个。<br>mysql <span class="hljs-number">5.0</span>以上版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字符，无论存放的是数字、字母还是 UTF8 编码的汉字，<br>都可以存放 <span class="hljs-number">50</span> 个。<br></code></pre></td></tr></table></figure><p><strong>MyISAM与MyISAM 的区别</strong></p><p><strong>面试题: InnoDB中一颗的B+树可以存放多少行数据？</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">假设定义一颗B+树高度为2，即一个根节点和若干叶子节点。那么这棵B+树的存放总行记录数=根节点指针数*<br>单个叶子记录的行数。这里先计算叶子节点，B+树中的单个叶子节点的大小为16K，假设每一条目为1K，那么<br>记录数即为16(16k/<span class="hljs-attribute">1K</span>=16)，然后计算非叶子节点能够存放多少个指针，假设主键ID为bigint类型，那么长<br>度为8字节，而指针大小在InnoDB中是设置为6个字节，这样加起来一共是14个字节。那么通过页大小/(主键<br>ID大小+指针大小），即16384/<span class="hljs-attribute">14</span>=1170个指针，所以一颗高度为2的B+树能存放16*1170=18720条这样的<br>记录。根据这个原理就可以算出一颗高度为3的B+树可以存放16<span class="hljs-number">*1170</span><span class="hljs-number">*1170</span>=21902400条记录。所以在<br>InnoDB中B+树高度一般为2-3层，它就能满足千万级的数据存储<br></code></pre></td></tr></table></figure><p><strong>事务特性</strong></p><p>ACID特性：<br>A：atomicity 原子性；整个事务中的所有操作要么全部成功执行，要么全部失败后回滚<br>C：consistency一致性；数据库总是从一个一致性状态转换为另一个一致性状态,类似于能量守恒定<br>律(N50周启皓语录)<br>I：Isolation隔离性；一个事务所做出的操作在提交之前，是不能为其它事务所见；隔离有多种隔离<br>级别，实现并发<br>D：durability持久性；一旦事务提交，其所做的修改会永久保存于数据库中</p><p><strong>事务隔离级别</strong></p><p><img src="/../image.assets/1668916687561.png" alt="1668916687561"></p><p><img src="/../image.assets/1668916735065.png" alt="1668916735065"></p><p><strong>MySQL 主从数据不一致</strong><br><strong>造成主从不一致的原因</strong>**</p><ul><li>主库binlog格式为Statement，同步到从库执行后可能造成主从不一致。</li><li>主库执行更改前有执行set sql_log_bin&#x3D;0，会使主库不记录binlog，从库也无法变更这部分数据。</li><li>从节点未设置只读，误操作写入数据</li><li>主库或从库意外宕机，宕机可能会造成binlog或者relaylog文件出现损坏，导致主从不一致</li><li>主从实例版本不一致，特别是高版本是主，低版本为从的情况下，主数据库上面支持的功能，从数</li><li>据库上面可能不支持该功能</li><li>主从sql_mode 不一致</li><li>MySQL自身bug导致</li></ul><p><strong>主从不一致修复方法</strong></p><ul><li>将从库重新实现<br>虽然这也是一种解决方法，但是这个方案恢复时间比较慢，而且有时候从库也是承担一部分的查询<br>操作的，不能贸然重建。</li><li>使用percona-toolkit工具辅助<br>PT工具包中包含pt-table-checksum和pt-table-sync两个工具，主要用于检测主从是否一致以及修<br>复数据不一致情况。这种方案优点是修复速度快，不需要停止主从辅助，缺点是需要知识积累，需<br>要时间去学习，去测试，特别是在生产环境，还是要小心使用<br>关于使用方法，可以参考下面链接：<a href="https://www.cnblogs.com/feiren/p/7777218.html">https://www.cnblogs.com/feiren/p/7777218.html</a></li><li>手动重建不一致的表<br>在从库发现某几张表与主库数据不一致，而这几张表数据量也比较大，手工比对数据不现实，并且<br>重做整个库也比较慢，这个时候可以只重做这几张表来修复主从不一致<br>这种方案缺点是在执行导入期间需要暂时停止从库复制，不过也是可以接受的</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux文件管理</title>
    <link href="/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p class="note note-success">文件管理</p># 1.文件系统目录结构<h2 id="1-1常见的文件系统目录功能"><a href="#1-1常见的文件系统目录功能" class="headerlink" title="1.1常见的文件系统目录功能"></a>1.1常见的文件系统目录功能</h2><p><img src="/../image.assets/1658580842757.png" alt="1658580842757"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">/boot：引导文件存放目录，内核文件(vmlinuz)、引导加载器(bootloader, grub)都存放于此目录<br>/bin：所有用户使用的基本命令；不能关联至独立分区，OS启动即会用到的程序<br>/sbin：管理类的基本命令；不能关联至独立分区，OS启动即会用到的程序<br>/lib：启动时程序依赖的基本共享库文件以及内核模块文件(/lib/modules)<br>/lib64：专用于x86_64系统上的辅助共享库文件存放位置<br>/etc：配置文件目录<br>/home/USERNAME：普通用户家目录<br>/root：管理员的家目录<br>/media：便携式移动设备挂载点<br>/mnt：临时文件系统挂载点<br>/dev：设备文件及特殊文件存储位置<br>b: block device，随机访问<br>c: character device，线性访问<br>/opt：第三方应用程序的安装位置<br>/srv：系统上运行的服务用到的数据<br>/tmp：临时文件存储位置<br>/usr: universal shared, read-only data<br>bin: 保证系统拥有完整功能而提供的应用程序<br>sbin:<br>lib：32位使用<br>lib64：只存在64位系统<br>include: C程序的头文件(header files)<br>share：结构化独立的数据，例如doc, man等<br><span class="hljs-built_in">local</span>：第三方应用程序的安装位置<br>bin, sbin, lib, lib64, etc, share<br>/var: variable data files<br>cache: 应用程序缓存数据目录<br>lib: 应用程序状态信息数据<br><span class="hljs-built_in">local</span>：专用于为/usr/local下的应用程序存储可变数据<br>lock: 锁文件<br><span class="hljs-built_in">log</span>: 日志目录及文件<br>opt: 专用于为/opt下的应用程序存储可变数据<br>run: 运行中的进程相关数据,通常用于存储进程pid文件<br>spool: 应用程序数据池<br>tmp: 保存系统两次重启之间产生的临时数据<br>/proc: 用于输出内核与进程信息相关的虚拟文件系统<br>/sys：用于输出当前系统上硬件设备相关信息虚拟文件系统<br>/selinux: security enhanced Linux，selinux相关的安全策略等信息的存储位置<br></code></pre></td></tr></table></figure><h2 id="1-2Linux下的文件类型"><a href="#1-2Linux下的文件类型" class="headerlink" title="1.2Linux下的文件类型"></a>1.2Linux下的文件类型</h2><ul><li>-普通文件</li><li>d 目录文件directory</li><li>I 符号链接文件link</li><li>b 块设备block</li><li>c 字符设备character</li><li>p 管道文件pipe</li><li>s 套接字文件socket</li></ul><p><mark style="background-color：colorName/hexOfColor">注意:面试题目容易出现</mark></p><p><img src="/../image.assets/1658568673282.png" alt="1658568673282"></p><h1 id="2-文件操作命令"><a href="#2-文件操作命令" class="headerlink" title="2.文件操作命令"></a>2.文件操作命令</h1><h2 id="2-1相对路径和绝对路径"><a href="#2-1相对路径和绝对路径" class="headerlink" title="2.1相对路径和绝对路径"></a>2.1相对路径和绝对路径</h2><ul><li>绝对路径<br>以正斜杠&#x2F; 即根目录开始<br>完整的文件的位置路径<br>可用于任何想指定一个文件名的时候</li><li>相对路径名<br>不以斜线开始<br>一般情况下，是指相对于当前工作目录的路径，特殊场景下，是相对于某目录的位置<br>可以作为一个简短的形式指定一个文件名</li><li>基名：basename，只取文件名而不要路径</li><li>目录名：dirname，只取路径，不要文件名<br>范例:</li></ul><p><img src="/../image.assets/1658569417929.png" alt="1658569417929"></p><h2 id="2-2更改目录"><a href="#2-2更改目录" class="headerlink" title="2.2更改目录"></a>2.2更改目录</h2><p>命令 cd ： change directory 改变目录<br>选项：-P 切换至物理路径，而非软链接目录<br>可以使用绝对或相对路径<br>切换至父目录： cd ..<br>切换至当前用户主目录： cd<br>切换至以前的工作目录： cd -</p><h2 id="2-3列出目录内容"><a href="#2-3列出目录内容" class="headerlink" title="2.3列出目录内容"></a>2.3列出目录内容</h2><p>ls 命令可以列出当前目录的内容或指定目录<br>用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ls <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[files_or_dirs]</span><br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a 包含隐藏文件</span><br><span class="hljs-deletion">-l 显示额外的信息</span><br><span class="hljs-deletion">-R 目录递归</span><br><span class="hljs-deletion">-ld 目录和符号链接信息</span><br><span class="hljs-deletion">-1 文件分行显示</span><br><span class="hljs-deletion">-S 按从大到小排序</span><br><span class="hljs-deletion">-t 按mtime排序</span><br><span class="hljs-deletion">-u 配合-t选项，显示并按atime从新到旧排序</span><br><span class="hljs-deletion">-U 按目录存放顺序显示</span><br><span class="hljs-deletion">-X 按文件后缀排序</span><br><span class="hljs-deletion">-F 对不同类型文件显示时附加不同的符号：*/=&gt;@|</span><br><span class="hljs-deletion">-C 文件多时，以多列的方式显示文件，默认是一列（标准输出）</span><br></code></pre></td></tr></table></figure><p>说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> 查看不同后缀文件时的颜色由 /etc/DIR_COLORS 和@LS_COLORS变量定义<br><span class="hljs-built_in">ls</span> -l 看到文件的大小,不一定是实际文件真正占用空间的大小<br></code></pre></td></tr></table></figure><h2 id="2-4查看文件状态"><a href="#2-4查看文件状态" class="headerlink" title="2.4查看文件状态"></a>2.4查看文件状态</h2><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">stat</span> filename<br></code></pre></td></tr></table></figure><p>每个文件有三个时间戳：</p><ul><li>access time 访问时间，atime，读取文件内容</li><li>modify time 修改时间，mtime，改变文件内容（数据）</li><li>change time 改变时间，ctime，元数据发生改变</li></ul><p><img src="/../image.assets/1658570229648.png" alt="1658570229648"></p><h2 id="2-5查看文件内容"><a href="#2-5查看文件内容" class="headerlink" title="2.5查看文件内容"></a>2.5查看文件内容</h2><p>用法：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">file</span> [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">filename</span><br></code></pre></td></tr></table></figure><p>常用选项：</p><ul><li>-b 列出文件辨识结果时，不显示文件名称</li><li>-f filelist 列出文件filelist中文件名的文件类型</li><li>-F 使用指定分隔符号替换输出文件名后默认的”:”分隔符</li><li>-L 查看对应软链接对应文件的文件类型</li><li>–help 显示命令在线帮助</li></ul><p><img src="/../image.assets/1658570620547.png" alt="1658570620547"></p><h2 id="2-6文件通配符模式"><a href="#2-6文件通配符模式" class="headerlink" title="2.6文件通配符模式"></a>2.6文件通配符模式</h2><p>常见的通配符如下</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs prolog">* 匹配零个或多个字符，但不匹配 <span class="hljs-string">&quot;.&quot;</span> 开头的文件，即隐藏文件<br>? 匹配任何单个字符,一个汉字也算一个字符<br>~ 当前用户家目录<br>~mage 用户mage家目录<br>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>] 匹配数字范围<br>[a-z] 一个字母<br>[<span class="hljs-symbol">A</span>-<span class="hljs-symbol">Z</span>] 一个字母<br>[wang] 匹配列表中的任何的一个字符<br>[^wang] 匹配列表中的所有字符以外的字符<br>[^a-z] 匹配列表中的所有字符以外的字符<br>. 和 ~+ 当前工作目录<br>~- 前一个工作目录<br></code></pre></td></tr></table></figure><h2 id="2-7批量修改文件名"><a href="#2-7批量修改文件名" class="headerlink" title="2.7批量修改文件名"></a>2.7批量修改文件名</h2><p>利用 rename 可以批量修改文件名<br>格式：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">rename</span> [<span class="hljs-keyword">options</span>] <span class="hljs-symbol">&lt;expression&gt;</span> <span class="hljs-symbol">&lt;replacement&gt;</span> <span class="hljs-symbol">&lt;file&gt;</span>...<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#为所有的f开头包含conf的文件加上.bak后缀：</span><br><span class="hljs-built_in">rename</span> <span class="hljs-string">&#x27;conf&#x27;</span> <span class="hljs-string">&#x27;conf.bak&#x27;</span> f*<br><span class="hljs-comment">#去掉所有的bak后缀：</span><br><span class="hljs-built_in">rename</span> <span class="hljs-string">&#x27;.bak&#x27;</span> <span class="hljs-string">&#x27;&#x27;</span> *.bak<br></code></pre></td></tr></table></figure><h1 id="3-硬链接和软链接"><a href="#3-硬链接和软链接" class="headerlink" title="3.硬链接和软链接"></a>3.硬链接和软链接</h1><h2 id="3-1硬链接"><a href="#3-1硬链接" class="headerlink" title="3.1硬链接"></a>3.1硬链接</h2><p>硬链接本质上就给一个文件起一个新的名称，实质是同一个文件<br>硬链接特性</p><ul><li>创建硬链接会在对应的目录中增加额外的记录项以引用文件</li><li>对应于同一文件系统上一个物理文件</li><li>每个目录引用相同的inode号</li><li>创建时链接数递增</li><li>删除文件时：rm命令递减计数的链接，文件要存在，至少有一个链接数，当链接数为零时，该文件被删除</li><li>不能跨越驱动器或分区</li><li>不支持对目录创建硬链接</li></ul><p>格式：  </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ln</span> filename<span class="hljs-meta"> [linkname]</span><br></code></pre></td></tr></table></figure><h2 id="3-2软链接"><a href="#3-2软链接" class="headerlink" title="3.2软链接"></a>3.2软链接</h2><p>一个符号链接指向另一个文件,就像 windows 中快捷方式，软链接文件和原文件本质上不是同一个文件<br>软链接特点</p><ul><li>一个符号链接的内容是它引用文件的名称</li><li>可以对目录创建软链接</li><li>可以跨分区的文件实现</li><li>指向的是另一个文件的路径；其大小为指向的路径字符串的长度；不增加或减少目标文件inode的引用计数</li><li>在创建软链接时, 如果源文件使用相对路径，是相对于软链接文件的路径，而非相对于当前工作目录,但是软链接的路径如果是相对路径,则是相对于当前工作目录<br>格式：  <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ln</span> -s filename<span class="hljs-meta"> [linkname]</span><br></code></pre></td></tr></table></figure>范例： 查看软链接</li></ul><p><img src="/../image.assets/1658588131214.png" alt="1658588131214"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/data/</span>dirlink <span class="hljs-comment">#只删除软链接本身,不会删除源目录内容</span><br>rm -rf <span class="hljs-regexp">/data/</span>dirlink/ <span class="hljs-comment">#删除源目录的文件,但不会删除链接文件,此方法非常危险</span><br><span class="hljs-comment">#注意: 删除此软链接务必不要加-r选项</span><br></code></pre></td></tr></table></figure><h1 id="4-硬链接和软链接区别"><a href="#4-硬链接和软链接区别" class="headerlink" title="4.硬链接和软链接区别"></a>4.硬链接和软链接区别</h1><ol><li>本质：</li></ol><ul><li>硬链接：本质是同一个文件</li><li>软链接：本质不是同一个文件</li></ul><ol start="2"><li>跨设备</li></ol><ul><li>硬链接：不支持</li><li>软链接：支持</li></ul><ol start="3"><li>inode</li></ol><ul><li>硬链接：相同</li><li>软链接：不同</li></ul><ol start="4"><li>链接数</li></ol><ul><li>硬链接：创建新的硬链接,链接数会增加,删除硬链接,链接数减少</li><li>软链接：创建或删除,链接数不会变化</li></ul><ol start="5"><li>文件夹</li></ol><ul><li>硬链接：不支持</li><li>软链接：支持</li></ul><ol start="6"><li>相对路径</li></ol><ul><li>硬链接：原始文件相对路径是相对于当前工作目录</li><li>软链接：原始文件的相对路径是相对于链接文件的相对路径</li></ul><ol start="7"><li>删除源文件</li></ol><ul><li>硬链接：只是链接数减一,但链接文件的访问不受影响</li><li>软链接：链接文件将无法访问</li></ul><ol start="8"><li>文件类型</li></ol><ul><li>硬链接：和源文件相同</li><li>软链接：链接文件,和源文件无关</li></ul><ol start="9"><li>文件大小</li></ol><ul><li>硬链接: 和源文件相同</li><li>软链接: 源文件的路径的长度</li></ul><h1 id="5-生产案例"><a href="#5-生产案例" class="headerlink" title="5.生产案例"></a>5.生产案例</h1><ul><li>案例1：提示空间满 No space left on device，但 df 可以看到空间很多，为什么？<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go">解决方法：节点编号用完了，增加节点编号增加不了，说明你的磁盘上的文件都是小文件；<br><span class="hljs-number">1</span>、删除不用的文件和文件夹释放inode<br><span class="hljs-number">2</span>、迁移数据到新磁盘然后格式化重新指定inode<br>知识点：<br><span class="hljs-number">1.</span>Linux下一个文件夹或者一个文件就会占用一个inode资源<br><span class="hljs-number">2.i</span>node资源数量是在格式化磁盘的时候就指定的（可以不指定，但也会有一个值），要更改这个<br>数量必须格式化磁盘<br><span class="hljs-number">3.</span>如果某个磁盘的inode资源用尽，即便磁盘有空间，也不能进行任何文件或者文件夹的新增<br><span class="hljs-number">4.</span>删除一个文件夹或者文件就能释放一个inode资源<br></code></pre></td></tr></table></figure></li><li>案例2：提示空间快满，使用 rm 删除了很大的无用文件后，df仍然看到空间不足，为什么？如何解决？<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">有其他程序在使用该文件，可以清空该文件内容。使用&gt;清空文件内容<br><span class="hljs-quote">&gt; filename</span><br><span class="hljs-section"># &gt; test.log</span><br></code></pre></td></tr></table></figure></li></ul><p><img src="/../image.assets/1658589334005.png" alt="1658589334005"></p><h1 id="6-重定向和管道"><a href="#6-重定向和管道" class="headerlink" title="6.重定向和管道"></a>6.重定向和管道</h1><h2 id="6-1-标准输入和输出"><a href="#6-1-标准输入和输出" class="headerlink" title="6.1 标准输入和输出"></a>6.1 标准输入和输出</h2><p>程序：指令+数据<br>读入数据：Input<br>输出数据：Output<br>打开的文件都有一个fd: file descriptor (文件描述符)<br>Linux给程序提供三种 I&#x2F;O 设备</p><ul><li>标准输入（STDIN） －0 默认接受来自终端窗口的输入</li><li>标准输出（STDOUT）－1 默认输出到终端窗口</li><li>标准错误（STDERR） －2 默认输出到终端窗口</li></ul><h2 id="6-2标准的输出和错误重定向"><a href="#6-2标准的输出和错误重定向" class="headerlink" title="6.2标准的输出和错误重定向"></a>6.2标准的输出和错误重定向</h2><p>格式：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">命令 操作符号 文件名<br></code></pre></td></tr></table></figure><p>支持的操作符号包括：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl"><span class="hljs-meta prompt_">1&gt; </span>或 &gt; 把STDOUT重定向到文件<br><span class="hljs-meta prompt_">2&gt; </span>把STDERR重定向到文件<br>&amp;&gt; 把标准输出和错误都重定向<br>&gt;&amp; 和上面功能一样，建议使用上面方式<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658627818949.png" alt="1658627818949"></p><p><img src="/../image.assets/1658627951062.png" alt="1658627951062"></p><p><img src="/../image.assets/1658628044574.png" alt="1658628044574"></p><p>以上的文件如果已经存在，文件内容则会覆盖</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># &gt;&gt; 可以在原有的基础内容上追加内容</span><br><span class="hljs-meta prompt_">&gt;&gt;</span> 追加标准输出重定向至文件<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628188096.png" alt="1658628188096"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">2&gt;</span><span class="language-bash">&gt; 追加标准错误重定向至文件</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628249117.png" alt="1658628249117"></p><h2 id="6-3将标准输出和错误输出指定向不同的文件"><a href="#6-3将标准输出和错误输出指定向不同的文件" class="headerlink" title="6.3将标准输出和错误输出指定向不同的文件"></a>6.3将标准输出和错误输出指定向不同的文件</h2><p>格式：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">COMMAND &gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-built_in">file</span>.<span class="hljs-built_in">log</span> <span class="hljs-number">2</span>&gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">error</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628570176.png" alt="1658628570176"></p><h2 id="6-4合并标准输出和错误输出为同一个数据流进行重定向"><a href="#6-4合并标准输出和错误输出为同一个数据流进行重定向" class="headerlink" title="6.4合并标准输出和错误输出为同一个数据流进行重定向"></a>6.4合并标准输出和错误输出为同一个数据流进行重定向</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs delphi">&amp;&gt; 覆盖重定向<br>&amp;&gt;&gt; 追加重定向<br>COMMAND &gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">file</span>.<span class="hljs-keyword">out</span> <span class="hljs-number">2</span>&gt;<span class="hljs-number">&amp;1</span> （顺序很重要）<br>COMMAND &gt;&gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">file</span>.<span class="hljs-keyword">out</span> <span class="hljs-number">2</span>&gt;<span class="hljs-number">&amp;1</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628863373.png" alt="1658628863373"></p><p><img src="/../image.assets/1658628910790.png" alt="1658628910790"></p><p><img src="/../image.assets/1658629123843.png" alt="1658629123843"></p><ul><li>错误案例</li></ul><p><img src="/../image.assets/1658629245131.png" alt="1658629245131">  </p><h2 id="6-5标准输入重定向"><a href="#6-5标准输入重定向" class="headerlink" title="6.5标准输入重定向"></a>6.5标准输入重定向</h2><p>实现标准输入重定向的符号</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">COMMAND</span> <span class="hljs-number">0</span>&lt; <span class="hljs-keyword">FILE</span><br><span class="hljs-keyword">COMMAND</span> &lt; <span class="hljs-keyword">FILE</span><br></code></pre></td></tr></table></figure><ul><li>面试题：</li></ul><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-comment"># 求1+2+···+10的和</span><br><span class="hljs-type">seq</span> -s+ <span class="hljs-number">10</span> &gt; <span class="hljs-type">seq</span>.log<br>bc &lt; <span class="hljs-type">seq</span>.log<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658631614537.png" alt="1658631614537"></p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nim">扩展：求<span class="hljs-number">1</span>*<span class="hljs-number">2</span>*···*<span class="hljs-number">10</span>的值：<br><span class="hljs-type">seq</span> -s* <span class="hljs-number">10</span> &gt;<span class="hljs-type">seq</span>.log<br>bc &lt; <span class="hljs-type">seq</span>.log<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658631847010.png" alt="1658631847010"></p><p><img src="/../image.assets/1658631986469.png" alt="1658631986469"></p><h3 id="6-5-1tr命令"><a href="#6-5-1tr命令" class="headerlink" title="6.5.1tr命令"></a>6.5.1tr命令</h3><p>tr 转换和删除字符</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">tr</span> <span class="hljs-selector-attr">[option]</span> ··· SET1 <span class="hljs-selector-attr">[SET2]</span><br></code></pre></td></tr></table></figure><p>选项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs css">-d <span class="hljs-attr">--delete</span>：删除所有属于第一字符集的字符<br>-s <span class="hljs-attr">--squeeze-repeats</span>：把连续重复的字符以单独一个字符表示,即去重<br>-t <span class="hljs-attr">--truncate-set1</span>：将第一个字符集对应字符转化为第二字符集对应的字符<br>-c –C <span class="hljs-attr">--complement</span>：取字符集的补集<br>\NNN character with octal value NNN (<span class="hljs-number">1</span> <span class="hljs-selector-tag">to</span> <span class="hljs-number">3</span> octal digits)<br>\\ backslash<br>\<span class="hljs-selector-tag">a</span> audible BEL<br>\<span class="hljs-selector-tag">b</span> backspace<br>\f <span class="hljs-selector-tag">form</span> feed<br>\n new line<br>\r return<br>\t horizontal tab<br>\v vertical tab<br><span class="hljs-selector-attr">[:alnum:]</span>：字母和数字<br><span class="hljs-selector-attr">[:alpha:]</span>：字母<br><span class="hljs-selector-attr">[:digit:]</span>：数字<br><span class="hljs-selector-attr">[:lower:]</span>：小写字母<br><span class="hljs-selector-attr">[:upper:]</span>：大写字母<br><span class="hljs-selector-attr">[:space:]</span>：空白字符<br><span class="hljs-selector-attr">[:print:]</span>：可打印字符<br><span class="hljs-selector-attr">[:punct:]</span>：标点符号<br><span class="hljs-selector-attr">[:graph:]</span>：图形字符<br><span class="hljs-selector-attr">[:cntrl:]</span>：控制（非打印）字符<br><span class="hljs-selector-attr">[:xdigit:]</span>：十六进制字符<br></code></pre></td></tr></table></figure><p>范例：</p><ul><li>删除字符,删除’abcd’中的’a’</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> abcd | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;a&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658633116721.png" alt="1658633116721"></p><ul><li>将’aaabbbccc‘中字符去重</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> aaabbbccc |<span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27;abc&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658633240146.png" alt="1658633240146"></p><ul><li>输入df将空格用”+”替换</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> | <span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27; &#x27;</span> +<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658633697556.png" alt="1658633697556"></p><h3 id="6-5-2多行重定向"><a href="#6-5-2多行重定向" class="headerlink" title="6.5.2多行重定向"></a>6.5.2多行重定向</h3><p>使用 “&lt;&lt;终止词” 命令从键盘把多行重导向给STDIN，直到终止词位置之前的所有文本都发送给<br>STDIN，有时被称为就地文本（here documents）<br>其中终止词可以是任何一个或多个符号，比如：!，@，$，EOF（End Of File），magedu等，其中EOF<br>比较常用</p><p>范例：</p><p><img src="/../image.assets/1658634064057.png" alt="1658634064057"></p><h3 id="6-5-3高级重定向"><a href="#6-5-3高级重定向" class="headerlink" title="6.5.3高级重定向"></a>6.5.3高级重定向</h3><h4 id="6-5-3-1-cmd1-lt-lt-cmd2"><a href="#6-5-3-1-cmd1-lt-lt-cmd2" class="headerlink" title="6.5.3.1 cmd1 &lt; &lt;(cmd2)"></a>6.5.3.1 cmd1 &lt; &lt;(cmd2)</h4><p>名称为 Process substitution ,是由两个部分组成<br>&lt;(cmd2) 表示把cmd2的输出写入一个临时文件, 注意：&lt;和（之间无空格<br>cmd1 &lt; 这是一个标准的stdin重定向<br>把两个合起来，就是把cmd2的输出stdout传递给cmd1作为输入stdin, 中间通过临时文件做传递</p><p><img src="/../image.assets/1658634342387.png" alt="1658634342387"></p><h4 id="6-5-3-2cmd1-lt-lt-lt-’string’"><a href="#6-5-3-2cmd1-lt-lt-lt-’string’" class="headerlink" title="6.5.3.2cmd1&lt;&lt;&lt;’string’"></a>6.5.3.2cmd1&lt;&lt;&lt;’string’</h4><p>含义是 here-string ，表示传给给cmd的stdin的内容从这里开始是一个字符串。<br>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bc</span> &lt;&lt;&lt;&#x27;<span class="hljs-number">2</span>+<span class="hljs-number">4</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658634687295.png" alt="1658634687295"></p><h2 id="6-6-tee命令"><a href="#6-6-tee命令" class="headerlink" title="6.6 tee命令"></a>6.6 tee命令</h2><p>tee命令用于读取标准输入的数据，并将其内容输出成文件。</p><p>tee指令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。</p><p>选项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">-<span class="hljs-selector-tag">a</span> 追加<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658643404404.png" alt="1658643404404"></p><h1 id="7-用户和组相关概念"><a href="#7-用户和组相关概念" class="headerlink" title="7.用户和组相关概念"></a>7.用户和组相关概念</h1><h2 id="7-1-用户"><a href="#7-1-用户" class="headerlink" title="7.1 用户"></a>7.1 用户</h2><p>Linux中每个用户是通过 User Id （UID）来唯一标识的</p><ul><li><p>管理员：root, 0</p></li><li><p>普通用户：1-60000 自动分配</p><ul><li>系统用户：1-499 （CentOS 6以前）, 1-999 （CentOS 7以后）<br>对守护进程获取资源进行权限分配</li><li>登录用户：500+ （CentOS6以前）, 1000+（CentOS7以后）<br>给用户进行交互式登录使用</li></ul></li></ul><h2 id="7-2-用户组"><a href="#7-2-用户组" class="headerlink" title="7.2 用户组"></a>7.2 用户组</h2><p>Linux中可以将一个或多个用户加入用户组中，用户组是通过Group ID（GID） 来唯一标识的。</p><ul><li>管理员组：root, 0</li><li>普通组：<ul><li>系统组：1-499（CentOS 6以前）, 1-999（CentOS7以后）, 对守护进程获取资源进行权限分配</li><li>普通组：500+（CentOS 6以前）, 1000+（CentOS7以后）, 给用户使用</li></ul></li></ul><h2 id="7-3-用户和组的关系"><a href="#7-3-用户和组的关系" class="headerlink" title="7.3 用户和组的关系"></a>7.3 用户和组的关系</h2><ul><li>用户的主要组(primary group)：用户必须属于一个且只有一个主组，默认创建用户时会自动创建和用户名同名的组，做为用户的主要组，由于此组中只有一个用户，又称为私有组</li><li>用户的附加组(supplementary group)： 一个用户可以属于零个或多个辅助组，附属组</li></ul><p>范例：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@rocky8 home]# id yuankun<br><span class="hljs-attribute">uid</span>=1000(yuankun) <span class="hljs-attribute">gid</span>=1000(yuankun) <span class="hljs-attribute">groups</span>=1000(yuankun)<br></code></pre></td></tr></table></figure><h2 id="7-4用户和组的配置文件"><a href="#7-4用户和组的配置文件" class="headerlink" title="7.4用户和组的配置文件"></a>7.4用户和组的配置文件</h2><h3 id="7-4-1用户和组的主要配置文件"><a href="#7-4-1用户和组的主要配置文件" class="headerlink" title="7.4.1用户和组的主要配置文件"></a>7.4.1用户和组的主要配置文件</h3><ul><li>&#x2F;etc&#x2F;passwd：用户及其属性信息(名称、UID、主组ID等）</li><li>&#x2F;etc&#x2F;shadow：用户密码及其相关属性</li><li>&#x2F;etc&#x2F;group：组及其属性信息</li><li>&#x2F;etc&#x2F;gshadow：组密码及其相关属性</li></ul><h3 id="7-4-2-passwd文件格式"><a href="#7-4-2-passwd文件格式" class="headerlink" title="7.4.2 passwd文件格式"></a>7.4.2 passwd文件格式</h3><ul><li>login name：登录用名（yuankun）</li><li>passwd：密码 (x)</li><li>UID：用户身份编号 (1000)</li><li>GID：登录默认所在组编号 (1000)</li><li>GECOS：用户全名或注释</li><li>home directory：用户主目录 (&#x2F;home&#x2F;wang)</li><li>shell：用户默认使用shell (&#x2F;bin&#x2F;bash)</li></ul><p><img src="/../image.assets/1658659141980.png" alt="1658659141980"></p><h3 id="7-4-3shadow文件格式"><a href="#7-4-3shadow文件格式" class="headerlink" title="7.4.3shadow文件格式"></a>7.4.3shadow文件格式</h3><ul><li>登录用名</li><li>用户密码:一般用sha512加密</li><li>从1970年1月1日起到密码最近一次被更改的时间</li><li>密码再过几天可以被变更（0表示随时可被变更）</li><li>密码再过几天必须被变更（99999表示永不过期）</li><li>密码过期前几天系统提醒用户（默认为一周）</li><li>密码过期几天后帐号会被锁定</li><li>从1970年1月1日算起，多少天后帐号失效<br><img src="/../image.assets/1658662334418.png" alt="1658662334418"></li></ul><h3 id="7-4-4group文件格式"><a href="#7-4-4group文件格式" class="headerlink" title="7.4.4group文件格式"></a>7.4.4group文件格式</h3><ul><li>群组名称：就是群组名称</li><li>群组密码：通常不需要设定，密码是被记录在 &#x2F;etc&#x2F;gshadow</li><li>GID：就是群组的 ID</li><li>以当前组为附加组的用户列表(分隔符为逗号)</li></ul><p><img src="/../image.assets/1658662552564.png" alt="1658662552564"></p><h3 id="7-4-5gshadow文件格式"><a href="#7-4-5gshadow文件格式" class="headerlink" title="7.4.5gshadow文件格式"></a>7.4.5gshadow文件格式</h3><ul><li>群组名称：就是群的名称</li><li>群组密码：</li><li>组管理员列表：组管理员的列表，更改组密码和成员</li><li>以当前组为附加组的用户列表：多个用户间用逗号分隔</li></ul><p><img src="/../image.assets/1658662641679.png" alt="1658662641679"></p><h2 id="7-5-用户和组管理命令"><a href="#7-5-用户和组管理命令" class="headerlink" title="7.5 用户和组管理命令"></a>7.5 用户和组管理命令</h2><ul><li>用户管理命令<ul><li>useradd(添加用户)</li><li>usermod(修改用户)</li><li>userdel(删除用户)</li></ul></li><li>组账号维护命令<ul><li>groupadd</li><li>groupmod</li><li>groupdel</li></ul></li></ul><p>面试题：添加新用户后家目录下的文件来源什么地方？</p><p>来源于&#x2F;etc&#x2F;skel,进入&#x2F;etc&#x2F;skel下查看文件和进入test用户的家目录下查看文件是一致的</p><p><img src="/../image.assets/1658665374181.png" alt="1658665374181"></p><p><img src="/../image.assets/1658665436871.png" alt="1658665436871"></p><h3 id="7-5-1用户创建"><a href="#7-5-1用户创建" class="headerlink" title="7.5.1用户创建"></a>7.5.1用户创建</h3><p>useradd命令可以创建新的linux用户</p><p>格式：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">useradd [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">login</span><br></code></pre></td></tr></table></figure><p>常见的选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u UID</span><br><span class="hljs-deletion">-o 配合-u 选项，不检查UID的唯一性</span><br><span class="hljs-deletion">-g GID 指明用户所属基本组，可为组名，也可以GID</span><br><span class="hljs-deletion">-c &quot;COMMENT“ 用户的注释信息</span><br><span class="hljs-deletion">-d HOME_DIR 以指定的路径(不存在)为家目录</span><br><span class="hljs-deletion">-s SHELL 指明用户的默认shell程序，可用列表在/etc/shells文件中</span><br><span class="hljs-deletion">-G GROUP1[,GROUP2,...] 为用户指明附加组，组须事先存在</span><br><span class="hljs-deletion">-N 不创建私用组做主组，使用users组做主组</span><br><span class="hljs-deletion">-r 创建系统用户 CentOS 6之前: ID&lt;500，CentOS7 以后: ID&lt;1000</span><br><span class="hljs-deletion">-m 创建家目录，用于系统用户</span><br><span class="hljs-deletion">-M 不创建家目录，用于非系统用户</span><br><span class="hljs-deletion">-p 指定加密的密码</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">[root@rocky8 home]<span class="hljs-meta"># groupadd apache</span><br>[root@rocky8 home]<span class="hljs-meta"># useradd -r -u 48 -g apache -s /sbin/nologin -d /var/www -c <span class="hljs-string">&quot;Apache&quot;</span> apache</span><br></code></pre></td></tr></table></figure><p>useradd命令默认值设置由&#x2F;etc&#x2F;default&#x2F;useradd定义</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@centos8 ~]#cat <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/useradd<br># useradd defaults <span class="hljs-keyword">file</span><br><span class="hljs-keyword">GROUP</span>=<span class="hljs-number">100</span><br>HOME=/home<br>INACTIVE=-<span class="hljs-number">1</span> #对应<span class="hljs-regexp">/etc/</span>shadow文件第<span class="hljs-number">7</span>列，即用户密码过期后的帐号锁定的宽限期,-<span class="hljs-number">1</span>表示不锁定<br>EXPIRE= #对应<span class="hljs-regexp">/etc/</span>shadow文件第<span class="hljs-number">8</span>列，即用户帐号的有效期<br>SHELL=<span class="hljs-regexp">/bin/</span>bash<br>SKEL=<span class="hljs-regexp">/etc/</span>skel #用于生成新建用户家目录的模版文件<br>CREATE_MAIL_SPOOL=yes<br></code></pre></td></tr></table></figure><h3 id="7-5-2用户属性修改"><a href="#7-5-2用户属性修改" class="headerlink" title="7.5.2用户属性修改"></a>7.5.2用户属性修改</h3><p>usermod命令可以修改用户属性</p><p>格式：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">usermod [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">login</span><br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u UID: 新UID</span><br><span class="hljs-deletion">-g GID: 新主组</span><br><span class="hljs-deletion">-G GROUP1[,GROUP2,...[,GROUPN]]]：新附加组，原来的附加组将会被覆盖；若保留原有，则要同时使</span><br>用-a选项<br><span class="hljs-deletion">-s SHELL：新的默认SHELL</span><br><span class="hljs-deletion">-c &#x27;COMMENT&#x27;：新的注释信息</span><br><span class="hljs-deletion">-d HOME: 新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使用-m选项</span><br><span class="hljs-deletion">-l login_name: 新的名字</span><br><span class="hljs-deletion">-L: lock指定用户,在/etc/shadow 密码栏的增加 !</span><br><span class="hljs-deletion">-U: unlock指定用户,将 /etc/shadow 密码栏的 ! 拿掉</span><br><span class="hljs-deletion">-e YYYY-MM-DD: 指明用户账号过期日期</span><br><span class="hljs-deletion">-f INACTIVE: 设定非活动期限，即宽限期</span><br></code></pre></td></tr></table></figure><p>范例：创建test用户，使用id username查看用户的uid,然后修改其uid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@rocky8 home]<span class="hljs-comment"># useradd test   #添加tes用户</span><br>[root@rocky8 home]<span class="hljs-comment"># id test#查看用户信息</span><br>uid=1001(<span class="hljs-built_in">test</span>) gid=1001(<span class="hljs-built_in">test</span>) <span class="hljs-built_in">groups</span>=1001(<span class="hljs-built_in">test</span>)<br>[root@rocky8 home]<span class="hljs-comment"># usermod -u 1002 test   # 将uid修改为1002</span><br>[root@rocky8 home]<span class="hljs-comment"># id test#查看用户信息修改成功</span><br>uid=1002(<span class="hljs-built_in">test</span>) gid=1001(<span class="hljs-built_in">test</span>) <span class="hljs-built_in">groups</span>=1001(<span class="hljs-built_in">test</span>)<br></code></pre></td></tr></table></figure><h3 id="7-5-4删除用户"><a href="#7-5-4删除用户" class="headerlink" title="7.5.4删除用户"></a>7.5.4删除用户</h3><p>userdel可以删除用户</p><p>格式：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">userdel [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">login</span><br></code></pre></td></tr></table></figure><p>常见的选项：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">-f, <span class="hljs-comment">--force 强制</span><br>-r, <span class="hljs-comment">--remove 删除用户家目录和邮箱</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">userdel -f <span class="hljs-built_in">test</span>  <span class="hljs-comment">#强制删除</span><br>userdel -rf <span class="hljs-built_in">test</span> <span class="hljs-comment"># 删除家目录和邮箱</span><br></code></pre></td></tr></table></figure><h3 id="7-5-5查看用户相关ID"><a href="#7-5-5查看用户相关ID" class="headerlink" title="7.5.5查看用户相关ID"></a>7.5.5查看用户相关ID</h3><p>id命令可以查看用户的UID、GID等信息</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">id <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[username]</span><br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u: 显示UID</span><br><span class="hljs-deletion">-g: 显示GID</span><br><span class="hljs-deletion">-G: 显示用户所属的组的ID</span><br><span class="hljs-deletion">-n: 显示名称，需配合ugG使用</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id test</span><br>uid=<span class="hljs-number">1002</span>(test) gid=<span class="hljs-number">1001</span>(test) groups=<span class="hljs-number">1001</span>(test)<br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id -u test</span><br><span class="hljs-number">1002</span><br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id -g test</span><br><span class="hljs-number">1001</span><br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id -G test</span><br><span class="hljs-number">1001</span><br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h3 id="7-5-6查看linux所有用户"><a href="#7-5-6查看linux所有用户" class="headerlink" title="7.5.6查看linux所有用户"></a>7.5.6查看linux所有用户</h3><ul><li>查看&#x2F;etc&#x2F;passwd</li></ul><p><img src="/../image.assets/1658664876880.png" alt="1658664876880"></p><ul><li>getent passwd</li></ul><p><img src="/../image.assets/1658664946447.png" alt="1658664946447"></p><h3 id="7-5-7切换用户"><a href="#7-5-7切换用户" class="headerlink" title="7.5.7切换用户"></a>7.5.7切换用户</h3><p>su: 即 switch user，命令可以切换用户身份，并且以指定用户的身份执行命令<br>格式：</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">su <span class="hljs-comment">[options...]</span> <span class="hljs-comment">[-]</span> <span class="hljs-comment">[user <span class="hljs-comment">[args...]</span>]</span><br></code></pre></td></tr></table></figure><p>常见的选项</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">-<span class="hljs-keyword">l</span> --login su -<span class="hljs-keyword">l</span> UserName 相当于 su - UserName<br>-<span class="hljs-keyword">c</span>, --<span class="hljs-keyword">command</span> <span class="hljs-symbol">&lt;command&gt;</span> pass <span class="hljs-keyword">a</span> single <span class="hljs-keyword">command</span> <span class="hljs-keyword">to</span> the <span class="hljs-keyword">shell</span> with -<span class="hljs-keyword">c</span><br></code></pre></td></tr></table></figure><p>切换用户的方式：</p><ul><li>su UserName：非登录式切换，即不会读取目标用户的配置文件，不改变当前工作目录，即不完全切换</li><li>su - UserName：登录式切换，会读取目标用户的配置文件，切换至自已的家目录，即完全切换<br>说明：root su至其他用户无须密码；非root用户切换时需要密码<br>注意：su 切换新用户后，使用 exit 退回至旧的用户身份，而不要再用 su 切换至旧用户，否则会生成很多的bash子进程，环境可能会混乱。</li></ul><p>换个身份执行命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">su</span> - username -c <span class="hljs-string">&#x27;command&#x27;</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crystal">[root<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-comment"># su - test -c &#x27;touch test.log&#x27;</span><br>[root<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-comment"># su test</span><br>[test<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-variable">$ </span>ll<br>total <span class="hljs-number">0</span><br>[test<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-variable">$ </span>ls -a<br>.  ..  .bash_logout  .bash_profile  .bashrc<br>[test<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-variable">$ </span>cd /home/<br>[test<span class="hljs-variable">@rocky8</span> home]<span class="hljs-variable">$ </span>ll<br>total <span class="hljs-number">0</span><br>drwx------. <span class="hljs-number">2</span> test    test     <span class="hljs-number">99</span> Jul <span class="hljs-number">24</span> <span class="hljs-number">11</span>:<span class="hljs-number">38</span> test<br>drwx------. <span class="hljs-number">2</span> test1   test1    <span class="hljs-number">78</span> Jul <span class="hljs-number">24</span> <span class="hljs-number">11</span>:<span class="hljs-number">24</span> test1<br>drwx------. <span class="hljs-number">2</span> yuankun yuankun <span class="hljs-number">114</span> Jul <span class="hljs-number">23</span> <span class="hljs-number">0</span>8:<span class="hljs-number">24</span> yuankun<br>[test<span class="hljs-variable">@rocky8</span> home]<span class="hljs-variable">$ </span>cd test<br>[test<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-variable">$ </span>ll<br>total <span class="hljs-number">0</span><br>-rw-rw-r--. <span class="hljs-number">1</span> test test <span class="hljs-number">0</span> Jul <span class="hljs-number">24</span> <span class="hljs-number">11</span>:<span class="hljs-number">38</span> test.log<br>[test<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-variable">$ </span><br><br></code></pre></td></tr></table></figure><h3 id="7-5-8设置密码"><a href="#7-5-8设置密码" class="headerlink" title="7.5.8设置密码"></a>7.5.8设置密码</h3><p>passwd 可以修改用户密码</p><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">passwd <span class="hljs-selector-attr">[options]</span> username<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-d：删除指定用户密码</span><br><span class="hljs-deletion">-l：锁定指定用户</span><br><span class="hljs-deletion">-u：解锁指定用户</span><br><span class="hljs-deletion">-e：强制用户下次登录修改密码</span><br><span class="hljs-deletion">-f：强制操作</span><br><span class="hljs-deletion">-n mindays：指定最短使用期限</span><br><span class="hljs-deletion">-x maxdays：最大使用期限</span><br><span class="hljs-deletion">-w warndays：提前多少天开始警告</span><br><span class="hljs-deletion">-i inactivedays：非活动期限</span><br><span class="hljs-deletion">--stdin：从标准输入接收用户密码,Ubuntu无此选项</span><br></code></pre></td></tr></table></figure><p>范例：非交互式修改用户密码</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment">#此方式更通用，适用于各种Linux版本，如:ubuntu</span><br>root<span class="hljs-variable">@ununtu2004</span><span class="hljs-symbol">:/home</span><span class="hljs-comment"># echo -e &#x27;123456\n123456&#x27; | passwd test</span><br><span class="hljs-title class_">New</span> <span class="hljs-symbol">password:</span> <span class="hljs-title class_">Retype</span> new <span class="hljs-symbol">password:</span> <span class="hljs-symbol">passwd:</span> password updated successfully<br>root<span class="hljs-variable">@ununtu2004</span><span class="hljs-symbol">:/home</span><span class="hljs-comment"># </span><br><br><span class="hljs-comment">#适用于红帽系列的Linux版本</span><br>[root<span class="hljs-variable">@rocky8</span> home]<span class="hljs-comment"># echo -e &#x27;123456&#x27;| passwd --stdin test</span><br><span class="hljs-title class_">Changing</span> password <span class="hljs-keyword">for</span> user test.<br><span class="hljs-symbol">passwd:</span> all authentication tokens updated successfully.<br>[root<span class="hljs-variable">@rocky8</span> home]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="7-6文件权限管理"><a href="#7-6文件权限管理" class="headerlink" title="7.6文件权限管理"></a>7.6文件权限管理</h2><h3 id="7-6-1文件所有者和属组属性操作"><a href="#7-6-1文件所有者和属组属性操作" class="headerlink" title="7.6.1文件所有者和属组属性操作"></a>7.6.1文件所有者和属组属性操作</h3><h4 id="7-6-1-1设置文件的所有者chown"><a href="#7-6-1-1设置文件的所有者chown" class="headerlink" title="7.6.1.1设置文件的所有者chown"></a>7.6.1.1设置文件的所有者chown</h4><p>chown 命令可以修改文件的属主，也可以修改文件属组<br>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs prolog">chown [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">OWNER</span>][:[<span class="hljs-symbol">GROUP</span>]] <span class="hljs-symbol">FILE</span>...<br>chown [<span class="hljs-symbol">OPTION</span>]... --reference=<span class="hljs-symbol">RFILE</span> <span class="hljs-symbol">FILE</span>...<br></code></pre></td></tr></table></figure><p>用法说明：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif">OWNER <span class="hljs-comment">#只修改所有者</span><br><span class="hljs-attribute">OWNER</span>:GROUP <span class="hljs-comment">#同时修改所有者和属组</span><br>:GROUP <span class="hljs-comment">#只修改属组，冒号也可用 . 替换</span><br><span class="hljs-literal">-</span>-reference=RFILE <span class="hljs-comment">#参考指定的的属性，来修改</span><br><span class="hljs-literal">-</span>R<span class="hljs-comment">#递归，此选项慎用，非常危险！</span><br></code></pre></td></tr></table></figure><p>范例：</p><ul><li>修改所有者</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs linux">[root@rocky8 home]# touch data.log<br>[root@rocky8 home]# ll# data.log所有者为root<br>total 0<br>-rw-r--r--. 1 root    root      0 Jul 24 13:16 data.log<br>drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo<br>drwx------. 2 test    test     99 Jul 24 11:38 test<br>drwx------. 2 test1   test1    78 Jul 24 11:24 test1<br>drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun<br>[root@rocky8 home]# chown yuankun data.log # 修改所有者为yuankun<br>[root@rocky8 home]# ll<br>total 0<br>-rw-r--r--. 1 yuankun root      0 Jul 24 13:16 data.log<br>drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo<br>drwx------. 2 test    test     99 Jul 24 11:38 test<br>drwx------. 2 test1   test1    78 Jul 24 11:24 test1<br>drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun<br>[root@rocky8 home]# <br></code></pre></td></tr></table></figure><ul><li>修改所属组</li></ul><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">chown :bin <span class="hljs-keyword">data</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658672497952.png" alt="1658672497952"></p><ul><li>同时修改所有者和所属组</li></ul><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@rocky8 home]<span class="hljs-comment"># touch test.log</span><br>[root@rocky8 home]<span class="hljs-comment"># </span><br>[root@rocky8 home]<span class="hljs-comment"># </span><br>[root@rocky8 home]<span class="hljs-comment"># chown yuankun:bin test.log   # 冒号用.替换也可以</span><br>[root@rocky8 home]<span class="hljs-comment"># ll</span><br>total 0<br>-rw-r--r--.<span class="hljs-number"> 1 </span>yuankun bin      <span class="hljs-number"> 0 </span>Jul<span class="hljs-number"> 24 </span>13:16 data.log<br>drwx------.<span class="hljs-number"> 2 </span>gentoo  gentoo  <span class="hljs-number"> 62 </span>Jul<span class="hljs-number"> 24 </span>12:39 gentoo<br>drwx------.<span class="hljs-number"> 2 </span>test    test    <span class="hljs-number"> 99 </span>Jul<span class="hljs-number"> 24 </span>11:38 test<br>drwx------.<span class="hljs-number"> 2 </span>test1   test1   <span class="hljs-number"> 78 </span>Jul<span class="hljs-number"> 24 </span>11:24 test1<br>-rw-r--r--.<span class="hljs-number"> 1 </span>yuankun bin      <span class="hljs-number"> 0 </span>Jul<span class="hljs-number"> 24 </span>13:22 test.log<br>drwx------.<span class="hljs-number"> 2 </span>yuankun yuankun<span class="hljs-number"> 114 </span>Jul<span class="hljs-number"> 23 </span>08:24 yuankun<br>[root@rocky8 home]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658672628070.png" alt="1658672628070"></p><ul><li>修改为参考的所有者户所属组</li></ul><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">chown --reference=root.<span class="hljs-built_in">log</span> <span class="hljs-keyword">data</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658672912639.png" alt="1658672912639"></p><ul><li>递归修改</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R yuankun:yuankun ./data/mysql/<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658673109132.png" alt="1658673109132"></p><h4 id="7-6-1-2设置文件的属组信息chgrp"><a href="#7-6-1-2设置文件的属组信息chgrp" class="headerlink" title="7.6.1.2设置文件的属组信息chgrp"></a>7.6.1.2设置文件的属组信息chgrp</h4><p>chgrp 命令可以只修改文件的属组<br>格式:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">chgrp [OPTION]<span class="hljs-string">...</span> GROUP FILE.<span class="hljs-string">..</span><br>chgrp [OPTION]<span class="hljs-string">...</span> <span class="hljs-params">--reference=RFILE</span> FILE.<span class="hljs-string">..</span><br></code></pre></td></tr></table></figure><p>-R 递归</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chgrp</span> yuankun data.log<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658673362886.png" alt="1658673362886"></p><h3 id="7-6-2文件权限"><a href="#7-6-2文件权限" class="headerlink" title="7.6.2文件权限"></a>7.6.2文件权限</h3><p>每个文件针对每类访问者都定义了三种权限</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">r</span> Readable <span class="hljs-number">4</span><br><span class="hljs-attribute">w</span> Writable <span class="hljs-number">2</span><br><span class="hljs-attribute">x</span> eXcutable <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>对文件的权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">r</span> 可使用文件查看类工具，比如：<span class="hljs-built_in">cat</span>，可以获取其内容<br>w 可修改其内容,文件的是否被删除和文件的权限无关<br>x 可以把此文件提请内核启动为一个进程，即可以执行（运行）此文件（此文件的内容必须是可执行）<br>文件权限常见组合<br><span class="hljs-literal">---</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">r</span> <span class="hljs-number">4</span><br><span class="hljs-built_in">r</span><span class="hljs-literal">-x</span> <span class="hljs-number">5</span><br>rw <span class="hljs-number">6</span><br>rwx <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>对目录的权限</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs llvm">r 可以使用ls查看此目录中文件名列表<span class="hljs-punctuation">,</span>但无法看到文件的属性meta信息<span class="hljs-punctuation">,</span>包括inode号<span class="hljs-punctuation">,</span>不能查看文件的<br>内容<br>w 可在此目录中创建文件，也可删除此目录中的文件，而和此被删除的文件的权限无关<br><span class="hljs-keyword">x</span> 可以cd进入此目录，可以使用ls -l file或stat file 查看此目录中指定文件的元数据，当预先知<br>道文件名称时<span class="hljs-punctuation">,</span>也可以查看文件的内容<span class="hljs-punctuation">,</span>属于目录的可访问的最小权限<br>X 分配给目录或有部分<span class="hljs-keyword">x</span>权限的文件的<span class="hljs-keyword">x</span>权限，对无任意<span class="hljs-keyword">x</span>权限的文件则不会分配<span class="hljs-keyword">x</span>权限<br>目录权限常见组合<br>- 不能访问目录<br>r-<span class="hljs-keyword">x</span> 只读目录<br>rwx 可读也可写目录<br></code></pre></td></tr></table></figure><p>面试题：Linux中的目录和文件的权限区别？分别说明读，写和执行权限的区别?</p><p>修改文件权限chmod</p><p>面试题：执行 cp &#x2F;etc&#x2F;issue &#x2F;data&#x2F;dir&#x2F; 所需要的最小权限？</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux基础和常用命令</title>
    <link href="/2022/07/18/linux%E5%9F%BA%E7%A1%80%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/07/18/linux%E5%9F%BA%E7%A1%80%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="1-冯诺依曼体系"><a href="#1-冯诺依曼体系" class="headerlink" title="1.冯诺依曼体系"></a>1.冯诺依曼体系</h1><p>1946年美籍匈牙利数学家冯·诺依曼于提出存储程序原理，把程序本身当作数据来对待，程序和该程序处<br>理的数据用同样的方式储存。 冯·诺依曼体系的要点是：</p><ul><li><p>数字计算机的数制采用二进制，bit 位, byte 字节 1 byte &#x3D;8 bit</p></li><li><p>计算机应该按照程序顺序执行</p></li><li><p>计算机硬件由运算器、控制器、存储器、输入设备和输出设备五大部分组成</p></li></ul><p><strong>计算机的硬件五个组件</strong></p><ul><li><p>控制器: 指挥系统</p></li><li><p>运算器: 数学和逻辑运算</p></li><li><p>存储器: 存储信息</p></li><li><p>输入设备: 接收外部信息</p></li><li><p>输出设备: 输出计算机内部信息到外部设备</p></li></ul><h1 id="2-服务器按外观类型分类"><a href="#2-服务器按外观类型分类" class="headerlink" title="2.服务器按外观类型分类"></a>2.服务器按外观类型分类</h1><p><strong>PC服务器常见的三种外观</strong>  </p><ul><li><p>塔式服务器</p></li><li><p>刀片式服务器</p></li><li><p>机架式服务器</p></li></ul><h1 id="3-操作系统和Linux安装"><a href="#3-操作系统和Linux安装" class="headerlink" title="3.操作系统和Linux安装"></a>3.操作系统和Linux安装</h1><p>**操作系统的作用  **</p><p><img src="/../image.assets/1658235191431.png" alt="1658235191431"></p><p>**主要作用 **</p><ul><li><p>硬件驱动</p></li><li><p>进程管理</p></li><li><p>内存管理</p></li><li><p>网络管理</p></li><li><p>安全管理</p></li><li><p>文件管理</p></li></ul><p>**unix哲学思想 ** </p><ul><li>一切都是一个文件(包括硬件)</li><li>小型，单一用途的程序  </li><li>链接程序，共同完成复杂的任务(shell脚本)</li><li>避免令人困惑的用户界面  </li><li>配置数据存储在文本中</li></ul><h1 id="4-常见面试题"><a href="#4-常见面试题" class="headerlink" title="4.常见面试题"></a>4.常见面试题</h1><p><img src="/../image.assets/1658241769096.png" alt="1658241769096"></p><h1 id="5-基础使用命令"><a href="#5-基础使用命令" class="headerlink" title="5 .基础使用命令"></a>5 .基础使用命令</h1><h2 id="5-1-查看网络ip地址"><a href="#5-1-查看网络ip地址" class="headerlink" title="5.1 查看网络ip地址"></a>5.1 查看网络ip地址</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ip <span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658410435937.png" alt="Rocky8.6"></p><p><img src="/../image.assets/1658410871193.png" alt="ubuntu2004"></p><h2 id="5-2-重启"><a href="#5-2-重启" class="headerlink" title="5.2 重启"></a>5.2 重启</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">reboot</span><br></code></pre></td></tr></table></figure><h2 id="5-3-ubuntu-roo账户进行远程登录修改方法"><a href="#5-3-ubuntu-roo账户进行远程登录修改方法" class="headerlink" title="5.3 ubuntu roo账户进行远程登录修改方法"></a>5.3 ubuntu roo账户进行远程登录修改方法</h2><ul><li>切换到root账户</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo -<span class="hljs-selector-tag">i</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658411472195.png" alt="1658411472195"></p><ul><li>设置密码</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">passwd</span> 用户名  <br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658469211139.png" alt="1658469211139"></p><ul><li>修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config  ,PermitRootlogin yes</li></ul><p> <img src="/../image.assets/1658493609190.png" alt="1658493609190"></p><ul><li>重启sshd</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart sshd</span><br></code></pre></td></tr></table></figure><h2 id="5-4-查看当前所在终端"><a href="#5-4-查看当前所在终端" class="headerlink" title="5.4 查看当前所在终端"></a>5.4 查看当前所在终端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tty</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658494268286.png" alt="1658494268286"></p><h2 id="5-5-查看当前账户"><a href="#5-5-查看当前账户" class="headerlink" title="5.5 查看当前账户"></a>5.5 查看当前账户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">whoami</span><br><br><span class="hljs-built_in">who</span> am i  <br><br><span class="hljs-built_in">who</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658494603337.png" alt="1658494603337"></p><p> <img src="/../image.assets/1658494650023.png" alt="1658494650023"></p><p> <img src="/../image.assets/1658495293952.png#pic_left" alt="1658495293952"></p><h2 id="5-6-查看当前时间"><a href="#5-6-查看当前时间" class="headerlink" title="5.6 查看当前时间"></a>5.6 查看当前时间</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">date</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658494753358.png" alt="1658494753358"></p><h2 id="5-7-修改时区-修改为北京时间"><a href="#5-7-修改时区-修改为北京时间" class="headerlink" title="5.7 修改时区 ,修改为北京时间"></a>5.7 修改时区 ,修改为北京时间</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-timezone</span> <span class="hljs-string">Asia</span>/<span class="hljs-string">Shanghai</span><br><span class="hljs-string">date</span><span class="hljs-comment"># 查看当前时间</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658495063470.png#pic_left" alt="1658495063470"></p><h2 id="5-8-查看当前系统使用的shell"><a href="#5-8-查看当前系统使用的shell" class="headerlink" title="5.8 查看当前系统使用的shell"></a>5.8 查看当前系统使用的shell</h2><img src= '../image.assets/1658495913197.png' style='float:left'><h2 id="5-9-查看当前主机名"><a href="#5-9-查看当前主机名" class="headerlink" title="5.9 查看当前主机名"></a>5.9 查看当前主机名</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hostname</span><br></code></pre></td></tr></table></figure><p>   <img src="/../image.assets/1658496336793.png" alt="1658496336793"></p><h2 id="5-10修改当前主机名称，永久修改"><a href="#5-10修改当前主机名称，永久修改" class="headerlink" title="5.10修改当前主机名称，永久修改"></a>5.10修改当前主机名称，永久修改</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> 名称<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 临时修改，重启后变为修改前的主机名称</span><br><span class="hljs-attribute">hostname</span> 主机名<br></code></pre></td></tr></table></figure><h2 id="5-11-查看所有内部命令"><a href="#5-11-查看所有内部命令" class="headerlink" title="5.11 查看所有内部命令"></a>5.11 查看所有内部命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658499412357.png" alt="1658499412357"></p><h2 id="5-12-查看命令为内部还是外部命令"><a href="#5-12-查看命令为内部还是外部命令" class="headerlink" title="5.12 查看命令为内部还是外部命令"></a>5.12 查看命令为内部还是外部命令</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-class"><span class="hljs-keyword">type</span> 命令名称</span><br><span class="hljs-meta"># 示例</span><br><span class="hljs-class"><span class="hljs-keyword">type</span> cd</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658499521622.png" alt="1658499521622"></p><h2 id="5-13-查看系统中所有别名"><a href="#5-13-查看系统中所有别名" class="headerlink" title="5.13 查看系统中所有别名"></a>5.13 查看系统中所有别名</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">alias</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658499933136.png" alt="1658499933136"></p><h2 id="5-14-设置别名"><a href="#5-14-设置别名" class="headerlink" title="5.14 设置别名"></a>5.14 设置别名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> 别名名称 = <span class="hljs-string">&#x27;被设置别名的行为&#x27;</span><br><span class="hljs-comment"># 示例</span><br><span class="hljs-built_in">alias</span> cdnt = <span class="hljs-string">&#x27;cd /root&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="5-15-删除别名"><a href="#5-15-删除别名" class="headerlink" title="5.15 删除别名"></a>5.15 删除别名</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">unalisa</span> 别名名称<br></code></pre></td></tr></table></figure><ul><li><p>命令种类</p><ul><li>alias(优先级最高)</li><li>内部命令(优先级低于alias)</li><li>外部命令(优先级最低)</li></ul></li><li><p>whatis</p></li></ul><p>whatis使用数据库来显示命令的简短描述  </p><p>此工具在系统刚安装后不可立即使用，需要制作数据库后才可使用  </p><p>执行下面的命令生成数据库  </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># centos7版本以后</span><br><span class="hljs-attribute">mandb</span><br><span class="hljs-comment"># centos6版本之前</span><br>makewhatis<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658501366408.png" alt="1658501366408"></p><h2 id="5-16-内部命令查看帮助"><a href="#5-16-内部命令查看帮助" class="headerlink" title="5.16 内部命令查看帮助"></a>5.16 内部命令查看帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用type命令查看是否为内部命令，不是内部命令不能使用该命令</span><br><span class="hljs-built_in">help</span> <span class="hljs-built_in">history</span><br></code></pre></td></tr></table></figure><p>范例  </p><p><img src="/../image.assets/1658501682712.png" alt="1658501682712"></p><h2 id="5-17-外部命令使用帮助"><a href="#5-17-外部命令使用帮助" class="headerlink" title="5.17 外部命令使用帮助"></a>5.17 外部命令使用帮助</h2><p>COMMAND –help 或者 COMMAND -h  </p><p>范例  </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">date</span> <span class="hljs-comment">--help</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658502390672.png" alt="1658502390672"></p><h2 id="5-18-man"><a href="#5-18-man" class="headerlink" title="5.18 man"></a>5.18 man</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">man <span class="hljs-built_in">date</span><br>man <span class="hljs-number">1</span> <span class="hljs-built_in">date</span><br></code></pre></td></tr></table></figure><h1 id="6-查看硬件信息"><a href="#6-查看硬件信息" class="headerlink" title="6.查看硬件信息"></a>6.查看硬件信息</h1><h3 id="6-1查看CPU信息"><a href="#6-1查看CPU信息" class="headerlink" title="6.1查看CPU信息"></a>6.1查看CPU信息</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lscpu</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658503779919.png" alt="1658503779919"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 该命令也可以</span><br>cat <span class="hljs-regexp">/proc/</span>cpuinfo<br></code></pre></td></tr></table></figure><h3 id="6-2-查看内存信息"><a href="#6-2-查看内存信息" class="headerlink" title="6.2 查看内存信息"></a>6.2 查看内存信息</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">free -h<br><span class="hljs-comment"># 或者</span><br>cat <span class="hljs-regexp">/proc/m</span>eminfo<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504083814.png" alt="1658504083814"></p><h3 id="6-3-查看硬盘信息和分区情况"><a href="#6-3-查看硬盘信息和分区情况" class="headerlink" title="6.3 查看硬盘信息和分区情况"></a>6.3 查看硬盘信息和分区情况</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lsblk</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504188384.png" alt="1658504188384"></p><h1 id="7-查看系统信息"><a href="#7-查看系统信息" class="headerlink" title="7.查看系统信息"></a>7.查看系统信息</h1><h3 id="7-1-查看系统架构"><a href="#7-1-查看系统架构" class="headerlink" title="7.1 查看系统架构"></a>7.1 查看系统架构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504368189.png" alt="1658504368189"></p><h3 id="7-2-查看内核版本"><a href="#7-2-查看内核版本" class="headerlink" title="7.2 查看内核版本"></a>7.2 查看内核版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504429024.png" alt="1658504429024"></p><h3 id="7-3-查看操作系统发行版本"><a href="#7-3-查看操作系统发行版本" class="headerlink" title="7.3 查看操作系统发行版本"></a>7.3 查看操作系统发行版本</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>os-releases<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658543618611.png" alt="1658543618611"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/i</span>ssue<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658543863373.png" alt="1658543863373"></p><h3 id="7-4-修改登录后显示的内容"><a href="#7-4-修改登录后显示的内容" class="headerlink" title="7.4 修改登录后显示的内容"></a>7.4 修改登录后显示的内容</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># 修改<span class="hljs-regexp">/etc/m</span>otd文件内容<br>vi <span class="hljs-regexp">/etc/m</span>otd<br></code></pre></td></tr></table></figure><h3 id="7-5-查看硬件时间"><a href="#7-5-查看硬件时间" class="headerlink" title="7.5 查看硬件时间"></a>7.5 查看硬件时间</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">clock</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658544469113.png" alt="1658544469113"></p><h3 id="7-6重启和关机"><a href="#7-6重启和关机" class="headerlink" title="7.6重启和关机"></a>7.6重启和关机</h3><h6 id="7-6-1重启"><a href="#7-6-1重启" class="headerlink" title="7.6.1重启"></a>7.6.1重启</h6><ul><li><p>halt</p></li><li><p>reboot</p></li></ul><h6 id="7-6-2-关机或重启"><a href="#7-6-2-关机或重启" class="headerlink" title="7.6.2 关机或重启"></a>7.6.2 关机或重启</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">shutdown  <br>- r :重启<br>- h :关机<br>指定时间关机或重启<br>shutdown -r 15:00  # 15:00重启<br>shutdown -h 15:00  # 15:00关机<br><br>shutdown -c # 取消<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>看完这篇还敢说你不会git生成ssh密钥</title>
    <link href="/2022/07/13/git-ssh/"/>
    <url>/2022/07/13/git-ssh/</url>
    
    <content type="html"><![CDATA[<!--more--><ul><li>注：以下命令全部在git bash完成</li></ul><h1 id="1-查看是否配置邮箱和用户名"><a href="#1-查看是否配置邮箱和用户名" class="headerlink" title="1.查看是否配置邮箱和用户名"></a>1.查看是否配置邮箱和用户名</h1><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">git config</span> <span class="hljs-literal">--</span><span class="hljs-comment">global</span>  <span class="hljs-literal">--</span><span class="hljs-comment">list</span><br></code></pre></td></tr></table></figure><p>如图所示，则代表已经配置完成<br><img src="/../image.assets/1657717726161.png" alt="1657717726161"></p><h1 id="2-配置用户名和邮箱"><a href="#2-配置用户名和邮箱" class="headerlink" title="2.配置用户名和邮箱"></a>2.配置用户名和邮箱</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span>  user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;这里换上你的用户名&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;这里换上你的邮箱&quot;</span><br></code></pre></td></tr></table></figure><h1 id="3-查看是否已经生成密钥"><a href="#3-查看是否已经生成密钥" class="headerlink" title="3.查看是否已经生成密钥"></a>3.查看是否已经生成密钥</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/.ssh<br>ls -a<br></code></pre></td></tr></table></figure><p>如图所示，代表已经生成密钥  </p><p><img src="/../image.assets/1657718034760.png" alt="1657718034760"></p><ul><li>id_rsa文件是私钥，要保存好，放在本地，私钥可以生产公钥，反之不行。</li><li>id_rsa.pub文件是公钥，可以用于发送到其他服务器，或者git上</li></ul><h1 id="4-生成密钥"><a href="#4-生成密钥" class="headerlink" title="4.生成密钥"></a>4.生成密钥</h1><ul><li>执行ssh-keygen -t rsa -c</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -c <span class="hljs-string">&quot;这是你的邮箱&quot;</span>  <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020061522162896.png">  </p><ul><li>点击enter,输入密码</li></ul><p><img src="https://img-blog.csdnimg.cn/2020061522182269.png">  </p><ul><li>点击enter，确认密码</li></ul><p><img src="https://img-blog.csdnimg.cn/20200615221909168.png">  </p><ul><li>如图，创建成功</li></ul><p><img src="/../image.assets/1657719024137.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题如何添加按钮和标签</title>
    <link href="/2022/07/08/Fluid_hexo_server/"/>
    <url>/2022/07/08/Fluid_hexo_server/</url>
    
    <content type="html"><![CDATA[<!--more--><h1 id="1-hexo添加Button方法"><a href="#1-hexo添加Button方法" class="headerlink" title="1.hexo添加Button方法"></a>1.hexo添加Button方法</h1><p>你可以在 markdown 中加入如下的代码来使用 Button：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs hexo">&#123;% btn url, text, title %&#125; <br></code></pre></td></tr></table></figure><p>或者使用 HTML 形式：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>text<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <br></code></pre></td></tr></table></figure><p>url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选） </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>长河落日袁先生<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>  <br></code></pre></td></tr></table></figure><p class="note note-primary">长河落日袁先生</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-success&quot;</span>&gt;</span>success<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <br><br></code></pre></td></tr></table></figure><p class="note note-success">success</p> ]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于作者</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h1><p>为什么我要搭建这个博客呢？ 因为生命在于折腾 因为平时学习查找资料的时候，偶尔会发现一些非常精致的个人网站，那个时候就在想，什么时候俺也要整一个，然后用来写博客 。无奈由于各种原因 (懒)，一直没有捡起来，后来总算是找到一个不错的应用，折腾着建起来了，也打算督促自己克服懒癌，来记录一些东西。</p>]]></content>
    
  </entry>
  
  
  
</search>
