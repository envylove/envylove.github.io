<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Redis部署和基础使用</title>
    <link href="/2022/12/07/Redis%E9%83%A8%E7%BD%B2%E5%92%8C%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/12/07/Redis%E9%83%A8%E7%BD%B2%E5%92%8C%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Redis基础"><a href="#Redis基础" class="headerlink" title="Redis基础"></a>Redis基础</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis (Remote Dictionary Server远程字典服务)是一个遵循BSD MIT开源协议的高性能的NoSQL.Redis基于ANSI C语言语言)编写的key-value数据库,是意大利的Salvatore Sanfilippo在2009年发布，从2010年3月15日起，Redis的开发工作由VMware主持。从2013年5月开始，Redis的开发由Pivotal公司赞助。目前国内外使用的公司众多,比如:阿里,腾讯,百度,京东,新浪微博,GitHub,Twitter 等Redis的出现，很大程度补偿了memcached这类key&#x2F;value存储的不足，在部分场合可以对关系数据库起到很好的补充作用。它提供了Java，C&#x2F;C++，Go, C#，PHP，JavaScript，Perl，Object-C，Python，Ruby，Erlang等客户端<br>DB-Engine月度排行榜Redis在键值型存储类的数据库长期居于首位,远远高于第二位的memcached</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>速度快: 10W QPS,基于内存,C语言实现</li><li>单线程</li><li>持久化</li><li>支持多种数据结构</li><li>支持多种编程语言</li><li>功能丰富: 支持Lua脚本,发布订阅,事务,pipeline等功能</li><li>简单: 代码短小精悍(单机核心代码只有23000行左右),单线程开发容易,不依赖外部库,使用简单</li><li>主从复制</li><li>支持高可用和分布式</li></ul><h2 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h2><p>Redis 6.0版本前一直是单线程方式处理用户的请求</p><p><img src="/../image.assets/1670419301827.png" alt="1670419301827"></p><p>单线程为何如此快?</p><ul><li>纯内存</li><li>非阻塞避免线程切换和竞态消耗</li></ul><p><img src="/../image.assets/1670419331717.png" alt="1670419331717"></p><p>注意事项</p><ul><li>一次只运行一条命令</li><li>避免执行长(慢)命令:keys *, flushall, flushdb, slow lua script, mutil&#x2F;exec, operate bigvalue(collection)</li><li>其实不是单线程: 早期版本是单进程单线程,3.0 版本后实际还有其它的线程, 实现特定功能,如: fysnc file descriptor,close file descriptor</li></ul><h2 id="常见应用场景"><a href="#常见应用场景" class="headerlink" title="常见应用场景"></a>常见应用场景</h2><ul><li>缓存：缓存RDBMS中数据,比如网站的查询结果、商品信息、微博、新闻、消息</li><li>Session 共享：实现Web集群中的多服务器间的session共享</li><li>计数器：商品访问排行榜、浏览数、粉丝数、关注、点赞、评论等和次数相关的数值统计场景</li><li>社交：朋友圈、共同好友、可能认识他们等</li><li>地理位置: 基于地理信息系统GIS（Geographic Information System)实现摇一摇、附近的人、外卖等功能</li><li>消息队列：ELK等日志系统缓存、业务的订阅&#x2F;发布系统</li></ul><h2 id="缓存的实现流程"><a href="#缓存的实现流程" class="headerlink" title="缓存的实现流程"></a>缓存的实现流程</h2><p>数据更新操作流程：</p><p><img src="/../image.assets/1670419470181.png" alt="1670419470181"></p><p>数据读操作流程：</p><p><img src="/../image.assets/1670419490780.png" alt="1670419490780"></p><h1 id="Redis安装及连接"><a href="#Redis安装及连接" class="headerlink" title="Redis安装及连接"></a>Redis安装及连接</h1><p>官网下载地址</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://download.redis.io/releases/<br></code></pre></td></tr></table></figure><h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><p>查看yum库redis版本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">yum info redis   或者  yum info redis<br></code></pre></td></tr></table></figure><p>yum 安装 redis</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install -y redis<br># 启动<br>systemctl enable --now redis<br><br># 连接<br>[root@centos8-backup www]# redis-cli<br>127.0.0.1:6379&gt; <br><br># 查看信息<br>127.0.0.1:6379&gt; info<br># Server<br>redis_version:5.0.3<br>redis_git_sha1:00000000<br>redis_git_dirty:0<br>redis_build_id:9529b692c0384fb7<br>redis_mode:standalone<br>os:Linux 4.18.0-348.7.1.el8_5.x86_64 x86_64<br>arch_bits:64<br>multiplexing_api:epoll<br>......<br>......<br>......<br></code></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><ul><li>Redis源码包下载地址</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">http://download.redis.io/releases/<br></code></pre></td></tr></table></figure><ul><li>下载源码包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# wget http://download.redis.io/releases/redis-6.2.6.tar.gz<br>[root@centos7-master ~]# tar xf redis-6.2.6.tar.gz<br></code></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># centos<br>[root@centos7-master ~]# yum -y install gcc jemalloc-devel systemd-devel<br># ubuntu<br>apt -y install make gcc libjemalloc-dev libsystemd-dev<br></code></pre></td></tr></table></figure><ul><li>编译安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# cd redis-6.2.6<br>#如果支持systemd,需要执行下面<br>[root@centos7-master redis-6.2.6]# make -j 2 USE_SYSTEMD=yes PREFIX=/usr/local/src/redis  install<br><br># 配置环境变量<br>[root@centos7-master ~]# echo &#x27;PATH=/usr/local/src/redis/bin:$PATH&#x27; &gt; /etc/profile.d/redis.sh<br>[root@centos7-master ~]# <br>[root@centos7-master ~]# . /etc/profile.d/redis.sh<br>[root@centos7-master ~]# <br><br>#准备相关目录和配置文件<br>#创建配置文件、日志、数据等目录<br>[root@centos7-master redis]# mkdir /usr/local/src/redis/&#123;etc,log,data,run&#125;<br>[root@centos7-master redis-6.2.6]# cp redis.conf /usr/local/src/redis/etc/<br></code></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><p>logfile  “&#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;log&#x2F;redis_6379.log”</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text"># Specify the log file name. Also the empty string can be used to force<br># Redis to log on the standard output. Note that if you use standard<br># output for logging but daemonize, logs will be sent to /dev/null<br>logfile &quot;/usr/local/src/redis/log/redis_6379.log&quot;<br><br># To enable logging to the system logger, just set &#x27;syslog-enabled&#x27; to yes,<br># and optionally update the other syslog parameters to suit your needs.<br># syslog-enabled no<br><br># Specify the syslog identity.<br># syslog-ident redis<br></code></pre></td></tr></table></figure><p>pidfile &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;run&#x2F;redis_6379.pid</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text"># Note that on modern Linux systems &quot;/run/redis.pid&quot; is more conforming<br># and should be used instead.<br>#pidfile /var/run/redis_6379.pid<br>pidfile /usr/local/src/redis/run/redis_6379.pid<br><br># Specify the server verbosity level.<br># This can be one of:<br># debug (a lot of information, useful for development/testing)<br># verbose (many rarely useful info, but not a mess like the debug level)<br># notice (moderately verbose, what you want in production probably)<br># warning (only very important / critical messages are logged)<br>loglevel notice<br></code></pre></td></tr></table></figure><p>dir “&#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;data&#x2F;6379”</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text"># Note that you must specify a directory here, not a file name.<br>dir &quot;/usr/local/src/redis/data/6379&quot;<br><br>################################# REPLICATION #################################<br><br># Master-Replica replication. Use replicaof to make a Redis instance a copy of<br># another Redis server. A few things to understand ASAP about Redis replication.<br></code></pre></td></tr></table></figure><p>dbfilename ‘dump.rdb’</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># sanitize-dump-payload no<br><br># The filename where to dump the DB<br>dbfilename &#x27;dump.rdb&#x27;<br></code></pre></td></tr></table></figure><ul><li>前台启动redis</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# redis-server /usr/local/src/redis/etc/redis.conf <br>51487:C 07 Dec 2022 22:27:26.620 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo<br>51487:C 07 Dec 2022 22:27:26.620 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=51487, just started<br>51487:C 07 Dec 2022 22:27:26.620 # Configuration loaded<br>51487:M 07 Dec 2022 22:27:26.620 * Increased maximum number of open files to 10032 (it was originally set to 1024).<br>51487:M 07 Dec 2022 22:27:26.620 * monotonic clock: POSIX clock_gettime<br>                _._                                                  <br>           _.-``__ &#x27;&#x27;-._                                             <br>      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 6.2.6 (00000000/0) 64 bit<br>  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                  <br> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode<br> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379<br> |    `-._   `._    /     _.-&#x27;    |     PID: 51487<br>  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |           https://redis.io       <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br>      `-._    `-.__.-&#x27;    _.-&#x27;                                       <br>          `-._        _.-&#x27;                                           <br>              `-.__.-&#x27;                                               <br><br>51487:M 07 Dec 2022 22:27:26.621 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.<br>51487:M 07 Dec 2022 22:27:26.621 # Server initialized<br>51487:M 07 Dec 2022 22:27:26.621 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.<br>51487:M 07 Dec 2022 22:27:26.621 * Ready to accept connections<br><br></code></pre></td></tr></table></figure><ul><li>帮助</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# redis-server -h<br>Usage: ./redis-server [/path/to/redis.conf] [options] [-]<br>       ./redis-server - (read config from stdin)<br>       ./redis-server -v or --version<br>       ./redis-server -h or --help<br>       ./redis-server --test-memory &lt;megabytes&gt;<br><br>Examples:<br>       ./redis-server (run the server with default conf)<br>       ./redis-server /etc/redis/6379.conf<br>       ./redis-server --port 7777<br>       ./redis-server --port 7777 --replicaof 127.0.0.1 8888<br>       ./redis-server /etc/myredis.conf --loglevel verbose -<br>       ./redis-server /etc/myredis.conf --loglevel verbose<br><br>Sentinel mode:<br>       ./redis-server /etc/sentinel.conf --sentinel<br>[root@centos7-master ~]# <br></code></pre></td></tr></table></figure><ul><li>消除启动时的三个Warning提示信息(可选)</li></ul><p>Tcp backlog</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">WARNING: The TCP backlog setting of 511 cannot be enforced because<br>/proc/sys/net/core/somaxconn is set to the lower value of 128.<br></code></pre></td></tr></table></figure><p>Tcp backlog 是指TCP的第三次握手服务器端收到客户端 ack确认号之后到服务器用Accept函数处理请求前的队列长度，即全连接队列</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">#vim /etc/sysctl.conf<br>net.core.somaxconn = 511<br>#sysctl -p<br></code></pre></td></tr></table></figure><p> overcommit_memory</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">WARNING overcommit_memory is set to 0! Background save may fail under low memory<br>condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf<br>and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to<br>take effect.<br></code></pre></td></tr></table></figure><p>内核参数说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">内核参数overcommit_memory 实现内存分配策略,可选值有三个：0、1、2<br>0 表示内核将检查是否有足够的可用内存供应用进程使用；如果有足够的可用内存，内存申请允许；否则内存<br>申请失败，并把错误返回给应用进程<br>1 表示内核允许分配所有的物理内存，而不管当前的内存状态如何<br>2 表示内核允许分配超过所有物理内存和交换空间总和的内存<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">#vim /etc/sysctl.conf<br>vm.overcommit_memory = 1<br>#sysctl -p<br></code></pre></td></tr></table></figure><p>transparent hugepage</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">WARNING you have Transparent Huge Pages (THP) support enabled in your kernel.<br>This will create latency and memory usage issues with Redis. To fix this issue<br>run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as<br>root, and add it to your /etc/rc.local in order to retain the setting after a<br>reboot. Redis must be restarted after THP is disabled.<br>警告：您在内核中启用了透明大页面（THP,不同于一般4k内存页,而为2M）支持。 这将在Redis中造成延迟<br>和内存使用问题。 要解决此问题，请以root 用户身份运行命令“echo never&gt;<br>/sys/kernel/mm/transparent_hugepage/enabled”，并将其添加到您的/etc/rc.local中，以便在<br>重启后保留设置。禁用THP后，必须重新启动Redis。<br></code></pre></td></tr></table></figure><p>注意：ubuntu20.04, Rocky8&#x2F;CentOS8 默认为 never，所以此值无需优化</p><p>验证是否消除warning</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# redis-server /usr/local/src/redis/etc/redis.conf <br>51540:C 07 Dec 2022 22:38:45.196 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo<br>51540:C 07 Dec 2022 22:38:45.196 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=51540, just started<br>51540:C 07 Dec 2022 22:38:45.196 # Configuration loaded<br>51540:M 07 Dec 2022 22:38:45.197 * Increased maximum number of open files to 10032 (it was originally set to 1024).<br>51540:M 07 Dec 2022 22:38:45.197 * monotonic clock: POSIX clock_gettime<br>                _._                                                  <br>           _.-``__ &#x27;&#x27;-._                                             <br>      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 6.2.6 (00000000/0) 64 bit<br>  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                  <br> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode<br> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379<br> |    `-._   `._    /     _.-&#x27;    |     PID: 51540<br>  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |           https://redis.io       <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  <br> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  <br>  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   <br>      `-._    `-.__.-&#x27;    _.-&#x27;                                       <br>          `-._        _.-&#x27;                                           <br>              `-.__.-&#x27;                                               <br><br>51540:M 07 Dec 2022 22:38:45.197 # Server initialized<br>51540:M 07 Dec 2022 22:38:45.198 * Loading RDB produced by version 6.2.6<br>51540:M 07 Dec 2022 22:38:45.198 * RDB age 2 seconds<br>51540:M 07 Dec 2022 22:38:45.198 * RDB memory usage when created 0.77 Mb<br>51540:M 07 Dec 2022 22:38:45.198 # Done loading RDB, keys loaded: 0, keys expired: 0.<br>51540:M 07 Dec 2022 22:38:45.198 * DB loaded from disk: 0.000 seconds<br>51540:M 07 Dec 2022 22:38:45.198 * Ready to accept connections<br></code></pre></td></tr></table></figure><ul><li>创建 Redis 用户和设置数据目录权限</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# useradd -r -s /sbin/nologin redis<br>[root@centos7-master ~]# chown -R  redis.redis /usr/local/src/redis/<br>[root@centos7-master ~]# <br></code></pre></td></tr></table></figure><ul><li>创建 Redis 服务 Service 文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# vim /lib/systemd/system/redis.service<br><br>[Unit]<br>Description=Redis persistent key-value database<br>After=network.target<br>[Service]<br>ExecStart=/usr/local/src/redis/bin/redis-server /usr/local/src/redis/etc/redis.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT $MAINPID<br>Type=notify <br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>LimitNOFILE=1000000 <br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><ul><li>Redis 通过Service方式启动</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">systemctl daemon-reload<br>systemctl restart redis<br>systemctl status redis<br></code></pre></td></tr></table></figure><h2 id="Redis多实例"><a href="#Redis多实例" class="headerlink" title="Redis多实例"></a>Redis多实例</h2><p>基于源码编译安装的前提下实现redis的多实例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs text"># 进入/usr/local/src/redis/etc<br>[root@centos7-master ~]# cd /usr/local/src/redis/etc/<br>[root@centos7-master etc]# <br><br># 修改配置文件，使用6380,6381端口启动实例<br>[root@centos7-master etc]# sed &#x27;s/6379/6380/&#x27; redis.conf &gt; redis6380.conf<br>[root@centos7-master etc]# sed &#x27;s/6379/6380/&#x27; redis.conf &gt; redis6381.conf<br><br># 修改所属组<br>[root@centos7-master etc]# chown -R redis.redis *<br><br># 修改启动文件<br>[root@centos7-master etc]# cp /lib/systemd/system/redis.service /lib/systemd/system/redis6380.service <br>[root@centos7-master etc]# <br><br>[root@centos7-master etc]# vim /lib/systemd/system/redis6380.service <br>[Unit]<br>Description=Redis persistent key-value database<br>After=network.target<br>[Service]<br>ExecStart=/usr/local/src/redis/bin/redis-server /usr/local/src/redis/etc/redis6380.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT $MAINPID<br>Type=notify<br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>LimitNOFILE=1000000<br>[Install]<br>WantedBy=multi-user.target<br><br># 使用相同方法创建/lib/systemd/system/redis6381.service文件并修改内容<br><br># 启动实例<br>[root@centos7-master etc]# systemctl status redis.service<br>[root@centos7-master etc]# systemctl status redis6380.service<br>[root@centos7-master etc]# systemctl status redis6381.service<br><br># 查看6379 6380 6381 端口是否启用<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670507070884.png" alt="1670507070884"></p><ul><li>连接测试</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master etc]# redis-cli -p 6379<br>[root@centos7-master etc]# redis-cli -p 6380<br>[root@centos7-master etc]# redis-cli -p 6381<br></code></pre></td></tr></table></figure><h1 id="Redis-配置管理"><a href="#Redis-配置管理" class="headerlink" title="Redis 配置管理"></a>Redis 配置管理</h1><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">bind 0.0.0.0 #指定监听地址，支持用空格隔开的多个监听IP<br>protected-mode yes #redis3.2之后加入的新特性，在没有设置bind IP和密码的时候,redis只允许访<br>问127.0.0.1:6379，可以远程连接，但当访问将提示警告信息并拒绝远程访问<br>port 6379 #监听端口,默认6379/tcp<br>tcp-backlog 511 #三次握手的时候server端收到client ack确认号之后的队列值，即全连接队列长度<br>timeout 0 #客户端和Redis服务端的连接超时时间，默认是0，表示永不超时<br>tcp-keepalive 300 #tcp 会话保持时间300s<br>daemonize no #默认no,即直接运行redis-server程序时,不作为守护进程运行，而是以前台方式运行，<br>如果想在后台运行需改成yes,当redis作为守护进程运行的时候，它会写一个 pid 到<br>/var/run/redis.pid 文件<br>supervised no #和OS相关参数，可设置通过upstart和systemd管理Redis守护进程，centos7后都使<br>用systemd<br>pidfile /var/run/redis_6379.pid #pid文件路径,可以修改<br>为/apps/redis/run/redis_6379.pid<br>loglevel notice #日志级别<br>logfile &quot;/path/redis.log&quot; #日志路径,示例:logfile &quot;/apps/redis/log/redis_6379.log&quot;<br>databases 16 #设置数据库数量，默认：0-15，共16个库<br>always-show-logo yes #在启动redis 时是否显示或在日志中记录记录redis的logo<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs text">save 900 1 #在900秒内有1个key内容发生更改,就执行快照机制<br>save 300 10 #在300秒内有10个key内容发生更改,就执行快照机制<br>save 60 10000 #60秒内如果有10000个key以上的变化，就自动快照备份<br>stop-writes-on-bgsave-error yes #默认为yes时,可能会因空间满等原因快照无法保存出错时，会禁<br>止redis写入操作，生产建议为no<br>#此项只针对配置文件中的自动save有效<br>rdbcompression yes #持久化到RDB文件时，是否压缩，&quot;yes&quot;为压缩，&quot;no&quot;则反之<br>rdbchecksum yes #是否对备份文件开启RC64校验，默认是开启<br>dbfilename dump.rdb #快照文件名<br>dir ./ #快照文件保存路径，示例：dir &quot;/apps/redis/data&quot;<br>#主从复制相关<br># replicaof &lt;masterip&gt; &lt;masterport&gt; #指定复制的master主机地址和端口，5.0版之前的指令为<br>slaveof<br># masterauth &lt;master-password&gt; #指定复制的master主机的密码<br>replica-serve-stale-data yes #当从库同主库失去连接或者复制正在进行，从机库有两种运行方式：<br>1、设置为yes(默认设置)，从库会继续响应客户端的读请求，此为建议值<br>2、设置为no，除去特定命令外的任何请求都会返回一个错误&quot;SYNC with master in progress&quot;。<br>replica-read-only yes #是否设置从库只读，建议值为yes,否则主库同步从库时可能会覆盖数据，造成<br>数据丢失<br>repl-diskless-sync no #是否使用socket方式复制数据(无盘同步)，新slave第一次连接master时需<br>要做数据的全量同步，redis server就要从内存dump出新的RDB文件，然后从master传到slave，有两种<br>方式把RDB文件传输给客户端：<br>1、基于硬盘（disk-backed）：为no时，master创建一个新进程dump生成RDB磁盘文件，RDB完成之后由<br>父进程（即主进程）将RDB文件发送给slaves，此为默认值<br>2、基于socket（diskless）：master创建一个新进程直接dump RDB至slave的网络socket，不经过主<br>进程和硬盘<br>#推荐使用基于硬盘（为no），是因为RDB文件创建后，可以同时传输给更多的slave，但是基于socket(为<br>yes)， 新slave连接到master之后得逐个同步数据。只有当磁盘I/O较慢且网络较快时，可用<br>diskless(yes),否则一般建议使用磁盘(no)<br>repl-diskless-sync-delay 5 #diskless时复制的服务器等待的延迟时间，设置0为关闭，在延迟时间<br>内到达的客户端，会一起通过diskless方式同步数据，但是一旦复制开始，master节点不会再接收新slave<br>的复制请求，直到下一次同步开始才再接收新请求。即无法为延迟时间后到达的新副本提供服务，新副本将排<br>队等待下一次RDB传输，因此服务器会等待一段时间才能让更多副本到达。推荐值：30-60<br>repl-ping-replica-period 10 #slave根据master指定的时间进行周期性的PING master,用于监测<br>master状态,默认10s<br>repl-timeout 60 #复制连接的超时时间，需要大于repl-ping-slave-period，否则会经常报超时<br>repl-disable-tcp-nodelay no #是否在slave套接字发送SYNC之后禁用 TCP_NODELAY，如果选<br>择&quot;yes&quot;，Redis将合并多个报文为一个大的报文，从而使用更少数量的包向slaves发送数据，但是将使数据<br>传输到slave上有延迟，Linux内核的默认配置会达到40毫秒，如果 &quot;no&quot; ，数据传输到slave的延迟将会<br>减少，但要使用更多的带宽<br>repl-backlog-size 512mb #复制缓冲区内存大小，当slave断开连接一段时间后，该缓冲区会累积复制<br>副本数据，因此当slave 重新连接时，通常不需要完全重新同步，只需传递在副本中的断开连接后没有同步的<br>部分数据即可。只有在至少有一个slave连接之后才分配此内存空间,建议建立主从时此值要调大一些或在低峰<br>期配置,否则会导致同步到slave失败<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs text">repl-backlog-ttl 3600 #多长时间内master没有slave连接，就清空backlog缓冲区<br>replica-priority 100 #当master不可用，哨兵Sentinel会根据slave的优先级选举一个master，此<br>值最低的slave会优先当选master，而配置成0，永远不会被选举，一般多个slave都设为一样的值，让其自<br>动选择<br>#min-replicas-to-write 3 #至少有3个可连接的slave，mater才接受写操作<br>#min-replicas-max-lag 10 #和上面至少3个slave的ping延迟不能超过10秒，否则master也将停止<br>写操作<br>requirepass foobared #设置redis连接密码，之后需要AUTH pass,如果有特殊符号，用&quot; &quot;引起来,生<br>产建议设置<br>rename-command #重命名一些高危命令，示例：rename-command FLUSHALL &quot;&quot; 禁用命令<br>#示例: rename-command del magedu<br>maxclients 10000 #Redis最大连接客户端<br>maxmemory &lt;bytes&gt; #redis使用的最大内存，单位为bytes字节，0为不限制，建议设为物理内存一半，<br>8G内存的计算方式8(G)*1024(MB)1024(KB)*1024(Kbyte)，需要注意的是缓冲区是不计算在maxmemory<br>内,生产中如果不设置此项,可能会导致OOM<br>#maxmemory-policy noeviction 此为默认值<br># MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。您可以从以下行为中选择一<br>种：<br>#<br># volatile-lru -&gt; Evict 使用近似 LRU，只有设置了过期时间的键。<br># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。<br># volatile-lfu -&gt; 使用近似 LFU 驱逐，只有设置了过期时间的键。<br># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。<br># volatile-random -&gt; 删除设置了过期时间的随机密钥。<br># allkeys-random -&gt; 删除一个随机密钥，任何密钥。<br># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）<br># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。<br>#<br># LRU 表示最近最少使用<br># LFU 表示最不常用<br>#<br># LRU、LFU 和 volatile-ttl 都是使用近似随机算法实现的。<br>#<br># 注意：使用上述任何一种策略，当没有合适的键用于驱逐时，Redis 将在需要更多内存的写操作时返回错<br>误。这些通常是创建新密钥、添加数据或修改现有密钥的命令。一些示例是：SET、INCR、HSET、LPUSH、<br>SUNIONSTORE、SORT（由于 STORE 参数）和 EXEC（如果事务包括任何需要内存的命令）。<br>#MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。可以从下面行为中进行选<br>择：<br># volatile-lru -&gt; 在具有过期集的键中使用近似 LRU 驱逐。<br># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。<br># volatile-lfu -&gt; 在具有过期集的键中使用近似 LFU 驱逐。<br># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。<br># volatile-random -&gt; 从具有过期设置的密钥中删除一个随机密钥。<br># allkeys-random -&gt; 删除一个随机密钥，任何密钥。<br># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）<br># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。<br>#<br># LRU 表示最近最少使用<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs text"># LFU 表示最不常用<br>#<br># LRU、LFU 和 volatile-ttl 均使用近似实现随机算法。<br>#<br># 注意：使用上述任何一种策略，Redis 都会在写入时返回错误操作，当没有合适的键用于驱逐时。<br>appendonly no #是否开启AOF日志记录，默认redis使用的是rdb方式持久化，这种方式在许多应用中已经<br>足够用了，但是redis如果中途宕机，会导致可能有几分钟的数据丢失(取决于dump数据的间隔时间)，根据<br>save来策略进行持久化，Append Only File是另一种持久化方式，可以提供更好的持久化特性，Redis会<br>把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时Redis都会先把这个文件的数据读入<br>内存里，先忽略RDB文件。默认不启用此功能<br>appendfilename &quot;appendonly.aof&quot; #文本文件AOF的文件名，存放在dir指令指定的目录中<br>appendfsync everysec #aof持久化策略的配置<br>#no表示由操作系统保证数据同步到磁盘,Linux的默认fsync策略是30秒，最多会丢失30s的数据<br>#always表示每次写入都执行fsync，以保证数据同步到磁盘,安全性高,性能较差<br>#everysec表示每秒执行一次fsync，可能会导致丢失这1s数据,此为默认值,也生产建议值<br>#同时在执行bgrewriteaof操作和主进程写aof文件的操作，两者都会操作磁盘，而bgrewriteaof往往会<br>涉及大量磁盘操作，这样就会造成主进程在写aof文件的时候出现阻塞的情形,以下参数实现控制<br>no-appendfsync-on-rewrite no #在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步<br>策略,主要考虑磁盘IO开支和请求阻塞时间。<br>#默认为no,表示&quot;不暂缓&quot;,新的aof记录仍然会被立即同步到磁盘，是最安全的方式，不会丢失数据，但是要<br>忍受阻塞的问题<br>#为yes,相当于将appendfsync设置为no，这说明并没有执行磁盘操作，只是写入了缓冲区，因此这样并不<br>会造成阻塞（因为没有竞争磁盘），但是如果这个时候redis挂掉，就会丢失数据。丢失多少数据呢？Linux<br>的默认fsync策略是30秒，最多会丢失30s的数据,但由于yes性能较好而且会避免出现阻塞因此比较推荐<br>#rewrite 即对aof文件进行整理,将空闲空间回收,从而可以减少恢复数据时间<br>auto-aof-rewrite-percentage 100 #当Aof log增长超过指定百分比例时，重写AOF文件，设置为0表<br>示不自动重写Aof日志，重写是为了使aof体积保持最小，但是还可以确保保存最完整的数据<br>auto-aof-rewrite-min-size 64mb #触发aof rewrite的最小文件大小<br>aof-load-truncated yes #是否加载由于某些原因导致的末尾异常的AOF文件(主进程被kill/断电等)，<br>建议yes<br>aof-use-rdb-preamble no #redis4.0新增RDB-AOF混合持久化格式，在开启了这个功能之后，AOF重<br>写产生的文件将同时包含RDB格式的内容和AOF格式的内容，其中RDB格式的内容用于记录已有的数据，而AOF<br>格式的内容则用于记录最近发生了变化的数据，这样Redis就可以同时兼有RDB持久化和AOF持久化的优点（既<br>能够快速地生成重写文件，也能够在出现问题时，快速地载入数据）,默认为no,即不启用此功能<br>lua-time-limit 5000 #lua脚本的最大执行时间，单位为毫秒<br>cluster-enabled yes #是否开启集群模式，默认不开启,即单机模式<br>cluster-config-file nodes-6379.conf #由node节点自动生成的集群配置文件名称<br>cluster-node-timeout 15000 #集群中node节点连接超时时间，单位ms,超过此时间，会踢出集群<br>cluster-replica-validity-factor 10 #单位为次,在执行故障转移的时候可能有些节点和master断<br>开一段时间导致数据比较旧，这些节点就不适用于选举为master，超过这个时间的就不会被进行故障转移,不<br>能当选master，计算公式：(node-timeout * replica-validity-factor) + repl-ping-<br>replica-period<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">cluster-migration-barrier 1 #集群迁移屏障，一个主节点至少拥有1个正常工作的从节点，即如果主<br>节点的slave节点故障后会将多余的从节点分配到当前主节点成为其新的从节点。<br>cluster-require-full-coverage yes #集群请求槽位全部覆盖，如果一个主库宕机且没有备库就会出<br>现集群槽位不全，那么yes时redis集群槽位验证不全,就不再对外提供服务(对key赋值时,会出现<br>CLUSTERDOWN The cluster is down的提示,cluster_state:fail,但ping 仍PONG)，而no则可以<br>继续使用,但是会出现查询数据查不到的情况(因为有数据丢失)。生产建议为no<br>cluster-replica-no-failover no #如果为yes,此选项阻止在主服务器发生故障时尝试对其主服务器进<br>行故障转移。 但是，主服务器仍然可以执行手动强制故障转移，一般为no<br>#Slow log 是 Redis 用来记录超过指定执行时间的日志系统，执行时间不包括与客户端交谈，发送回复等<br>I/O操作，而是实际执行命令所需的时间（在该阶段线程被阻塞并且不能同时为其它请求提供服务）,由于<br>slow log 保存在内存里面，读写速度非常快，因此可放心地使用，不必担心因为开启 slow log 而影响<br>Redis 的速度<br>slowlog-log-slower-than 10000 #以微秒为单位的慢日志记录，为负数会禁用慢日志，为0会记录每个<br>命令操作。默认值为10ms,一般一条命令执行都在微秒级,生产建议设为1ms-10ms之间<br>slowlog-max-len 128 #最多记录多少条慢日志的保存队列长度，达到此长度后，记录新命令会将最旧的命<br>令从命令队列中删除，以此滚动删除,即,先进先出,队列固定长度,默认128,值偏小,生产建议设为1000以上<br></code></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ysocean/p/9074787.html">Redis的配置文件介绍</a> </p><h2 id="config-命令实现动态修改配置"><a href="#config-命令实现动态修改配置" class="headerlink" title="config 命令实现动态修改配置"></a>config 命令实现动态修改配置</h2><p>config 命令用于查看当前redis配置、以及不重启redis服务实现动态更改redis配置等<br>注意：不是所有配置都可以动态修改,且此方式无法持久保存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">CONFIG SET parameter value<br>时间复杂度：O(1)<br>CONFIG SET 命令可以动态地调整 Redis 服务器的配置(configuration)而无须重启。<br>可以使用它修改配置参数，或者改变 Redis 的持久化(Persistence)方式。<br>CONFIG SET 可以修改的配置参数可以使用命令 CONFIG GET * 来列出，所有被 CONFIG SET 修改的配<br>置参数都会立即生效。<br>CONFIG GET parameter<br>时间复杂度： O(N)，其中 N 为命令返回的配置选项数量。<br>CONFIG GET 命令用于取得运行中的 Redis 服务器的配置参数(configuration parameters)，在<br>Redis 2.4 版本中， 有部分参数没有办法用 CONFIG GET 访问，但是在最新的 Redis 2.6 版本中，所<br>有配置参数都已经可以用 CONFIG GET 访问了。<br>CONFIG GET 接受单个参数 parameter 作为搜索关键字，查找所有匹配的配置参数，其中参数和值以“键-<br>值对”(key-value pairs)的方式排列。<br>比如执行 CONFIG GET s* 命令，服务器就会返回所有以 s 开头的配置参数及参数的值：<br></code></pre></td></tr></table></figure><h3 id="设置客户端连接密码"><a href="#设置客户端连接密码" class="headerlink" title="设置客户端连接密码"></a>设置客户端连接密码</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">#设置连接密码<br>127.0.0.1:6379&gt; CONFIG SET requirepass 123456<br>OK<br>#查看连接密码<br>127.0.0.1:6379&gt; CONFIG GET requirepass<br>1) &quot;requirepass&quot;<br>2) &quot;123456&quot;<br></code></pre></td></tr></table></figure><h3 id="获取当前配置"><a href="#获取当前配置" class="headerlink" title="获取当前配置"></a>获取当前配置</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs text">#奇数行为键，偶数行为值<br>127.0.0.1:6379&gt; CONFIG GET *<br>1) &quot;dbfilename&quot;<br>2) &quot;dump.rdb&quot;<br>3) &quot;requirepass&quot;<br>4) &quot;&quot;<br>5) &quot;masterauth&quot;<br>6) &quot;&quot;<br>7) &quot;cluster-announce-ip&quot;<br>8) &quot;&quot;<br>9) &quot;unixsocket&quot;<br>10) &quot;&quot;<br>11) &quot;logfile&quot;<br>12) &quot;/var/log/redis/redis.log&quot;<br>13) &quot;pidfile&quot;<br>14) &quot;/var/run/redis_6379.pid&quot;<br>15) &quot;slave-announce-ip&quot;<br>16) &quot;&quot;<br>17) &quot;replica-announce-ip&quot;<br>18) &quot;&quot;<br>19) &quot;maxmemory&quot;<br>20) &quot;0&quot;<br>......<br>#查看bind<br>127.0.0.1:6379&gt; CONFIG GET bind<br>1) &quot;bind&quot;<br>2) &quot;0.0.0.0&quot;<br>#Redis5.0有些设置无法修改,Redis6.2.6版本支持修改bind<br>127.0.0.1:6379&gt; CONFIG SET bind 127.0.0.1<br>(error) ERR Unsupported CONFIG parameter: bind<br></code></pre></td></tr></table></figure><h3 id="设置Redis使用的最大内存量"><a href="#设置Redis使用的最大内存量" class="headerlink" title="设置Redis使用的最大内存量"></a>设置Redis使用的最大内存量</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">127.0.0.1:6379&gt; CONFIG SET maxmemory 8589934592<br>OK<br>127.0.0.1:6379&gt; CONFIG GET maxmemory<br>1) &quot;maxmemory&quot;<br>2) &quot;8589934592&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络文件共享服务</title>
    <link href="/2022/12/04/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/12/04/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="NFS服务"><a href="#NFS服务" class="headerlink" title="NFS服务"></a>NFS服务</h1><h2 id="NFS工作原理"><a href="#NFS工作原理" class="headerlink" title="NFS工作原理"></a>NFS工作原理</h2><p><img src="/../image.assets/1670127215657.png" alt="1670127215657"></p><p>NFS：Network File System 网络文件系统，基于内核的文件系统。Sun 公司开发，通过使用 NFS，用户和程序可以像访问本地文件一样访问远端系统上的文件，基于RPC（Remote Procedure CallProtocol 远程过程调用）实现。<br>RPC采用C&#x2F;S模式，客户机请求程序调用进程发送一个有进程参数的调用信息到服务进程，然后等待应答信息。在服务器端，进程保持睡眠状态直到调用信息到达为止。当一个调用信息到达，服务器获得进程参数，计算结果，发送答复信息，然后等待下一个调用信息，最后，客户端调用进程接收答复信息，获得进程结果，然后调用执行继续进行。</p><p><img src="/../image.assets/1670127252975.png" alt="1670127252975"></p><p>NFS优势：节省本地存储空间，将常用的数据,如：&#x2F;home目录，存放在NFS服务器上且可以通过网络访<br>问，本地终端将可减少自身存储空间的使用。</p><h2 id="NFS软件介绍"><a href="#NFS软件介绍" class="headerlink" title="NFS软件介绍"></a>NFS软件介绍</h2><p>软件包：nfs-utils（包括服务器和客户端相关工具，CentOS8 最小化安装时默认没有安装），nfs-common(Ubuntu中包名)<br>相关软件包：rpcbind（必须），tcp_wrappers<br>Kernel支持：nfs.ko<br>端口：2049(nfsd), 其它端口由portmap(111)分配<br>NFS服务主要进程：  </p><ul><li>rpc.nfsd 最主要的NFS进程，管理客户端是否可登录  </li><li>rpc.mountd 挂载和卸载NFS文件系统，包括权限管理  </li><li>rpc.lockd 非必要，管理文件锁，避免同时写出错  </li><li>rpc.statd 非必要，检查文件一致性，可修复文件</li></ul><p>说明：CentOS 6 开始portmap进程由rpcbind代替<br>日志：&#x2F;var&#x2F;lib&#x2F;nfs&#x2F;<br>NFS配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">/etc/exports<br>/etc/exports.d/*.exports<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">默认选项：(ro,sync,root_squash,no_all_squash)<br>ro,rw 只读和读写<br>async 异步，数据变化后不立即写磁盘，先写入到缓冲区中，过一段时间再写入磁盘，性能高,安全性低<br>sync（1.0.0后为默认）同步，数据在请求时立即写入共享存储磁盘,性能低,安全性高<br>root_squash （默认）远程root映射为nfsnobody,UID为65534，CentOS8 为nobody,CentOS<br>7以前的版本为nfsnobody<br>no_root_squash 远程root映射成NFS服务器的root用户<br>all_squash 所有远程用户(包括root)都变成nfsnobody,CentOS8 为nobody<br>no_all_squash （默认）保留共享文件的UID和GID<br>anonuid和anongid 指明匿名用户映射为特定用户UID和组GID，而非nobody,可配合all_squash使<br>用<br></code></pre></td></tr></table></figure><h2 id="NFS工具"><a href="#NFS工具" class="headerlink" title="NFS工具"></a>NFS工具</h2><h3 id="rpcinfo"><a href="#rpcinfo" class="headerlink" title="rpcinfo"></a>rpcinfo</h3><p>rpcinfo 工具可以查看RPC相关信息<br>查看注册在指定主机的RPC程序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">rpcinfo -p hostname<br></code></pre></td></tr></table></figure><p>查看RPC注册程序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">rpcinfo -s hostname<br></code></pre></td></tr></table></figure><h3 id="exportfs"><a href="#exportfs" class="headerlink" title="exportfs"></a>exportfs</h3><p>exportfs:可用于管理NFS导出的文件系统<br>常见选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">-v #查看本机所有NFS共享<br>-r #重读配置文件，并共享目录<br>-a #输出本机所有共享<br>-au #停止本机所有共享<br></code></pre></td></tr></table></figure><h3 id="showmount"><a href="#showmount" class="headerlink" title="showmount"></a>showmount</h3><p>常见用法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">#查看远程主机的NFS共享<br>showmount -e hostname<br></code></pre></td></tr></table></figure><h3 id="mount-nfs"><a href="#mount-nfs" class="headerlink" title="mount.nfs"></a>mount.nfs</h3><p>客户端NFS挂载<br>NFS相关的挂载选项：man 5 nfs</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">fg #（默认）前台挂载<br>bg #后台挂载<br>hard #（默认）持续请求<br>soft #非持续请求<br>intr #和hard配合，请求可中断<br>rsize #和wsize 一次读和写数据最大字节数，rsize=32768<br>_netdev #无网络服务时不挂载NFS资源<br>vers #指定版本，客户端centos8默认4.2 ，centos7默认4.1 centos6默认4.0<br></code></pre></td></tr></table></figure><p>提示：基于安全考虑，建议使用 nosuid,<em>netdev,noexec 挂载选项</em></p><h1 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h1><p><img src="/../image.assets/1670246134779.png" alt="1670246134779"></p><ul><li>NFS服务器安装软件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install -y nfs-utils<br><br># 启动rpcbind<br>systemctl start rpcbind<br><br># 启动nfs-server<br>systemctl start nfs-server<br></code></pre></td></tr></table></figure><ul><li>NFS服务器创建共享文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text"># 共享根目录下的share目录<br>mkdir /share<br></code></pre></td></tr></table></figure><ul><li>添加uid和gid为300的用户nfs-upload</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# groupadd -g 300 nfs-upload<br>[root@centos7-master ~]# useradd -u 300 -g 300 nfs-upload<br>[root@centos7-master ~]# <br>#修改所属组权限<br>[root@centos7-master share]# chown -R 300:300 /share<br></code></pre></td></tr></table></figure><ul><li>修改NFS服务器配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-master ~]# vim /etc/exports<br># 加入如下内容，*表示任何人，rw表示读写<br>/share/ 192.168.179.*(rw,anongid=300,anonuid=300)<br></code></pre></td></tr></table></figure><ul><li>重新加载配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text"># 重新加载配置文件<br>[root@centos7-master ~]# exportfs -r<br>[root@centos7-master ~]# exportfs -v<br>/share        192.168.179.*(sync,wdelay,hide,no_subtree_check,anonuid=300,anongid=300,sec=sys,rw,secure,root_squash,no_all_squash)<br>[root@centos7-master ~]# <br></code></pre></td></tr></table></figure><ul><li>客户端安装软件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install -y nfs-utils<br><br># 启动rpcbind<br>systemctl start rpcbind<br><br># 启动nfs-server<br>systemctl start nfs-server<br></code></pre></td></tr></table></figure><ul><li>添加用户和组</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-slave /]# groupadd -g 300 nfs-upload<br>[root@centos7-slave /]# useradd -u 300 -g 300 nfs-upload<br></code></pre></td></tr></table></figure><ul><li>在客户端挂载，挂载&#x2F;nfsshare目录下</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text"># 创建目录<br>mkdir /nfsshare<br># 查看服务器端可挂载点<br>[root@centos7-slave ~]# showmount -e 192.168.179.170<br>Export list for 192.168.179.170:<br>/share *<br>[root@centos7-slave nfsshare]# <br><br># 挂载方式1，关机重启会失效<br>[root@centos7-slave ~]# mount 192.168.179.170:/share/ /nfsshare<br><br># 方式二修改配置文件，关机重启不失效<br>[root@centos7-slave ~]# vim /etc/fstab <br># 加入如下内容<br>192.168.179.170:/share                    /nfsshare  nfs     defaults,_netdev 0 0<br># 使配置文件生效<br>[root@centos7-slave nfsshare]# mount -a<br>[root@centos7-slave nfsshare]# <br></code></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在客户端上查看/nfsshare的内容<br>[root@centos7-slave nfsshare]# ll<br>total 8<br>-rw-r--r-- 1 nfs-upload nfs-upload  5 Dec  5 23:14 a.xtx<br>drwxr-xr-x 2 nfs-upload nfs-upload  6 Dec  5 23:17 newfile<br>-rw-r--r-- 1 nfs-upload nfs-upload 17 Dec  5 23:11 test.log<br>[root@centos7-slave nfsshare]# <br><br># 在服务器端查看/share目录<br>[root@centos7-master share]# ll<br>total 8<br>-rw-r--r-- 1 nfs-upload nfs-upload  5 Dec  5 23:14 a.xtx<br>drwxr-xr-x 2 nfs-upload nfs-upload  6 Dec  5 23:17 newfile<br>-rw-r--r-- 1 nfs-upload nfs-upload 17 Dec  5 23:11 test.log<br>[root@centos7-master share]#<br></code></pre></td></tr></table></figure><h1 id="数据的实时同步"><a href="#数据的实时同步" class="headerlink" title="数据的实时同步"></a>数据的实时同步</h1><h3 id="实时同步技术介绍"><a href="#实时同步技术介绍" class="headerlink" title="实时同步技术介绍"></a>实时同步技术介绍</h3><p>实现实时同步的方法</p><ul><li>inotify + rsync 方式实现数据同步</li><li>sersync ：前金山公司周洋（花椒直播）在 inotify 软件基础上进行开发的，功能更加强大</li></ul><p>工作原理：</p><ul><li>要利用监控服务（inotify），监控同步数据服务器目录中信息的变化</li><li>发现目录中数据产生变化，就利用rsync服务推送到备份服务器上</li></ul><p>inotify：<br>异步的文件系统事件监控机制，利用事件驱动机制，而无须通过诸如cron等的轮询机制来获取事件，linux内核从2.6.13起支持 inotify，通过inotify可以监控文件系统中添加、删除，修改、移动等各种事件</p><p><strong>实现inotify软件：</strong></p><ul><li>inotify-tools</li><li>sersync</li><li>lrsyncd</li></ul><p><strong>inotify+rsync使用方式</strong></p><ul><li>inotify 对同步数据目录信息的监控</li><li>rsync 完成对数据的同步</li><li>利用脚本进行结合</li></ul><h3 id="实现-inotify"><a href="#实现-inotify" class="headerlink" title="实现 inotify"></a>实现 inotify</h3><p>内核是否支持inotify<br>Linux支持inotify的内核最小版本为 2.6.13，参看man 7 inotify</p><p><strong>inotify 内核参数说明：</strong></p><ul><li>max_queued_events：inotify 事件队列最大长度，如值太小会出现 Event Queue Overflow 错<br>误，默认值：16384, 生产环境建议调大,比如:327679</li><li>max_user_instances：每个用户创建inotify实例最大值，默认值：128</li><li>max_user_watches：可以监视的文件的总数量（inotifywait 单进程），默认值：8192,建议调大</li></ul><h4 id="inotify-tools工具"><a href="#inotify-tools工具" class="headerlink" title="inotify-tools工具"></a>inotify-tools工具</h4><p>inotify-tools参考文档：<a href="https://github.com/rvoicilas/inotify-tools/wiki">https://github.com/rvoicilas/inotify-tools/wiki</a><br>安装inotify-tools：基于epel源</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">yum install epel-release<br>yum -y install inotify-tools<br></code></pre></td></tr></table></figure><p><strong>inotify-tools包主要工具：</strong></p><ul><li>inotifywait： 在被监控的文件或目录上等待特定文件系统事件（open ，close，delete等）发生，<br>常用于实时同步的目录监控</li><li>inotifywatch：收集被监控的文件系统使用的统计数据，指文件系统事件发生的次数统计</li></ul><p>inotifywait 命令<br>格式:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">inotifywait [ options ] file1 [ file2 ] [ file3 ] [ ... ]<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">-m, --monitor 始终保持事件监听<br>-d, --daemon 以守护进程方式执行，和-m相似，配合-o使用<br>-r, --recursive 递归监控目录数据信息变化<br>-q, --quiet 输出少量事件信息<br>--exclude &lt;pattern&gt; 指定排除文件或目录，使用扩展的正则表达式匹配的模式实现<br>--excludei &lt;pattern&gt; 和exclude相似，不区分大小写<br>-o, --outfile &lt;file&gt; 打印事件到文件中，相当于标准正确输出，注意：使用绝对路径<br>-s, --syslogOutput 发送错误到syslog相当于标准错误输出<br>--timefmt &lt;fmt&gt; 指定时间输出格式<br>--format &lt;fmt&gt; 指定的输出格式；即实际监控输出内容<br>-e<br></code></pre></td></tr></table></figure><p><strong>inotifywait 的–timefmt 时间格式</strong><br>参考 man 3 strftime</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">%Y #年份信息，包含世纪信息<br>%y #年份信息，不包括世纪信息<br>%m #显示月份，范围 01-12<br>%d #每月的第几天，范围是 01-31<br>%H #小时信息，使用 24小时制，范围 00-23<br>%M #分钟，范围 00-59<br>%S #秒，范例 0-60<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">--timefmt &quot;%Y-%m-%d %H:%M:%S&quot;<br></code></pre></td></tr></table></figure><p><strong>inotifywait 的 –format 格式定义</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">%T #输出时间格式中定义的时间格式信息，通过 --timefmt option 语法格式指定时间信息<br>%w #事件出现时，监控文件或目录的名称信息，相当于dirname<br>%f #事件出现时，将显示监控目录下触发事件的文件或目录信息，否则为空，相当于basename<br>%e #显示发生的事件信息，不同的事件默认用逗号分隔<br>%Xe #显示发生的事件信息，不同的事件指定用X进行分隔<br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">--format &quot;%T %w%f event: %;e&quot;<br>--format &#x27;%T %w %f&#x27;<br></code></pre></td></tr></table></figure><p>inotifywait -e 选项指定的事件类型</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs text">create #文件或目录创建<br>delete #文件或目录被删除<br>modify #文件或目录内容被写入<br>attrib #文件或目录属性改变<br>close_write #文件或目录关闭，在写入模式打开之后关闭的<br>close_nowrite #文件或目录关闭，在只读模式打开之后关闭的<br>close #文件或目录关闭，不管读或是写模式<br>open #文件或目录被打开<br>lsdir #浏览目录内容<br>moved_to #文件或目录被移动到监控的目录中<br>moved_from #文件或目录从监控的目录中被移动<br>move #文件或目录不管移动到或是移出监控目录都触发事件<br>access #文件或目录内容被读取<br>delete_self #文件或目录被删除，目录本身被删除<br>unmount #取消挂载<br></code></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">-e create,delete,moved_to,close_write,attrib<br></code></pre></td></tr></table></figure><p>范例：使用inotifywait</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs text"># 监控一次事件<br>[root@centos7 /]# inotifywait /data/www/<br>Setting up watches.<br>Watches established.<br>/data/www/ CREATE,ISDIR html<br>[root@centos7 /]# <br><br># 持续前台监控<br>[root@centos7 /]# inotifywait -mrq /data/www --exclude=&quot;.*\.swx|\.swp&quot;<br>/data/www/ OPEN,ISDIR <br>/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR <br>/data/www/ CREATE mysql.log<br>/data/www/ OPEN mysql.log<br>/data/www/ ATTRIB mysql.log<br>/data/www/ CLOSE_WRITE,CLOSE mysql.log<br>/data/www/ OPEN,ISDIR <br>/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR <br>/data/www/ MODIFY mysql.log<br>/data/www/ OPEN mysql.log<br>/data/www/ MODIFY mysql.log<br>/data/www/ CLOSE_WRITE,CLOSE mysql.log<br>/data/www/ OPEN,ISDIR <br>/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR <br>/data/www/ OPEN mysql.log<br>/data/www/ ACCESS mysql.log<br>/data/www/ CLOSE_NOWRITE,CLOSE mysql.log<br><br>#持续后台监控，并记录日志<br>inotifywait -o /root/inotify.log -drq /data/www --timefmt &quot;%Y-%m-%d %H:%M:%S&quot; --<br>format &quot;%T %w%f event: %e&quot;<br>#持续前台监控特定事件<br>inotifywait -mrq /data/www --timefmt &quot;%F %H:%M:%S&quot; --format &quot;%T %w%f event:<br>%;e&quot; -e create,delete,moved_to,close_write,attrib<br></code></pre></td></tr></table></figure><h2 id="rsync-服务"><a href="#rsync-服务" class="headerlink" title="rsync 服务"></a>rsync 服务</h2><p>rsync 常用于做为 linux系统下的数据镜像备份工具，实现远程同步，支持本地复制，或者与其他SSH、<br>rsync主机同步数据，支持增量备份，配合任务计划，rsync能实现定时或间隔同步，配合inotify或<br>sersync，可以实现触发式的实时数据同步<br>官方网站: <a href="http://rsync.samba.org/">http://rsync.samba.org/</a></p><p>软件包：rsync，rsync-daemon（CentOS 8）<br>服务文件：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rsyncd.service<br>配置文件：&#x2F;etc&#x2F;rsyncd.conf<br>端口：873&#x2F;tcp</p><h4 id="rsync命令"><a href="#rsync命令" class="headerlink" title="rsync命令"></a>rsync命令</h4><p>rsync 格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">#Local:<br>rsync [OPTION...] SRC... [DEST]<br>#Access via remote shell:<br>Pull:<br>rsync [OPTION...] [USER@]HOST:SRC... [DEST]<br>Push:<br>rsync [OPTION...] SRC... [USER@]HOST:DEST<br>#Access via rsync daemon:<br>Pull:<br>rsync [OPTION...] [USER@]HOST::SRC... [DEST]<br>rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]<br>Push:<br>rsync [OPTION...] SRC... [USER@]HOST::DEST<br>rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST<br>The &#x27;:&#x27; usages connect via remote shell, while &#x27;::&#x27; &amp; &#x27;rsync://&#x27; usages connect<br>to an rsync daemon, and require SRC or DEST to start with a module name.<br></code></pre></td></tr></table></figure><p>rsync有三种工作方式：</p><ol><li>本地文件系统上实现同步。命令行语法格式为上述”Local”段的格式。</li><li>本地主机使用远程shell和远程主机通信。命令行语法格式为上述”Access via remote shell”段的格<br>式。</li><li>本地主机通过网络套接字连接远程主机上的rsync daemon。命令行语法格式为上述”Access via<br>rsync daemon”段的格式。<br>前两者的本质是通过本地或远程shell，而第3种方式则是让远程主机上运行rsyncd服务，使其监听在一<br>个端口上，等待客户端的连接。<br>常见选项：</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs text">-v：显示rsync过程中详细信息。可以使用&quot;-vvvv&quot;获取更详细信息。<br>-P：显示文件传输的进度信息。(实际上&quot;-P&quot;=&quot;--partial --progress&quot;，其中的&quot;--progress&quot;才是显<br>示进度信息的)。<br>-n --dry-run ：仅测试传输，而不实际传输。常和&quot;-vvvv&quot;配合使用来查看rsync是如何工作的。<br>-a --archive ：归档模式，表示递归传输并保持文件属性。等同于&quot;-rtopgDl&quot;。<br>-r --recursive：递归到目录中去。<br>-t --times：保持mtime属性。强烈建议任何时候都加上&quot;-t&quot;，否则目标文件mtime会设置为系统时间，导<br>致下次更新<br>：检查出mtime不同从而导致增量传输无效。<br>-o --owner：保持owner属性(属主)。<br>-g --group：保持group属性(属组)。<br>-p --perms：保持perms属性(权限，不包括特殊权限)<br>-D ：是&quot;--device --specials&quot;选项的组合，即也拷贝设备文件和特殊文件。<br>-l --links：如果文件是软链接文件，则拷贝软链接本身而非软链接所指向的对象<br>-z ：传输时进行压缩提高效率<br>-R --relative：使用相对路径。意味着将命令行中指定的全路径而非路径最尾部的文件名发送给服务端，<br>包括它们的属性。用法见下文示例。<br>--size-only ：默认算法是检查文件大小和mtime不同的文件，使用此选项将只检查文件大小。<br>-u --update ：仅在源mtime比目标已存在文件的mtime新时才拷贝。注意，该选项是接收端判断的，不会<br>影响删除行为。<br>-d --dirs ：以不递归的方式拷贝目录本身。默认递归时，如果源为&quot;dir1/file1&quot;，则不会拷贝dir1<br>目录，使用该选项将拷贝dir1但不拷贝file1。<br>--max-size ：限制rsync传输的最大文件大小。可以使用单位后缀，还可以是一个小数值(例如：&quot;--<br>max-size=1.5m&quot;)<br>--min-size ：限制rsync传输的最小文件大小。这可以用于禁止传输小文件或那些垃圾文件。<br>--exclude ：指定排除规则来排除不需要传输的文件。<br>--delete ：以SRC为主，对DEST进行同步。多则删之，少则补之。注意&quot;--delete&quot;是在接收端执行<br>的，所以它是在<br>：exclude/include规则生效之后才执行的。<br>-b --backup ：对目标上已存在的文件做一个备份，备份的文件名后默认使用&quot;~&quot;做后缀。<br>--backup-dir：指定备份文件的保存路径。不指定时默认和待备份文件保存在同一目录下。<br>-e ：指定所要使用的远程shell程序，默认为ssh。<br>--port ：连接daemon时使用的端口号，默认为873端口。<br>--password-file：daemon模式时的密码文件，可以从中读取密码实现非交互式。注意，这不是远程shell<br>认证的密码，而是rsync模块认证的密码。<br>-W --whole-file：rsync将不再使用增量传输，而是全量传输。在网络带宽高于磁盘带宽时，该选项比增<br>量传输更高效。<br>--existing ：要求只更新目标端已存在的文件，目标端还不存在的文件不传输。注意，使用相对路径时如<br>果上层目录不存在也不会传输。<br>--ignore-existing：要求只更新目标端不存在的文件。和&quot;--existing&quot;结合使用有特殊功能，见下文示<br>例。<br>--remove-source-files：要求删除源端已经成功传输的文件<br></code></pre></td></tr></table></figure><p> 范例：两种格式访问 rsync daemon 服务 </p><p><img src="/../image.assets/1670396738139.png" alt="1670396738139"></p><ul><li>环境</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">data-server:192.168.179.171(数据服务器)<br>backup-server:192.168.179.165(备份服务器)<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs text">#在备份服务器启动 rsync 进程<br>[root@centos8-backup ~]#rsync --daemon<br>Failed to parse config file: /etc/rsyncd.conf<br>[root@centos8-backup ~]#touch /etc/rsyncd.conf<br>[root@centos8-backup ~]#rsync --daemon<br>[root@centos8-backup /]# cat /etc/rsyncd.conf <br>[backup]<br>path = /web/www/<br>read only = no <br>[root@centos8-backup /]# <br>#指定目录给nobody权限，默认用户以nobody访问此目录<br>[root@centos8-backup ~]#setfacl -m u:nobody:rwx /data/backup/<br>#查看rsync服务器的模块名称<br>[root@centos7-slave /]# rsync rsync://192.168.179.165<br>backup    <br>[root@centos7-slave /]# <br>[root@centos7-slave /]# rsync 192.168.179.165::<br>backup<br><br>#访问rsync服务器的共享目录<br>#推<br>[root@centos7-slave /]# rsync /xy.log 192.168.179.165::backup<br>[root@centos7-slave /]# rsync /etc/shells rsync://root@192.168.179.165/backup<br><br>[root@centos7-slave /]#rsync 192.168.179.165::backup/* /opt<br>[root@centos7-slave /]#rsync rsync://192.168.179.165/backup/* /mnt<br></code></pre></td></tr></table></figure><p>范例：以独立服务方式运行 rsync</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs text"># 修改配置文件<br>[root@centos8-backup etc]# cat rsyncd.conf<br>#uid = root #提定以哪个用户来访问共享目录，将之指定为生成的文件所有者，默认为nobody<br>#gid = root #默认为nobody,Ubuntu中为nogroup<br>#port = 874 可指定非标准端口,默认873/tcp<br>#use chroot = no<br>#max connections = 0<br>#ignore errors<br>#exclude = lost+found/<br>#log file = /var/log/rsyncd.log<br>#pid file = /var/run/rsyncd.pid<br>#lock file = /var/run/rsyncd.lock<br>#reverse lookup = no<br>#hosts allow = 10.0.0.0/24<br>#[backup] #每个模块名对应一个不同的path目录，如果同名后面模块生效<br>#path = /data/backup/<br>#comment = backup dir<br>#read only = no #默认是yes,即只读<br>#auth users = rsyncuser #默认anonymous可以访问rsync服务器<br>#secrets file = /etc/rsync.pas<br># /etc/rsyncd: configuration file for rsync daemon mode<br><br># See rsyncd.conf man page for more options.<br><br># configuration example:<br><br># uid = nobody<br># gid = nobody<br># use chroot = yes<br># max connections = 4<br># pid file = /var/run/rsyncd.pid<br># exclude = lost+found/<br># transfer logging = yes<br># timeout = 900<br># ignore nonreadable = yes<br># dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2<br><br># [ftp]<br>#        path = /home/ftp<br>#        comment = ftp export area<br><br><br>uid = root <br>gid = root  <br>max connections = 0<br>ignore errors<br>exclude = lost+found/<br>log file = /var/log/rsyncd.log<br>pid file = /var/run/rsyncd.pid<br>lock file = /var/run/rsyncd.lock<br>reverse lookup = no<br><br>[backup] <br>path = /web/backup/  <br>comment = backup dir<br>read only = no <br>auth users = rsyncuser  <br>secrets file = /etc/rsync.pas<br><br>[root@centos8-backup etc]# <br><br><br>#服务器端生成验证文件<br>[root@centos8-backup ~]#echo &quot;rsyncuser:123456&quot; &gt; /etc/rsync.pas<br>[root@centos8-backup ~]#chmod 600 /etc/rsync.pas<br><br>#服务器端启动rsync服务<br>[root@centos8-backup ~]#rsync --daemon #可加入/etc/rc.d/rc.local实现开<br>机启动<br><br>#客户端配置密码文件<br>#也可将密码赋值给环境变量RSYNC_PASSWORD变量,但不安全<br>#export RSYNC_PASSWORD=123456<br>[root@centos7-slave ~]#echo &quot;123456&quot; &gt; /etc/rsync.pas<br>[root@centos7-slave ~]#chmod 600 /etc/rsync.pas #此为必要项,权限必须修改<br><br>#查看远程rsync服务器的模块信息<br>[root@centos7-slave etc]# rsync rsync://192.168.179.165<br>backup         backup dir<br>[root@centos7-slave etc]# <br><br>#交互式验证查看具体模块内的文件<br>[root@centos7-slave etc]# rsync rsync://rsyncuser@192.168.179.165/backup<br>Password: <br><br>#非交互式查看共享目录<br>[root@centos7-slave etc]# rsync --password-file=/etc/rsync.pas rsync://rsyncuser@192.168.179.165/backup<br>drwxrwxrwx             34 2022/12/07 16:20:07 .<br>-rw-r--r--              0 2022/12/07 16:20:07 xy.log<br>-rw-r--r--              0 2022/12/07 16:09:50 zz.log<br>[root@centos7-slave etc]# <br><br><br>#客户端测试同步数据<br>[root@data-centos8 ~]#rsync -avz --delete --password-file=/etc/rsync.pas /data/www/ rsyncuser@rsync服务器IP::backup<br>[root@data-centos8 ~]#rsync -avz --delete --password-file=/etc/rsync.pas rsyncuser@rsync服务器IP::backup /data/www/<br></code></pre></td></tr></table></figure><h3 id="inotify-rsync-shell-脚本实现实时数据同步"><a href="#inotify-rsync-shell-脚本实现实时数据同步" class="headerlink" title="inotify+rsync+shell 脚本实现实时数据同步"></a>inotify+rsync+shell 脚本实现实时数据同步</h3><p><img src="/../image.assets/1670403695085.png" alt="1670403695085"></p><p>按 5.3 搭建好 rsyncd的备份服务器，在数据服务器上创建inotify_rsync.sh脚本<br>注意: 此脚本执行前先确保两主机初始数据处于同步状态,此脚本实现后续的数据同步</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7-slave ~]# vim inotify_rsync.sh <br>#!/bin/bash<br>SRC=&#x27;/data/www/&#x27; #注意最后的/<br>DEST=&#x27;rsyncuser@rsync服务器IP::backup&#x27;<br>rpm -q inotify-tools &amp;&gt; /dev/null ||yum -y install inotify-tools<br>rpm -q rsync &amp;&gt; /dev/null || yum -y install rsync<br>inotifywait -mrq --exclude=&quot;.*\.swp&quot; --timefmt &#x27;%Y-%m-%d %H:%M:%S&#x27; --format<br>&#x27;%T %w %f&#x27; -e create,delete,moved_to,close_write,attrib $&#123;SRC&#125; |while read DATE<br>TIME DIR FILE;do<br>FILEPATH=$&#123;DIR&#125;$&#123;FILE&#125;<br>rsync -az --delete --password-file=/etc/rsync.pas $SRC $DEST &amp;&amp; echo<br>&quot;At $&#123;TIME&#125; on $&#123;DATE&#125;, file $FILEPATH was backuped up via rsync&quot; &gt;&gt;<br>/var/log/changelist.log<br>done<br>#查看文件传输日志<br>[root@centos7-slave www]# tail -f /var/log/changelist.log <br></code></pre></td></tr></table></figure><h2 id="sersync-实现实时数据同步"><a href="#sersync-实现实时数据同步" class="headerlink" title="sersync 实现实时数据同步"></a>sersync 实现实时数据同步</h2><h3 id="sersync-介绍"><a href="#sersync-介绍" class="headerlink" title="sersync 介绍"></a>sersync 介绍</h3><p>sersync类似于inotify，同样用于监控，但它克服了inotify的缺点.<br>inotify最大的不足是会产生重复事件，或者同一个目录下多个文件的操作会产生多个事件，例如，当监<br>控目录中有5个文件时，删除目录时会产生6个监控事件，从而导致重复调用rsync命令。另外比如：vim<br>文件时，inotify会监控到临时文件的事件，但这些事件相对于rsync来说是不应该被监控的</p><p><strong>sersync 优点：</strong></p><ul><li>sersync是使用c++编写，而且对linux系统文件系统产生的临时文件和重复的文件操作进行过滤，<br>所以在结合rsync同步的时候，节省了运行时耗和网络资源。因此更快。</li><li>sersync配置很简单，其中提供了静态编译好的二进制文件和xml配置文件，直接使用即可</li><li>sersync使用多线程进行同步，尤其在同步较大文件时，能够保证多个服务器实时保持同步状态</li><li>sersync有出错处理机制，通过失败队列对出错的文件重新同步，如果仍旧失败，则按设定时长对<br>同步失败的文件重新同步</li><li>sersync不仅可以实现实时同步，另外还自带crontab功能，只需在xml配置文件中开启，即也可以<br>按要求隔一段时间整体同步一次，而无需再额外配置crontab功能</li><li>sersync 可以二次开发</li></ul><p>sersync项目地址： <a href="https://code.google.com/archive/p/sersync/">https://code.google.com/archive/p/sersync/</a><br>sersync下载地址： <a href="https://code.google.com/archive/p/sersync/downloads">https://code.google.com/archive/p/sersync/downloads</a></p><h3 id="基于rsync-daemon-实现-sersync"><a href="#基于rsync-daemon-实现-sersync" class="headerlink" title="基于rsync daemon 实现 sersync"></a>基于rsync daemon 实现 sersync</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs text"># #在数据服务器上下载sersync，并拷贝至相应的目录，设置PATH变量<br>wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/sersync/sersync2.5.4_64bit_binary_stable_final.tar.gz<br><br>[root@centos7-slave ~]# tar -vxf sersync2.5.4_64bit_binary_stable_final.tar.gz <br>[root@centos7-slave ~]# cp -r GNU-Linux-x86/ /usr/local/sersync<br>[root@centos7-slave sersync]# echo &#x27;PATH=/usr/local/sersync:$PATH&#x27; &gt; /etc/profile.d/sersync.sh<br>[root@centos7-slave sersync]# source /etc/profile.d/sersync.sh<br>[root@centos7-slave sersync]# <br><br>#确认安装rsync客户端工具<br>rpm -q rsync &amp;&gt; /dev/null || dnf -y install rsync<br><br>#备份sersync配置文件<br>cp /usr/local/sersync/confxml.xml&#123;,.bak&#125;<br># 修改配置文件<br>vim /usr/local/sersync/confxml.xml<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;<br>&lt;head version=&quot;2.5&quot;&gt;<br>&lt;host hostip=&quot;localhost&quot; port=&quot;8008&quot;&gt;&lt;/host&gt;<br>&lt;debug start=&quot;false&quot;/&gt; # 是否开启调试模式<br>&lt;fileSystem xfs=&quot;false&quot;/&gt;<br>&lt;filter start=&quot;false&quot;&gt; #不开启文件过滤功能，当为true时,以下类型的文件将不同<br>步<br>&lt;exclude expression=&quot;(.*)\.svn&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;(.*)\.gz&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;^info/*&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;^static/*&quot;&gt;&lt;/exclude&gt;<br>&lt;/filter&gt;<br>&lt;inotify&gt; # 监控事件，默认监控<br>delete/close_write/moved_from/moved_to/create folder<br>&lt;delete start=&quot;true&quot;/&gt;<br>&lt;createFolder start=&quot;true&quot;/&gt;<br>&lt;createFile start=&quot;false&quot;/&gt;<br>&lt;closeWrite start=&quot;true&quot;/&gt;<br>&lt;moveFrom start=&quot;true&quot;/&gt;<br>&lt;moveTo start=&quot;true&quot;/&gt;<br>&lt;attrib start=&quot;true&quot;/&gt; #修改此行为true，文件属性变化后也会同步<br>&lt;modify start=&quot;false&quot;/&gt;<br>&lt;/inotify&gt;<br>&lt;sersync&gt; # rsync命令的配置段<br>&lt;localpath watch=&quot;/data/www&quot;&gt; #修改此行,需要同步的源目录或文件，建议同步目<br>录<br>&lt;remote ip=&quot;备份服务器IP&quot; name=&quot;backup&quot;/&gt; #修改此行,指定备份服务器地址和rsync<br>daemon的模块名，如果下面开启了ssh start，此时name为远程shell方式运行时的目标目录<br>&lt;!--&lt;remote ip=&quot;192.168.8.39&quot; name=&quot;tongbu&quot;/&gt;--&gt;<br>&lt;!--&lt;remote ip=&quot;192.168.8.40&quot; name=&quot;tongbu&quot;/&gt;--&gt;<br>&lt;/localpath&gt;<br>&lt;rsync&gt;<br>&lt;commonParams params=&quot;-artuz&quot;/&gt; # 指定rsync选项<br>&lt;auth start=&quot;true&quot; users=&quot;rsyncuser&quot; passwordfile=&quot;/etc/rsync.pas&quot;/&gt; #修<br>改此行为true,指定备份服务器的rsync配置的用户和密码文件<br>&lt;userDefinedPort start=&quot;false&quot; port=&quot;874&quot;/&gt;&lt;!-- port=874 --&gt;#指定rsync的非<br>标准端口号<br>&lt;timeout start=&quot;false&quot; time=&quot;100&quot;/&gt;&lt;!-- timeout=100 --&gt;<br>&lt;ssh start=&quot;false&quot;/&gt; #默认使用rsync daemon运行rsync命令,true为使用远程shell模<br>式<br>&lt;/rsync&gt;<br>&lt;failLog path=&quot;/tmp/rsync_fail_log.sh&quot; timeToExecute=&quot;60&quot;/&gt;&lt;!--default every<br>60mins execute once--&gt; #错误重传及日志文件路径<br>&lt;crontab start=&quot;false&quot; schedule=&quot;600&quot;&gt;&lt;!--600mins--&gt; #不开启crontab功能<br>&lt;crontabfilter start=&quot;false&quot;&gt; #不开启crontab定时传输的筛选功能<br>&lt;exclude expression=&quot;*.php&quot;&gt;&lt;/exclude&gt;<br>&lt;exclude expression=&quot;info/*&quot;&gt;&lt;/exclude&gt;<br>&lt;/crontabfilter&gt;<br>&lt;/crontab&gt;<br>&lt;plugin start=&quot;false&quot; name=&quot;command&quot;/&gt;<br>&lt;/sersync&gt;<br>#####################################以下行不需要修改<br>####################################<br>&lt;plugin name=&quot;command&quot;&gt;<br>&lt;param prefix=&quot;/bin/sh&quot; suffix=&quot;&quot; ignoreError=&quot;true&quot;/&gt; &lt;!--prefix<br>/opt/tongbu/mmm.sh suffix--&gt;<br>&lt;filter start=&quot;false&quot;&gt;<br>&lt;include expression=&quot;(.*)\.php&quot;/&gt;<br>&lt;include expression=&quot;(.*)\.sh&quot;/&gt;<br>&lt;/filter&gt;<br>&lt;/plugin&gt;<br>&lt;plugin name=&quot;socket&quot;&gt;<br>&lt;localpath watch=&quot;/opt/tongbu&quot;&gt;<br>&lt;deshost ip=&quot;192.168.138.20&quot; port=&quot;8009&quot;/&gt;<br>&lt;/localpath&gt;<br>&lt;/plugin&gt;<br>&lt;plugin name=&quot;refreshCDN&quot;&gt;<br>&lt;localpath watch=&quot;/data0/htdocs/cms.xoyo.com/site/&quot;&gt;<br>&lt;cdninfo domainname=&quot;ccms.chinacache.com&quot; port=&quot;80&quot; username=&quot;xxxx&quot;<br>passwd=&quot;xxxx&quot;/&gt;<br>&lt;sendurl base=&quot;http://pic.xoyo.com/cms&quot;/&gt;<br> &lt;regexurl regex=&quot;false&quot; match=&quot;cms.xoyo.com/site([/a-zA-Z0-<br>9]*).xoyo.com/images&quot;/&gt;<br>&lt;/localpath&gt;<br>&lt;/plugin&gt;<br>&lt;/head&gt;<br><br><br>#创建连接rsynd服务器的用户密码文件,并必须修改权限<br>echo 123456 &gt; /etc/rsync.pas<br>chmod 600 /etc/rsync.pas<br>#查看帮助<br>sersync2 -h<br>set the system param<br>execute：echo 50000000 &gt; /proc/sys/fs/inotify/max_user_watches<br>execute：echo 327679 &gt; /proc/sys/fs/inotify/max_queued_events<br>parse the command param<br><br>_______________________________________________________<br>参数-d:启用守护进程模式<br>参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍<br>c参数-n: 指定开启守护线程的数量，默认为10个<br>参数-o:指定配置文件，默认使用当前工作目录下的confxml.xml文件<br>参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块<br>参数-m:单独启用其他模块，使用 -m socket 开启socket模块<br>参数-m:单独启用其他模块，使用 -m http 开启http模块<br>不加-m参数，则默认执行同步程序<br><br><br>#以后台方式执行同步<br>sersync2 -dro /usr/local/sersync/confxml.xml<br><br>#如果同步失败,可以手动执行下面命令,观察过程<br>cd /data/www &amp;&amp; rsync -artuz -R --delete ./ rsyncuser@backup-server::backup --password-file=/etc/rsync.pas &gt;/dev/null 2&gt;&amp;1<br><br>#sersync支持多实例，也即监控多个目录时，只需分别配置不同配置文件，然后使用sersync2指定对应配置文件运行<br>sersync2 -rd -o /etc/sersync.d/nginx.xml<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志服务管理</title>
    <link href="/2022/12/03/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <url>/2022/12/03/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="系统日志管理"><a href="#系统日志管理" class="headerlink" title="系统日志管理"></a>系统日志管理</h1><h2 id="系统日志介绍"><a href="#系统日志介绍" class="headerlink" title="系统日志介绍"></a>系统日志介绍</h2><p>在现实生活中，记录日志非常重要﹐比如:银行转账时会有转账记录﹔飞机飞行过程中的黑盒子（飞行数据记录器）记录着飞机的飞行过程. 那么将系统和应用发生的事件记录至日志中，也很意义,常可以助于排错和分析使用</p><p>日志记录的内容包括：</p><ul><li>历史事件：时间，地点，人物，事件</li><li>日志级别：事件的关键性程度，Loglevel</li></ul><h3 id="sysklogd-系统日志服务"><a href="#sysklogd-系统日志服务" class="headerlink" title="sysklogd 系统日志服务"></a>sysklogd 系统日志服务</h3><p>CentOS 5 之前版本采用的日志管理系统服务<br>klogd: linux kernel 记录内核日志<br>syslogd: system application 记录应用日志<br>事件记录格式：<br>日期时间 主机 进程[pid]: 事件内容<br>C&#x2F;S架构：通过TCP或UDP协议的服务完成日志记录传送，将分布在不同主机的日志实现集中管理</p><h3 id="rsyslog-系统日志服务"><a href="#rsyslog-系统日志服务" class="headerlink" title="rsyslog 系统日志服务"></a>rsyslog 系统日志服务</h3><p>rsyslog是CentOS 6 以后版本的系统管理服务.它提供了高性能，出色的安全性和模块化设计。 尽管rsyslog最初是常规的syslogd，但已发展成为一种瑞士军刀式的记录工具，能够接受来自各种来源的输入，并将其转换，然后输出到不同的目的地。当应用有限的处理时，RSYSLOG每秒可以将超过一百万的消息传递到本地目的地。 即使在远程的目的地和更精细的处理中，性能通常也被认为是“惊人的”。</p><p>官网网站</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://www.rsyslog.com/<br></code></pre></td></tr></table></figure><p>rsyslog 特性</p><ul><li>多线程</li><li>UDP, TCP, SSL, TLS, RELP</li><li>MySQL, PGSQL, Oracle实现日志存储</li><li>强大的过滤器，可实现过滤记录日志信息中任意部分</li><li>自定义输出格式</li><li>适用于企业级中继链</li></ul><h2 id="rsyslog-管理"><a href="#rsyslog-管理" class="headerlink" title="rsyslog 管理"></a>rsyslog 管理</h2><h3 id="系统日志术语"><a href="#系统日志术语" class="headerlink" title="系统日志术语"></a>系统日志术语</h3><p>facility：设施，从功能或程序上对日志进行归类</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">#内置分类<br>auth, authpriv, cron, daemon,ftp,kern, lpr, mail, news, security(auth),<br>user, uucp, syslog<br>#自定义的分类<br>local0-local7<br></code></pre></td></tr></table></figure><p>Priority 优先级别，从低到高排序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">debug,info, notice, warn(warning), err(error), crit(critical), alert,<br>emerg(panic)<br></code></pre></td></tr></table></figure><p>参看帮助： man 3 syslog，man logger</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos8 ~]#yum -y install man-pages<br>[root@centos8 ~]#man 3 syslog<br></code></pre></td></tr></table></figure><h3 id="rsyslog-相关文件"><a href="#rsyslog-相关文件" class="headerlink" title="rsyslog 相关文件"></a>rsyslog 相关文件</h3><ul><li>程序包：rsyslog</li><li>主程序：&#x2F;usr&#x2F;sbin&#x2F;rsyslogd</li><li>CentOS 6：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;rsyslog {start|stop|restart|status}</li><li>CentOS 7,8：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rsyslog.service</li><li>配置文件：&#x2F;etc&#x2F;rsyslog.conf，&#x2F;etc&#x2F;rsyslog.d&#x2F;<em>.conf</em></li><li><em>库文件： &#x2F;lib64&#x2F;rsyslog&#x2F;</em>.so</li></ul><h3 id="rsyslog配置文件"><a href="#rsyslog配置文件" class="headerlink" title="rsyslog配置文件"></a>rsyslog配置文件</h3><p><strong>&#x2F;etc&#x2F;rsyslog.conf 配置文件格式：由三部分组成</strong></p><ul><li>MODULES：相关模块配置</li><li>GLOBAL DIRECTIVES：全局配置</li><li>RULES：日志记录相关的规则配置</li></ul><p>RULES配置格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">facility.priority; facility.priority… target<br></code></pre></td></tr></table></figure><p>facility格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">* #所有的facility<br>facility1,facility2,facility3,... #指定的facility列表<br></code></pre></td></tr></table></figure><p>priority格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">*: 所有级别<br>none：没有级别，即不记录<br>PRIORITY：指定级别（含）以上的所有级别<br>=PRIORITY：仅记录指定级别的日志信息<br></code></pre></td></tr></table></figure><p>target格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">文件路径：通常在/var/log/，文件路径前的-表示异步写入<br>用户：将日志事件通知给指定的用户，* 表示登录的所有用户<br>日志服务器：@host，把日志送往至指定的远程UDP日志服务器 @@host 将日志发送到远程TCP日志服务器<br>管道： | COMMAND，转发给其它命令处理<br></code></pre></td></tr></table></figure><p><strong>通常的日志文件的格式：</strong></p><p>日志文件有很多，如： &#x2F;var&#x2F;log&#x2F;messages,cron,secure等，基本格式都是类似的。格式如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">事件产生的日期时间 主机 进程(pid)：事件内容<br></code></pre></td></tr></table></figure><p><strong>范例：日志文件格式</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# tail -f /var/log/messages<br>Dec  3 16:58:40 centos7 dbus[653]: [system] Activating via systemd: service name=&#x27;org.freedesktop.nm_dispatcher&#x27; unit=&#x27;dbus-org.freedesktop.nm-dispatcher.service&#x27;<br>Dec  3 16:58:40 centos7 systemd: Starting Network Manager Script Dispatcher Service...<br>Dec  3 16:58:40 centos7 dhclient[51210]: bound to 192.168.179.170 -- renewal in 745 seconds.<br>Dec  3 16:58:40 centos7 dbus[653]: [system] Successfully activated service &#x27;org.freedesktop.nm_dispatcher&#x27;<br>Dec  3 16:58:40 centos7 systemd: Started Network Manager Script Dispatcher Service.<br>Dec  3 16:58:40 centos7 nm-dispatcher: req:1 &#x27;dhcp4-change&#x27; [ens33]: new request (2 scripts)<br>Dec  3 16:58:40 centos7 nm-dispatcher: req:1 &#x27;dhcp4-change&#x27; [ens33]: start running ordered scripts...<br>Dec  3 17:01:01 centos7 systemd: Started Session 95 of user root.<br>Dec  3 17:11:05 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)<br>Dec  3 17:11:11 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)<br>Dec  3 17:11:26 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# tail -f /var/log/secure<br>Nov 29 22:58:18 centos7 sshd[49904]: pam_unix(sshd:session): session closed for user root<br>Nov 30 19:58:03 centos7 sshd[50030]: Accepted password for root from 192.168.179.1 port 51814 ssh2<br>Nov 30 19:58:03 centos7 sshd[50030]: pam_unix(sshd:session): session opened for user root by (uid=0)<br>Nov 30 21:15:17 centos7 sshd[48764]: pam_unix(sshd:session): session closed for user root<br>Dec  2 21:22:51 centos7 sshd[51123]: Accepted password for root from 192.168.179.1 port 53924 ssh2<br>Dec  2 21:22:51 centos7 sshd[51123]: pam_unix(sshd:session): session opened for user root by (uid=0)<br>Dec  3 09:08:03 centos7 sshd[50030]: pam_unix(sshd:session): session closed for user root<br>Dec  3 09:53:40 centos7 sshd[51295]: Accepted password for root from 192.168.179.1 port 56421 ssh2<br>Dec  3 09:53:40 centos7 sshd[51295]: pam_unix(sshd:session): session opened for user root by (uid=0)<br>Dec  3 11:14:12 centos7 sshd[51123]: pam_unix(sshd:session): session closed for user root<br></code></pre></td></tr></table></figure><h3 id="范例：将ssh服务的日志记录至自定义的local的日志设备"><a href="#范例：将ssh服务的日志记录至自定义的local的日志设备" class="headerlink" title="范例：将ssh服务的日志记录至自定义的local的日志设备"></a>范例：将ssh服务的日志记录至自定义的local的日志设备</h3><ul><li>修改sshd服务的配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# vim /etc/ssh/sshd_config <br># 配置文件修改内容如下所示<br>SyslogFacility local2<br># 重新加载sshd服务配置文件<br>[root@centos7 ~]# service sshd reload<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670069148343.png" alt="1670069148343"></p><ul><li>修改rsyslog配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# vim /etc/rsyslog.conf <br># 加入如下内容<br>local2.*                                                /var/log/sshd.log<br># 重启服务<br>[root@centos7 ~]# systemctl restart rsyslog<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670068722502.png" alt="1670068722502"></p><ul><li>测试验证</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text"># ssh 登入该服务器<br># 查看日志文件内容<br>tail -f /var/log/sshd.log<br></code></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs verilog">[root@centos7 ~]# tail -f /<span class="hljs-keyword">var</span>/log/sshd<span class="hljs-variable">.log</span> <br>Dec  <span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">06</span>:<span class="hljs-number">35</span> centos7 sshd[<span class="hljs-number">49356</span>]: Server listening on <span class="hljs-number">0</span><span class="hljs-variable">.0</span><span class="hljs-variable">.0</span><span class="hljs-variable">.0</span> port <span class="hljs-number">22</span>.<br>Dec  <span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">06</span>:<span class="hljs-number">35</span> centos7 sshd[<span class="hljs-number">49356</span>]: Server listening on :: port <span class="hljs-number">22</span>.<br>Dec  <span class="hljs-number">3</span> <span class="hljs-number">20</span>:<span class="hljs-number">07</span>:<span class="hljs-number">06</span> centos7 sshd[<span class="hljs-number">52189</span>]: Accepted publickey <span class="hljs-keyword">for</span> root from <span class="hljs-number">192</span><span class="hljs-variable">.168</span><span class="hljs-variable">.179</span><span class="hljs-variable">.171</span> port <span class="hljs-number">33434</span> ssh2: RSA SHA256:HohSbRRS/oP0nLbEZTqgSJ6WQ5Mjp3f9DxM+spRO+SI<br></code></pre></td></tr></table></figure><p>日志中可以看到192.168.179.171的IP地址通过root用户ssh登入该设备</p><h3 id="启用网络日志服务"><a href="#启用网络日志服务" class="headerlink" title="启用网络日志服务"></a>启用网络日志服务</h3><p>启用网络日志服务功能，可以将多个远程主机的日志，发送到集中的日志服务器，方便统一管理。</p><p><strong>范例：CentOS 7 和6 启用网络日志功能</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">日志服务器：centos7.9，主机名称：centos7,ip:192.168.179.157<br>客户端1：centos7.9，主机名称：centos7-master,ip:192.168.179.170<br>客户端2：centos7.9，主机名称：centos7-slave,ip:192.168.179.171  <br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670070091109.png" alt="1670070091109"></p><ul><li>修改日志服务器配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">192.168.179.157上操作</span><br>[root@centos7 ~]# vim /etc/rsyslog.conf<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670070275185.png" alt="1670070275185"></p><ul><li>重启日志服务器rsyslog服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 ~]# systemctl restart rsyslog<br></code></pre></td></tr></table></figure><ul><li>修改客户端配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">修改192.168.179.170配置文件</span><br>[root@centos7-master ~]# vim /etc/rsyslog.conf <br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改内容如下</span><br>*.info;mail.none;authpriv.none;cron.none                /var/log/messages<br>*.info;mail.none;authpriv.none;cron.none                @@192.168.179.157:514 #TCP<br>*.info;mail.none;authpriv.none;cron.none                @192.168.179.157:514 #udp<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启服务</span><br>systemctl restart rsyslog<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">192.168.179.171客户端使用上面方法操作修改配置文件</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670070969222.png" alt="1670070969222"></p><ul><li>测试验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在日志服务器上查看日志</span><br>[root@centos7 ~]# tail -f /var/log/messages<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670071324130.png" alt="1670071324130"></p><p>可以看到主机名称centos7-master、centos7-slave上的日志说明实验成功</p><p><strong>范例：CentOS 8 启用网络日志功能</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">## MODULES ####<br>...省略...<br># Provides UDP syslog reception<br># for parameters see http://www.rsyslog.com/doc/imudp.html<br>module(load=&quot;imudp&quot;) # needs to be done just once<br>input(type=&quot;imudp&quot; port=&quot;514&quot;)<br># Provides TCP syslog reception<br># for parameters see http://www.rsyslog.com/doc/imtcp.html<br>module(load=&quot;imtcp&quot;) # needs to be done just once<br>input(type=&quot;imtcp&quot; port=&quot;514&quot;)<br></code></pre></td></tr></table></figure><h3 id="常见日志文件"><a href="#常见日志文件" class="headerlink" title="常见日志文件"></a>常见日志文件</h3><ul><li>&#x2F;var&#x2F;log&#x2F;secure：系统安全日志，文本格式，应周期性分析</li><li>&#x2F;var&#x2F;log&#x2F;btmp：当前系统上，用户的失败尝试登录相关的日志信息，二进制格式，lastb命令进行查看</li><li>&#x2F;var&#x2F;log&#x2F;wtmp：当前系统上，用户正常登录系统的相关日志信息，二进制格式，last命令可以查看</li><li>&#x2F;var&#x2F;log&#x2F;lastlog:每一个用户最近一次的登录信息，二进制格式，lastlog命令可以查看</li><li>&#x2F;var&#x2F;log&#x2F;dmesg：CentOS7 之前版本系统引导过程中的日志信息，文本格式，开机后的硬件变化</li><li>将不再记录，也可以通过专用命令dmesg查看，可持续记录硬件变化的情况</li><li>&#x2F;var&#x2F;log&#x2F;boot.log 系统服务启动的相关信息，文本格式</li><li>&#x2F;var&#x2F;log&#x2F;messages ：系统中大部分的信息</li><li>&#x2F;var&#x2F;log&#x2F;anaconda : anaconda的日志</li></ul><h3 id="实战案例：利用-MySQL-存储日志信息"><a href="#实战案例：利用-MySQL-存储日志信息" class="headerlink" title="实战案例：利用 MySQL 存储日志信息"></a>实战案例：利用 MySQL 存储日志信息</h3><p><img src="/../image.assets/1670074533744.png" alt="1670074533744"></p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>利用rsyslog日志服务，将收集的日志记录于MySQL中</p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">两台主机<br>一台：rsyslog日志服务器，IP：192.168.179.157<br>一台：mariadb数据库服务器，IP：192.168.179.178<br></code></pre></td></tr></table></figure><h4 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在rsyslog服务器上安装连接mysql模块相关的程序包<br>[root@centos7 ~]# yum install rsyslog-mysql<br>[root@centos7 ~]# rpm -ql rsyslog-mysql<br>/usr/lib64/rsyslog/ommysql.so<br>/usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql<br>[root@centos7 ~]# <br><br>#将sql脚本复制到数据库服务器上<br>[root@centos7 ~]# scp /usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql 192.168.179.148:/root/<br><br># 在192.168.179.148上安装mysql<br>yum install mysql-server -y<br><br># #在mysql数据库服务器上创建相关数据库和表，并授权rsyslog能连接至当前服务器<br>root@ubuntu1804:~# mysql<br>mysql&gt; source /root/mysql-createDB.sql;<br>Query OK, 1 row affected (0.00 sec)<br>mysql&gt; create user &#x27;rsyslog&#x27;@&#x27;192.168.179.%&#x27; identified by &#x27;123456&#x27;;<br>Query OK, 0 rows affected (0.04 sec)<br><br>mysql&gt; grant all on Syslog.* to &#x27;rsyslog&#x27;@&#x27;192.168.179.%&#x27;;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; flush privileges;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br><br># 配置日志服务器将日志发送至指定数据库<br>vim /etc/rsyslog.conf<br>####MODULES####<br>#在 MODULES 语言下面，如果是 CentOS 8 加下面行<br>module(load=&quot;ommysql&quot;)<br>#在 MODULES 语言下面，如果是 CentOS 7，6 加下面行<br>$ModLoad ommysql<br><br>#在RULES语句块加下面行的格式<br>#facility.priority :ommysql:DBHOST,DBNAME,DBUSER, PASSWORD<br>*.info :ommysql:192.168.179.148,Syslog,rsyslog,123456<br><br># 重启服务<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1670075626142.png" alt="1670075626142"></p><p><img src="/../image.assets/1670075765663.png" alt="1670075765663"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在日志服务器上生成日志<br>logger &#x27;this is test log&#x27;<br><br>#在数据库上查询到上面的测试日志<br>mysql&gt; select count(*) from SystemEvents;<br>+----------+<br>| count(*) |<br>+----------+<br>|       66 |<br>+----------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><h2 id="logrotate-日志转储"><a href="#logrotate-日志转储" class="headerlink" title="logrotate 日志转储"></a>logrotate 日志转储</h2><h3 id="logrotate-介绍"><a href="#logrotate-介绍" class="headerlink" title="logrotate 介绍"></a>logrotate 介绍</h3><p>logrotate 程序是一个日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件，称为日志转<br>储或滚动。可以根据日志文件的大小，也可以根据其天数来转储，这个过程一般通过 cron 程序来执行</p><h3 id="logrotate-配置"><a href="#logrotate-配置" class="headerlink" title="logrotate 配置"></a>logrotate 配置</h3><p>软件包：logrotate<br>相关文件</p><ul><li><p>计划任务：&#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p></li><li><p>程序文件：&#x2F;usr&#x2F;sbin&#x2F;logrotate</p></li><li><p>配置文件： &#x2F;etc&#x2F;logrotate.conf</p></li><li><p>日志文件：&#x2F;var&#x2F;lib&#x2F;logrotate&#x2F;logrotate.status</p></li></ul><p>配置文件主要参数如下：</p><p><img src="/../image.assets/1670121049880.png" alt="1670121049880"></p><p><img src="/../image.assets/1670121071202.png" alt="1670121071202"></p><p><img src="/../image.assets/1670121091758.png" alt="1670121091758"></p><p><img src="/../image.assets/1670121108631.png" alt="1670121108631"></p><p><strong>范例：对指定日志手动执行日志转储</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs text"># 生成测试日志<br>[root@centos7-master ~]# dd if=/dev/zero of=/var/log/test1.log bs=2M count=1<br>1+0 records in<br>1+0 records out<br>2097152 bytes (2.1 MB) copied, 0.0017554 s, 1.2 GB/s<br>[root@centos7-master ~]# <br><br>[root@centos7-master ~]# dd if=/dev/zero of=/var/log/test2.log bs=2M count=1<br>1+0 records in<br>1+0 records out<br>2097152 bytes (2.1 MB) copied, 0.00240458 s, 872 MB/s<br>[root@centos7-master ~]# <br><br>#针对不同的日志创建转储配置文件<br>[root@centos7-master ~]# vim /etc/logrotate.d/test1<br><br>/var/log/test1.log &#123;<br>        daily<br>        rotate 5<br>        compress<br>        delaycompress<br>        missingok<br>        size 1M<br>        notifempty<br>        create 640 bin nobody<br>        postrotate<br>        echo `date +%F_%T` &gt;&gt; /data/test1.log<br>        endscript<br>&#125;<br><br>[root@centos7-master ~]# vim /etc/logrotate.d/test2<br>/var/log/test2.log &#123;<br>        daily<br>        rotate 5<br>        compress<br>        delaycompress<br>        missingok<br>        size 1M<br>        notifempty<br>        create 644 root root<br>        postrotate<br>        echo `date +%F_%T` &gt;&gt; /data/test2.log<br>        endscript<br>&#125;<br><br>#针对一个测试日志，手动执行日志转储<br>[root@centos7-master ~]# logrotate /etc/logrotate.d/test1<br><br>[root@centos7-master ~]# ll /var/log/test*<br>-rw-r----- 1 bin  nobody       0 Dec  4 11:12 /var/log/test1.log<br>-rw-r--r-- 1 root root   2097152 Dec  4 11:07 /var/log/test1.log.1<br>-rw-r--r-- 1 root root   2097152 Dec  4 11:07 /var/log/test2.log<br>[root@centos7-master ~]# <br>[root@centos7-master ~]# ll /data/<br>total 1800<br>-rw-r--r--  1 root  root  915255 Nov 27 17:22 1127.sql<br>-rw-r--r--  1 root  root  914921 Nov 25 10:23 all.sql<br>drwxr-xr-x  3 root  root      18 Nov 29 22:45 mastermha<br>drwxr-x--- 11 mysql mysql   4096 Dec  3 20:30 mysql<br>-rw-r--r--  1 root  root      20 Dec  4 11:12 test1.log<br>[root@centos7-master ~]# <br>#对所有日志进行手动转储<br>[root@centos7-master ~]# logrotate /etc/logrotate.conf<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL集群</title>
    <link href="/2022/11/23/MySQL%E9%9B%86%E7%BE%A4/"/>
    <url>/2022/11/23/MySQL%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL集群"><a href="#MySQL集群" class="headerlink" title="MySQL集群"></a>MySQL集群</h1><h2 id="主从复制架构和原理"><a href="#主从复制架构和原理" class="headerlink" title="主从复制架构和原理"></a>主从复制架构和原理</h2><h3 id="MySQL主从复制"><a href="#MySQL主从复制" class="headerlink" title="MySQL主从复制"></a>MySQL主从复制</h3><ul><li>读写分离</li><li>复制：每个节点都有相同的数据集，向外扩展，基于二进制日志的单向复制</li></ul><h3 id="复制的功用"><a href="#复制的功用" class="headerlink" title="复制的功用"></a>复制的功用</h3><ul><li>负载均衡读操作</li><li>备份</li><li>高可用和故障切换</li><li>数据分布</li><li>MySQL升级</li></ul><h3 id="复制架构"><a href="#复制架构" class="headerlink" title="复制架构"></a>复制架构</h3><p><strong>一主一从复制架构</strong></p><p><img src="/../image.assets/1669185369127.png" alt="1669185369127"></p><p><strong>一主多从复制架构</strong></p><p><img src="/../image.assets/1669185402487.png" alt="1669185402487"></p><h3 id="主从复制原理"><a href="#主从复制原理" class="headerlink" title="主从复制原理"></a>主从复制原理</h3><p><img src="/../image.assets/1669185434299.png" alt="1669185434299"></p><h3 id="主从复制相关线程"><a href="#主从复制相关线程" class="headerlink" title="主从复制相关线程"></a>主从复制相关线程</h3><ul><li>主节点：<br>dump Thread：为每个Slave的I&#x2F;O Thread启动一个dump线程，用于向其发送binary log events</li><li>从节点：<br>I&#x2F;O Thread：向Master请求二进制日志事件，并保存于中继日志中<br>SQL Thread：从中继日志中读取日志事件，在本地完成重放</li></ul><h3 id="跟复制功能相关的文件："><a href="#跟复制功能相关的文件：" class="headerlink" title="跟复制功能相关的文件："></a>跟复制功能相关的文件：</h3><ul><li>master.info：用于保存slave连接至master时的相关信息，例如账号、密码、服务器地址等</li><li>relay-log.info：保存在当前slave节点上已经复制的当前二进制日志和本地relay log日志的对应关<br>系</li><li>mysql-relay-bin.00000#: 中继日志,保存从主节点复制过来的二进制日志,本质就是二进制日志</li></ul><p>说明:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">范例: 中继日志<br>MySQL8<span class="hljs-number">.0</span> 取消 master.<span class="hljs-keyword">info</span> 和 relay-<span class="hljs-keyword">log</span>.<span class="hljs-keyword">info</span>文件<br></code></pre></td></tr></table></figure><h3 id="实现主从复制配置"><a href="#实现主从复制配置" class="headerlink" title="实现主从复制配置"></a>实现主从复制配置</h3><p>官网参考</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">https://dev.mysql.com/doc/refman/8.0/en/replication-configuration.html<br>https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html<br>https://dev.mysql.com/doc/refman/5.5/en/replication-configuration.html<br>https://mariadb.com/kb/en/library/setting-up-replication/<br></code></pre></td></tr></table></figure><ul><li>MySQL版本：5.7.38</li><li>centos7.9</li></ul><p><strong>主节点配置</strong></p><p>（1）启用二进制日志</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">vim /etc/my.cnf<br>[mysqld]<br>log_bin<br></code></pre></td></tr></table></figure><p>(2)为当前节点设置一个全局唯一的ID号</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">[mysqld]<br>server-id=#<br>log-basename=master #可选项，设置datadir中日志名称，确保不依赖主机名<br></code></pre></td></tr></table></figure><p><strong>说明</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">server-id的取值范围<br>1 to 4294967295 (&gt;= MariaDB 10.2.2)，默认值为1，MySQL8.0默认值为1<br>0 to 4294967295 (&lt;= MariaDB 10.2.1)，默认值为0，如果从节点为0，所有master都将拒绝此<br>slave的连接<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669215296538.png" alt="1669215296538"></p><p><strong>注意：修改配置文件后重启mysql服务</strong></p><p>（3）创建有复制权限的用户账号</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">#MySQL8.0 分成两步实现<br># 创建用户<br>mysql&gt; create user test@&#x27;192.168.179.165&#x27; identified by&#x27;123456&#x27;;<br>Query OK, 0 rows affected (0.02 sec)<br><br>mysql&gt; <br># 赋予权限<br>mysql&gt; grant replication slave on *.* to test@&#x27;192.168.179.165&#x27;;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; <br><br>#其他<br>mysql&gt; GRANT REPLICATION SLAVE ON *.* TO &#x27;test&#x27;@&#x27;HOST&#x27; IDENTIFIED BY &#x27;123456&#x27;;<br></code></pre></td></tr></table></figure><p>(4)完全备份数据库</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# mysqldum -A -F --master-data=1 --single-transaction &gt; /backup/all_`date +%F`.sql<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 backup]# ll /backup/<br>total 1216<br>-rw-r--r-- 1 root root 1244691 Nov 23 23:07 all_2022-11-23.sql<br>[root@centos7 backup]# <br></code></pre></td></tr></table></figure><p><strong>从节点配置</strong></p><p>(1)修改从节点server-id,不能和主节点server-id一致</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">[mysqld]<br>server-id=2<br>#或者使用如下配置<br>[mysqld]<br>server_id=# #为当前节点设置一个全局惟的ID号<br>log-bin<br>read_only=ON #设置数据库只读，针对supper user无效<br>relay_log=relay-log #relay log的文件路径，默认值hostname-relay-bin<br>relay_log_index=relay-log.index #默认值hostname-relay-bin.index<br></code></pre></td></tr></table></figure><p>（2）使用有复制权限的用户账号连接至主服务器，并启动复制线程</p><p>从节点导入主节点完全备份的数据</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs text"># 关闭二进制日志<br>mysql&gt; set sql_log_bin=0;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br><br># 还原备份<br>mysql&gt; source all_2022-11-23.sql;<br><br># 开启二进制日志<br>mysql&gt; set sql_log_bin=1;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br># 开启线程<br>mysql&gt; start slave;<br>Query OK, 0 rows affected, 1 warning (0.03 sec)<br><br>mysql&gt; <br><br></code></pre></td></tr></table></figure><p>mysql客户端命令行执行如下内容</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.179.170&#x27;, MASTER_USER=&#x27;test&#x27;,MASTER_PASSWORD=&#x27;123456&#x27;,MASTER_LOG_FILE=&#x27;mysql-bin.000007&#x27;, MASTER_LOG_POS=154;<br></code></pre></td></tr></table></figure><p>MASTER_LOG_FILE&#x3D;’mysql-bin.000007’, MASTER_LOG_POS&#x3D;154;的值可以从备份sql文件中找到，如图所示：</p><p><img src="/../image.assets/1669262500961.png" alt="1669262500961"></p><p>最后启动复制线程</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">start slave<br></code></pre></td></tr></table></figure><p>扩展：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">show slave status\G  # 查看相关状态信息<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669262596413.png" alt="1669262596413"></p><p>从节点更换主节点</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&gt;mysql stop slave;  #停止复制线程<br><br>&gt;mysql reset slave all;   # 清除信息 <br><br>再次使用有复制权限的用户账号连接至主服务器，并启动复制线程<br></code></pre></td></tr></table></figure><h3 id="级联复制"><a href="#级联复制" class="headerlink" title="级联复制"></a>级联复制</h3><p>案例：三台主机实现级联复制</p><p><img src="/../image.assets/1669306551265.png" alt="1669306551265"></p><p><strong>步骤</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># 192.168.179.170充当master</span><br><span class="hljs-meta"># 192.168.179.171充当slave1</span><br><span class="hljs-meta"># 192.168.179.157充当slave2</span><br><span class="hljs-meta"># 操作系统：centos7.9</span><br><span class="hljs-meta">#MySQL版本：5.7.38</span><br></code></pre></td></tr></table></figure><p><strong>在master上实现，即192.168.179.170</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text"># 在master上实现，即192.168.179.170<br>vim /etc/my.cnf<br>[mysqld]<br>server-id=170<br>log-bin=/data/mysql/mysql-bin<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669342445575.png" alt="1669342445575"></p><p><strong>重启服务</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# systemctl restart mysql<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>创建具有复制权限的账号</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">replication</span> slave <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;test&#x27;</span>@<span class="hljs-string">&#x27;192.168.179.%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected, <span class="hljs-number">1</span> <span class="hljs-built_in">warning</span> (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><p><strong>完全备份</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">[root@centos7 ~]# mysqldump  -uroot -p123456 -A -F --single-transaction --master-data=1 &gt; /data/all.sql;<br><br>[root@centos7 ~]# scp /data/all.sql root@192.168.179.171:/data<br>[root@centos7 ~]# scp /data/all.sql root@192.168.179.157:/data<br></code></pre></td></tr></table></figure><p><strong>在中间级联实现</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs text">#在中间级联实现,即192.168.179.171<br>#修改配置文件<br>vim /etc/my.cnf<br>[mysqld]<br>server-id=171<br>log-bin=/data/mysql/slave1-bin<br>read-only<br>log_slave_updates #级联复制中间节点的必选项,MySQL8.0此为默认值,可以不要人为添加<br><br>#重启mysql<br>service mysqld restart或者systemctl restart mysql<br><br># 还原数据库<br>vim /data/all.sql<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669343598599.png" alt="1669343598599"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs text">mysql&gt; set sql_log_bin=0;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br>mysql&gt; source /data/all.sql;<br><br>mysql&gt; show master logs;<br>+-------------------+-----------+<br>| Log_name          | File_size |<br>+-------------------+-----------+<br>| slave1-bin.000001 |       801 |<br>| slave1-bin.000002 |       458 |<br>+-------------------+-----------+<br>2 rows in set (0.01 sec)<br><br>mysql&gt; <br><br><br>mysql&gt; set sql_log_bin=1;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br><br>mysql&gt; start slave;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; <br><br></code></pre></td></tr></table></figure><p><strong>在第三个节点slave上实现</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/my</span>.cnf<br>[mysqld]<br>server-id=<span class="hljs-number">157</span><br>log-bin=<span class="hljs-regexp">/data/my</span>sql/slave2-bin<br><br><span class="hljs-comment"># 还原数据库</span><br>vim <span class="hljs-regexp">/data/</span>all.sql<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669346692481.png" alt="1669346692481"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mysql&gt; <span class="hljs-built_in">set</span> <span class="hljs-attribute">sql_log_bin</span>=0;<br>mysql&gt; source /data/all.sql<br>mysql&gt; <span class="hljs-built_in">set</span> <span class="hljs-attribute">sql_log_bin</span>=1;<br>mysql&gt; start slave;<br></code></pre></td></tr></table></figure><h3 id="半同步复制"><a href="#半同步复制" class="headerlink" title="半同步复制"></a>半同步复制</h3><p><img src="/../image.assets/1669367459560.png" alt="1669367459560"></p><p>范例：centos7.9在MySQL5.7.38实现半同步复制</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 主服务器配置，安装semisync_slave.so插件</span><br>mysql&gt; INSTALL PLUGIN rpl_semi_sync_master SONAME <span class="hljs-string">&#x27;semisync_master.so&#x27;</span>;<br>Query OK, 0 rows affected (0.05 sec)<br><br>mysql&gt; <br><span class="hljs-comment"># 修改配置文件</span><br>vim /etc/my.cnf<br><span class="hljs-attribute">rpl_semi_sync_master_enabled</span>=ON <br><span class="hljs-comment">#修改此行,需要先安装semisync_master.so插件后,再重启,否则无法启动</span><br><span class="hljs-attribute">rpl_semi_sync_master_timeout</span>=3000 <br><span class="hljs-comment">#设置3s内无法同步，也将返回成功信息给客户端 </span><br><br><span class="hljs-comment"># 重启服务</span><br>systemctl restart mysql<br><br><span class="hljs-comment">#slave服务器配置</span><br><span class="hljs-comment">#安装semisync_slave.so插件</span><br>mysql&gt; INSTALL PLUGIN rpl_semi_sync_master SONAME <span class="hljs-string">&#x27;semisync_master.so&#x27;</span>;<br>Query OK, 0 rows affected (0.05 sec)<br><br><span class="hljs-comment">#注意:如果已经实现主从复制,需要stop slave;start slave;</span><br>mysql&gt; stop slave;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; start slave<br>    -&gt; ;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br><br><span class="hljs-comment"># 重启mysql服务</span><br>systemctl restart mysql<br><br><span class="hljs-comment"># 修改配置文件</span><br>vim /etc/my.cnf<br><span class="hljs-attribute">rpl_semi_sync_slave_enabled</span>=ON<br><br><span class="hljs-comment"># 重启mysql服务</span><br>systemctl restart mysql<br></code></pre></td></tr></table></figure><p>测试半同步</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 停止从库slave1</span><br>[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta"># systemctl stop mysql</span><br><span class="hljs-meta"># 主库创建表</span><br>mysql&gt; create database hellodb<span class="hljs-comment">;</span><br>Query OK, <span class="hljs-number">1</span> row affected (<span class="hljs-number">3.00</span> sec)<br><br>mysql&gt; <br><span class="hljs-meta"># 设置的是三秒内无法同步返回成功，所以看到是3S后返回成功</span><br><br></code></pre></td></tr></table></figure><h3 id="实战案例：利用Mycat实现MySQL的读写分离"><a href="#实战案例：利用Mycat实现MySQL的读写分离" class="headerlink" title="实战案例：利用Mycat实现MySQL的读写分离"></a>实战案例：利用Mycat实现MySQL的读写分离</h3><p><img src="/../image.assets/1669456007835.png" alt="1669456007835"></p><p><strong>所有主机系统环境</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">centos7</span>.<span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><p><strong>服务器三台</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mycat</span>-server <span class="hljs-number">192.168.179.157</span> #内存建议<span class="hljs-number">2</span>G以上<br><span class="hljs-attribute">mysql</span>-master <span class="hljs-number">192.168.179.170</span> MySQL <span class="hljs-number">5</span>.<span class="hljs-number">7</span><br><span class="hljs-attribute">mysql</span>-slave  <span class="hljs-number">192.168.179.171</span> MySQL <span class="hljs-number">5</span>.<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p><strong>关闭SELinux和防火墙</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">systemctl stop firewalld<br>setenforce <span class="hljs-number">0</span><br>时间同步<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669455589146.png" alt="1669455589146"></p><p><strong>注意：主从复制的过程省略，参考实现主从复制过程</strong></p><p><strong>代理服务器上安装Mycat</strong></p><p>下载地址:<a href="https://github.com/MyCATApache/Mycat-Server/releases/tag/Mycat-server-1.6.7.4-release">https://github.com/MyCATApache/Mycat-Server/releases/tag/Mycat-server-1.6.7.4-release</a></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># 安装jdk</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># yum install -y java</span><br><br><span class="hljs-comment"># 验证</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># java -version</span><br>openjdk version <span class="hljs-string">&quot;1.8.0_352&quot;</span><br>OpenJDK Runtime Environment (build 1.8.0_352-b08)<br>OpenJDK 64-Bit Server VM (build 25.352-b08, mixed mode)<br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># </span><br><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># mkdir /apps</span><br><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># tar xf Mycat-server-1.6.7.4-release-20200105164103-linux.tar.gz -C /apps/</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># </span><br><br><span class="hljs-comment">#配置环境变量</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># echo &#x27;PATH=/apps/mycat/bin:$PATH&#x27; &gt; /etc/profile.d/mycat.sh</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># source /etc/profile.d/mycat.sh</span><br><br><span class="hljs-comment">#注意: 此步启动较慢,需要等一会儿,另外如果内存太小,会导致无法启动</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># mycat start</span><br>Starting Mycat-server...<br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 查看日志是否启动成功</span><br>[root<span class="hljs-meta">@centos7</span> ~]<span class="hljs-comment"># tail -f /apps/mycat/logs/wrapper.log </span><br>STATUS |<span class="hljs-string"> wrapper  </span>|<span class="hljs-string"> 2022/11/26 23:27:52 </span>|<span class="hljs-string"> --&gt; Wrapper Started as Daemon</span><br><span class="hljs-string">STATUS </span>|<span class="hljs-string"> wrapper  </span>|<span class="hljs-string"> 2022/11/26 23:27:52 </span>|<span class="hljs-string"> Launching a JVM...</span><br><span class="hljs-string">INFO   </span>|<span class="hljs-string"> jvm 1    </span>|<span class="hljs-string"> 2022/11/26 23:28:08 </span>|<span class="hljs-string"> Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org</span><br><span class="hljs-string">INFO   </span>|<span class="hljs-string"> jvm 1    </span>|<span class="hljs-string"> 2022/11/26 23:28:08 </span>|<span class="hljs-string">   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.</span><br><span class="hljs-string">INFO   </span>|<span class="hljs-string"> jvm 1    </span>|<span class="hljs-string"> 2022/11/26 23:28:08 </span>|<span class="hljs-string"> </span><br><span class="hljs-string">INFO   </span>|<span class="hljs-string"> jvm 1    </span>|<span class="hljs-string"> 2022/11/26 23:28:10 </span>|<span class="hljs-string"> MyCAT Server startup successfully. see logs in logs/mycat.log</span><br><span class="hljs-string"></span><br><span class="hljs-string">#用默认密码123456来连接mycat</span><br><span class="hljs-string">[root@centos7 ~]# mysql -uroot -p123456 -h 192.168.179.157 -P8066</span><br><span class="hljs-string">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="hljs-string">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="hljs-string">Your MySQL connection id is 1</span><br><span class="hljs-string">Server version: 5.6.29-mycat-1.6.7.4-release-20200105164103 MyCat Server (OpenCloudDB)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Copyright (c) 2000, 2022, Oracle and/or its affiliates.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="hljs-string">affiliates. Other names may be trademarks of their respective</span><br><span class="hljs-string">owners.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="hljs-string"></span><br><span class="hljs-string">mysql&gt; show databases;</span><br><span class="hljs-string">+----------+</span><br><span class="hljs-string"></span>|<span class="hljs-string"> DATABASE </span>|<br>+----------+<br>|<span class="hljs-string"> TESTDB   </span>|<br>+----------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; <br><br><span class="hljs-comment"># 在主节点上创建账号用于mycat数据读写分离</span><br>mysql&gt;create user admin<span class="hljs-meta">@&#x27;192.168.179.%&#x27;</span> identified by&#x27;123456&#x27;;<br><br><span class="hljs-comment"># 赋予权限</span><br>mysql&gt; grant all on <span class="hljs-symbol">*</span>.<span class="hljs-symbol">*</span> to &#x27;admin&#x27;<span class="hljs-meta">@&#x27;192.168.179.%&#x27;</span> IDENTIFIED BY &#x27;123456&#x27;;<br>Query OK, 0 rows affected, 1 warning (0.01 sec)<br><br><span class="hljs-comment"># 刷新</span><br><span class="hljs-comment"># mysql&gt; flush privileges;</span><br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; <br><br></code></pre></td></tr></table></figure><p><strong>修改schema.xml实现读写分离策略</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mycat</span>:schema <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;schema.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mycat:schema</span> <span class="hljs-attr">xmlns:mycat</span>=<span class="hljs-string">&quot;http://io.mycat/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">schema</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TESTDB&quot;</span> <span class="hljs-attr">checkSQLschema</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">sqlMaxLimit</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">dataNode</span>=<span class="hljs-string">&quot;dn1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">schema</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dataNode</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dn1&quot;</span> <span class="hljs-attr">dataHost</span>=<span class="hljs-string">&quot;localhost1&quot;</span> <span class="hljs-attr">database</span>=<span class="hljs-string">&quot;reggie&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dataHost</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;localhost1&quot;</span> <span class="hljs-attr">maxCon</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">minCon</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">balance</span>=<span class="hljs-string">&quot;1&quot;</span></span><br><span class="hljs-tag">              <span class="hljs-attr">writeType</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">dbType</span>=<span class="hljs-string">&quot;mysql&quot;</span> <span class="hljs-attr">dbDriver</span>=<span class="hljs-string">&quot;native&quot;</span> <span class="hljs-attr">switchType</span>=<span class="hljs-string">&quot;1&quot;</span>  <span class="hljs-attr">slaveThreshold</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">heartbeat</span>&gt;</span>select user()<span class="hljs-tag">&lt;/<span class="hljs-name">heartbeat</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">writeHost</span> <span class="hljs-attr">host</span>=<span class="hljs-string">&quot;host1&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;192.168.179.170:3306&quot;</span> <span class="hljs-attr">user</span>=<span class="hljs-string">&quot;admin&quot;</span></span><br><span class="hljs-tag">                   <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;123456&quot;</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">readHost</span> <span class="hljs-attr">host</span>=<span class="hljs-string">&quot;host2&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;192.168.179.171:3306&quot;</span> <span class="hljs-attr">user</span>=<span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;123456&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">writeHost</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dataHost</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mycat:schema</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1669482336285.png" alt="1669482336285"></p><p>重启mycat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 ~]# mycat restart<br>Stopping Mycat-server...<br>Stopped Mycat-server.<br>Starting Mycat-server...<br></code></pre></td></tr></table></figure><p>在Mycat服务器上连接并测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# mysql -uroot -p123456 -h 192.168.179.157 -P8066<br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show databases;</span><br>+----------+<br>| DATABASE |<br>+----------+<br>| TESTDB   |   //只能看一个虚拟数据库,数据库内容映射的是reggie内容<br>+----------+<br>1 row in set (0.00 sec)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"></span><br><span class="language-bash"></span><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">use TESTDB;</span><br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show tables;</span><br>+------------------+<br>| Tables_in_reggie |<br>+------------------+<br>| address_book     |<br>| category         |<br>| dish             |<br>| dish_flavor      |<br>| employee         |<br>| order_detail     |<br>| orders           |<br>| setmeal          |<br>| setmeal_dish     |<br>| shopping_cart    |<br>| user             |<br>+------------------+<br>11 rows in set (0.01 sec)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">mysql&gt; </span><br></code></pre></td></tr></table></figure><h3 id="MHA实战案例"><a href="#MHA实战案例" class="headerlink" title="MHA实战案例"></a>MHA实战案例</h3><p><img src="/../image.assets/1669541563329.png" alt="1669541563329"></p><p><strong>主从复制搭建过程省略</strong></p><p><strong>在所有MySQL服务器上安装mha4mysql-node包</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">下载地址<br>mha4mysql-manager<br>mha4mysql-node<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载</span><br>https://github.com/yoshinorim/mha4mysql-manager/wiki/Downloads<br>https://github.com/yoshinorim/mha4mysql-node/releases/tag/v0.58<br>https://github.com/yoshinorim/mha4mysql-node/releases/tag/v0.58<br><br>yum -y install mha4mysql-node-0.58-0.el7.centos.noarch.rpm<br></code></pre></td></tr></table></figure><p><strong>在管理节点上安装两个包mha4mysql-manager和mha4mysql-node</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@mha-manager ~]#yum -y install mha4mysql-manager-0.58-<br>0.el7.centos.noarch.rpm<br>[root@mha-manager ~]#yum -y install mha4mysql-node-0.58-0.el7.centos.noarch.rpm<br></code></pre></td></tr></table></figure><p><strong>在所有节点实现相互之间ssh key验证</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta"># ssh-keygen </span><br>[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta"># ssh-copy-id 127.0.0.1</span><br>[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta"># scp -r .ssh 192.168.179.170:/root/</span><br>[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta"># scp -r .ssh 192.168.179.171:/root/</span><br>[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta"># scp -r .ssh 192.168.179.157:/root/</span><br></code></pre></td></tr></table></figure><p><strong>在管理节点创建配置文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@centos7 ~]<span class="hljs-comment"># mkdir /etc//mastermha/</span><br>[root@centos7 ~]<span class="hljs-comment"># vim app1.cnf</span><br><span class="hljs-comment"># 文件内容</span><br>[server default]<br>user=mhauser <span class="hljs-comment">#用于远程连接MySQL所有节点的用户,需要有管理员的权限</span><br>password=<span class="hljs-number">123456</span><br>manager_workdir=<span class="hljs-regexp">/data/m</span>astermha<span class="hljs-regexp">/app1/</span> <span class="hljs-comment">#目录会自动生成,无需手动创建</span><br>manager_log=<span class="hljs-regexp">/data/m</span>astermha<span class="hljs-regexp">/app1/m</span>anager.log<br>remote_workdir=<span class="hljs-regexp">/data/m</span>astermha<span class="hljs-regexp">/app1/</span><br>ssh_user=root <span class="hljs-comment">#用于实现远程ssh基于KEY的连接,访问二进制日志</span><br>repl_user=test <span class="hljs-comment">#主从复制的用户信息</span><br>repl_password=<span class="hljs-number">123456</span><br>ping_interval=<span class="hljs-number">1</span> <span class="hljs-comment">#健康性检查的时间间隔</span><br>master_ip_failover_script=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/m</span>aster_ip_failover <span class="hljs-comment">#切换VIP的perl脚本,不</span><br>支持跨网络,也可用Keepalived实现<br>report_script=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>sendmail.sh <span class="hljs-comment">#当执行报警脚本</span><br>check_repl_delay=<span class="hljs-number">0</span> <span class="hljs-comment">#默认值为1,表示如果slave中从库落后主库relay log超过100M，主库不会选</span><br>择这个从库为新的master，因为这个从库进行恢复需要很长的时间.通过设置参数check_repl_delay=<span class="hljs-number">0</span>，<br>mha触发主从切换时会忽略复制的延时，对于设置candidate_master=<span class="hljs-number">1</span>的从库非常有用，这样确保这个从库<br>一定能成为最新的master<br>master_binlog_dir=<span class="hljs-regexp">/data/my</span>sql/ <span class="hljs-comment">#指定二进制日志存放的目录,mha4mysql-manager-0.58必须指</span><br>定,之前版本不需要指定<br>[server1]<br>hostname=<span class="hljs-number">192.168</span>.<span class="hljs-number">179.170</span><br>port=<span class="hljs-number">3306</span><br>candidate_master=<span class="hljs-number">1</span><br>[server2]<br>hostname=<span class="hljs-number">192.168</span>.<span class="hljs-number">179.171</span><br>port=<span class="hljs-number">3306</span><br>candidate_master=<span class="hljs-number">1</span> <span class="hljs-comment">#设置为优先候选master，即使不是集群中事件最新的slave,也会优先当</span><br>master<br>[server3]<br>hostname=<span class="hljs-number">192.168</span>.<span class="hljs-number">179.157</span><br>port=<span class="hljs-number">3306</span><br></code></pre></td></tr></table></figure><p>最终文件内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[server default]</span><br><span class="hljs-attr">user</span>=mhauser<br><span class="hljs-attr">password</span>=<span class="hljs-number">123456</span><br><span class="hljs-attr">manager_workdir</span>=/data/mastermha/app1/<br><span class="hljs-attr">manager_log</span>=/data/mastermha/app1/manager.log<br><span class="hljs-attr">remote_workdir</span>=/data/mastermha/app1/<br><span class="hljs-attr">ssh_user</span>=root<br><span class="hljs-attr">repl_user</span>=test<br><span class="hljs-attr">repl_password</span>=<span class="hljs-number">123456</span><br><span class="hljs-attr">ping_interval</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">master_ip_failover_script</span>=/usr/local/bin/master_ip_failover<br><span class="hljs-attr">report_script</span>=/usr/local/bin/sendmail.sh <span class="hljs-comment"># 发送邮件脚本</span><br><span class="hljs-attr">check_repl_delay</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">master_binlog_dir</span>=/data/mysql/<br><br><span class="hljs-section">[server1]</span><br><span class="hljs-attr">hostname</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">179.170</span><br><span class="hljs-attr">candidate_master</span>=<span class="hljs-number">1</span><br><span class="hljs-section">[server2]</span><br><span class="hljs-attr">hostname</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">179.171</span><br><span class="hljs-section">[server3]</span><br><span class="hljs-attr">hostname</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">179.157</span><br></code></pre></td></tr></table></figure><p>主节点创建账号user&#x3D;mhauser #用于远程连接MySQL所有节点的用户,需要有管理员的权限<br>password&#x3D;123456</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; create user mhauser@&#x27;<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">179</span>.%&#x27; identified by &#x27;<span class="hljs-number">123456</span>&#x27;;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">05</span> sec)<br><br><span class="hljs-attribute">mysql</span>&gt; <br><br><span class="hljs-attribute">mysql</span>&gt; grant <span class="hljs-literal">all</span> <span class="hljs-literal">on</span> *.* to mhauser@&#x27;<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">179</span>.%&#x27;;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">00</span> sec)<br><br><span class="hljs-attribute">mysql</span>&gt; <br></code></pre></td></tr></table></figure><p>master_ip_failover_script&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover文件内容</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!/usr/bin/env perl</span><br><br><span class="hljs-comment">#  Copyright (C) 2011 DeNA Co.,Ltd.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  This program is free software; you can redistribute it and/or modify</span><br><span class="hljs-comment">#  it under the terms of the GNU General Public License as published by</span><br><span class="hljs-comment">#  the Free Software Foundation; either version 2 of the License, or</span><br><span class="hljs-comment">#  (at your option) any later version.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  This program is distributed in the hope that it will be useful,</span><br><span class="hljs-comment">#  but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="hljs-comment">#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="hljs-comment">#  GNU General Public License for more details.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  You should have received a copy of the GNU General Public License</span><br><span class="hljs-comment">#   along with this program; if not, write to the Free Software</span><br><span class="hljs-comment">#  Foundation, Inc.,</span><br><span class="hljs-comment">#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA</span><br><br><span class="hljs-comment">## Note: This is a sample script and is not complete. Modify the script based on your environment.</span><br><br><span class="hljs-keyword">use</span> strict;<br><span class="hljs-keyword">use</span> warnings <span class="hljs-string">FATAL =&gt;</span> <span class="hljs-string">&#x27;all&#x27;</span>;<br><br><span class="hljs-keyword">use</span> Getopt::Long;<br><span class="hljs-keyword">use</span> MHA::DBHelper;<br><br><span class="hljs-keyword">my</span> (<br>  $command,        $ssh_user,         $orig_master_host,<br>  $orig_master_ip, $orig_master_port, $new_master_host,<br>  $new_master_ip,  $new_master_port,  $new_master_user,<br>  $new_master_password<br>);<br><span class="hljs-keyword">my</span> $vip = <span class="hljs-string">&#x27;192.168.179.157/24&#x27;</span>;<br><span class="hljs-keyword">my</span> $key = <span class="hljs-string">&quot;1&quot;</span>;<br><span class="hljs-keyword">my</span> $ssh_start_vip = <span class="hljs-string">&quot;/sbin/ifconfig eth0:$key $vip&quot;</span>;<br><span class="hljs-keyword">my</span> $ssh_stop_vip = <span class="hljs-string">&quot;/sbin/ifconfig eth0:$key down&quot;</span>;<br><br>GetOptions(<br>  <span class="hljs-string">&#x27;command=s&#x27;</span>             =&gt; \$command,<br>  <span class="hljs-string">&#x27;ssh_user=s&#x27;</span>            =&gt; \$ssh_user,<br>  <span class="hljs-string">&#x27;orig_master_host=s&#x27;</span>    =&gt; \$orig_master_host,<br>  <span class="hljs-string">&#x27;orig_master_ip=s&#x27;</span>      =&gt; \$orig_master_ip,<br>  <span class="hljs-string">&#x27;orig_master_port=i&#x27;</span>    =&gt; \$orig_master_port,<br>  <span class="hljs-string">&#x27;new_master_host=s&#x27;</span>     =&gt; \$new_master_host,<br>  <span class="hljs-string">&#x27;new_master_ip=s&#x27;</span>       =&gt; \$new_master_ip,<br>  <span class="hljs-string">&#x27;new_master_port=i&#x27;</span>     =&gt; \$new_master_port,<br>  <span class="hljs-string">&#x27;new_master_user=s&#x27;</span>     =&gt; \$new_master_user,<br>  <span class="hljs-string">&#x27;new_master_password=s&#x27;</span> =&gt; \$new_master_password,<br>);<br><br><span class="hljs-keyword">exit</span> &amp;main();<br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">main</span> </span>&#123;<br>  <span class="hljs-keyword">if</span> ( $command eq <span class="hljs-string">&quot;stop&quot;</span> || $command eq <span class="hljs-string">&quot;stopssh&quot;</span> ) &#123;<br><br>    <span class="hljs-comment"># $orig_master_host, $orig_master_ip, $orig_master_port are passed.</span><br>    <span class="hljs-comment"># If you manage master ip address at global catalog database,</span><br>    <span class="hljs-comment"># invalidate orig_master_ip here.</span><br>    <span class="hljs-keyword">my</span> $exit_code = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">eval</span> &#123;<br><br>      <span class="hljs-comment"># updating global catalog, etc</span><br>      $exit_code = <span class="hljs-number">0</span>;<br>    &#125;;<br>    <span class="hljs-keyword">if</span> ($@) &#123;<br>      <span class="hljs-keyword">warn</span> <span class="hljs-string">&quot;Got Error: $@\n&quot;</span>;<br>      <span class="hljs-keyword">exit</span> $exit_code;<br>    &#125;<br>    <span class="hljs-keyword">exit</span> $exit_code;<br>  &#125;<br>    <span class="hljs-keyword">elsif</span> ( $command eq <span class="hljs-string">&quot;start&quot;</span> ) &#123;<br><br>        <span class="hljs-comment"># all arguments are passed.</span><br>        <span class="hljs-comment"># If you manage master ip address at global catalog database,</span><br>        <span class="hljs-comment"># activate new_master_ip here.</span><br>        <span class="hljs-comment"># You can also grant write access (create user, set read_only=0, etc) here.</span><br>        <span class="hljs-keyword">my</span> $exit_code = <span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">eval</span> &#123;<br>            <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Enabling the VIP - $vip on the new master - $new_master_host \n&quot;</span>;<br>            &amp;start_vip();<br>            &amp;stop_vip();<br>            $exit_code = <span class="hljs-number">0</span>;<br>        &#125;;<br>        <span class="hljs-keyword">if</span> ($@) &#123;<br>            <span class="hljs-keyword">warn</span> $@;<br>            <span class="hljs-keyword">exit</span> $exit_code;<br>        &#125;<br>        <span class="hljs-keyword">exit</span> $exit_code;<br>    &#125;<br>    <span class="hljs-keyword">elsif</span> ( $command eq <span class="hljs-string">&quot;status&quot;</span> ) &#123;<br>        <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Checking the Status of the script.. OK \n&quot;</span>;<br>        <span class="hljs-string">`ssh $ssh_user\@$orig_master_host \&quot; $ssh_start_vip \&quot;`</span>;<br>        <span class="hljs-keyword">exit</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        &amp;usage();<br>        <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">start_vip</span>() </span>&#123;<br>    <span class="hljs-string">`ssh $ssh_user\@$new_master_host \&quot; $ssh_start_vip \&quot;`</span>;<br>&#125;<br><span class="hljs-comment"># A simple system call that disable the VIP on the old_master </span><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">stop_vip</span>() </span>&#123;<br>   <span class="hljs-string">`ssh $ssh_user\@$orig_master_host \&quot; $ssh_stop_vip \&quot;`</span>;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">usage</span> </span>&#123;<br>  <span class="hljs-keyword">print</span><br><span class="hljs-string">&quot;Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>master修改mysql配置文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">server_id</span>=<span class="hljs-number">170</span><br><span class="hljs-attr">log-bin</span>=/data/mysql/mysql-bin<br><span class="hljs-attr">skip_name_resolve</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>slave节点上修改</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[mysqld]<br><span class="hljs-attribute">server_id</span>=171 #不同节点此值各不相同<br><span class="hljs-attribute">log-bin</span>=/data/mysql/mysql-bin<br>read_only<br><span class="hljs-attribute">relay_log_purge</span>=0<br><span class="hljs-attribute">skip_name_resolve</span>=1<br></code></pre></td></tr></table></figure><p>检查环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs \">masterha_check_ssh --conf=/etc/mastermha/app1.cnf<br># 范例<br>[root@centos7 ~]# masterha_check_ssh --conf=/etc/mastermha/app1.cnf<br>Tue Nov 29 22:21:44 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.<br>Tue Nov 29 22:21:44 2022 - [info] Reading application default configuration from /etc/mastermha/app1.cnf..<br>Tue Nov 29 22:21:44 2022 - [info] Reading server configuration from /etc/mastermha/app1.cnf..<br>Tue Nov 29 22:21:44 2022 - [info] Starting SSH connection tests..<br>Tue Nov 29 22:21:45 2022 - [debug] <br>Tue Nov 29 22:21:44 2022 - [debug]  Connecting via SSH from root@192.168.179.170(192.168.179.170:22) to root@192.168.179.171(192.168.179.171:22)..<br>Tue Nov 29 22:21:44 2022 - [debug]   ok.<br>Tue Nov 29 22:21:44 2022 - [debug]  Connecting via SSH from root@192.168.179.170(192.168.179.170:22) to root@192.168.179.157(192.168.179.157:22)..<br>Tue Nov 29 22:21:45 2022 - [debug]   ok.<br>Tue Nov 29 22:21:46 2022 - [debug] <br>Tue Nov 29 22:21:45 2022 - [debug]  Connecting via SSH from root@192.168.179.171(192.168.179.171:22) to root@192.168.179.170(192.168.179.170:22)..<br>Tue Nov 29 22:21:45 2022 - [debug]   ok.<br>Tue Nov 29 22:21:45 2022 - [debug]  Connecting via SSH from root@192.168.179.171(192.168.179.171:22) to root@192.168.179.157(192.168.179.157:22)..<br>Tue Nov 29 22:21:45 2022 - [debug]   ok.<br>Tue Nov 29 22:21:47 2022 - [debug] <br>Tue Nov 29 22:21:45 2022 - [debug]  Connecting via SSH from root@192.168.179.157(192.168.179.157:22) to root@192.168.179.170(192.168.179.170:22)..<br>Tue Nov 29 22:21:45 2022 - [debug]   ok.<br>Tue Nov 29 22:21:45 2022 - [debug]  Connecting via SSH from root@192.168.179.157(192.168.179.157:22) to root@192.168.179.171(192.168.179.171:22)..<br>Tue Nov 29 22:21:46 2022 - [debug]   ok.<br>Tue Nov 29 22:21:47 2022 - [info] All SSH connection tests passed successfully.<br>[root@centos7 ~]# <br><br>masterha_check_repl --conf=/etc/mastermha/app1.cnf<br># 范例<br>[root@centos7 ~]# masterha_check_repl --conf=/etc/mastermha/app1.cnf<br>......<br>......<br>ter_host=192.168.179.170 --orig_master_ip=192.168.179.170 --orig_master_port=3306 <br>Checking the Status of the script.. OK <br>bash: /sbin/ifconfig: No such file or directory<br>Tue Nov 29 22:45:13 2022 - [info]  OK.<br>Tue Nov 29 22:45:13 2022 - [warning] shutdown_script is not defined.<br>Tue Nov 29 22:45:13 2022 - [info] Got exit code 0 (Not master dead).<br><br>MySQL Replication Health is OK.<br><br></code></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">masterha_check_status <span class="hljs-attr">--conf</span>=/etc/mastermha/app1<span class="hljs-selector-class">.cnf</span><br>app1 is <span class="hljs-built_in">stopped</span>(<span class="hljs-number">2</span>:NOT_RUNNING).<br></code></pre></td></tr></table></figure><p>启动和停止mha</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 后台运行</span><br>nohup masterha_manager --conf=<span class="hljs-regexp">/etc/m</span>astermha/app1.cnf --remove_dead_master_conf<br>--ignore_last_failover &amp;&gt; <span class="hljs-regexp">/dev/</span>null<br><span class="hljs-comment"># 前台运行</span><br>masterha_manager --conf=<span class="hljs-regexp">/etc/m</span>astermha/app1.cnf --<br>remove_dead_master_conf --ignore_last_failover<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment">#如果想停止后台执行的MHA,可以执行下面命令</span><br>[root@mha-<span class="hljs-keyword">master</span> <span class="hljs-title">~]#masterha_stop</span> --<span class="hljs-attr">conf=</span>/etc/mastermha/app1.cnf<br><span class="hljs-literal">Stopped</span> app1 successfully.<br></code></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[root@centos7 app1]<span class="hljs-comment"># masterha_check_status --conf=/etc/mastermha/app1.cnf</span><br>app1 (pid:<span class="hljs-number">48280</span>) <span class="hljs-keyword">is</span> <span class="hljs-built_in">running</span>(<span class="hljs-number">0</span>:PING_OK), master:<span class="hljs-number">192.168</span><span class="hljs-number">.179</span><span class="hljs-number">.170</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL备份和恢复</title>
    <link href="/2022/11/21/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/11/21/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="实战案例：特定数据库的备份脚本"><a href="#实战案例：特定数据库的备份脚本" class="headerlink" title="实战案例：特定数据库的备份脚本"></a>实战案例：特定数据库的备份脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>TIME=`date +%F_%H-%M-%S`<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份目录</span><br>DIR=/mysql_backup<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份数据库</span><br>DB=hellodb<br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据库密码</span><br>PASSWD=123456<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">判断备份数据库目录是否存在</span><br>[ -d $DIR ] || mkdir $DIR<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份</span><br>mysqldump -uroot -p&quot;$PASSWD&quot; -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B $DB | gzip &gt; $&#123;DIR&#125;/$&#123;DB&#125;_$&#123;TIME&#125;.sql.gz<br></code></pre></td></tr></table></figure><h1 id="实战案例：分库备份的实战脚本"><a href="#实战案例：分库备份的实战脚本" class="headerlink" title="实战案例：分库备份的实战脚本"></a>实战案例：分库备份的实战脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>TIME=`<span class="hljs-built_in">date</span> +%F_%H-%M-%S`<br>DIR=/backup<br>PASS=123456<br>[ -d <span class="hljs-string">&quot;<span class="hljs-variable">$DIR</span>&quot;</span> ] || <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$DIR</span><br><span class="hljs-keyword">for</span> DB <span class="hljs-keyword">in</span> `mysql -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -e <span class="hljs-string">&#x27;show databases&#x27;</span> | grep -Ev <span class="hljs-string">&quot;^Database|.*schema$&quot;</span>`;<span class="hljs-keyword">do</span><br>    mysqldump -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -F --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B <span class="hljs-variable">$DB</span> | gzip &gt; <span class="hljs-variable">$&#123;DIR&#125;</span>/<span class="hljs-variable">$&#123;DB&#125;</span>_<span class="hljs-variable">$&#123;TIME&#125;</span>.sql.gz<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP超文本传输协议</title>
    <link href="/2022/10/15/http/"/>
    <url>/2022/10/15/http/</url>
    
    <content type="html"><![CDATA[<h1 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h1><table><thead><tr><th>名称</th><th>协议</th></tr></thead><tbody><tr><td>7 应用层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>6 表示层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>5 会话层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>4 传输层</td><td>tcp、udp</td></tr><tr><td>3 网络层</td><td>IPV4、IPV6、ARP</td></tr><tr><td>2 数据链路层</td><td>以太网、无线LAN</td></tr><tr><td>1 物理层</td><td>光纤</td></tr></tbody></table><h1 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h1><p>http协议：超文本传输协议，基于TCP协议的应用层传输协议，一种 无状态的、以请求&#x2F;应答方式的运行的协议（无状态：对于事物处理没有记忆功能）</p><h1 id="主要组成"><a href="#主要组成" class="headerlink" title="主要组成"></a>主要组成</h1><p>http协议主要有三大部分组成</p><ul><li>起始行：描述请求或相应的文本</li><li>头部字段：使用key-value形式更加详细说明报文</li><li>消息正文：实际传输的数据，可以是文本、图片、视频等</li></ul><h1 id="http请求报文"><a href="#http请求报文" class="headerlink" title="http请求报文"></a>http请求报文</h1><ul><li>请求行</li><li>请求头</li><li>请求体</li></ul><h1 id="http响应报文"><a href="#http响应报文" class="headerlink" title="http响应报文"></a>http响应报文</h1><ul><li>响应行</li><li>响应头</li><li>响应体</li></ul><h1 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h1><p>tcp&#x2F;ip协议：面向连接的、可靠的基于字节流的传输层协议。</p><p><strong>特点</strong></p><p>基于连接的：数据传输前需要建立连接</p><p>全双工：双向传输</p><p>字节流：不限制传输大小</p><p>流量缓冲：解决双方处理能力的不匹配</p><p>可靠的传输服务：保证可达、信息丢包时通过重发机制实施可靠性</p><p>拥塞控制：防止网络出现恶性拥塞</p><p><strong>三次握手</strong></p><p> <img src="/../image.assets/20180808105159546.png" alt="alt"> </p><p>刚开始客户端处于 closed 的状态，服务端处于 listen 状态。然后<br>1、第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN（c）。此时客户端处于 SYN_Send 状态。</p><p>2、第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)，同时会把客户端的 ISN + 1 作为 ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。</p><p>3、第三次握手：客户端收到 ACK+SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 establised 状态。</p><p>4、服务器收到 ACK 报文之后，也处于 establised 状态，此时，双方以建立起了链接。</p><p class="note note-success">SYN是同步的缩写，SYN段是发送到另外一台计算机的TCP数据包，请求在她们之间建立连接</p>  <p class="note note-success">ACK是“确认”的缩写。ACK数据包是任何确认收到一条消息或一系列数据包的TCP数据包</p>**四次挥手**<p> <img src="/../image.assets/3971776-9550b64ff16dbb0b.webp" alt="img"> </p><p>刚开始双方都处于 establised 状态，假如是客户端先发起关闭请求，则：</p><p>1、第一次挥手：客户端发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于FIN_WAIT1状态。</p><p>2、第二次握手：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 + 1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 CLOSE_WAIT状态。</p><p>3、第三次挥手：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 LAST_ACK 的状态。</p><p>4、第四次挥手：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 + 1 作为自己 ACK 报文的序列号值，此时客户端处于 TIME_WAIT 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态</p><p>5、服务端收到 ACK 报文之后，就处于关闭连接了，处于 CLOSED 状态。</p><p><strong>为什么TIME-WAIT状态必须等待2MSL的时间？</strong></p><ul><li>保证客户端最后一个ACK能够到达服务器端</li><li>防止失效的请求报文段出现在本次连接中</li></ul><p> <img src="/../image.assets/http.jpg" alt="HTTP超文本传输协议"> </p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在线一键安装MySQL脚本</title>
    <link href="/2022/09/30/MySQLinstallScript/"/>
    <url>/2022/09/30/MySQLinstallScript/</url>
    
    <content type="html"><![CDATA[<p><strong>环境：</strong>  </p><ul><li>系统：rocky8.5  </li><li>MySQL版本:8.0.28   </li><li>在线安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br>#<br>#Authoryuankun<br>#Date2022-09-29<br>#Filenameinstall_mysql-8.0.28-linux-glibc2.12-x86_64.sh<br><br>. /etc/init.d/functions<br><br>color=&#x27;echo -e \E[01;31m&#x27;<br><br>end=&#x27;\E[0m&#x27;<br><br># 设置mysql root用户密码<br>MYSQL_ROOT_PASSWD=123456<br>MYSQL_VERSION=mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br><br>check()&#123;<br>$&#123;color&#125;安装前环境检查......$&#123;end&#125;<br><br># 判断当前用户是否是root用户，不是则退出安装<br>if [ $&#123;UID&#125; -ne 0 ];then<br>action &quot;当前用户不是root,安装失败!&quot; false<br>exit<br>fi<br># 判断是否安装wget，没有安装则使用yum安装wget<br>rpm -q wget || yum install -y wget<br><br># 判断/usr/local/mysql目录是否存在，存在则exit<br>if [ -e /usr/local/mysql ];then<br>$&#123;color&#125;&quot;mysql已经安装,安装失败!&quot;$&#123;end&#125;<br>exit<br>fi<br># 下载二进制程序包<br>wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br><br># 判断二进制程序包是否存在<br>if [ ! -e $&#123;MYSQL_VERSION&#125; ];then<br>$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;<br>$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;<br>exit<br>else<br>$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;<br>fi<br>&#125;<br># 安装mysql<br>install_mysql()&#123;<br>$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;<br># 安装依赖<br>yum install -y -q libaio numactl-libs<br># 解压缩<br>tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/<br>cd /usr/local/<br>MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql<br>chown -R root.root /usr/local/mysql/<br>id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;<br><br># 环境变量<br>echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br>ln -s /usr/local/mysql/bin/* /usr/bin/<br># 配置文件<br>cat &gt; /etc/my.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=1<br>log-bin<br>datadir=/data/mysql<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br>EOF<br>[ -d /data ] || mkdir /data<br>mysqld --initialize --user=mysql --datadir=/data/mysql<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;<br>sleep 3<br>MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`<br>mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null<br>action &quot;数据库安装完成&quot;<br>&#125;<br># 调用函数<br>check<br>install_mysql<br></code></pre></td></tr></table></figure><p><strong>扩展</strong>：在线一键安装MySQL5.7.39脚本</p><ul><li>系统：rocky8.5  </li><li>MySQL版本:5.7.39</li><li>在线安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br>#<br>#Authoryuankun<br>#Date2022-11-19<br>#Filenameinstall_mysql-5.7.39-linux-glibc2.12-x86_64.sh<br><br>. /etc/init.d/functions<br><br>color=&#x27;echo -e \E[01;31m&#x27;<br><br>end=&#x27;\E[0m&#x27;<br><br># 设置mysql root用户密码<br>MYSQL_ROOT_PASSWD=123456<br>MYSQL_VERSION=mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz<br><br>check()&#123;<br>$&#123;color&#125;安装前环境检查......$&#123;end&#125;<br><br># 判断当前用户是否是root用户，不是则退出安装<br>if [ $&#123;UID&#125; -ne 0 ];then<br>action &quot;当前用户不是root,安装失败!&quot; false<br>exit<br>fi<br># 判断是否安装wget，没有安装则使用yum安装wget<br>rpm -q wget || yum install -y wget<br><br># 判断/usr/local/mysql目录是否存在，存在则exit<br>if [ -e /usr/local/mysql ];then<br>$&#123;color&#125;&quot;mysql已经安装,安装失败!&quot;$&#123;end&#125;<br>exit<br>fi<br># 下载二进制程序包<br>wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz<br><br># 判断二进制程序包是否存在<br>if [ ! -e $&#123;MYSQL_VERSION&#125; ];then<br>$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;<br>$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;<br>exit<br>else<br>$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;<br>fi<br>&#125;<br># 安装mysql<br>install_mysql()&#123;<br>$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;<br># 安装依赖<br>yum install -y -q libaio numactl-libs<br># 解压缩<br>tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/<br>cd /usr/local/<br>MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql<br>chown -R root.root /usr/local/mysql/<br>id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;<br><br># 环境变量<br>echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br>ln -s /usr/local/mysql/bin/* /usr/bin/<br># 配置文件<br>cat &gt; /etc/my.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=1<br>log-bin<br>datadir=/data/mysql<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br>EOF<br>[ -d /data ] || mkdir /data<br>mysqld --initialize --user=mysql --datadir=/data/mysql<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;<br>sleep 3<br>MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`<br>mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null<br>action &quot;数据库安装完成&quot;<br>&#125;<br># 调用函数<br>check<br>install_mysql<br></code></pre></td></tr></table></figure><p><strong>离线安装</strong></p><ul><li><p>注意：需要提前将二进制包下载到本地</p></li><li><p>系统：rocky8.5  </p></li><li><p>MySQL版本:8.0.28</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br>#<br>#Authoryuankun<br>#Date2022-11-19<br>#Filenameinstall_offline_mysql-8.0.28-linux-glibc2.12-x86_64.sh<br><br>. /etc/init.d/functions<br><br>color=&#x27;echo -e \E[01;31m&#x27;<br><br>end=&#x27;\E[0m&#x27;<br><br># 设置mysql root用户密码<br>MYSQL_ROOT_PASSWD=123456<br># mysql 版本<br>MYSQL_VERSION=mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br><br>check()&#123;<br>$&#123;color&#125;安装前环境检查......$&#123;end&#125;<br><br># 判断当前用户是否是root用户，不是则退出安装<br>if [ $&#123;UID&#125; -ne 0 ];then<br>action &quot;当前用户不是root,安装失败!&quot; false<br>exit<br>fi<br><br># 判断/usr/local/mysql目录是否存在，存在则exit<br>if [ -e /usr/local/mysql ];then<br>$&#123;color&#125;&quot;mysql已经安装，安装失败!&quot;$&#123;end&#125;<br>exit<br>fi<br><br># 判断二进制程序包是否存在<br>if [ ! -e $&#123;MYSQL_VERSION&#125; ];then<br>$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;<br>$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;<br>exit<br>else<br>$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;<br>fi<br>&#125;<br>install_mysql()&#123;<br>$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;<br># 安装依赖<br>yum install -y -q libaio numactl-libs<br># 解压缩<br>tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/<br>cd /usr/local/<br>MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`<br>ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql<br>chown -R root.root /usr/local/mysql/<br>id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;<br><br># 环境变量<br>echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br>ln -s /usr/local/mysql/bin/* /usr/bin/<br># 配置文件<br>cat &gt; /etc/my.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=1<br>log-bin<br>datadir=/data/mysql<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br>EOF<br>[ -d /data ] || mkdir /data<br>mysqld --initialize --user=mysql --datadir=/data/mysql<br>cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;<br>sleep 3<br>MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`<br>mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null<br>action &quot;数据库安装完成&quot;<br>&#125;<br># 调用函数<br>check<br>install_mysql<br></code></pre></td></tr></table></figure><p><strong>离线安装Mysql5.7.38</strong></p><ul><li>操作系统：centos7.9</li><li>mysql版本：5.7.38</li><li>mysql-5.7.38-linux-glibc2.12-x86_64.tar.gz下载链接</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://mirrors.cloud.tencent.com/mysql/downloads/MySQL-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>/mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">38</span>-linux-glibc2.<span class="hljs-number">12</span>-x86_64.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#Authoryuankun</span><br><span class="hljs-comment">#Date2022-11-24</span><br><span class="hljs-comment">#Filenameinstall_offline_mysql-5.7.38-linux-glibc2.12-x86_64.sh</span><br><br>. <span class="hljs-regexp">/etc/i</span>nit.d/functions<br><br>color=<span class="hljs-string">&#x27;echo -e \E[01;31m&#x27;</span><br><br>end=<span class="hljs-string">&#x27;\E[0m&#x27;</span><br><br><span class="hljs-comment"># 设置mysql root用户密码</span><br>MYSQL_ROOT_PASSWD=<span class="hljs-number">123456</span><br><span class="hljs-comment"># mysql 版本</span><br>MYSQL_VERSION=mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">38</span>-linux-glibc2.<span class="hljs-number">12</span>-x86_64.tar.gz<br><br>check()&#123;<br><span class="hljs-variable">$&#123;color&#125;</span>安装前环境检查......<span class="hljs-variable">$&#123;end&#125;</span><br><br><span class="hljs-comment"># 判断当前用户是否是root用户，不是则退出安装</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;UID&#125;</span> -ne <span class="hljs-number">0</span> ];then<br>action <span class="hljs-string">&quot;当前用户不是root,安装失败!&quot;</span> false<br><span class="hljs-keyword">exit</span><br>fi<br><br><span class="hljs-comment"># 判断/usr/local/mysql目录是否存在，存在则exit</span><br><span class="hljs-keyword">if</span> [ -e <span class="hljs-regexp">/usr/</span>local/mysql ];then<br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;mysql已经安装，安装失败!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-keyword">exit</span><br>fi<br><br><span class="hljs-comment"># 判断二进制程序包是否存在</span><br><span class="hljs-keyword">if</span> [ ! -e <span class="hljs-variable">$&#123;MYSQL_VERSION&#125;</span> ];then<br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;文件不存在,安装失败!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-keyword">exit</span><br><span class="hljs-keyword">else</span><br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;安装前环境检查完毕,环境要求满足!&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br>fi<br>&#125;<br>install_mysql()&#123;<br><span class="hljs-variable">$&#123;color&#125;</span><span class="hljs-string">&quot;开始安装mysql......&quot;</span><span class="hljs-variable">$&#123;end&#125;</span><br><span class="hljs-comment"># 安装依赖</span><br>yum install -y -q libaio numactl-libs<br><span class="hljs-comment"># 解压缩</span><br>tar xf <span class="hljs-variable">$&#123;MYSQL_VERSION&#125;</span> -C <span class="hljs-regexp">/usr/</span>local/<br>cd <span class="hljs-regexp">/usr/</span>local/<br>MYSQL_FILE=`echo <span class="hljs-variable">$&#123;MYSQL_VERSION&#125;</span> | sed -nr <span class="hljs-string">&#x27;s/^(.*[0-9]).*/\1/p&#x27;</span>`<br>ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/$&#123;MYSQL_FILE&#125; /u</span>sr<span class="hljs-regexp">/local/my</span>sql<br>chown -R root.root <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span><br>id mysql &amp;&gt; <span class="hljs-regexp">/dev/</span>null || &#123; useradd -s <span class="hljs-regexp">/sbin/</span>nologin -r mysql ; action <span class="hljs-string">&quot;创建mysql用户&quot;</span>; &#125;<br><br><span class="hljs-comment"># 环境变量</span><br>echo <span class="hljs-string">&#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27;</span> &gt; <span class="hljs-regexp">/etc/</span>profile.d/mysql.sh<br>. <span class="hljs-regexp">/etc/</span>profile.d/mysql.sh<br>ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/* /u</span>sr<span class="hljs-regexp">/bin/</span><br><span class="hljs-comment"># 配置文件</span><br>cat &gt; <span class="hljs-regexp">/etc/my</span>.cnf &lt;&lt;-EOF<br>[mysqld]<br>server-id=<span class="hljs-number">1</span><br>log-bin<br>datadir=<span class="hljs-regexp">/data/my</span>sql<br>socket=<span class="hljs-regexp">/data/my</span>sql/mysql.sock<br>log-error=<span class="hljs-regexp">/data/my</span>sql/mysql.log<br>pid-file=<span class="hljs-regexp">/data/my</span>sql/mysql.pid<br>[client]<br>socket=<span class="hljs-regexp">/data/my</span>sql/mysql.sock<br>EOF<br>[ -d <span class="hljs-regexp">/data ] || mkdir /</span>data<br>mysqld --initialize --user=mysql --datadir=<span class="hljs-regexp">/data/my</span>sql<br>cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>support-files<span class="hljs-regexp">/mysql.server /</span>etc<span class="hljs-regexp">/init.d/my</span>sqld<br>chkconfig --add mysqld<br>chkconfig mysqld on<br>service mysqld start<br>[ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; &#123; <span class="hljs-variable">$color</span><span class="hljs-string">&quot;数据库启动失败，退出!&quot;</span><span class="hljs-variable">$end</span>;<span class="hljs-keyword">exit</span>; &#125;<br>sleep <span class="hljs-number">3</span><br>MYSQL_OLDPASSWORD=`awk <span class="hljs-string">&#x27;/A temporary password/&#123;print $NF&#125;&#x27;</span> <span class="hljs-regexp">/data/my</span>sql/mysql.log`<br>mysqladmin -uroot -p<span class="hljs-variable">$&#123;MYSQL_OLDPASSWORD&#125;</span> password <span class="hljs-variable">$&#123;MYSQL_ROOT_PASSWD&#125;</span> &amp;&gt;<span class="hljs-regexp">/dev/</span>null<br>action <span class="hljs-string">&quot;数据库安装完成&quot;</span><br>&#125;<br><span class="hljs-comment"># 调用函数</span><br>check<br>install_mysql<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL数据库基础和安装使用</title>
    <link href="/2022/09/28/MySQL/"/>
    <url>/2022/09/28/MySQL/</url>
    
    <content type="html"><![CDATA[<p class="note note-success"> MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一 </p><span id="more"></span><h1 id="MySQL的特性"><a href="#MySQL的特性" class="headerlink" title="MySQL的特性"></a>MySQL的特性</h1><p><img src="/../image.assets/1668695639684.png" alt="1668695639684"></p><h1 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h1><h2 id="安装方式介绍"><a href="#安装方式介绍" class="headerlink" title="安装方式介绍"></a>安装方式介绍</h2><p>程序包管理器管理的程序包<br>源代码编译安装<br>二进制格式的程序包：展开至特定路径，并经过简单配置后即可使用</p><h3 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h3><p>CentOS 安装光盘<br>项目官方：<a href="https://downloads.mariadb.org/mariadb/repositories/">https://downloads.mariadb.org/mariadb/repositories/</a><br>国内镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/">https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/">https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/</a></p><p><strong>范例1：CentOS 7 利用yum源安装MySQL8.0</strong></p><p><a href="https://dev.mysql.com/downloads/repo/yum/">MySQL官网</a></p><ul><li>官网下载rpm包</li></ul><p> <img src="/../image.assets/1664415600826.png" alt="1664415600826"> </p><ul><li>利用rz命令将rpm包上传到主机</li></ul><p><strong>扩展：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">rz命令yum安装:yum install lrzsz<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1664415914209.png" alt="1664415914209"> </p><ul><li>安装rpm包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@centos7[~]-&gt;yum install mysql80-community-release-el7-7.noarch.rpm<br></code></pre></td></tr></table></figure><ul><li>安装MySQL</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@centos7[~]-&gt;yum install -y mysql-community-server<br></code></pre></td></tr></table></figure><p><strong>范例2：CentOS 7 利用yum源安装MySQL5.7</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]#tee /etc/yum.repos.d/mysql.repo &lt;&lt;EOF<br>[mysql]<br>name=mysql5.7<br>baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el7-<br>x86_64/<br>gpgcheck=0<br>EOF<br>[root@centos7 ~]#yum -y install mysql-community-server<br>[root@centos7 ~]#systemctl enable --now mysqld<br></code></pre></td></tr></table></figure><h3 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h3><p><strong>环境</strong></p><p>系统：rocky8.5</p><p>MySQL版本：mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz  </p><p><strong>步骤</strong></p><ul><li>安装相关包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">yum -y install libaio numactl-libs<br></code></pre></td></tr></table></figure><ul><li>准备用户</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">groupadd mysql<br>useradd -r -g mysql -s /bin/false mysql<br></code></pre></td></tr></table></figure><ul><li>下载二进制程序包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># -P下载到指定目录<br>wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz -P /usr/local/  <br><br> ln -s mysql-8.0.28-linux-glibc2.12-x86_64 mysql<br> <br> chown -R root.root /usr/local/mysql/<br></code></pre></td></tr></table></figure><ul><li>准备环境变量</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">echo &#x27;PATH=/usr/local/mysql/bin:$PATH&#x27; &gt; /etc/profile.d/mysql.sh<br>. /etc/profile.d/mysql.sh<br></code></pre></td></tr></table></figure><ul><li>准备配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">vim /etc/my.cnf<br>[mysqld]<br>datadir=/data/mysql<br>skip_name_resolve=1<br>socket=/data/mysql/mysql.sock<br>log-error=/data/mysql/mysql.log<br>pid-file=/data/mysql/mysql.pid<br>[client]<br>socket=/data/mysql/mysql.sock<br></code></pre></td></tr></table></figure><ul><li>初始化数据库文件并提取root密码</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mkdir -pv /data/mysql<br>grep password /data/mysql/mysql.log<br></code></pre></td></tr></table></figure><p>生成随机密码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysqld --initialize --user=mysql --datadir=/data/mysql<br></code></pre></td></tr></table></figure><p>生成空密码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysqld --initialize-insecure --user=mysql --datadir=/data/mysql<br></code></pre></td></tr></table></figure><ul><li>准备服务脚本和启动</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky local]# cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/mysqld<br><br>chkconfig --add mysqld<br># 启动服务<br>service mysqld start<br></code></pre></td></tr></table></figure><ul><li>修改口令</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 修改随机密码为指定密码<br>mysqladmin -uroot -p&#x27;9ATjCOB(jIef&#x27; password 123456<br><br>#修改前面生成的空密码为指定密码<br>mysqladmin -uroot password 123456<br></code></pre></td></tr></table></figure><ul><li>测试登录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysql -uroot -p&#x27;123456&#x27;<br></code></pre></td></tr></table></figure><p>注意：登录mysql报如下信息</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">mysql: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory<br></code></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ln -s /usr/lib64/libtinfo.so.6.1 /usr/lib64/libtinfo.so.5<br></code></pre></td></tr></table></figure><p>登录成功：</p><p> <img src="/../image.assets/1664459241867.png" alt="1664459241867"> </p><h3 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h3><h1 id="MySQL多实例"><a href="#MySQL多实例" class="headerlink" title="MySQL多实例"></a>MySQL多实例</h1><h1 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h1><h2 id="SQL语言的兴起与语法标准"><a href="#SQL语言的兴起与语法标准" class="headerlink" title="SQL语言的兴起与语法标准"></a>SQL语言的兴起与语法标准</h2><h3 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h3><ul><li>DDL: Data Defination Language 数据定义语言<br>CREATE，DROP，ALTER</li><li>DML: Data Manipulation Language 数据操纵语言<br>INSERT，DELETE，UPDATE<br>软件开发：CRUD</li><li>DQL：Data Query Language 数据查询语言<br>SELECT</li><li>DCL：Data Control Language 数据控制语言<br>GRANT，REVOKE</li><li>TCL：Transaction Control Language 事务控制语言<br>COMMIT，ROLLBACK，SAVEPOINT</li></ul><h3 id="字符集和排序"><a href="#字符集和排序" class="headerlink" title="字符集和排序"></a>字符集和排序</h3><ul><li>查看所有支持的字符集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span>;<br><span class="hljs-keyword">show</span> charset;<br></code></pre></td></tr></table></figure><ul><li>查看支持的所有排序</li></ul><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-keyword">show</span> collation;<br><span class="hljs-meta">#注意</span><br>utf8_general_ci不区分大小写<br>utf8_bin 区分大小写<br></code></pre></td></tr></table></figure><ul><li>查看当前使用的排序规则</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; show variables like &#x27;collation%&#x27;;</span><br><span class="hljs-section">+----------------------+-------------------+</span><br><span class="hljs-section">| Variable_name        | Value             |</span><br><span class="hljs-section">+----------------------+-------------------+</span><br>| collation<span class="hljs-emphasis">_connection | utf8_general_ci   |</span><br><span class="hljs-emphasis">| collation_database   | latin1_swedish_ci |</span><br><span class="hljs-emphasis">| collation_server     | latin1_swedish_</span>ci |<br><span class="hljs-code">+----------------------+</span>-------------------+<br>3 rows in set (0.01 sec)<br></code></pre></td></tr></table></figure><ul><li>设置服务器端默认字符集</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp">vim /etc/my.cnf<br><span class="hljs-meta">#针对mysql客户端</span><br>[<span class="hljs-meta">mysql</span>]<br><span class="hljs-literal">default</span>-character-<span class="hljs-keyword">set</span>=utf8mb4<br><span class="hljs-meta">#针对所有MySQL客户端</span><br>[<span class="hljs-meta">client</span>]<br><span class="hljs-literal">default</span>-character-<span class="hljs-keyword">set</span>=utf8mb4<br></code></pre></td></tr></table></figure><ul><li>查看当前字符集的使用情况</li></ul><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; show variables like &#x27;character%&#x27;;<br>+--------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> Variable_name            </span>|<span class="hljs-string"> Value                                                          </span>|<br>+--------------------------+----------------------------------------------------------------+<br>|<span class="hljs-string"> character_set_client     </span>|<span class="hljs-string"> utf8mb4                                                        </span>|<br>|<span class="hljs-string"> character_set_connection </span>|<span class="hljs-string"> utf8mb4                                                        </span>|<br>|<span class="hljs-string"> character_set_database   </span>|<span class="hljs-string"> latin1                                                         </span>|<br>|<span class="hljs-string"> character_set_filesystem </span>|<span class="hljs-string"> binary                                                         </span>|<br>|<span class="hljs-string"> character_set_results    </span>|<span class="hljs-string"> utf8mb4                                                        </span>|<br>|<span class="hljs-string"> character_set_server     </span>|<span class="hljs-string"> latin1                                                         </span>|<br>|<span class="hljs-string"> character_set_system     </span>|<span class="hljs-string"> utf8                                                           </span>|<br>|<span class="hljs-string"> character_sets_dir       </span>|<span class="hljs-string"> /usr/local/mysql-5.7.39-linux-glibc2.12-x86_64/share/charsets/ </span>|<br>+--------------------------+----------------------------------------------------------------+<br>8 rows in set (0.00 sec)<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><p><strong>面试题: VARCHAR(50) 能存放几个 UTF8 编码的汉字？</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">存放的汉字个数与版本相关。<br>mysql <span class="hljs-number">4.0</span>以下版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字节，如果存放 UTF8 格式编码的汉字时（每个汉字<span class="hljs-number">3</span>字<br>节），只能存放<span class="hljs-number">16</span> 个。<br>mysql <span class="hljs-number">5.0</span>以上版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字符，无论存放的是数字、字母还是 UTF8 编码的汉字，<br>都可以存放 <span class="hljs-number">50</span> 个。<br></code></pre></td></tr></table></figure><h1 id="MySQL用户管理"><a href="#MySQL用户管理" class="headerlink" title="ＭySQL用户管理"></a>ＭySQL用户管理</h1><ul><li>相关数据库和表</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">元数据数据库：mysql<br>系统授权表：db, host, <span class="hljs-keyword">user</span>,columns_priv, tables_priv, procs_priv, proxies_priv<br></code></pre></td></tr></table></figure><ul><li>用户账号</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-string">&#x27;USERNAME&#x27;</span>@<span class="hljs-string">&#x27;HOST&#x27;</span><br>@<span class="hljs-string">&#x27;HOST&#x27;</span>: 主机名： <span class="hljs-symbol">user1@</span><span class="hljs-string">&#x27;web1.magedu.org&#x27;</span><br>IP地址或Network<br>通配符： % _<br>示例：<span class="hljs-symbol">wang@</span><span class="hljs-string">&#x27;172.16.%.%&#x27;</span><br><span class="hljs-symbol">user2@</span><span class="hljs-string">&#x27;192.168.1.%&#x27;</span><br><span class="hljs-symbol">mage@</span><span class="hljs-string">&#x27;10.0.0.0/255.255.0.0&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>创建用户：create user</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;USERNAME&#x27;</span>@<span class="hljs-string">&#x27;HOST&#x27;</span> [IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>]；<br>#示例:<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> test@<span class="hljs-string">&#x27;10.0.0.0/255.255.255.0&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> test2@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>新建用户的默认权限：USAGE</p><ul><li>用户重命名：RENAME USER</li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">RENAME <span class="hljs-keyword">USER</span> <span class="hljs-title">old_user_name</span> TO new_user_name;<br></code></pre></td></tr></table></figure><ul><li>删除用户</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;USERNAME&#x27;</span>@<span class="hljs-string">&#x27;HOST&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>删除空用户</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>修改密码</strong></p><ul><li>注意</li></ul><p>新版mysql中用户密码可以保存在mysql.user表的authentication_string字段中<br>如果mysql.user表的authentication_string和password字段都保存密码，authentication_string<br>优先生效</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#方法<span class="hljs-number">1</span>,用户可以也可通过此方式修改自已的密码<br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">PASSWORD</span> <span class="hljs-keyword">FOR</span> <span class="hljs-string">&#x27;user&#x27;</span>@<span class="hljs-string">&#x27;host&#x27;</span> = <span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">&#x27;password&#x27;</span>); #MySQL8<span class="hljs-number">.0</span> 版本不支持此方法,<br>因为<span class="hljs-keyword">password</span>函数被取消<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">for</span> root@<span class="hljs-string">&#x27;localhost&#x27;</span>=<span class="hljs-string">&#x27;123456&#x27;</span> ; #MySQL8<span class="hljs-number">.0</span>版本支持此方法,此方式直接将密码<br><span class="hljs-number">123456</span>加密后存放在mysql.<span class="hljs-keyword">user</span>表的authentication_string字段<br>#方法<span class="hljs-number">2</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> test@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;centos&#x27;</span>; #通用改密码方法, 用户可以也可通过此方式修<br>改自已的密码,MySQL8 版本修改密码<br>#方法<span class="hljs-number">3</span> 此方式MySQL8<span class="hljs-number">.0</span>不支持,因为<span class="hljs-keyword">password</span>函数被取消<br><span class="hljs-keyword">UPDATE</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">SET</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">&#x27;password&#x27;</span>) <span class="hljs-keyword">WHERE</span> clause;<br><span class="hljs-meta">#mariadb 10.3</span><br><span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> authentication_string=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;ubuntu&#x27;</span>) <span class="hljs-keyword">where</span><br><span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;mage&#x27;</span>;<br>#此方法需要执行下面指令才能生效：<br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure><p><strong>忘记管理员密码解决方法</strong></p><ol><li>启动mysqld进程时，为其使用如下选项：</li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-comment">--skip-grant-tables</span><br><span class="hljs-comment">--skip-networking</span><br></code></pre></td></tr></table></figure><ol start="2"><li>使用UPDATE命令修改管理员密码</li><li>关闭mysqld进程，移除上述两个选项，重启mysqld</li></ol><p>范例:Mariadb 和MySQL5.6版之前破解root密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@centos8 ~]#vim /etc/my.cnf<br>[mysqld]<br>skip-<span class="hljs-keyword">grant</span>-<span class="hljs-keyword">tables</span><br>skip-networking<br>[root@centos8 ~]#systemctl <span class="hljs-keyword">restart</span> mysqld|mariadb<br>[root@centos8 ~]#mysql<br>#方法<span class="hljs-number">1</span><br><span class="hljs-meta">#mariadb 旧版和MySQL5.6版之前</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;ubuntu&#x27;</span>) <span class="hljs-keyword">where</span><br><span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-meta">#mariadb 新版</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> authentication_string=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;ubuntu&#x27;</span>)<br><span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>;<br>#方法<span class="hljs-number">2</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; flush <span class="hljs-keyword">privileges</span>;<br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> root@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;ubuntu&#x27;</span>;<br>[root@centos8 ~]#vim /etc/my.cnf<br>[mysqld]<br><span class="hljs-meta">#skip-grant-tables</span><br><span class="hljs-meta">#skip-networking</span><br><br>[root@centos8 ~]#systemctl <span class="hljs-keyword">restart</span> mysqld|mariadb<br>[root@centos8 ~]#mysql -uroot -pubuntu<br></code></pre></td></tr></table></figure><p>范例: MySQL5.7和8.0 破解root密码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#vim /etc/my.cnf</span><br>[<span class="hljs-meta">mysqld</span>]<br>skip-grant-tables<br>skip-networking <span class="hljs-meta">#MySQL8.0不需要</span><br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#systemctl restart mysqld</span><br><span class="hljs-meta">#方法1</span><br>mysql&gt; update mysql.user <span class="hljs-keyword">set</span> authentication_string=<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">where</span> user=<span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">and</span><br>host=<span class="hljs-string">&#x27;localhost&#x27;</span>;<br><span class="hljs-meta">#方法2</span><br>mysql&gt; flush privileges;<br><span class="hljs-meta">#再执行下面任意一个命令</span><br>mysql&gt; alter user root@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;ubuntu&#x27;</span>;<br>mysql&gt; <span class="hljs-keyword">set</span> password <span class="hljs-keyword">for</span> root@<span class="hljs-string">&#x27;localhost&#x27;</span>=<span class="hljs-string">&#x27;ubuntu&#x27;</span>;<br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#vim /etc/my.cnf</span><br>[<span class="hljs-meta">mysqld</span>]<br><span class="hljs-meta">#skip-grant-tables</span><br><span class="hljs-meta">#skip-networking</span><br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#systemctl restart mysqld</span><br>[<span class="hljs-meta">root@centos8 ~</span>]<span class="hljs-meta">#mysql -uroot -pubuntu</span><br></code></pre></td></tr></table></figure><p>范例: 删库跑路之清空root密码方法</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#此方法适用于包安装方式的MySQL或Mariadb</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#systemctl stop mysqld</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#rm -rf /var/lib/mysql/*</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#systemctl start mysqld</span><br></code></pre></td></tr></table></figure><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><p><strong>权限类别：</strong></p><ul><li><p>管理类</p></li><li><p>程序类</p></li><li><p>数据库级别</p></li><li><p>表级别</p></li><li><p>字段级别</p></li></ul><p><strong>管理类：</strong></p><ul><li>CREATE USER</li><li>FILE</li><li>SUPER</li><li>SHOW DATABASES</li><li>RELOAD</li><li>SHUTDOWN</li><li>REPLICATION SLAVE</li><li>REPLICATION CLIENT</li><li>LOCK TABLES</li><li>PROCESS</li><li>CREATE TEMPORARY TABLES</li></ul><p><strong>程序类：针对 FUNCTION、PROCEDURE、TRIGGER</strong></p><ul><li>CREATE</li><li>ALTER</li><li>DROP</li><li>EXCUTE<br><strong>库和表级别：针对 DATABASE、TABLE</strong></li><li>ALTER</li><li>CREATE</li><li>CREATE VIEW</li><li>DROP INDEX</li><li>SHOW VIEW</li><li>WITH GRANT OPTION：能将自己获得的权限转赠给其他用户<br><strong>数据操作</strong></li><li>SELECT<br>-INSERT</li><li>DELETE</li><li>UPDATE<br><strong>字段级别</strong></li><li>SELECT(col1,col2,…)</li><li>UPDATE(col1,col2,…)</li><li>INSERT(col1,col2,…)<br><strong>所有权限</strong></li><li>ALL PRIVILEGES 或 ALL</li></ul><p><strong>授权</strong></p><ul><li>授权：GRANT</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span> (col1), <span class="hljs-keyword">INSERT</span> (col1,col2) <span class="hljs-keyword">ON</span> mydb.mytbl <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;someuser&#x27;</span>@<span class="hljs-string">&#x27;somehost&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> wordpress.* <span class="hljs-keyword">TO</span> wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> ;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span>;<br>#创建用户和授权同时执行的方式在MySQL8<span class="hljs-number">.0</span>取消了<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> wordpress.* <span class="hljs-keyword">TO</span> wordpress@<span class="hljs-string">&#x27;192.168.8.%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;magedu&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;192.168.8.%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;magedu&#x27;</span><br><span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span>;<br></code></pre></td></tr></table></figure><p><strong>取消授权</strong></p><ul><li>取消授权：REVOKE</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">REVOKE</span> <span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">FROM</span> <span class="hljs-string">&#x27;testuser&#x27;</span>@<span class="hljs-string">&#x27;172.16.0.%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>查看指定用户获得的授权</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">Help <span class="hljs-keyword">SHOW</span> GRANTS<br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> <span class="hljs-string">&#x27;user&#x27;</span>@<span class="hljs-string">&#x27;host&#x27;</span>;<br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> <span class="hljs-built_in">CURRENT_USER</span>[()];<br></code></pre></td></tr></table></figure><p><strong>注意：</strong><br>MariaDB服务进程启动时会读取mysql库中所有授权表至内存<br>(1) GRANT或REVOKE等执行权限操作会保存于系统表中，MariaDB的服务进程通常会自动重读授权表，<br>使之生效<br>(2) 对于不能够或不能及时重读授权表的命令，可手动让MariaDB的服务进程重读授权表：<br>mysql&gt; FLUSH PRIVILEGES;</p><h1 id="MyISAM-存储引擎"><a href="#MyISAM-存储引擎" class="headerlink" title="MyISAM 存储引擎"></a>MyISAM 存储引擎</h1><h2 id="MyISAM-引擎特点"><a href="#MyISAM-引擎特点" class="headerlink" title="MyISAM 引擎特点"></a>MyISAM 引擎特点</h2><ul><li>不支持事务</li><li>表级锁定</li><li>读写相互阻塞，写入不能读，读时不能写</li><li>只缓存索引</li><li>不支持外键约束</li><li>不支持聚簇索引</li><li>读取数据较快，占用资源较少</li><li>不支持MVCC（多版本并发控制机制）高并发</li><li>崩溃恢复性较差</li><li>MySQL5.5.5 前默认的数据库引擎</li></ul><h2 id="MyISAM-存储引擎适用场景"><a href="#MyISAM-存储引擎适用场景" class="headerlink" title="MyISAM 存储引擎适用场景"></a>MyISAM 存储引擎适用场景</h2><ul><li>只读（或者写较少）</li><li>表较小（可以接受长时间进行修复操作）</li></ul><h2 id="MyISAM-引擎文件"><a href="#MyISAM-引擎文件" class="headerlink" title="MyISAM 引擎文件"></a>MyISAM 引擎文件</h2><ul><li>tbl_name.frm 表格式定义</li><li>tbl_name.MYD 数据文件</li><li>tbl_name.MYI 索引文件</li></ul><h1 id="InnoDB-引擎"><a href="#InnoDB-引擎" class="headerlink" title="InnoDB 引擎"></a>InnoDB 引擎</h1><h2 id="InnoDB引擎特点"><a href="#InnoDB引擎特点" class="headerlink" title="InnoDB引擎特点"></a>InnoDB引擎特点</h2><ul><li>行级锁</li><li>支持事务，适合处理大量短期事务</li><li>读写阻塞与事务隔离级别相关</li><li>可缓存数据和索引</li><li>支持聚簇索引</li><li>崩溃恢复性更好</li><li>支持MVCC高并发</li><li>从MySQL5.5后支持全文索引</li><li>从MySQL5.5.5开始为默认的数据库引擎</li></ul><h1 id="管理存储引擎"><a href="#管理存储引擎" class="headerlink" title="管理存储引擎"></a>管理存储引擎</h1><p>查看mysql支持的存储引擎</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">show engines<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>查看当前默认的存储引擎</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">show <span class="hljs-keyword">variables</span> like <span class="hljs-comment">&#x27;%storage_engine%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>设置默认的存储引擎</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/my</span>.cnf<br>[mysqld]<br>default_storage_engine= InnoDB<br></code></pre></td></tr></table></figure><p>查看库中所有表使用的存储引擎</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">table</span> status <span class="hljs-keyword">from</span> db_name;<br></code></pre></td></tr></table></figure><p>查看库中指定表的存储引擎</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">table</span> status <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;tb_name&#x27;</span>;<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tb_name;<br></code></pre></td></tr></table></figure><p>设置表的存储引擎：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">CREATE</span></span> <span class="hljs-keyword">TABLE</span> tb_name(... ) ENGINE=InnoDB;<br>ALTER <span class="hljs-keyword">TABLE</span> tb_name <span class="hljs-comment">ENGINE=InnoDB</span>;<br></code></pre></td></tr></table></figure><h1 id="实战案例：数据库冷备份和热备份"><a href="#实战案例：数据库冷备份和热备份" class="headerlink" title="实战案例：数据库冷备份和热备份"></a>实战案例：数据库冷备份和热备份</h1><p>MySQL8.0</p><p>冷备份：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs autoit">备份过程<br><span class="hljs-meta"># 停止数据库</span><br>systemctl stop mysql<br><span class="hljs-meta"># rsync可以保留文件属性</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#rsync -a /var/lib/mysql 10.0.0.28:/data/</span><br><span class="hljs-meta">#如果配置及二进制文件相关有特殊设置也需要备份</span><br><span class="hljs-meta">#还原</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#yum -y install mysql-server</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#cp -a /data/mysql/* /var/lib/mysql/</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#systemctl start mysqld</span><br></code></pre></td></tr></table></figure><h1 id="mysqldump备份工具"><a href="#mysqldump备份工具" class="headerlink" title="mysqldump备份工具"></a>mysqldump备份工具</h1><p>mysqldump 说明<br>逻辑备份工具：<br>mysqldump, mydumper, phpMyAdmin<br>Schema和数据存储在一起、巨大的SQL语句、单个巨大的备份文件<br>mysqldump是MySQL的客户端命令，通过mysql协议连接至mysql服务器进行备份<br>命令格式:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">mysqldump <span class="hljs-selector-attr">[OPTIONS]</span> database <span class="hljs-selector-attr">[tables]</span> #支持指定数据库和指定多表的备份，但数据库本身定义<br>不备份<br>mysqldump <span class="hljs-selector-attr">[OPTIONS]</span> -<span class="hljs-selector-tag">B</span> DB1 <span class="hljs-selector-attr">[DB2 DB3...]</span> #支持指定数据库备份，包含数据库本身定义也会备份<br>mysqldump <span class="hljs-selector-attr">[OPTIONS]</span> -<span class="hljs-selector-tag">A</span> <span class="hljs-selector-attr">[OPTIONS]</span> #备份所有数据库，包含数据库本身定义也会备份<br></code></pre></td></tr></table></figure><p>mysqldump参考：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>dev.mysql.com<span class="hljs-regexp">/doc/</span>refman<span class="hljs-regexp">/5.7/</span>en/mysqldump.html<br></code></pre></td></tr></table></figure><p>mysqldump 常见通用选项：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">-u, <span class="hljs-params">--user=name</span> User for login <span class="hljs-keyword">if</span> not current user<br>-p, <span class="hljs-params">--password</span>[=name] Password to use when connecting to server<br>-A, <span class="hljs-params">--all-databases</span> <span class="hljs-comment">#备份所有数据库，含create database</span><br>-B, <span class="hljs-params">--databases</span> db_name… <span class="hljs-comment">#指定备份的数据库，包括create database语句</span><br>-E, <span class="hljs-params">--events</span>：<span class="hljs-comment">#备份相关的所有event scheduler</span><br>-R, <span class="hljs-params">--routines</span>：<span class="hljs-comment">#备份所有存储过程和自定义函数</span><br><span class="hljs-params">--triggers</span>：<span class="hljs-comment">#备份表相关触发器，默认启用,用--skip-triggers，不备份触发器</span><br><span class="hljs-params">--default-character-set=utf8</span> <span class="hljs-comment">#指定字符集</span><br><span class="hljs-params">--master-data</span>[=<span class="hljs-comment">#]：#注意：MySQL8.0.26版以后，此选项变为--source-data</span><br><span class="hljs-comment">#此选项须启用二进制日志</span><br><span class="hljs-comment">#1：所备份的数据之前加一条记录为CHANGE MASTER TO语句，非注释，不指定#，默认为1，适合于主从复</span><br>制多机使用<br><span class="hljs-comment">#2：记录为被注释的#CHANGE MASTER TO语句，适合于单机使用,适用于备份还原</span><br><span class="hljs-comment">#此选项会自动关闭--lock-tables功能，自动打开-x | --lock-all-tables功能（除非开启--</span><br>single-transaction）<br>-F, <span class="hljs-params">--flush-logs</span> <span class="hljs-comment">#备份前滚动日志，锁定表完成后，执行flush logs命令,生成新的二进制日志文件，</span><br>配合-A 或 -B 选项时，会导致刷新多次数据库。建议在同一时刻执行转储和日志刷新，可通过和<span class="hljs-params">--single-</span><br>transaction或-x，<span class="hljs-params">--master-data</span> 一起使用实现，此时只刷新一次二进制日志<br><span class="hljs-params">--compact</span> <span class="hljs-comment">#去掉注释，适合调试，节约备份占用的空间,生产不使用</span><br>-d, <span class="hljs-params">--no-data</span> <span class="hljs-comment">#只备份表结构,不备份数据,即只备份create table</span><br>-t, <span class="hljs-params">--no-create-info</span> <span class="hljs-comment">#只备份数据,不备份表结构,即不备份create table</span><br>-n,<span class="hljs-params">--no-create-db</span> <span class="hljs-comment">#不备份create database，可被-A或-B覆盖</span><br><span class="hljs-params">--flush-privileges</span> <span class="hljs-comment">#备份mysql或相关时需要使用</span><br>-f, <span class="hljs-params">--force</span> <span class="hljs-comment">#忽略SQL错误，继续执行</span><br><span class="hljs-params">--hex-blob</span> <span class="hljs-comment">#使用十六进制符号转储二进制列，当有包括BINARY,VARBINARY,BLOB，</span><br>BIT的数据类型的列时使用，避免乱码<br>-q, <span class="hljs-params">--quick</span> <span class="hljs-comment">#不缓存查询，直接输出，加快备份速度</span><br></code></pre></td></tr></table></figure><p>mysqldump的MyISAM存储引擎相关的备份选项：<br>MyISAM不支持事务，只能支持温备；不支持热备，所以必须先锁定要备份的库，而后启动备份操作</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp">-x,--<span class="hljs-keyword">lock</span>-all-tables <span class="hljs-meta">#加全局读锁，锁定所有库的所有表，同时加--single-transaction或--</span><br><span class="hljs-keyword">lock</span>-tables选项会关闭此选项功能，注意：数据量大时，可能会导致长时间无法并发访问数据库<br>-l,--<span class="hljs-keyword">lock</span>-tables <span class="hljs-meta">#对于需要备份的每个数据库，在启动备份之前分别锁定其所有表，默认为on,--</span><br>skip-<span class="hljs-keyword">lock</span>-tables选项可禁用,对备份MyISAM的多个库,可能会造成数据不一致<br><span class="hljs-meta">#注：以上选项对InnoDB表一样生效，实现温备，但不推荐使用</span><br></code></pre></td></tr></table></figure><p>mysqldump的InnoDB存储引擎相关的备份选项：<br>InnoDB 存储引擎支持事务,可以利用事务的相应的隔离级别,实现热备，也可以实现温备但不建议用</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">--single-transaction</span><br>#此选项Innodb中推荐使用，不适用MyISAM，此选项会开始备份前，先执行<span class="hljs-keyword">START</span> <span class="hljs-keyword">TRANSACTION</span>指令开启<br>事务<br>#此选项通过在单个事务中转储所有表来创建一致的快照。 仅适用于存储在支持多版本控制的存储引擎中的表<br>（目前只有InnoDB可以）; 转储不保证与其他存储引擎保持一致。 在进行单事务转储时，要确保有效的转储<br>文件（正确的表内容和二进制日志位置），没有其他连接应该使用以下语句：<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span>，<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span>，<br><span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TABLE</span>，<span class="hljs-keyword">TRUNCATE</span> <span class="hljs-keyword">TABLE</span>,此选项和<span class="hljs-comment">--lock-tables（此选项隐含提交挂起的事务）选项是相互</span><br>排斥,备份大型表时，建议将<span class="hljs-comment">--single-transaction选项和--quick结合一起使用</span><br></code></pre></td></tr></table></figure><h1 id="生产环境实战备份策略"><a href="#生产环境实战备份策略" class="headerlink" title="生产环境实战备份策略"></a>生产环境实战备份策略</h1><p>InnoDB建议备份策略</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mysqldump -uroot -p -A -F -E -R <span class="hljs-params">--triggers</span> <span class="hljs-params">--single-transaction</span> <span class="hljs-params">--master-data=1</span><br><span class="hljs-params">--flush-privileges</span> <span class="hljs-params">--default-character-set=utf8</span> <span class="hljs-params">--hex-blob</span><br>&gt;$&#123;BACKUP&#125;<span class="hljs-string">/fullbak_</span>$&#123;BACKUP_TIME&#125;<span class="hljs-string">.sql</span><br></code></pre></td></tr></table></figure><p>MyISAM建议备份策略</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mysqldump -uroot -p -A -F -E -R -x <span class="hljs-params">--master-data=1</span> <span class="hljs-params">--flush-privileges</span> --<br>triggers <span class="hljs-params">--default-character-set=utf8</span> <span class="hljs-params">--hex-blob</span><br>&gt;$&#123;BACKUP&#125;<span class="hljs-string">/fullbak_</span>$&#123;BACKUP_TIME&#125;<span class="hljs-string">.sql</span><br></code></pre></td></tr></table></figure><h1 id="mysqldump-备份还原实战案例"><a href="#mysqldump-备份还原实战案例" class="headerlink" title="mysqldump 备份还原实战案例"></a>mysqldump 备份还原实战案例</h1><h2 id="实战案例：特定数据库的备份脚本"><a href="#实战案例：特定数据库的备份脚本" class="headerlink" title="实战案例：特定数据库的备份脚本"></a>实战案例：特定数据库的备份脚本</h2><p>系统：centos8.5</p><p>mysql:8.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>TIME=`<span class="hljs-built_in">date</span> +%F_%H-%M-%S`<br><span class="hljs-comment"># 备份目录</span><br>DIR=/mysql_backup<br><span class="hljs-comment"># 备份数据库</span><br>DB=hellodb<br><span class="hljs-comment"># 数据库密码</span><br>PASSWD=123456<br><br><span class="hljs-comment"># 判断备份数据库目录是否存在</span><br><br>[ -d <span class="hljs-variable">$DIR</span> ] || <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$DIR</span><br><br><span class="hljs-comment"># 备份</span><br>mysqldump -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASSWD</span>&quot;</span> -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B <span class="hljs-variable">$DB</span> | gzip &gt; <span class="hljs-variable">$&#123;DIR&#125;</span>/<span class="hljs-variable">$&#123;DB&#125;</span>_<span class="hljs-variable">$&#123;TIME&#125;</span>.sql.gz<br></code></pre></td></tr></table></figure><h1 id="实战案例：分库备份的实战脚本"><a href="#实战案例：分库备份的实战脚本" class="headerlink" title="实战案例：分库备份的实战脚本"></a>实战案例：分库备份的实战脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>TIME=`<span class="hljs-built_in">date</span> +%F_%H-%M-%S`<br>DIR=/backup<br>PASS=123456<br>[ -d <span class="hljs-string">&quot;<span class="hljs-variable">$DIR</span>&quot;</span> ] || <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$DIR</span><br><span class="hljs-keyword">for</span> DB <span class="hljs-keyword">in</span> `mysql -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -e <span class="hljs-string">&#x27;show databases&#x27;</span> | grep -Ev <span class="hljs-string">&quot;^Database|.*schema$&quot;</span>`;<span class="hljs-keyword">do</span><br>    mysqldump -uroot -p<span class="hljs-string">&quot;<span class="hljs-variable">$PASS</span>&quot;</span> -F --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B <span class="hljs-variable">$DB</span> | gzip &gt; <span class="hljs-variable">$&#123;DIR&#125;</span>/<span class="hljs-variable">$&#123;DB&#125;</span>_<span class="hljs-variable">$&#123;TIME&#125;</span>.sql.gz<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h1 id="实战案例：完全备份和还原"><a href="#实战案例：完全备份和还原" class="headerlink" title="实战案例：完全备份和还原"></a>实战案例：完全备份和还原</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#开启二进制日志<br>[root@centos8 ~]#vim /etc/my.cnf.d/mariadb-<span class="hljs-keyword">server</span>.cnf<br>[mysqld]<br><span class="hljs-keyword">log</span>-bin<br>#备份<br>[root@centos8 ~]#mysqldump -uroot -pmagedu -A -F <span class="hljs-comment">--single-transaction --master-</span><br>data=<span class="hljs-number">2</span> |gzip &gt; /backup/<span class="hljs-keyword">all</span>-`<span class="hljs-type">date</span> +%F`.<span class="hljs-keyword">sql</span>.gz<br>#还原<br>[root@centos8 backup]#dnf install mariadb-<span class="hljs-keyword">server</span><br>[root@centos8 backup]#gzip -d <span class="hljs-keyword">all</span><span class="hljs-number">-2019</span><span class="hljs-number">-11</span><span class="hljs-number">-27.</span><span class="hljs-keyword">sql</span>.gz<br>[root@centos8 ~]#mysql<br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">set</span> sql_log_bin=<span class="hljs-keyword">off</span>;<br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; source /backup/<span class="hljs-keyword">all</span><span class="hljs-number">-2019</span><span class="hljs-number">-11</span><span class="hljs-number">-27.</span><span class="hljs-keyword">sql</span><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">set</span> sql_log_bin=<span class="hljs-keyword">on</span>;<br></code></pre></td></tr></table></figure><h1 id="实战案例：恢复误删除的表"><a href="#实战案例：恢复误删除的表" class="headerlink" title="实战案例：恢复误删除的表"></a>实战案例：恢复误删除的表</h1><p>案例说明：每天2：30做完全备份，早上10：00误删除了表students，10：10才发现故障，现需要将数<br>据库还原到10：10的状态，且恢复被删除的students表</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">#查看数据库是否开启二进制<br><span class="hljs-section">mysql&gt; select @@log_bin;</span><br><span class="hljs-section">+-----------+</span><br><span class="hljs-section">| @@log_bin |</span><br><span class="hljs-section">+-----------+</span><br><span class="hljs-section">|         1 |</span><br><span class="hljs-section">+-----------+</span><br>1 row in set (0.01 sec)<br><br><span class="hljs-section">mysql&gt; select @@sql_log_bin;</span><br><span class="hljs-section">+---------------+</span><br><span class="hljs-section">| @@sql_log_bin |</span><br><span class="hljs-section">+---------------+</span><br><span class="hljs-section">|             1 |</span><br><span class="hljs-section">+---------------+</span><br>1 row in set (0.01 sec)<br><br>mysql&gt; <br><br># log_bin、sql_log_bin的值为1说明已经开启二进制日志<br><br># 查看当前二进制文件在什么位置<br><span class="hljs-section">mysql&gt; show master logs;</span><br><span class="hljs-section">+------------------+-----------+-----------+</span><br><span class="hljs-section">| Log_name         | File_size | Encrypted |</span><br><span class="hljs-section">+------------------+-----------+-----------+</span><br>| mysql-bin.000001 |       204 | No        |<br><span class="hljs-section">| mysql-bin.000002 |       157 | No        |</span><br><span class="hljs-section">+------------------+-----------+-----------+</span><br>2 rows in set (0.01 sec)<br><br>mysql&gt; <br># 备份的时候开启刷新二进制日志，会生成新的二进制的日志<br><br>#完全备份<br>[root@centos7 ~]# mysqldump -uroot -p123456 -A -F --single-transaction --master-data=2 | gzip &gt; /backup/all_<span class="hljs-code">`date +%F`</span>.sql.gz<br><br># 完全备份后进行数据更新<br>mysql&gt; insert students (name,age,gender) values(<span class="hljs-emphasis">&#x27;jack&#x27;</span>,22,<span class="hljs-emphasis">&#x27;M&#x27;</span>);<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; insert students (name,age,gender) values(<span class="hljs-emphasis">&#x27;rose&#x27;</span>,20,<span class="hljs-emphasis">&#x27;f&#x27;</span>);<br>Query OK, 1 row affected (0.01 sec)<br><br># 误删除学生表<br>mysql&gt; drop table students;<br>Query OK, 0 rows affected (0.07 sec)<br><br>mysql&gt; <br><br># 后续其他表继续更新<br>mysql&gt; insert teachers (name,age,gender)values(<span class="hljs-emphasis">&#x27;wang&#x27;</span>,30,<span class="hljs-emphasis">&#x27;M&#x27;</span>);<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; <br><br>mysql&gt; insert teachers (name,age,gender)values(<span class="hljs-emphasis">&#x27;mage&#x27;</span>,28,<span class="hljs-emphasis">&#x27;M&#x27;</span>);<br>Query OK, 1 row affected (0.05 sec)<br><br>mysql&gt; <br><br># 停止数据库访问<br><br># 备份从完全备份后的二进制日志<br>[root@centos7 ~]# mysqlbinlog --start-position=157 /data/mysql/mysql-bin.000003 &gt; /backup/inc.sql<br><br># 找到误删除的语句，从备份中删除此语句<br>#DROP TABLE <span class="hljs-code">`students`</span> /* generated by server */<br>#利用完全备份和修改过的二进制日志进行还原<br>[root@centos8 ~]#mysql -uroot -p<br>mysql&gt; set sql<span class="hljs-emphasis">_log_bin=0;</span><br><span class="hljs-emphasis">mysql&gt; source /backup/allbackup_2019-11-27_10:20:08.sql;</span><br><span class="hljs-emphasis">mysql&gt; source /backup/inc.sql</span><br><span class="hljs-emphasis">mysql&gt; set sql_log_</span>bin=1;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux防火墙</title>
    <link href="/2022/09/25/FireWall/"/>
    <url>/2022/09/25/FireWall/</url>
    
    <content type="html"><![CDATA[<p class="note note-success"> firewall一般指防火墙。 防火墙（英语：Firewall）技术是通过有机结合各类用于安全管理与筛选的软件和硬件设备，帮助计算机网络于其内、外网之间构建一道相对隔绝的保护屏障，以保护用户资料与信息安全性的一种技术。 </p><span id="more"></span>  <h1 id="防火墙基本认识"><a href="#防火墙基本认识" class="headerlink" title="防火墙基本认识"></a>防火墙基本认识</h1><h2 id="Netfilter"><a href="#Netfilter" class="headerlink" title="Netfilter"></a>Netfilter</h2><p> <img src="/../image.assets/1664334608880.png" alt="1664334608880"> </p><p>Linux防火墙是由Netfilter组件提供的，Netfilter工作在内核空间，集成在linux内核中。<br>Netfilter 是Linux 2.4.x之后新一代的Linux防火墙机制，是linux内核的一个子系统。Netfilter采用模块<br>化设计，具有良好的可扩充性，提供扩展各种网络服务的结构化底层框架。Netfilter与IP协议栈是无缝<br>契合，并允许对数据报进行过滤、地址转换、处理等操作。  </p><p><a href="https://netfilter.org/documentation/">Netfilter官网文档</a>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# grep -m 10 NETFILTER /boot/config-3.10.0-1160.el7.x86_64 <br>CONFIG_NETFILTER=y<br># CONFIG_NETFILTER_DEBUG is not set<br>CONFIG_NETFILTER_ADVANCED=y<br>CONFIG_BRIDGE_NETFILTER=m<br>CONFIG_NETFILTER_NETLINK=m<br>CONFIG_NETFILTER_NETLINK_ACCT=m<br>CONFIG_NETFILTER_NETLINK_QUEUE=m<br>CONFIG_NETFILTER_NETLINK_LOG=m<br>CONFIG_NETFILTER_NETLINK_QUEUE_CT=y<br>CONFIG_NETFILTER_SYNPROXY=m<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h2 id="防火墙工具介绍"><a href="#防火墙工具介绍" class="headerlink" title="防火墙工具介绍"></a>防火墙工具介绍</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>由软件包iptables提供的命令行工具，工作在用户空间，用来编写规则，写好的规则被送往netfilter，告<br>诉内核如何去处理信息包。</p><ul><li>查看iptables信息</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# rpm -qi iptables<br>Name        : iptables<br>Version     : 1.4.21<br>Release     : 35.el7<br>Architecture: x86_64<br>Install Date: Sat 17 Sep 2022 10:31:09 AM CST<br>Group       : System Environment/Base<br>Size        : 1556976<br>License     : GPLv2<br>Signature   : RSA/SHA256, Thu 15 Oct 2020 02:51:02 AM CST, Key ID 24c6a8a7f4a80eb5<br>Source RPM  : iptables-1.4.21-35.el7.src.rpm<br>Build Date  : Fri 02 Oct 2020 12:52:54 AM CST<br>Build Host  : x86-01.bsys.centos.org<br>Relocations : (not relocatable)<br>Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;<br>Vendor      : CentOS<br>URL         : http://www.netfilter.org/<br>Summary     : Tools for managing Linux kernel packet filtering capabilities<br>Description :<br>The iptables utility controls the network packet filtering code in the<br>Linux kernel. If you need to set up firewalls and/or IP masquerading,<br>you should install this package.<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>范例：安装iptables的server包</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 安装dnf<br>[root@centos7 ~]# yum install dnf<br># 安装iptables-services<br>[root@centos7 ~]# dnf -y install iptables-services<br># 查看iptables-services文件列表<br>[root@centos7 ~]# rpm -ql iptables-services<br>/etc/sysconfig/ip6tables<br>/etc/sysconfig/iptables<br>/usr/lib/systemd/system/ip6tables.service<br>/usr/lib/systemd/system/iptables.service<br>/usr/libexec/initscripts/legacy-actions/ip6tables<br>/usr/libexec/initscripts/legacy-actions/ip6tables/panic<br>/usr/libexec/initscripts/legacy-actions/ip6tables/save<br>/usr/libexec/initscripts/legacy-actions/iptables<br>/usr/libexec/initscripts/legacy-actions/iptables/panic<br>/usr/libexec/initscripts/legacy-actions/iptables/save<br>/usr/libexec/iptables<br>/usr/libexec/iptables/ip6tables.init<br>/usr/libexec/iptables/iptables.init<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h3 id="firewalld"><a href="#firewalld" class="headerlink" title="firewalld"></a>firewalld</h3><p>从CentOS 7 版开始引入了新的前端管理工具<br>软件包：</p><ul><li>firewalld  </li><li>firewalld-config</li></ul><p>管理工具：  </p><ul><li>firewall-cmd 命令行工具  </li><li>firewall-config 图形工作</li></ul><h3 id="nftables"><a href="#nftables" class="headerlink" title="nftables"></a>nftables</h3><p>它重用了netfilter框架的许多部分，例如连接跟踪和NAT功能。它还保留了命名法和基本iptables设计的几个部分，例如表，链和规则。就像iptables一样，表充当链的容器，并且链包含单独的规则，这些规则可以执行操作，例如丢弃数据包，移至下一个规则或跳至新链。<br>从用户的角度来看，nftables添加了一个名为nft的新工具，该工具替代了iptables，arptables和<br>ebtables中的所有其他工具。从体系结构的角度来看，它还替换了内核中处理数据包过滤规则集运行时评估的那些部分。</p><ul><li>查看软件信息</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# rpm -qi nftables<br>Name        : nftables<br>Epoch       : 1<br>Version     : 0.8<br>Release     : 14.el7<br>Architecture: x86_64<br>Install Date: Wed 28 Sep 2022 11:36:55 AM CST<br>Group       : Unspecified<br>Size        : 500068<br>License     : GPLv2<br>Signature   : RSA/SHA256, Fri 23 Aug 2019 05:36:19 AM CST, Key ID 24c6a8a7f4a80eb5<br>Source RPM  : nftables-0.8-14.el7.src.rpm<br>Build Date  : Fri 09 Aug 2019 09:13:15 AM CST<br>Build Host  : x86-01.bsys.centos.org<br>Relocations : (not relocatable)<br>Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;<br>Vendor      : CentOS<br>URL         : http://netfilter.org/projects/nftables/<br>Summary     : Netfilter Tables userspace utillites<br>Description :<br>Netfilter Tables userspace utilities.<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>范例：centos8支持三种防火墙服务</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky ~]# systemctl status iptables.service<br>● iptables.service - IPv4 firewall with iptables<br>   Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor preset: disabled)<br>   Active: inactive (dead)<br>[root@rocky ~]# systemctl status firewalld.service<br>● firewalld.service - firewalld - dynamic firewall daemon<br>   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)<br>   Active: inactive (dead)<br>     Docs: man:firewalld(1)<br>[root@rocky ~]# systemctl status nftables.service<br>● nftables.service - Netfilter Tables<br>   Loaded: loaded (/usr/lib/systemd/system/nftables.service; disabled; vendor preset: disabled)<br>   Active: inactive (dead)<br>     Docs: man:nft(8)<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><h2 id="netfilter中五个勾子函数和报文流向"><a href="#netfilter中五个勾子函数和报文流向" class="headerlink" title="netfilter中五个勾子函数和报文流向"></a>netfilter中五个勾子函数和报文流向</h2><p>Netfilter在内核中选取五个位置放了五个hook(勾子) function(INPUT、OUTPUT、FORWARD、<br>PREROUTING、POSTROUTING)，而这五个hook function向用户开放，用户可以通过一个命令工具<br>（iptables）向其写入规则。</p><p>由信息过滤表（table）组成，包含控制IP包处理的规则集（rules），规则被分组放在链（chain）上。</p><p> <img src="/../image.assets/1664336861788.png" alt="1664336861788"> </p><p>提示：从 Linux kernel 4.2 版以后，Netfilter 在prerouting 前加了一个 ingress 勾子函数。可以使用这<br>个新的入口挂钩来过滤来自第2层的流量，这个新挂钩比预路由要早，基本上是 tc 命令（流量控制工<br>具）的替代品。<br><strong>三种报文流向</strong></p><ul><li>流入本机：PREROUTING –&gt; INPUT–&gt;用户空间进程</li><li>流出本机：用户空间进程 –&gt;OUTPUT–&gt; POSTROUTING</li><li>转发：PREROUTING –&gt; FORWARD –&gt; POSTROUTING</li></ul><h2 id="iptables组成"><a href="#iptables组成" class="headerlink" title="iptables组成"></a>iptables组成</h2><p>iptables由五个表table和五个链chain以及一些规则组成</p><p> <img src="/../image.assets/1664337377531.png" alt="1664337377531"> </p><p><strong>链 chain：</strong></p><ul><li>内置链：每个内置链对应于一个钩子函数</li><li>自定义链：用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制；只有Hook钩子调<br>用自定义链时，才生效</li></ul><p><strong>五个内置链chain:</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">INPUT,OUTPUT,FORWARD,PREROUTING,POSTROUTING<br></code></pre></td></tr></table></figure><p><strong>五个表：filter、nat、mangle、raw、security</strong></p><ul><li>filter：过滤规则表，根据预定义的规则过滤符合条件的数据包,默认表</li><li>nat：network address translation 地址转换规则表</li><li>mangle：修改数据标记位规则表</li><li>raw：关闭启用的连接跟踪机制，加快封包穿越防火墙速度</li><li>security：用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现<br>优先级由高到低的顺序为：</li></ul><p><strong>优先级由高到低的顺序为</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">security --&gt;raw--&gt;mangle--&gt;nat--&gt;filter<br></code></pre></td></tr></table></figure><p><strong>表和链对应关系</strong></p><p> <img src="/../image.assets/1664338350371.png" alt="1664338350371"> </p><p><strong>数据包过滤匹配流程</strong></p><p> <img src="/../image.assets/1664338392568.png" alt="1664338392568"> </p><p><strong>内核中数据包的传输过程</strong></p><ul><li>当一个数据包进入网卡时，数据包首先进入PREROUTING链，内核根据数据包目的IP判断是否需要<br>转送出去</li><li>如果数据包是进入本机的，数据包就会沿着图向下移动，到达INPUT链。数据包到达INPUT链后，<br>任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达<br>POSTROUTING链输出</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会向右移动，经过FORWARD链，然后到<br>达POSTROUTING链输出</li></ul><p><strong>范例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky ~]# iptables -vnL -t filter <br>Chain INPUT (policy ACCEPT 0 packets, 0 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>  168 10248 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED<br>    0     0 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0           <br>    0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0           <br>    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            state NEW tcp dpt:22<br>    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited<br><br>Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited<br><br>Chain OUTPUT (policy ACCEPT 101 packets, 11034 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><p><strong>CentOS 6 nat表不支持INPUT链</strong></p><h1 id="iptables-1"><a href="#iptables-1" class="headerlink" title="iptables"></a>iptables</h1><h2 id="iptables规则说明"><a href="#iptables规则说明" class="headerlink" title="iptables规则说明"></a>iptables规则说明</h2><h3 id="iptables规则组成"><a href="#iptables规则组成" class="headerlink" title="iptables规则组成"></a>iptables规则组成</h3><p>规则rule：根据规则的匹配条件尝试匹配报文，对匹配成功的报文根据规则定义的处理动作作出处理，<br>规则在链接上的次序即为其检查时的生效次序<br>匹配条件：默认为与条件，同时满足<br>基本匹配：IP，端口，TCP的Flags（SYN,ACK等）<br>扩展匹配：通过复杂高级功能匹配<br>处理动作：称为target，跳转目标</p><ul><li>内建处理动作：ACCEPT,DROP,REJECT,SNAT,DNAT,MASQUERADE,MARK,LOG…</li><li>自定义处理动作：自定义chain，利用分类管理复杂情形</li></ul><p>规则要添加在链上，才生效；添加在自定义链上不会自动生效<br>白名单:只有指定的特定主机可以访问,其它全拒绝<br>黑名单:只有指定的特定主机拒绝访问,其它全允许,默认方式</p><h3 id="iptables规则添加时考量点"><a href="#iptables规则添加时考量点" class="headerlink" title="iptables规则添加时考量点"></a>iptables规则添加时考量点</h3><ul><li>要实现哪种功能：判断添加在哪张表上</li><li>报文流经的路径：判断添加在哪个链上</li><li>报文的流向：判断源和目的</li><li>匹配规则：业务需要</li></ul><h2 id="iptables用法说明"><a href="#iptables用法说明" class="headerlink" title="iptables用法说明"></a>iptables用法说明</h2><p>帮助：man 8 iptables<br>格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">iptables [-t table] &#123;-A|-C|-D&#125; chain rule-specification<br></code></pre></td></tr></table></figure><p><strong>范例：filter表中INPUT规则</strong></p><p> <img src="/../image.assets/1664348845247.png" alt="1664348845247"> </p><p><strong>iptables命令格式详解</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">iptables [-t table] SUBCOMMAND chain [-m matchname [per-match-options]]<br>-j targetname [per-target-options]<br></code></pre></td></tr></table></figure><p>1、-t table：指定表<br>raw, mangle, nat, [filter]默认<br>2、SUBCOMMAND：子命令<br>链管理类：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-N：new, 自定义一条新的规则链<br>-E：重命名自定义链；引用计数不为0的自定义链不能够被重命名，也不能被删除<br>-X：delete，删除自定义的空的规则链<br>-P：Policy，设置默认策略；对filter表中的链而言，其默认策略有：ACCEPT：接受, DROP：丢弃<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 定义新的规则链<br>[root@rocky ~]# iptables -N web_chain<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DNS服务</title>
    <link href="/2022/09/22/DNS/"/>
    <url>/2022/09/22/DNS/</url>
    
    <content type="html"><![CDATA[<p class="note note-success"> DNS一般指域名系统。 域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用UDP端口53 </p><span id="more"></span>  <h1 id="名字解析介绍和DNS"><a href="#名字解析介绍和DNS" class="headerlink" title="名字解析介绍和DNS"></a>名字解析介绍和DNS</h1><h2 id="DNS服务工作原理"><a href="#DNS服务工作原理" class="headerlink" title="DNS服务工作原理"></a>DNS服务工作原理</h2><p> <img src="/../image.assets/1664088991760.png" alt="1664088991760"> </p><h2 id="DNS查询类型"><a href="#DNS查询类型" class="headerlink" title="DNS查询类型"></a>DNS查询类型</h2><p> <img src="/../image.assets/1664089216470.png" alt="1664089216470"> </p><ul><li>递归查询：<br>是指DNS服务器在收到用户发起的请求时，必须向用户返回一个准确的查询结果。如果DNS服务器<br>本地没有存储与之对应的信息，则该服务器需要询问其他服务器，并将返回的查询结构提交给用<br>户。<br>一般客户机和本地DNS服务器之间属于递归查询，即当客户机向DNS服务器发出请求后,若DNS服<br>务器本身不能解析，则会向另外的DNS服务器发出查询请求，得到最终的肯定或否定的结果后转交<br>给客户机。此查询的源和目标保持不变,为了查询结果只需要发起一次查询<br>递归算法:客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道-&gt;他<br>代为帮客户端去查找–&gt;最后再返回最终结果</li><li>迭代查询：<br>是指DNS服务器在收到用户发起的请求时，并不直接回复查询结果，而是告诉另一台DNS服务器的<br>地址，用户再向这台DNS服务器提交请求，这样依次反复，直到返回查询结果。<br>一般情况下(有例外)本地的DNS服务器向其它DNS服务器的查询属于迭代查询,如：若对方不能返回<br>权威的结果，则它会向下一个DNS服务器(参考前一个DNS服务器返回的结果)再次发起进行查询，<br>直到返回查询的结果为止。此查询的源不变,但查询的目标不断变化,为查询结果一般需要发起多次<br>查询</li><li>迭代算法︰<br>客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道并<br>推荐客户端应该找谁–&gt;客户端自己去找它</li><li>DNS缓存:<br>DNS缓存是将解析数据存储在靠近发起请求的客户端的位置，也可以说DNS数据是可以缓存在任意<br>位置，最终目的是以此减少递归查询过程，可以更快的让用户获得请求结果。</li></ul><h2 id="解析类型"><a href="#解析类型" class="headerlink" title="解析类型"></a>解析类型</h2><ul><li>FQDN –&gt; IP 正向解析  </li><li>IP –&gt; FQDN 反向解析<br><strong>注意：正反向解析是两个不同的名称空间，是两棵不同的解析树</strong></li></ul><h2 id="完整查询流程"><a href="#完整查询流程" class="headerlink" title="完整查询流程"></a>完整查询流程</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">Client --&gt;hosts文件 --&gt; Client DNS Service Local Cache --&gt; DNS Server (recursion递<br>归) --&gt; DNS Server Cache --&gt;DNS iteration(迭代) --&gt; 根--&gt; 顶级域名DNS--&gt;二级域名DNS…<br></code></pre></td></tr></table></figure><h1 id="DNS服务相关概念和技术"><a href="#DNS服务相关概念和技术" class="headerlink" title="DNS服务相关概念和技术"></a>DNS服务相关概念和技术</h1><h2 id="各种资源记录"><a href="#各种资源记录" class="headerlink" title="各种资源记录"></a>各种资源记录</h2><p>区域解析库：由众多资源记录RR(Resource Record)组成<br>记录类型：A, AAAA, PTR, SOA, NS, CNAME, MX</p><ul><li>SOA：Start Of Authority，起始授权记录；一个区域解析库有且仅能有一个SOA记录，必须位于解析库的第一条记录  </li><li>A：internet Address，作用，FQDN –&gt; IP  </li><li>AAAA：FQDN –&gt; IPv6  </li><li>PTR：PoinTeR，IP –&gt; FQDN  </li><li>NS：Name Server，专用于标明当前区域的DNS服务器  </li><li>CNAME ： Canonical Name，别名记录  </li><li>MX：Mail eXchanger，邮件交换器  </li><li>TXT：对域名进行标识和说明的一种方式，一般做验证记录时会使用此项，如：SPF（反垃圾邮<br>件）记录，https验证等，如下示例：  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">_dnsauth TXT 2012011200000051qgs69bwoh4h6nht4n1h0lr038x<br></code></pre></td></tr></table></figure></li></ul><h3 id="SOA记录"><a href="#SOA记录" class="headerlink" title="SOA记录"></a>SOA记录</h3><p>name: 当前区域的名字，例如”magedu.org.”<br>value: 有多部分组成<br>注意：</p><ol><li>当前区域的主DNS服务器的FQDN，也可以使用当前区域的名字，只是注释功能，可以不需要配置<br>对应的NS记录和A记录</li><li>当前区域管理员的邮箱地址；但地址中不能使用@符号，一般用.替换，例如：admin.magedu.org</li><li>主从服务区域传输相关定义以及否定的答案的统一的TTL</li></ol><p><strong>范例</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">magedu.org. 86400 IN SOA ns.magedu.org. nsadmin.magedu.org. (<br>2015042201 ;序列号<br>2H ;刷新时间<br>10M ;重试时间<br>1W ;过期时间<br>1D ;否定答案的TTL值<br>)<br></code></pre></td></tr></table></figure><h3 id="NS记录"><a href="#NS记录" class="headerlink" title="NS记录"></a>NS记录</h3><p>name: 当前区域的名字<br>value: 当前区域的某DNS服务器的名字，例如: ns.magedu.org.<br>注意：</p><ol><li>相邻的两个资源记录的name相同时，后续的可省略</li><li>对NS记录而言，任何一个ns记录后面的服务器名字，都应该在后续有一个A记录</li><li>一个区域可以有多个NS记录<br>范例：  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">magedu.org. IN NS ns1.magedu.org.<br>magedu.org. IN NS ns2.magedu.org.<br></code></pre></td></tr></table></figure></li></ol><h3 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h3><p>name: 当前区域的名字<br>value: 当前区域的某邮件服务器(smtp服务器)的主机名<br><strong>注意：</strong>  </p><ol><li>一个区域内，MX记录可有多个；但每个记录的value之前应该有一个数字(0-99)，表示此服务器的优先级；数字越小优先级越高  </li><li>对MX记录而言，任何一个MX记录后面的服务器名字，都应该在后续有一个A记录<br>范例：<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">magedu.org. IN MX 10 mx1.magedu.org.<br>IN MX 20 mx2.magedu.org.<br>mx1 A 10.0.0.100<br>mx2 A 10.0.0.200  <br></code></pre></td></tr></table></figure></li></ol><h3 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h3><p>name: 某主机的FQDN，例如：<a href="http://www.magedu.org/">www.magedu.org</a>.<br>value: 主机名对应主机的IP地址<br>避免用户写错名称时给错误答案，可通过泛域名解析进行解析至某特定地址<br>范例：  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">www.magedu.org. IN A 1.1.1.1<br>www.magedu.org. IN A 2.2.2.2<br>mx1.magedu.org. IN A 3.3.3.3<br>mx2.magedu.org. IN A 4.4.4.4<br>$GENERATE 1-254 HOST$ IN A 1.2.3.$<br>*.magedu.org. IN A 5.5.5.5<br>magedu.org. IN A 6.6.6.6<br>#注意：如果有和DNS的IP相同的多个同名的A记录，优先返回DNS的本机IP  <br></code></pre></td></tr></table></figure><h3 id="AAAA记录"><a href="#AAAA记录" class="headerlink" title="AAAA记录"></a>AAAA记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">name: FQDN  <br>value: IPv6  <br></code></pre></td></tr></table></figure><h3 id="PTR记录"><a href="#PTR记录" class="headerlink" title="PTR记录"></a>PTR记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">name: IP，有特定格式，把IP地址反过来写，1.2.3.4，要写作4.3.2.1；而有特定后缀：in-<br>addr.arpa.，所以完整写法为：4.3.2.1.in-addr.arpa.<br>value: FQDN<br></code></pre></td></tr></table></figure><p>注意：网络地址及后缀可省略；主机地址依然需要反着写<br>例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">4.3.2.1.in-addr.arpa. IN PTR www.magedu.org.<br>#如1.2.3为网络地址，可简写成：<br>4 IN PTR www.magedu.org.<br></code></pre></td></tr></table></figure><h3 id="CNAME别名记录"><a href="#CNAME别名记录" class="headerlink" title="CNAME别名记录"></a>CNAME别名记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">name: 别名的FQDN<br>value: 真正名字的FQDN  <br></code></pre></td></tr></table></figure><p><strong>例如</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">www.magedu.org. IN CNAME websrv.magedu.org.<br></code></pre></td></tr></table></figure><h2 id="DNS软件bind"><a href="#DNS软件bind" class="headerlink" title="DNS软件bind"></a>DNS软件bind</h2><p>DNS服务器软件：bind，powerdns，dnsmasq，unbound，coredns  </p><h3 id="bind相关程序包"><a href="#bind相关程序包" class="headerlink" title="bind相关程序包"></a>bind相关程序包</h3><p>yum list all bind* </p><p>bind：服务器<br>bind-utils: 客户端<br>bind-libs：相关库,依赖关系自动安装<br>bind-chroot: 安全包，将dns相关文件放至 &#x2F;var&#x2F;named&#x2F;chroot&#x2F;</p><p><strong>范例：安装bind软件</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos8 ~]#dnf -y install bind bind-utils<br>[root@ubuntu2004 ~]#apt -y install bind9 bind9-utils<br></code></pre></td></tr></table></figure><h3 id="bind包相关文件"><a href="#bind包相关文件" class="headerlink" title="bind包相关文件"></a>bind包相关文件</h3><p>BIND主程序：&#x2F;usr&#x2F;sbin&#x2F;named<br>服务脚本和Unit名称：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;named，&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;named.service<br>主配置文件：&#x2F;etc&#x2F;named.conf, &#x2F;etc&#x2F;named.rfc1912.zones, &#x2F;etc&#x2F;rndc.key<br>管理工具：&#x2F;usr&#x2F;sbin&#x2F;rndc：remote name domain controller，默认与bind安装在同一主机，且<br>只能通过127.0.0.1连接named进程，提供辅助性的管理功能；953&#x2F;tcp<br>解析库文件：&#x2F;var&#x2F;named&#x2F;ZONE_NAME.ZONE<br>注意：<br>(1) 一台物理服务器可同时为多个区域提供解析<br>(2) 必须要有根区域文件；named.ca<br>(3) 应该有两个（如果包括ipv6的，应该更多）实现localhost和本地回环地址的解析库</p><h3 id="主配置文件"><a href="#主配置文件" class="headerlink" title="主配置文件"></a>主配置文件</h3><ul><li>全局配置：options {};</li><li>日志子系统配置：logging {};</li><li>区域定义：本机能够为哪些zone进行解析，就要定义哪些zone<br>zone “ZONE_NAME” IN {};<br><strong>注意：</strong></li><li>任何服务程序如果期望其能够通过网络被其它主机访问，至少应该监听在一个能与外部主机通信的<br>IP地址上 </li><li>缓存名称服务器的配置：监听外部地址即可  </li><li>dnssec: 建议关闭dnssec，设为no</li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时间同步机制和架构</title>
    <link href="/2022/09/17/TimeSynchronization/"/>
    <url>/2022/09/17/TimeSynchronization/</url>
    
    <content type="html"><![CDATA[<p class="note note-success">多主机协作工作时，各个主机的时间同步很重要，时间不一致会造成很多重要应用的故障，如：加密协议，日志，集群等， 利用NTP（Network Time Protocol） 协议使网络中的各个计算机时间达到同步。目前NTP协议属于运维基础架构中必备的基本服务之一</p><span id="more"></span><h1 id="时间同步服务"><a href="#时间同步服务" class="headerlink" title="时间同步服务"></a>时间同步服务</h1><p>时间同步软件  </p><ul><li>ntpdate</li><li>chrony</li></ul><p><strong>ntp:</strong></p><p>将系统时钟和世界协调时钟UTC同步，精度在局域网内可达0.1ms，在互联网上绝大多数的地方精度可以<br>达到1-50ms<br>项目官网：<a href="http://www.ntp.org/">http://www.ntp.org</a>  </p><p><strong>范例：ubuntu同步时间</strong></p><ul><li>安装ntpdate</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">apt install ntpdate<br></code></pre></td></tr></table></figure><ul><li>同步时间</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># ntp.aliyun.com阿里云时间同步服务器地址<br>ntpdate ntp.aliyun.com<br></code></pre></td></tr></table></figure><p>扩展：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">阿里云公共NTP服务器<br>Unix/linux类：ntp.aliyun.com，ntp1-7.aliyun.com<br>windows类： time.pool.aliyun.com<br>腾讯公共NTP<br>time1-5.cloud.tencent.com<br>大学ntp服务<br>s1a.time.edu.cn 北京邮电大学<br>s1b.time.edu.cn 清华大学<br>s1c.time.edu.cn 北京大学<br>国家授时中心服务器：210.72.145.44<br>美国标准技术院: time.nist.gov<br></code></pre></td></tr></table></figure><p  class="note note-warning" >注意：CentOS 8上已经没有ntpdate命令，因此该种时间同步方式不建议使用</p>**chrony：**实现NTP协议的的自由软件。可使系统时钟与NTP服务器，参考时钟（例如GPS接收器）以及使用手表和键盘的手动输入进行同步。还可以作为NTPv4（RFC 5905）服务器和对等体运行，为网络中的计算机提供时间服务。设计用于在各种条件下良好运行，包括间歇性和高度拥挤的网络连接，温度变化（计算机时钟对温度敏感），以及不能连续运行或在虚拟机上运行的系统。通过Internet同步的两台机器之间的典型精度在几毫秒之内，在LAN上，精度通常为几十微秒。利用硬件时间戳或硬件参考时钟，可实现亚微秒的精度  <h1 id="chrony"><a href="#chrony" class="headerlink" title="chrony"></a>chrony</h1><h2 id="chrony介绍"><a href="#chrony介绍" class="headerlink" title="chrony介绍"></a>chrony介绍</h2><p>chrony 的优势：  </p><ul><li>更快的同步只需要数分钟而非数小时时间，从而最大程度减少了时间和频率误差，对于并非全天<br>24 小时运行的虚拟计算机而言非常有用  </li><li>能够更好地响应时钟频率的快速变化，对于具备不稳定时钟的虚拟机或导致时钟频率发生变化的节<br>能技术而言非常有用  </li><li>在初始同步后，它不会停止时钟，以防对需要系统时间保持单调的应用程序造成影响  </li><li>在应对临时非对称延迟时（例如，在大规模下载造成链接饱和时）提供了更好的稳定性  </li><li>无需对服务器进行定期轮询，因此具备间歇性网络连接的系统仍然可以快速同步时钟<br>chrony官网：<a href="https://chrony.tuxfamily.org/">https://chrony.tuxfamily.org</a><br>chrony官方文档：<a href="https://chrony.tuxfamily.org/documentation.html">https://chrony.tuxfamily.org/documentation.html</a></li></ul><h2 id="chrony-文件组成"><a href="#chrony-文件组成" class="headerlink" title="chrony 文件组成"></a>chrony 文件组成</h2><p>包：chrony<br>两个主要程序：chronyd和chronyc  </p><ul><li>chronyd：后台运行的守护进程，用于调整内核中运行的系统时钟和时钟服务器同步。它确定计算<br>机增减时间的比率，并对此进行补偿  </li><li>chronyc：命令行用户工具，用于监控性能并进行多样化的配置。它可以在chronyd实例控制的计<br>算机上工作，也可在一台不同的远程计算机上工作<br>服务unit 文件： &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;chronyd.service<br>监听端口： 服务端: 123&#x2F;udp,客户端: 323&#x2F;udp<br>配置文件： &#x2F;etc&#x2F;chrony.conf</li></ul><h2 id="配置文件chrony-conf"><a href="#配置文件chrony-conf" class="headerlink" title="配置文件chrony.conf"></a>配置文件chrony.conf</h2><p>官网文档: <a href="https://chrony.tuxfamily.org/doc/3.5/chrony.conf.html">https://chrony.tuxfamily.org/doc/3.5/chrony.conf.html</a>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">server #可用于时钟服务器，iburst 选项当服务器可达时，发送一个八个数据包而不是通常的一个数据<br>包。 包间隔通常为2秒,可加快初始同步速度<br>pool #该指令的语法与server 指令的语法相似，不同之处在于它用于指定NTP服务器池而不是单个<br>NTP服务器。池名称应解析为随时间可能会变化的多个地址<br>driftfile #根据实际时间计算出计算机增减时间的比率，将它记录到一个文件中，会在重启后为系统时钟作<br>出补偿<br>rtcsync #启用内核模式，系统时间每11分钟会拷贝到实时时钟（RTC）<br>allow / deny #指定一台主机、子网，或者网络以允许或拒绝访问本服务器<br>cmdallow / cmddeny #可以指定哪台主机可以通过chronyd使用控制命令<br>bindcmdaddress #允许chronyd监听哪个接口来接收由chronyc执行的命令<br>makestep # 通常chronyd将根据需求通过减慢或加速时钟，使得系统逐步纠正所有时间偏差。在某些特定<br>情况下，系统时钟可能会漂移过快，导致该调整过程消耗很长的时间来纠正系统时钟。该指令强制chronyd在<br>调整期大于某个阀值时调整系统时钟<br>local stratum 10 #即使server指令中时间服务器不可用，也允许将本地时间作为标准时间授时给其它<br>客户端<br></code></pre></td></tr></table></figure><h2 id="NTP-客户端工具"><a href="#NTP-客户端工具" class="headerlink" title="NTP 客户端工具"></a>NTP 客户端工具</h2><p>chronyc 可以运行在交互式和非交互式两种方式，支持以下子命令  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">help 命令可以查看更多chronyc的交互命令<br>accheck 检查是否对特定主机可访问当前服务器<br>activity 显示有多少NTP源在线/离线<br>sources [-v] 显示当前时间源的同步信息<br>sourcestats [-v]显示当前时间源的同步统计信息<br>add server 手动添加一台新的NTP服务器<br>clients 报告已访问本服务器的客户端列表<br>delete 手动移除NTP服务器或对等服务器<br>settime 手动设置守护进程时间<br>tracking 显示系统时间信息<br></code></pre></td></tr></table></figure><h2 id="时间工具"><a href="#时间工具" class="headerlink" title="时间工具"></a>时间工具</h2><ul><li>timedatectl 时间和时区管理</li></ul><p><strong>查看日期时间和时区以及NTP状态</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# timedatectl<br>               Local time: Sat 2022-09-17 11:49:00 UTC<br>           Universal time: Sat 2022-09-17 11:49:00 UTC<br>                 RTC time: Sat 2022-09-17 11:49:00    <br>                Time zone: Etc/UTC (UTC, +0000)       <br>System clock synchronized: yes                        <br>              NTP service: active                     <br>          RTC in local TZ: no                         <br>root@ubuntu2004:~# <br></code></pre></td></tr></table></figure><p><strong>查看时区列表</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# <br>root@ubuntu2004:~# timedatectl list-timezones<br>Africa/Abidjan<br>Africa/Accra<br>Africa/Addis_Ababa<br>Africa/Algiers<br>Africa/Asmara<br>Africa/Asmera<br>Africa/Bamako<br>Africa/Bangui<br>Africa/Banjul<br>Africa/Bissau<br>Africa/Blantyre<br>Africa/Brazzaville<br>Africa/Bujumbura<br>Africa/Cairo<br>Africa/Casablanca<br>Africa/Ceuta<br>.........<br>.........<br></code></pre></td></tr></table></figure><p><strong>修改时区</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 修改时区亚洲上海<br>root@ubuntu2004:~# timedatectl set-timezone Asia/Shanghai<br>root@ubuntu2004:~# <br></code></pre></td></tr></table></figure><p><strong>修改时区方式2</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#修改时区<br>root@ubuntu2004:~# rm -f /etc/localtime<br>root@ubuntu2004:~# ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br>#修改日期时间：<br>timedatectl set-time &quot;2017-01-23 10:30:00&quot;<br>#开启NTP：<br>timedatectl set-ntp true/false<br></code></pre></td></tr></table></figure><p><strong>修改时间</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#修改日期时间：<br>timedatectl set-time &quot;2017-01-23 10:30:00&quot;  <br><br>#需要修改时间为24小时，可以修改/etc/default/locale，默认没有LC_TIME这个变量，在文件中增加一行：<br>LC_TIME=en_DK.UTF-8  <br><br>#开启NTP：<br>timedatectl set-ntp true/false<br></code></pre></td></tr></table></figure><h2 id="实战：实现私有的时间服务器"><a href="#实战：实现私有的时间服务器" class="headerlink" title="实战：实现私有的时间服务器"></a>实战：实现私有的时间服务器</h2><p> <img src="/../image.assets/1663418081035.png" alt="1663418081035"> </p><ul><li>安装chrony</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># centos系统检查是否安装<br>rpm -q chrony<br><br># 安装<br>yum install chrony<br><br># 启动服务  <br>systemctl start chronyd  <br><br># ubuntu系统上安装,ubuntu系统上安装完成后已经启动  <br>apt install chrony<br></code></pre></td></tr></table></figure><ul><li>服务器端配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># IP:192.168.179.146作为时间同步服务器端，192.168.179.146的时间与阿里云时间同步器服务器同步<br>[root@centos7 ~]# hostname -I<br>192.168.179.146 <br>[root@centos7 ~]#   <br><br># 修改192.168.179.146配置文件  /etc/chrony.conf<br>server ntp.aliyun.com iburst<br>server ntp1.aliyun.com iburst<br>server ntp2.aliyun.com iburst<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1663419170404.png" alt="1663419170404"> </p><p>allow 0.0.0.0&#x2F;0 #加此行,指定允许同步的网段</p><p> <img src="/../image.assets/1663419297813.png" alt="1663419297813"> </p><p>删除此行注释,当互联网无法连接,仍然可以为客户端提供时间同步服务 </p><p> <img src="/../image.assets/1663419361157.png" alt="1663419361157"> </p><p>重启chrony服务  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">systemctl restart chronyd<br></code></pre></td></tr></table></figure><p>服务启动后会打开端口123&#x2F;udp  </p><p> <img src="/../image.assets/1663419502330.png" alt="1663419502330"> </p><p>显示当前的时间源同步信息 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]# chronyc sources -V<br>210 Number of sources = 2<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* 203.107.6.88                  2   6    37    58   -365us[-3079us] +/-   40ms<br>^? 120.25.115.20                 2   7   110   123   -773us[-3488us] +/-   26ms<br>[root@centos7 ~]# <br><br># *号表示当前同步的时间源地址<br></code></pre></td></tr></table></figure><p>客户端配置  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 客户端<br>root@ubuntu2004:~# hostname -I<br>192.168.179.147 <br>root@ubuntu2004:~# <br><br>#ubuntu系统配置文件与centos目录不一样<br>root@ubuntu2004:~# vim /etc/chrony/chrony.conf<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1663420018409.png" alt="1663420018409"> </p><p>重启chrony服务  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# systemctl restart chronyd<br></code></pre></td></tr></table></figure><p>确认同步成功  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">root@ubuntu2004:~# chronyc sources -V<br>210 Number of sources = 1<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* 192.168.179.146               3   6    17    44    +64us[ +218us] +/-   38ms<br>root@ubuntu2004:~# <br><br>#  ^* 192.168.179.146表示已经成功与192.168.179.146时间同步<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>批量修改多台主机的root密码为随机密码</title>
    <link href="/2022/09/12/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%AF%86%E7%A0%81%E4%B8%BA%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6/"/>
    <url>/2022/09/12/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%AF%86%E7%A0%81%E4%B8%BA%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<p class= "note note-success">批量修改多台主机的root密码为随机密码<p/><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#!/bin/bash<br># 检查sshpass是否安装，没有安装则安装sshpass<br>rpm -q sshpass &amp;&gt; /dev/null || yum install sshpass<br><br># 主机root用户密码<br>export SSHPASS=123456<br><br># 主机地址<br>NET=192.168.179<br><br># 主机地址<br>for i in &#123;20..140&#125;;do<br><br>    &#123;<br>    # 生成随机密码<br>    PASS=`openssl rand -base64 9`<br>    # 链接远程主机并修改root用户密码  StrictHostKeyChecking=no 跳过检查<br>    sshpass -e ssh -o StrictHostKeyChecking=no $&#123;NET&#125;.$&#123;i&#125; &quot;echo root:$&#123;PASS&#125; | chpasswd &amp;&gt; /dev/null&quot;<br>    # IP和密码重定向到文件中<br>    echo $NET.$i:$PASS &gt;&gt; host.txt<br><br>     &#125;&amp; # 后台运行<br>done<br>wait<br><br></code></pre></td></tr></table></figure><p><strong>sshpass使用帮助</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 data]# sshpass --help<br>sshpass: invalid option -- &#x27;-&#x27;<br>Usage: sshpass [-f|-d|-p|-e] [-hV] command parameters<br>   -f filename   Take password to use from file<br>   -d number     Use number as file descriptor for getting password<br>   -p password   Provide password as argument (security unwise)<br>   -e            Password is passed as env-var &quot;SSHPASS&quot;<br>   With no parameters - password will be taken from stdin<br><br>   -P prompt     Which string should sshpass search for to detect a password prompt<br>   -v            Be verbose about what you&#x27;re doing<br>   -h            Show help (this screen)<br>   -V            Print version information<br>At most one of -f, -d, -p or -e should be used<br>[root@centos7 data]# <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH服务</title>
    <link href="/2022/09/12/ssh%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/09/12/ssh%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p class="note note-success">ssh: secure shell protocol, 22/tcp, 安全的远程登录，实现加密通信，代替传统的 telnet 协议</p><span id="more"></span><h1 id="ssh服务介绍"><a href="#ssh服务介绍" class="headerlink" title="ssh服务介绍"></a>ssh服务介绍</h1><p>ssh: secure shell protocol, 22&#x2F;tcp, 安全的远程登录，实现加密通信，代替传统的 telnet 协议<br><strong>具体的软件实现：</strong></p><ul><li>OpenSSH：ssh协议的开源实现，CentOS 默认安装</li><li>dropbear：另一个ssh协议的开源项目的实现</li></ul><p><strong>SSH 协议版本</strong></p><ul><li>v1：基于CRC-32做MAC，不安全；man-in-middle</li><li>v2：双方主机协议选择安全的MAC方式，基于DH算法做密钥交换，基于RSA或DSA实现身份认证</li></ul><h1 id="openssh-服务"><a href="#openssh-服务" class="headerlink" title="openssh 服务"></a>openssh 服务</h1><p>OpenSSH是SSH （Secure SHell） 协议的免费开源实现，一般在各种Linux版本中会默认安装，基于C&#x2F;S结构<br><strong>Openssh软件相关包：</strong></p><ul><li>openssh</li><li>openssh-clients</li><li>openssh-server</li></ul><h2 id="客户端-ssh命令"><a href="#客户端-ssh命令" class="headerlink" title="客户端 ssh命令"></a>客户端 ssh命令</h2><p>ssh命令是ssh客户端，允许实现对远程系统经验证地加密安全访问<br>当用户远程连接ssh服务器时，会复制ssh服务器&#x2F;etc&#x2F;ssh&#x2F;ssh_host*key.pub文件中的公钥到客户机的~&#x2F;.ssh&#x2F;know_hosts中。下次连接时，会自动匹配相对应的私钥，不能匹配，将拒绝连接<br> **ssh客户端配置文件： &#x2F;etc&#x2F;ssh&#x2F;ssh_config **<br>**主要配置:  **</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">#StrictHostKeyChecking ask<br>#首次登录不显示检查提示<br>StrictHostKeyChecking no<br># IdentityFile ~/.ssh/id_rsa<br># IdentityFile ~/.ssh/id_dsa<br># IdentityFile ~/.ssh/id_ecdsa<br># IdentityFile ~/.ssh/id_ed25519<br># Port 22<br></code></pre></td></tr></table></figure><p><strong>范例：禁止首次连接的询问过程</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos7 ~]#sed -i.bak &#x27;/StrictHostKeyChecking/s/.*/StrictHostKeyChecking<br>no/&#x27; /etc/ssh/ssh_config<br></code></pre></td></tr></table></figure><p><strong>格式</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh [user@]host [COMMAND]<br>ssh [-l user] host [COMMAND]<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-p port #远程服务器监听的端口<br>-b #指定连接的源IP<br>-v #调试模式<br>-C #压缩方式<br>-X #支持x11转发<br>-t #强制伪tty分配，如：ssh -t remoteserver1 ssh -t remoteserver2 ssh<br>remoteserver3<br>-o option 如：-o StrictHostKeyChecking=no<br>-i &lt;file&gt; #指定私钥文件路径，实现基于key验证，默认使用文件： ~/.ssh/id_dsa,<br>~/.ssh/id_ecdsa, ~/.ssh/id_ed25519，~/.ssh/id_rsa等<br></code></pre></td></tr></table></figure><p><strong>在远程主机执行本地脚本</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky ~]# cat test.sh <br>#!/bin/bash<br>hostname -I<br>[root@rocky ~]# ssh root@192.168.179.145 /bin/bash &lt;test.sh <br>root@192.168.179.145&#x27;s password: <br>192.168.179.145 <br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><h2 id="其他ssh客户端工具"><a href="#其他ssh客户端工具" class="headerlink" title="其他ssh客户端工具"></a>其他ssh客户端工具</h2><h3 id="scp命令"><a href="#scp命令" class="headerlink" title="scp命令"></a>scp命令</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp [options] SRC... DEST/<br></code></pre></td></tr></table></figure><p><strong>方式：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp [options] [user@]host:/sourcefile /destpath<br>scp [options] /sourcefile [user@]host:/destpath<br>scp [options] [user@]host1:/sourcetpath [user@]host2:/destpath<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-C 压缩数据流<br>-r 递归复制<br>-p 保持原文件的属性信息<br>-q 静默模式<br>-P PORT 指明remote host的监听的端口<br></code></pre></td></tr></table></figure><p><strong>范例:从远程机器复制文件到本地目录</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/ <br></code></pre></td></tr></table></figure><p><strong>范例： 上传本地文件到远程机器指定目录</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest<br></code></pre></td></tr></table></figure><p class="note note-success"> 注:复制目录加上选项-r</p>###  rsync命令<p>rsync工具可以基于ssh和rsync协议实现高效率的远程系统之间复制文件，使用安全的shell连接做为传输方式，比scp更快，基于增量数据同步，即只复制两方不同的文件，此工具来自于rsync包<br><strong>注意：通信两端主机都需要安装 rsync 软件</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">rsync -av /etc server1:/tmp/ #复制目录和目录下文件<br>rsync -av /etc/ server1:/tmp/ #只复制目录下文件<br></code></pre></td></tr></table></figure><p>** 常用选型**</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-n 模拟复制过程<br>-v 显示详细过程<br>-r 递归复制目录树<br>-p 保留权限<br>-t 保留修改时间戳<br>-g 保留组信息<br>-o 保留所有者信息<br>-l 将软链接文件本身进行复制（默认）<br>-L 将软链接文件指向的文件复制<br>-u 如果接收者的文件比发送者的文件较新，将忽略同步<br>-z 压缩，节约网络带宽<br>-a 存档，相当于-rlptgoD，但不保留ACL（-A）和SELinux属性（-X）<br>--delete 源数据删除，目标数据也自动同步删除<br>--progress 显示进度<br>--bwlimit=5120 #限速以KB为单位,5120表示5MB<br></code></pre></td></tr></table></figure><p><strong>范例:复制文件到远程主机目录下</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">rsync ./test.sh root@192.168.179.145:/root<br></code></pre></td></tr></table></figure><h3 id="自动登录-ssh工具-sshpass"><a href="#自动登录-ssh工具-sshpass" class="headerlink" title="自动登录 ssh工具 sshpass"></a>自动登录 ssh工具 sshpass</h3><p>由EPEL源提供，ssh登陆不能在命令行中指定密码。sshpass的出现，解决了这一问题。sshpass用于非<br>交互SSH的密码验证，一般用在sh脚本中，无须再次输入密码（本机known_hosts文件中有的主机才能<br>生效）。它允许你用 -p 参数指定明文密码，然后直接登录远程服务器，它支持密码从命令行、文件、环<br>境变量中读取。<br><strong>格式：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">sshpass [option] command parameters<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">-p password #后跟密码它允许你用 -p 参数指定明文密码，然后直接登录远程服务器<br>-f filename #后跟保存密码的文件名，密码是文件内容的第一行<br>-e #将环境变量SSHPASS作为密码<br></code></pre></td></tr></table></figure><p><strong>范例:登录远程主机执行指定命令</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 检测sshpass是否安装<br>[root@rocky ~]# rpm -q sshpass<br>package sshpass is not installed<br># 安装sshpass<br>[root@rocky ~]# yum install sshpass<br># 登录远程主机，首次登录不显示检查提示，执行hostname -I命令<br>[root@rocky ~]# sshpass -p 123456 ssh -o StrictHostKeyChecking=no root@192.168.179.145 hostname -I<br>192.168.179.145 <br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><h2 id="实现基于密钥登录方式验证"><a href="#实现基于密钥登录方式验证" class="headerlink" title="实现基于密钥登录方式验证"></a>实现基于密钥登录方式验证</h2><p><strong>在客户端生成密钥对</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-keygen -t rsa [-P &#x27;password&#x27;] [-f “~/.ssh/id_rsa&quot;]<br></code></pre></td></tr></table></figure><p><strong>把公钥文件传输至远程服务器对应用户的家目录</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-copy-id [-i [identity_file]] [user@]host<br></code></pre></td></tr></table></figure><p><strong>重设私钥口令：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-keygen -p<br></code></pre></td></tr></table></figure><p>在SecureCRT或Xshell实现基于key验证<br>在SecureCRT工具—&gt;创建公钥—&gt;生成Identity.pub文件<br>转化为openssh兼容格式（适合SecureCRT，Xshell不需要转化格式），并复制到需登录主机上相应文<br>件authorized_keys中,注意权限必须为600，在需登录的ssh主机上执行：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">ssh-keygen -i -f Identity.pub &gt;&gt; .ssh/authorized_keys<br></code></pre></td></tr></table></figure><p><strong>范例：实现基于 key 验证</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@centos8 ~]#ssh-keygen<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/root/.ssh/id_rsa): #回车，接受默认值<br>Enter passphrase (empty for no passphrase): #回车，接受默认值，空密码<br>Enter same passphrase again: #回车，接受默认值<br>Your identification has been saved in /root/.ssh/id_rsa.<br>Your public key has been saved in /root/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:vpPtmqRv1llmoSvqT2Lx5C0LPGTE0pvdAqhDqlR5jLY root@centos8.wangxiaochun.com<br>The key&#x27;s randomart image is:<br>+---[RSA 3072]----+<br>| |<br>| ++ |<br>| .=oo= |<br>| oo.oo = . . |<br>|..oE * S .. . |<br>|o . + * o. + |<br>|. * B+.* |<br>| . B*== |<br>| .+*B=. |<br>+----[SHA256]-----+<br>[root@centos8 ~]#ll .ssh/<br>total 8<br>-rw------- 1 root root 2622 May 22 09:51 id_rsa<br>-rw-r--r-- 1 root root 583 May 22 09:51 id_rsa.pub<br>[root@centos8 ~]#<br><br># 将本主机的公钥复制到远程主机的authorized_keys中<br>[root@centos8 ~]#ssh-copy-id root@10.0.0.7<br>/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed:<br>&quot;/root/.ssh/id_rsa.pub&quot;<br>The authenticity of host &#x27;10.0.0.7 (10.0.0.7)&#x27; can&#x27;t be established.<br>ECDSA key fingerprint is SHA256:s//WMgPVXmOjqfOg3f3X0nmaPZF+Fj5vPdWCnAzDcpU.<br>Are you sure you want to continue connecting (yes/no/[fingerprint])? yes<br>/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter<br>out any that are already installed<br>/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are<br>prompted now it is to install the new keys<br>root@10.0.0.7&#x27;s password: #输入远程用户的密码<br>Number of key(s) added: 1<br>Now try logging into the machine, with: &quot;ssh &#x27;10.0.0.7&#x27;&quot;<br>and check to make sure that only the key(s) you wanted were added.<br><br>#对私钥加密<br>[root@centos8 ~]#ssh-keygen -p<br></code></pre></td></tr></table></figure><h2 id="ssh服务配置"><a href="#ssh服务配置" class="headerlink" title="ssh服务配置"></a>ssh服务配置</h2><p><strong>服务器端：sshd<br>服务器端的配置文件: &#x2F;etc&#x2F;ssh&#x2F;sshd_config<br>服务器端的配置文件帮助：man 5 sshd_config<br>常用参数：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">Port 22 #生产建议修改<br>ListenAddress ip<br>LoginGraceTime 2m<br>PermitRootLogin yes #默认ubuntu不允许root远程ssh登录<br>StrictModes yes #检查.ssh/文件的所有者，权限等<br>MaxAuthTries 6 #pecifies the maximum number of authentication<br>attempts permitted per connection. Once the number of failures reaches half this<br>value, additional failures are logged. The default is 6.<br>MaxSessions 10 #同一个连接最大会话<br>PubkeyAuthentication yes #基于key验证<br>PermitEmptyPasswords no #空密码连接<br>PasswordAuthentication yes #基于用户名和密码连接<br>GatewayPorts no<br>ClientAliveInterval 10 #单位:秒<br>ClientAliveCountMax 3 #默认3<br>UseDNS yes #提高速度可改为no<br>GSSAPIAuthentication yes #提高速度可改为no<br>MaxStartups #未认证连接最大值，默认值10<br>Banner /path/file<br>#以下可以限制可登录用户的办法：<br>AllowUsers user1 user2 user3<br>DenyUsers user1 user2 user3<br>AllowGroups g1 g2<br>DenyGroups g1 g2<br></code></pre></td></tr></table></figure><p><strong>范例：设置 ssh 空闲60s 自动注销</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">Vim /etc/ssh/sshd_config<br>ClientAliveInterval 60<br>ClientAliveCountMax 0<br>Service sshd restart<br>#注意：新开一个连接才有效<br></code></pre></td></tr></table></figure><p><strong>范例：解决ssh登录缓慢的问题</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">vim /etc/ssh/sshd_config<br>UseDNS no<br>GSSAPIAuthentication no<br>systemctl restart sshd<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rocky上实现私有CA和证书申请</title>
    <link href="/2022/09/11/Rocky%E4%B8%8A%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89CA%E5%92%8C%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
    <url>/2022/09/11/Rocky%E4%B8%8A%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89CA%E5%92%8C%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</url>
    
    <content type="html"><![CDATA[<p class= "note note-success"> OpenSSL计划在1998年开始，其目标是发明一套自由的加密工具，在互联网上使用。OpenSSL以Eric Young以及Tim Hudson两人开发的SSLeay为基础，随着两人前往RSA公司任职，SSLeay在1998年12月停止开发。因此在1998年12月，社群另外分支出OpenSSL，继续开发下去</p><span id="more"></span>  <h1 id="在rocky上实现私有CA和证书申请"><a href="#在rocky上实现私有CA和证书申请" class="headerlink" title="在rocky上实现私有CA和证书申请"></a>在rocky上实现私有CA和证书申请</h1><ul><li><strong>创建CA相关目录和文件&#x2F;etc&#x2F;pki&#x2F;CA</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky pki]# mkdir -pv /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;<br>mkdir: created directory &#x27;/etc/pki/CA&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/certs&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/crl&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/newcerts&#x27;<br>mkdir: created directory &#x27;/etc/pki/CA/private&#x27;<br>[root@rocky pki]#<br></code></pre></td></tr></table></figure><ul><li><strong>创建index.txt文件(&#x2F;etc&#x2F;pki&#x2F;CA目录下)</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# touch index.txt<br><br>#指定第一个颁发证书的序列号，为16进制数<br>[root@rocky CA]# echo 01 &gt; /etc/pki/CA/serial<br>0F /etc/pki/CA/certs<br>[root@rocky CA]# <br><br>[root@rocky CA]# tree<br>.<br>├── certs<br>├── crl<br>├── index.txt<br>├── newcerts<br>└── private<br><br>4 directories, 1 file<br>[root@rocky CA]# <br></code></pre></td></tr></table></figure><ul><li><strong>创建CA的私钥</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# pwd<br>/etc/pki/CA<br><br>#因为加了小括号，因此是在子进程中运行的，umask的值不会影响当前进程<br>[root@rocky CA]# (umask 066;openssl genrsa -out private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus (2 primes)<br>.................................................................................................................................+++++<br>.............+++++<br>e is 65537 (0x010001)<br>[root@rocky CA]# <br><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1662984286147.png" alt="1662984286147"> </p><p> <img src="/../image.assets/1662984391511.png" alt="1662984391511"> </p><ul><li><strong>给CA颁发自签名证书</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXET">[root@rocky pki]# openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -days 3650 -out /etc/pki/CA/cacert.pem<br><br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN   # 指定国家<br>State or Province Name (full name) []:guizhou   # 指定省<br>Locality Name (eg, city) [Default City]:duyun   # 指定城市<br>Organization Name (eg, company) [Default Company Ltd]:magedu     # 公司<br>Organizational Unit Name (eg, section) []:it   # 部门<br>Common Name (eg, your name or your server&#x27;s hostname) []:m48   # 指定给颁发者<br>Email Address []:    # 邮箱地址<br></code></pre></td></tr></table></figure><p><strong>参数说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXET">-new：生成新证书签署请求；<br><br>-x509：专用用于CA生成字签证书<br><br>-key：生成请求时用到的私钥文件<br><br>-day：证书的有效期限<br><br>-out：证书的保存路径（在配置文件当中有固定路径，该文件可以自动生成）<br></code></pre></td></tr></table></figure><ul><li><strong>用户生成私钥和证书申请</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# mkdir -pv /data/app1<br>mkdir: created directory &#x27;/data&#x27;<br>mkdir: created directory &#x27;/data/app1&#x27;<br>[root@rocky CA]# <br># 生成私钥文件  <br>[root@rocky app1]# (umask 066;openssl genrsa -out  /data/app1/app1.key 2048)<br>Generating RSA private key, 2048 bit long modulus (2 primes)<br>.......................+++++<br>.............+++++<br>e is 65537 (0x010001)<br>[root@rocky app1]# <br><br>#生成证书申请文件<br>[root@rocky app1]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:guizhou<br>string is too long, it needs to be no more than 2 bytes long<br>Country Name (2 letter code) [XX]:duyun^C<br>[root@rocky app1]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN<br>State or Province Name (full name) []:guizhou<br>Locality Name (eg, city) [Default City]:duyun<br>Organization Name (eg, company) [Default Company Ltd]:magedu<br>Organizational Unit Name (eg, section) []:it<br>Common Name (eg, your name or your server&#x27;s hostname) []:m48<br>Email Address []:<br></code></pre></td></tr></table></figure><p><strong>注意：默认要求 国家，省，公司名称三项必须和CA一致</strong></p><ul><li><strong>CA颁发证书</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# openssl  ca -in /data/app1/app1.csr -out /etc/pki/CA/certs/app1.crt -days 1000<br>Using configuration from /etc/pki/tls/openssl.cnf<br>Check that the request matches the signature<br>Signature ok<br>Certificate Details:<br>        Serial Number: 1 (0x1)<br>        Validity<br>            Not Before: Sep 12 04:28:42 2022 GMT<br>            Not After : Jun  8 04:28:42 2025 GMT<br>        Subject:<br>            countryName               = CN<br>            stateOrProvinceName       = guizhou<br>            organizationName          = magedu<br>            organizationalUnitName    = it<br>            commonName                = m48<br>        X509v3 extensions:<br>            X509v3 Basic Constraints: <br>                CA:FALSE<br>            Netscape Comment: <br>                OpenSSL Generated Certificate<br>            X509v3 Subject Key Identifier: <br>                F9:E4:5D:C9:C7:70:0C:E9:17:CC:90:88:7E:78:20:57:38:04:EC:69<br>            X509v3 Authority Key Identifier: <br>                keyid:EA:34:E4:C1:8C:1B:F2:F9:22:D5:A2:AE:BD:2F:EA:13:28:24:43:60<br><br>Certificate is to be certified until Jun  8 04:28:42 2025 GMT (1000 days)<br>Sign the certificate? [y/n]:y<br><br><br>1 out of 1 certificate requests certified, commit? [y/n]y<br>Write out database with 1 new entries<br>Data Base Updated<br>[root@rocky CA]# <br><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1662988208721.png" alt="1662988208721"> </p><ul><li><strong>查看证书</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# cat /etc/pki/CA/certs/app1.crt <br>Certificate:<br>    Data:<br>        Version: 3 (0x2)<br>        Serial Number: 1 (0x1)<br>        Signature Algorithm: sha256WithRSAEncryption<br>        Issuer: C=CN, ST=guizhou, L=duyun, O=magedu, OU=it, CN=m48<br>        Validity<br>            Not Before: Sep 12 04:28:42 2022 GMT<br>            Not After : Jun  8 04:28:42 2025 GMT<br>        Subject: C=CN, ST=guizhou, O=magedu, OU=it, CN=m48<br>        Subject Public Key Info:<br>            Public Key Algorithm: rsaEncryption<br>                RSA Public-Key: (2048 bit)<br>                Modulus:<br>                    00:b1:d4:eb:6e:8d:32:db:5e:ce:5d:6c:43:73:ef:<br>                    28:d3:08:8b:ae:8b:42:bf:6a:57:27:76:03:fe:ac:<br>                    55:62:2f:7a:9c:97:37:aa:53:40:df:35:6c:be:28:<br>                    c1:c2:b5:e0:af:f0:d3:be:40:3c:15:1e:59:47:40:<br>                    f0:85:20:c2:da:ca:83:a2:6f:7a:89:3d:35:ba:cf:<br>                    03:cb:cd:e0:15:96:76:56:23:30:ce:be:c6:1e:d0:<br>                    a1:fb:27:0c:0f:cf:19:1b:03:9a:08:c8:a2:f1:46:<br>                    18:b6:f0:08:ef:10:26:12:2b:de:ba:a3:9b:8e:f5:<br>                    13:ab:6a:4d:08:8c:59:30:ef:78:d1:29:6d:3a:4e:<br>                    df:c0:cc:d8:04:84:e8:3d:5f:90:67:45:b5:a8:22:<br>                    8f:6f:ad:83:c9:04:ba:5e:98:3f:f8:2b:49:45:31:<br>                    01:0e:7d:60:b3:ad:44:5f:9d:90:6c:34:9d:5c:31:<br>                    26:01:d3:75:fe:58:66:81:b5:d9:b3:83:99:e0:10:<br>                    62:26:37:62:0e:6c:ea:06:ff:3e:b6:a1:c0:e2:27:<br>                    0e:85:4c:44:eb:84:16:b6:36:b9:4f:74:fa:c7:89:<br>                    32:a2:c4:e3:d4:11:a2:7c:61:2d:82:a8:3d:2c:e3:<br>                    17:c4:ec:de:ae:28:07:07:94:3c:62:1d:49:c0:c0:<br>                    12:41<br>                Exponent: 65537 (0x10001)<br>        X509v3 extensions:<br>            X509v3 Basic Constraints: <br>                CA:FALSEs<br>            Netscape Comment: <br>                OpenSSL Generated Certificate<br>            X509v3 Subject Key Identifier: <br>                F9:E4:5D:C9:C7:70:0C:E9:17:CC:90:88:7E:78:20:57:38:04:EC:69<br>            X509v3 Authority Key Identifier: <br>                keyid:EA:34:E4:C1:8C:1B:F2:F9:22:D5:A2:AE:BD:2F:EA:13:28:24:43:60<br><br>    Signature Algorithm: sha256WithRSAEncryption<br>         0c:90:51:c2:89:75:d7:e1:92:e7:a3:90:cb:f0:c0:96:a7:0f:<br>         9f:e6:b5:2b:45:ed:be:ee:86:cf:0c:f9:06:9c:21:27:25:f8:<br>         6c:d9:1c:84:87:8f:df:c2:c9:8f:65:7a:e9:84:2c:13:a8:1d:<br>         d9:ab:65:02:c4:d5:8f:b3:17:a1:7c:d3:e3:06:83:06:43:5c:<br>         f6:a1:1a:b8:f4:98:7c:28:a9:4e:44:f5:82:ac:9f:77:b7:2f:<br>         cd:a6:c7:df:8c:24:84:0c:36:ad:2e:69:24:b7:0f:17:80:7d:<br>         f5:57:4c:df:8d:fb:7d:9e:27:22:bb:7e:b9:e4:aa:45:63:63:<br>         41:00:64:c6:ff:69:47:1c:b2:ca:49:2a:56:3a:9c:c0:3b:19:<br>         58:64:22:c2:e2:6c:27:bb:c1:d6:8f:55:a0:77:a0:a8:10:6d:<br>         5c:cb:01:50:91:ab:86:ac:88:ee:dc:0e:9d:6c:35:c4:7b:fe:<br>         33:52:a3:f8:a8:25:1d:51:51:ed:2c:25:cf:c7:d3:18:73:81:<br>         42:0f:6f:b7:e6:3f:87:2a:12:4b:71:9c:a1:c2:07:91:a6:10:<br>         5f:5f:c2:28:59:f6:2b:ba:ff:d6:56:69:03:c2:49:36:f0:35:<br>         b4:38:70:7c:29:b8:f6:7d:72:c7:6f:cf:23:ef:e2:5f:d3:73:<br>         fc:26:9a:ec<br>-----BEGIN CERTIFICATE-----<br>MIIDnDCCAoSgAwIBAgIBATANBgkqhkiG9w0BAQsFADBbMQswCQYDVQQGEwJDTjEQ<br>MA4GA1UECAwHZ3VpemhvdTEOMAwGA1UEBwwFZHV5dW4xDzANBgNVBAoMBm1hZ2Vk<br>dTELMAkGA1UECwwCaXQxDDAKBgNVBAMMA200ODAeFw0yMjA5MTIwNDI4NDJaFw0y<br>NTA2MDgwNDI4NDJaMEsxCzAJBgNVBAYTAkNOMRAwDgYDVQQIDAdndWl6aG91MQ8w<br>DQYDVQQKDAZtYWdlZHUxCzAJBgNVBAsMAml0MQwwCgYDVQQDDANtNDgwggEiMA0G<br>CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx1OtujTLbXs5dbENz7yjTCIuui0K/<br>alcndgP+rFViL3qclzeqU0DfNWy+KMHCteCv8NO+QDwVHllHQPCFIMLayoOib3qJ<br>PTW6zwPLzeAVlnZWIzDOvsYe0KH7JwwPzxkbA5oIyKLxRhi28AjvECYSK966o5uO<br>9ROrak0IjFkw73jRKW06Tt/AzNgEhOg9X5BnRbWoIo9vrYPJBLpemD/4K0lFMQEO<br>fWCzrURfnZBsNJ1cMSYB03X+WGaBtdmzg5ngEGImN2IObOoG/z62ocDiJw6FTETr<br>hBa2NrlPdPrHiTKixOPUEaJ8YS2CqD0s4xfE7N6uKAcHlDxiHUnAwBJBAgMBAAGj<br>ezB5MAkGA1UdEwQCMAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVk<br>IENlcnRpZmljYXRlMB0GA1UdDgQWBBT55F3Jx3AM6RfMkIh+eCBXOATsaTAfBgNV<br>HSMEGDAWgBTqNOTBjBvy+SLVoq69L+oTKCRDYDANBgkqhkiG9w0BAQsFAAOCAQEA<br>DJBRwol11+GS56OQy/DAlqcPn+a1K0Xtvu6Gzwz5BpwhJyX4bNkchIeP38LJj2V6<br>6YQsE6gd2atlAsTVj7MXoXzT4waDBkNc9qEauPSYfCipTkT1gqyfd7cvzabH34wk<br>hAw2rS5pJLcPF4B99VdM3437fZ4nIrt+ueSqRWNjQQBkxv9pRxyyykkqVjqcwDsZ<br>WGQiwuJsJ7vB1o9VoHegqBBtXMsBUJGrhqyI7twOnWw1xHv+M1Kj+KglHVFR7Swl<br>z8fTGHOBQg9vt+Y/hyoSS3GcocIHkaYQX1/CKFn2K7r/1lZpA8JJNvA1tDhwfCm4<br>9n1yx2/PI+/iX9Nz/Caa7A==<br>-----END CERTIFICATE-----<br>[root@rocky CA]# <br><br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky CA]# openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -issuer<br>issuer=C = CN, ST = guizhou, L = duyun, O = magedu, OU = it, CN = m48<br>[root@rocky CA]# <br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TEXT"># 验证指定编号对应证书的有效性<br>[root@rocky CA]# openssl ca -status 01<br>Using configuration from /etc/pki/tls/openssl.cnf<br>01=Valid (V)<br>[root@rocky CA]# <br></code></pre></td></tr></table></figure><ul><li><strong>证书的吊销</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky newcerts]# openssl ca -revoke /etc/pki/CA/newcerts/01.pem <br>Using configuration from /etc/pki/tls/openssl.cnf<br>Revoking Certificate 01.<br>Data Base Updated<br><br>[root@rocky newcerts]# openssl ca -status 01<br>Using configuration from /etc/pki/tls/openssl.cnf<br>01=Revoked (R)<br>[root@rocky newcerts]# <br></code></pre></td></tr></table></figure><ul><li><strong>生成证书吊销列表文件</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TEXT">[root@rocky newcerts]#echo 01 &gt; /etc/pki/CA/crlnumber<br>[root@rocky newcerts]#openssl ca -gencrl -out /etc/pki/CA/crl.pem<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux定时执行任务</title>
    <link href="/2022/09/05/Linux%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1/"/>
    <url>/2022/09/05/Linux%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="一、at命令"><a href="#一、at命令" class="headerlink" title="一、at命令"></a>一、at命令</h1><h2 id="1、at命令的准备工作"><a href="#1、at命令的准备工作" class="headerlink" title="1、at命令的准备工作"></a>1、at命令的准备工作</h2><p><strong>1）安装 at 软件包</strong> </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# yum install -y at<br></code></pre></td></tr></table></figure><p><strong>2）需要 atd 服务的支持。atd 服务是独立的服务</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">查看atd服务状态：# systemctl status atd  <br><br>开启atd服务：# systemctl start atd<br><br>关闭atd服务：# systemctl stop atd<br></code></pre></td></tr></table></figure><p><strong>3）查看是否开始开机启动服务：如果弹出enabled，说明开机启动此服务</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@rocky ~]# systemctl is-enabled atd<br>enabled<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><p><strong>4）安装好 at 软件包并开启 atd 服务之后，at 命令才可以正常使用。</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@rocky ~]# systemctl start atd <br>[root@rocky ~]# systemctl status atd<br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1662393874290.png" alt="1662393874290"> </p><h2 id="2、at-命令的访问控制"><a href="#2、at-命令的访问控制" class="headerlink" title="2、at 命令的访问控制"></a>2、at 命令的访问控制</h2><p>访问控制：是指允许哪些用户使用 at 命令设定定时任务，或者不允许哪些用户使用 at 命令。可以将其想象成设定黑名单或白名单。at 命令的访问控制是依靠 &#x2F;etc&#x2F;at.allow（白名单）和 &#x2F;etc&#x2F;at.deny（黑名单）这两个文件来实现的，具体规则如下：</p><ul><li><p>1)如果系统中有 &#x2F;etc&#x2F;at.allow 文件，那么只有写入 &#x2F;etc&#x2F;at.allow 文件（白名单）中的用户可以使用 at 命令，其他用户不能使用 at 命令(（注意，&#x2F;etc&#x2F;at.allow 文件的优先级更高，也就是说，如果同一个用户既写入 &#x2F;etc&#x2F;at.allow 文件，又写入 &#x2F;etc&#x2F;at.deny 文件，那么这个用户是可以使用 at 命令的);</p></li><li><p>2)如果系统中没有 &#x2F;etc&#x2F;at.allow 文件，只有 &#x2F;etc&#x2F;at.deny 文件，那么写入 &#x2F;etc&#x2F;at.deny 文件（黑名单）中的用户不能使用 at 命令，其他用户可以使用 at 命令。不过这个文件对 root 用户不生效;</p></li><li><p>3)如果系统中这两个文件都不存在，那么只有 root 用户可以使用 at 命令;</p></li><li><p>4)系统中默认只有 &#x2F;etc&#x2F;at.deny 文件，而且这个文件是空的，因此，系统中所有的用户都可以使用 at 命令。如果我们打算控制用户的 at 命令权限，那么只需把用户名写入 &#x2F;etc&#x2F;at.deny 文件即可。</p></li></ul><h2 id="3、at-命令语法添加定时执行任务"><a href="#3、at-命令语法添加定时执行任务" class="headerlink" title="3、at 命令语法添加定时执行任务"></a>3、at 命令语法添加定时执行任务</h2><p><strong>基本格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">at [选项] [时间] or at [option] TIME<br></code></pre></td></tr></table></figure><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-V 显示版本信息<br>-t time 时间格式 [[CC]YY]MMDDhhmm[.ss]<br>-l 列出指定队列中等待运行的作业；相当于atq<br>-d N 删除指定的N号作业；相当于atrm<br>-c N 查看具体作业N号任务<br>-f file 指定的文件中读取任务<br>-m 当任务被完成之后，将给用户发送邮件，即使没有标准输出  <br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>作业执行命令的结果中的标准输出和错误以执行任务的用户身份发邮件通知给 root</li><li>默认CentOS 8 最小化安装没有安装邮件服务,需要自行安装</li><li>TIME：定义出什么时候进行 at 这项任务的时间</li></ul><p><strong>此命令中关于时间参数可用的以下格式：</strong></p><table><thead><tr><th>格式</th><th>用法</th></tr></thead><tbody><tr><td>HH:MM</td><td>比如 04:00 AM。</td></tr><tr><td>Midnight（midnight）</td><td>代表 12:00 AM</td></tr><tr><td>Noon（noon）</td><td>代表 12:00 PM（相当于 12:00）</td></tr><tr><td>Teatime（teatime）</td><td>代表 4:00 PM（相当于 16:00）。</td></tr><tr><td>英文月名 日期 年份</td><td>比如 January 15 2018 表示 2018 年 1 月 15 号，年份可有可无。</td></tr><tr><td>MMDDYY、MM&#x2F;DD&#x2F;YY、MM.DD.YY</td><td>比如 011518 表示 2018 年 1 月 15 号。</td></tr><tr><td>now+时间</td><td>以 minutes、hours、days 或 weeks 为单位，例如 now+5 days 表示命令在 5 天之后的此时此刻执行。</td></tr><tr><td><strong>具体的使用方法：</strong></td><td></td></tr></tbody></table><p>at命令后想要输入执行程序的确切时间，然后回车，接着在 &gt; 后输入想要执行的命令，最后用 Ctrl+d 组合键退出 at 命令。</p><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# at now+2 min<br>at&gt; ls ./ &gt; a.log<br></code></pre></td></tr></table></figure><p><strong>范例: ubuntu at任务存放路径</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs TXT">root@ubuntu200404-1:~# ll /var/spool/cron/<br>total 20<br>drwxr-xr-x 5 root   root    4096 Feb 23  2022 ./<br>drwxr-xr-x 4 root   root    4096 Feb 23  2022 ../<br>drwxrwx--T 2 daemon daemon  4096 Sep  6 13:32 atjobs/<br>drwxrwx--T 2 daemon daemon  4096 Nov 12  2018 atspool/<br>drwx-wx--T 2 root   crontab 4096 Feb 13  2020 crontabs/<br><br>root@ubuntu200404-1:~# ll /var/spool/cron/atjobs/<br>total 16<br>drwxrwx--T 2 daemon daemon 4096 Sep  6 13:32 ./<br>drwxr-xr-x 5 root   root   4096 Feb 23  2022 ../<br>-rwx------ 1 root   daemon 2838 Sep  6 13:33 a0000101a6c9d1*<br>-rw------- 1 daemon daemon    6 Sep  6 13:32 .SEQ<br>root@ubuntu200404-1:~# <br></code></pre></td></tr></table></figure><p><strong>范例：centos at任务存放路径</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# ll /var/spool/at/<br>total 4<br>-rwx------. 1 root root 2831 Sep  6 21:37 a0000501a6c9d5<br>drwx------. 2 root root   19 Sep  6 21:31 spool<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h1 id="二、-crontab命令"><a href="#二、-crontab命令" class="headerlink" title="二、 crontab命令"></a>二、 crontab命令</h1><p>  at 命令：是在指定的时间只能执行一次任务。 crontab 命令：可以循环重复的执行定时任务。</p><h2 id="1、crontab-命令的准备工作"><a href="#1、crontab-命令的准备工作" class="headerlink" title="1、crontab 命令的准备工作"></a>1、crontab 命令的准备工作</h2><p>crontab 命令需要 crond 服务支持。crond 是 Linux 下用来周期地执行某种任务或等待处理某些事件的一个守护进程，在安装完成操作系统后，默认会安装 crond 服务工具，且 crond 服务默认就是自启动的。crond 进程每分钟会定期检查是否有要执行的任务，如果有，则会自动执行该任务。</p><p>crontab 命令和 at 命令类似，也是通过 &#x2F;etc&#x2F;cron.allow 和 &#x2F;etc&#x2F;cron.deny 文件来限制某些用户是否可以使用 crontab 命令的。</p><p>启动crond服务之后才能使用crontab 命令：  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># systemctl start crond 或者  # systemctl enable crond<br></code></pre></td></tr></table></figure><h2 id="2、-crontab-命令语法"><a href="#2、-crontab-命令语法" class="headerlink" title="2、 crontab 命令语法"></a>2、 <strong>crontab 命令语法</strong></h2><p><strong>命令格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">crontab [-u user] [-l | -r | -e] [-i]<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-l 列出所有任务<br>-e 编辑任务<br>-r 移除所有任务<br>-i 同-r一同使用，以交互式模式移除指定任务<br>-u user 指定用户管理cron任务,仅root可运行<br></code></pre></td></tr></table></figure><p> crontab 定时任务非常简单，只需执“crontab -e”命令，然后输入想要定时执行的任务即可。注意文件格式如下： </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]## crontab -e<br>#进入 crontab 编辑界面。会打开Vim编辑你的任务<br>* * * * * 执行的任务<br></code></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;crontab 格式说明，详情参见 man 5 crontab<br>注释行以 # 开头</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs TXt">[root@centos7 ~]# cat /etc/crontab <br>SHELL=/bin/bash<br>PATH=/sbin:/bin:/usr/sbin:/usr/bin<br>MAILTO=root<br><br># For details see man 4 crontabs<br><br># Example of job definition:<br># .---------------- minute (0 - 59)<br># |  .------------- hour (0 - 23)<br># |  |  .---------- day of month (1 - 31)<br># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...<br># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat<br># |  |  |  |  |<br># *  *  *  *  * user-name  command to be executed<br><br>You have mail in /var/spool/mail/root<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><table><thead><tr><th>项目</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td>第一个”*”</td><td>一小时当中的第几分钟（minute）</td><td>0~59</td></tr><tr><td>第二个”*”</td><td>一天当中的第几小时（hour）</td><td>0~23</td></tr><tr><td>第三个”*”</td><td>一个月当中的第几天（day）</td><td>1~31</td></tr><tr><td>第四个”*”</td><td>一年当中的第几个月（month）</td><td>1~12</td></tr><tr><td>第五个”*”</td><td>一周当中的星期几（week）</td><td>0~7（0和7都代表星期日）</td></tr></tbody></table><p>**在这个时间的表达式中，还有一些特殊符号如下：    **</p><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td>*（星号）</td><td>代表任何时间。比如第一个”*”就代表一小时种每分钟都执行一次的意思。</td></tr><tr><td>,（逗号）</td><td>代表不连续的时间。比如”0 8，12，16***命令”就代表在每天的 8 点 0 分、12 点 0 分、16 点 0 分都执行一次命令。</td></tr><tr><td>-（中杠）</td><td>代表连续的时间范围。比如”0 5 ** 1-6命令”，代表在周一到周六的凌晨 5 点 0 分执行命令。</td></tr><tr><td>&#x2F;（正斜线）</td><td>代表每隔多久执行一次。比如”<em>&#x2F;10</em>***命令”，代表每隔 10 分钟就执行一次命令。</td></tr></tbody></table><p>当“crontab -e”编辑完成之后，一旦保存退出，那么这个定时任务实际就会写入 &#x2F;var&#x2F;spool&#x2F;cron&#x2F; 目录中，每个用户的定时任务用自己的用户名进行区分。而且 crontab 命令只要保存就会生效，只要 crond 服务是启动的。</p><p>这里举几个时间的例子来熟悉一下时间字段（星期几和几日最好不要同时出现，非常容易让管理员混淆）：</p><table><thead><tr><th>时间</th><th>含义</th></tr></thead><tbody><tr><td>1 2 * * *</td><td>在每天凌晨 2 点 1 分执行命令</td></tr><tr><td>0 17 * * 1</td><td>在每周一的 17 点 0 分执行命令</td></tr><tr><td>0 5 1,15 * *</td><td>在每月 1 日和 15 日的凌晨 5 点 0 分执行命令</td></tr><tr><td>40 4 * * 1-5</td><td>在每周一到周五的凌晨 4 点 40 分执行命令</td></tr><tr><td>*&#x2F;10 4 * * *</td><td>在每天的凌晨 4 点，每隔 10 分钟执行命令</td></tr><tr><td>3,15 8-11 *&#x2F;2 * *</td><td>在每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行命令。</td></tr></tbody></table><p> <img src="/../image.assets/join.gif" alt="img"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>进程和线程相关概念</title>
    <link href="/2022/09/04/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <url>/2022/09/04/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<p><strong>Linux系统状态的查看及管理工具：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXT">pstree<br>ps<br>pidof<br>pgrep<br>top<br>htop<br>glance<br>pmap<br>vmstat<br>dstat<br>kill<br>pkill<br>job<br>bg<br>fg<br>nohup<br></code></pre></td></tr></table></figure><h1 id="1-进程管理和性能相关工具"><a href="#1-进程管理和性能相关工具" class="headerlink" title="1 进程管理和性能相关工具"></a>1 进程管理和性能相关工具</h1><h2 id="1-1-进程树pstree"><a href="#1-1-进程树pstree" class="headerlink" title="1.1 进程树pstree"></a>1.1 进程树pstree</h2><p>pstree 可以用来显示进程的父子关系，以树形结构显示<br>格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">pstree [OPTION] [ PID | USER ]<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXt">-p 显示PID<br>-T 不显示线程thread,默认显示线程<br>-u 显示用户切换<br>-H pid 高亮显示指定进程及其前辈进程<br></code></pre></td></tr></table></figure><h2 id="1-2-进程信息PS"><a href="#1-2-进程信息PS" class="headerlink" title="1.2 进程信息PS"></a>1.2 进程信息PS</h2><p>ps 即 process state，可以进程当前状态的快照，默认显示当前终端中的进程，Linux系统各进程的相关<br>信息均保存在&#x2F;proc&#x2F;PID目录下的各文件中<br>ps格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ps [OPTION]...<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs TXT">a 选项包括所有终端中的进程<br>x 选项包括不链接终端的进程<br>u 选项显示进程所有者的信息<br>f 选项显示进程树,相当于 --forest<br>k|--sort 属性 对属性排序,属性前加 - 表示倒序<br>o 属性… 选项显示定制的信息 pid、cmd、%cpu、%mem<br>L 显示支持的属性列表<br>-C cmdlist 指定命令，多个命令用，分隔<br>-L 显示线程<br>-e 显示所有进程，相当于-A<br>-f 显示完整格式程序信息<br>-F 显示更完整格式的进程信息<br>-H 以进程层级格式显示进程相关信息<br>-u userlist 指定有效的用户ID或名称<br>-U userlist 指定真正的用户ID或名称<br>-g gid或groupname 指定有效的gid或组名称<br>-G gid或groupname 指定真正的gid或组名称<br>-p pid 显示指pid的进程<br>--ppid pid 显示属于pid的子进程<br>-t ttylist 指定tty,相当于 t<br>-M 显示SELinux信息，相当于Z<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络管理配置</title>
    <link href="/2022/08/21/network/"/>
    <url>/2022/08/21/network/</url>
    
    <content type="html"><![CDATA[<h1 id="1、网络配置"><a href="#1、网络配置" class="headerlink" title="1、网络配置"></a>1、网络配置</h1><h2 id="基本网络配置"><a href="#基本网络配置" class="headerlink" title="基本网络配置"></a><strong>基本网络配置</strong></h2><p>将Linux主机接入到网络，需要配置网络相关设置<br>一般包括如下内容：</p><ul><li>主机名</li><li>IP&#x2F;netmask</li><li>路由：默认网关<ul><li>DNS服务器</li><li>主DNS服务器</li><li>次DNS服务器</li><li>第三个DNS服务器</li></ul></li></ul><h2 id="1-1-修改主机名称"><a href="#1-1-修改主机名称" class="headerlink" title="1.1 修改主机名称"></a>1.1 修改主机名称</h2><ul><li>CentOs6 及之前的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">修改 /etc/sysconfig/network文件HOSTNAME的值</span><br>[root@centos6 sysconfig]# cat /etc/sysconfig/network<br>NETWORKING=yes<br>HOSTNAME=centos6<br>[root@centos6 sysconfig]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改hostname的值为centos6.mg.du</span><br>[root@centos6 sysconfig]# vi /etc/sysconfig/network<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改后不会马上生效,需要使用hostname命令重写一下</span><br>[root@centos6 sysconfig]# hostname centos6.mg.du<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启一下看主机名称是否修改成功</span><br>[root@centos6 sysconfig]# reboot<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">hostname命令查看主机名称</span><br>[root@centos6 ~]# hostname<br>centos6.mg.du<br>[root@centos6 ~]#<br></code></pre></td></tr></table></figure><ul><li>CentOs7 及之后的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">centos7 之后的版本主机名称文件  /etc/hostname</span><br>[root@centos7 ~]# cat /etc/hostname <br>centos7<br>[root@centos7 ~]# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">centos7 之后的版本直接使用命令修改主机名称</span><br>[root@centos7 ~]# hostnamectl set-hostname centos7.mg<br>[root@centos7 ~]# hostname<br>centos7.mg<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><ul><li>ubuntu修改主机名称</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看主机名称配置文件</span><br>root@ubuntu200404-1:~# cat /etc/hostname <br>ubuntu200404-1<br>root@ubuntu200404-1:~# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改主机名称可以直接修改/etc/hostname文件，也可以直接使用命令修改</span><br>hostnamectl set-hostname 主机名<br></code></pre></td></tr></table></figure><h2 id="1-2-网卡名称"><a href="#1-2-网卡名称" class="headerlink" title="1.2 网卡名称"></a>1.2 网卡名称</h2><h3 id="1-2-1-centos-6之前版本的网卡名称"><a href="#1-2-1-centos-6之前版本的网卡名称" class="headerlink" title="1.2.1 centos 6之前版本的网卡名称"></a>1.2.1 centos 6之前版本的网卡名称</h3><p>接口命名方式：CentOS 6</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">以太网： eth[0,1,2,···]<br>ppp: ppp[0,1,2,···]<br></code></pre></td></tr></table></figure><ul><li>网络接口识别并命名相关的udev配置文件</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">/etc/udev/rules.d/70-persistent-net.rules<br></code></pre></td></tr></table></figure><ul><li>查看网卡</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">dmesg |grep –i eth<br>ethtool -i eth0<br></code></pre></td></tr></table></figure><ul><li>卸载网卡驱动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">modprobe -r e1000<br>rmmod e1000<br></code></pre></td></tr></table></figure><ul><li>装载网卡驱动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">modprobe e1000<br></code></pre></td></tr></table></figure><ul><li>范例：临时修改网卡名称</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">[root@centos6 ~]#ip link set eth0 down<br>[root@centos6 ~]#ip link set eth0 name abc<br>[root@centos6 ~]#ip link set abc up<br></code></pre></td></tr></table></figure><h3 id="1-2-2-Centos7-版本之后的网卡配置"><a href="#1-2-2-Centos7-版本之后的网卡配置" class="headerlink" title="1.2.2 Centos7 版本之后的网卡配置"></a>1.2.2 Centos7 版本之后的网卡配置</h3><p><strong>参考文档</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">https://access.redhat.com/documentation/en-<br>us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consisten<br>t-network-interface-device-naming_configuring-and-managing-networking<br></code></pre></td></tr></table></figure><p>CentOS 6之前，网络接口使用连续号码命名：eth0、eth1等,当增加或删除网卡时，名称可能会发生变化<br>CentOS 7 以上版使用基于硬件，设备拓扑和设置类型命名,可以保持网卡名称的稳定<br>CentOS 8 中已弃用network.service，采用NetworkManager（NM）为网卡启用命令。CentOS 8 仍可以安装network.service作为网卡服务，只是默认没有安装，具体方法为： dnf install network-scripts ，不过官方已明确在下一个大版本中，将彻底放弃network.service，不建议继续使用network.service管理网络。</p><p><strong>systemd对网络设备的命名方式</strong></p><ol><li><p>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，且可预测则根据此索引进行命<br> 名，如：eno1</p></li><li><p>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，<br> 如：ens1</p></li><li><p>如果硬件接口的物理位置信息可用，则根据此信息命名，如：enp2s0</p></li><li><p>如果用户显式启动，也可根据MAC地址进行命名，如：enx2387a1dc56</p></li><li><p>上述均不可用时，则使用传统命名机制</p></li></ol><p><strong>基于BIOS支持启用biosdevname软件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">内置网卡：em1,em2<br>pci卡：pYpX Y：slot ,X:port<br></code></pre></td></tr></table></figure><p><strong>网卡组成格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt">en: Ethernet 有线局域网<br>wl: wlan 无线局域网<br>ww: wwan无线广域网<br>o&lt;index&gt;: 集成设备的设备索引号<br>s&lt;slot&gt;: 扩展槽的索引号<br>x&lt;MAC&gt;: 基于MAC地址的命名<br>p&lt;bus&gt;s&lt;slot&gt;: enp2s1<br></code></pre></td></tr></table></figure><p><strong>使用传统方式命名</strong></p><p>（1）编辑&#x2F;etc&#x2F;default&#x2F;grub配置文件</p><ul><li>centos7</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GRUB_CMDLINE_LINUX</span>=<span class="hljs-string">&quot;net.ifnames=0 biosdevname=0&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1661261214996.png" alt="1661261214996"></p><ul><li>ubuntu</li></ul><p><img src="/../image.assets/1661261773303.png" alt="1661261773303"></p><p>(2) 为grub2生成其配置文件</p><ul><li>centos7</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg<br></code></pre></td></tr></table></figure><ul><li>ubuntu</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>(3) 重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br></code></pre></td></tr></table></figure><p><strong>自定义网卡名称</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]# vi /etc/default/grub<br>GRUB_CMDLINE_LINUX=&quot;net.ifnames.prefix=yuankun&quot;<br><br><br>[root@centos8 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg<br>[root@centos8 ~]# reboot<br></code></pre></td></tr></table></figure><h2 id="1-3-网络配置文件"><a href="#1-3-网络配置文件" class="headerlink" title="1.3 网络配置文件"></a>1.3 网络配置文件</h2><p><strong>网络基本配置文件</strong></p><p>IP、MASK、GW、DNS相关的配置文件：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">/etc/sysconfig/network-scripts/ifcfg-IFACE<br></code></pre></td></tr></table></figure><p><strong>配置参考文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">/usr/share/doc/initcripts-*/sysconfig.txt<br></code></pre></td></tr></table></figure><p><strong>常用配置</strong></p><table><thead><tr><th>设置</th><th>说明</th></tr></thead><tbody><tr><td>TYPE</td><td>接口类型；常见有的Ethernet, Bridge</td></tr><tr><td>NAME</td><td>此配置文件应用到的设备</td></tr><tr><td>DEVICE</td><td>设备名</td></tr><tr><td>HWADDR</td><td>对应的设备的MAC地址</td></tr><tr><td>UUID</td><td>设备的唯一标识</td></tr><tr><td>BOOTPROTO</td><td>激活此设备时使用的地址配置协议，常用的dhcp，static, none, bootp</td></tr><tr><td>IPADDR</td><td>指明IP地址</td></tr><tr><td>NETMASK</td><td>子网掩码,如:255.255.255.0</td></tr><tr><td>PREFIX</td><td>网络ID的位数, 如:24</td></tr><tr><td>GATEWAY</td><td>默认网关</td></tr><tr><td>DNS1</td><td>第一个DNS服务器地址</td></tr><tr><td>DNS2</td><td>第二个DNS服务器地址</td></tr><tr><td>DOMAIN</td><td>主机不完整时，自动搜索的域名后缀</td></tr><tr><td>ONBOOT</td><td>在系统引导时是否激活此设备</td></tr><tr><td>USERCTL</td><td>普通用户是否可控制此设备</td></tr><tr><td>PEERDNS</td><td>如果BOOTPROTO的值为“dhcp”，YES将允许dhcp server分配的dns服务<br/>器信息直接覆盖至&#x2F;etc&#x2F;resolv.conf文件，NO不允许修改resolv.conf</td></tr><tr><td>NM_CONTROLLED</td><td>NM是NetworkManager的简写，此网卡是否接受NM控制</td></tr></tbody></table><p><strong>范例</strong></p><ul><li>修改&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-IFACE</li><li>必须以ifcfg-开头，为了规范一般后面跟网卡名</li><li>配置文件写入内容</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs txt"># 动态获取ip地址<br>DEVICE=eth0<br>NAME=eth0<br>BOOTPROTO=dhcp<br><br># 静态获取IP地址<br>DEVICE=eth0<br>NAME=eth0<br>BOOTPROTO=static<br>IPADDR=192.168.179.129<br>PREFIX=24<br>GATEWAY=192.168.179.1<br>DNS1=192.168.179.1<br>DNS2=180.76.76.76<br></code></pre></td></tr></table></figure><p>centos8还需要执行以下两条命令才会生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">CentOS8和rocky<br>nmcli connnection reload<br>nmcli connnettion up eth0<br></code></pre></td></tr></table></figure><p><strong>扩展：CentOS网卡配置文件生效方法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">CentOS6<br>service network restart<br>CentOS7<br>systemctl restart network<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">通用方法 重启</span><br>reboot<br></code></pre></td></tr></table></figure><h2 id="1-4-ifconfig命令"><a href="#1-4-ifconfig命令" class="headerlink" title="1.4 ifconfig命令"></a>1.4 ifconfig命令</h2><p>来自于net-tools包，建议使用 ip 代替</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#清除eth0上面的IP地址</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0 0.0.0.0</span><br><span class="hljs-meta">#启用和禁用网卡</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0 down</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0 up</span><br><span class="hljs-meta">#对一个网卡设置多个IP地址</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ifconfig eth0:1 172.16.0.8/24</span><br></code></pre></td></tr></table></figure><h2 id="1-5-route命令"><a href="#1-5-route命令" class="headerlink" title="1.5 route命令"></a>1.5 route命令</h2><p>路由表管理命令<br>路由表主要构成:</p><ul><li>Destination: 目标网络ID,表示可以到达的目标网络ID,0.0.0.0&#x2F;0 表示所有未知网络,又称为默认路由,<br>优先级最低</li><li>Genmask:目标网络对应的netmask</li><li>Iface: 到达对应网络,应该从当前主机哪个网卡发送出来</li><li>Gateway: 到达非直连的网络,将数据发送到临近(下一个)路由器的临近本主机的接口的IP地址,如果<br>是直连网络,gateway是0.0.0.0</li><li>Metric: 开销cost,值越小,路由记录的优先级最高</li></ul><p><strong>查看路由表：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky ~]# route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         192.168.179.1   0.0.0.0         UG    100    0        0 eth0<br>192.168.179.0   0.0.0.0         255.255.255.0   U     100    0        0 eth0<br></code></pre></td></tr></table></figure><p><strong>添加路由：route add</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">route add [-net|-host|default] target [netmask Nm] [gw GW] [[dev] If]<br></code></pre></td></tr></table></figure><p><strong>删除路由route del</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">route del [-net|-host] target [gw Gw] [netmask Nm] [[dev] If]<br></code></pre></td></tr></table></figure><h2 id="1-6-ubuntu网络配置"><a href="#1-6-ubuntu网络配置" class="headerlink" title="1.6 ubuntu网络配置"></a>1.6 ubuntu网络配置</h2><h3 id="1-6-1-修改主机名"><a href="#1-6-1-修改主机名" class="headerlink" title="1.6.1 修改主机名"></a>1.6.1 修改主机名</h3><ul><li>方法一</li></ul><p>修改配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># <span class="hljs-regexp">/etc/</span>hostname<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> 主机名<br></code></pre></td></tr></table></figure><h3 id="1-6-2-网卡名称"><a href="#1-6-2-网卡名称" class="headerlink" title="1.6.2 网卡名称"></a>1.6.2 网卡名称</h3><p>默认ubuntu的网卡名称和 CentOS 7 类似，如：ens33，ens38等<br>修改网卡名称为传统命名方式：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># 修改配置文件    <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/grub<br>GRUB_CMDLINE_LINUX=<span class="hljs-string">&quot;net.ifnames=0&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1661777360041.png" alt="1661777360041"></p><p><strong>生成新的grub.cfg文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br><span class="hljs-comment">#或者</span><br>update-grub<br>grep net.ifnames <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br><br><span class="hljs-comment"># 重启生效</span><br>reboot<br></code></pre></td></tr></table></figure><h3 id="1-6-3-ubuntu网卡配置"><a href="#1-6-3-ubuntu网卡配置" class="headerlink" title="1.6.3 ubuntu网卡配置"></a>1.6.3 ubuntu网卡配置</h3><ul><li>配置自动获取IP</li></ul><p>网卡配置文件采用YAML格式,必须以 &#x2F;etc&#x2F;netplan&#x2F;XXX.yaml 文件命名方式存放<br>可以每个网卡对应一个单独的配置文件,也可以将所有网卡都放在一个配置文件里</p><p><strong>范例</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">root@ubuntu200404-1:~#</span> <span class="hljs-string">cat</span> <span class="hljs-string">/etc/netplan/eth0.yaml</span> <br><span class="hljs-comment"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">eth0:</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br>  <br> <span class="hljs-comment"># 修改网卡配置文件后需要执行命令生效</span><br> <span class="hljs-string">netplan</span> <span class="hljs-string">apply</span><br></code></pre></td></tr></table></figure><ul><li>配置静态IP</li></ul><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext">root@ubuntu200404-1:/etc/netplan# cat eth1.yaml <br><span class="hljs-comment"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="hljs-attribute">network</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">ethernets</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">eth1</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">addresses</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">192.168.179.139/24</span><br>      <span class="hljs-attribute">gateway4</span><span class="hljs-punctuation">:</span> <span class="hljs-string">192.168.0.2</span><br>      <span class="hljs-attribute">nameservers</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">search</span><span class="hljs-punctuation">:</span> <span class="hljs-string">[baidu.com]</span><br>        <span class="hljs-comment"># DNS</span><br>        <span class="hljs-attribute">addresses</span><span class="hljs-punctuation">:</span> <span class="hljs-string">[180.76.76.76]</span><br>  <span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br>  <br>  <br><span class="hljs-comment"># 修改网卡配置文件后需要执行命令生效</span><br> netplan apply<br></code></pre></td></tr></table></figure><p><strong>查看ip和网关</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看IP</span><br>root@ubuntu200404-1:/etc/netplan# ip address<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000<br>    link/ether 00:0c:29:79:b0:80 brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.179.138/24 brd 192.168.179.255 scope global dynamic eth0<br>       valid_lft 1698sec preferred_lft 1698sec<br>    inet6 fe80::20c:29ff:fe79:b080/64 scope link <br>       valid_lft forever preferred_lft forever<br>3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000<br>    link/ether 00:0c:29:79:b0:8a brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.179.139/24 brd 192.168.179.255 scope global eth1<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::20c:29ff:fe79:b08a/64 scope link <br>       valid_lft forever preferred_lft forever<br>root@ubuntu200404-1:/etc/netplan# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看网关</span><br>root@ubuntu200404-1:/etc/netplan# route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br>0.0.0.0         192.168.179.2   0.0.0.0         UG    100    0        0 eth0<br>192.168.179.0   0.0.0.0         255.255.255.0   U     0      0        0 eth1<br>192.168.179.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0<br>192.168.179.2   0.0.0.0         255.255.255.255 UH    100    0        0 eth0<br>root@ubuntu200404-1:/etc/netplan# <br></code></pre></td></tr></table></figure><p><strong>查看DNS</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu2004</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># resolvectl status #Ubuntu 20.04新命令</span><br>root<span class="hljs-variable">@ubuntu1804</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># systemd-resolve --status</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件管理</title>
    <link href="/2022/08/08/%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/2022/08/08/%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="1、软件管理简介"><a href="#1、软件管理简介" class="headerlink" title="1、软件管理简介"></a>1、软件管理简介</h1><p>Redhat和Centos中软件管理是依靠软件包管理器(RPM)来实现的</p><p>RPM(Redhat Package Manager)软件包管理器提供了在Linux操作系统中安装、升级、卸载的方法，并提供对系统中的软件状态信息的查询；除了这些功能外，RPM软件包管理器还提供了制作软件包的功能</p><h1 id="2、软件包管理器简介"><a href="#2、软件包管理器简介" class="headerlink" title="2、软件包管理器简介"></a>2、软件包管理器简介</h1><h2 id="2-1-软件包管理器的职责"><a href="#2-1-软件包管理器的职责" class="headerlink" title="2.1 软件包管理器的职责"></a>2.1 软件包管理器的职责</h2><ul><li>将二进制文件、库文件、配置文件、帮助文件打包成一个文件</li><li>安装软件时按需将二进制、库文件、配置文件、帮助文件放到相应的位置</li><li>生成数据库，追踪所安装的每一个文件</li><li>软件卸载时根据安装时生成的数据库将相应的文件删除</li></ul><h2 id="2-2-软件包管理器的核心功能"><a href="#2-2-软件包管理器的核心功能" class="headerlink" title="2.2 软件包管理器的核心功能"></a>2.2 软件包管理器的核心功能</h2><ul><li>制作软件包</li><li>安装软件</li><li>卸载软件</li><li>升级软件</li><li>查询软件</li><li>校验软件</li></ul><h1 id="3、软件包简介"><a href="#3、软件包简介" class="headerlink" title="3、软件包简介"></a>3、软件包简介</h1><h2 id="3-1-软件包组成"><a href="#3-1-软件包组成" class="headerlink" title="3.1 软件包组成"></a>3.1 软件包组成</h2><ul><li>软件包的组成清单<ul><li>文件清单</li><li>安装或卸载的运行脚本</li></ul></li><li>数据库<ul><li>程序包名称及版本</li><li>依赖关系</li><li>功能说明</li><li>安装生成的各个文件的路径及校验码信息</li></ul></li></ul><h2 id="3-2-软件包分类"><a href="#3-2-软件包分类" class="headerlink" title="3.2 软件包分类"></a>3.2 软件包分类</h2><p><strong>源码格式</strong><br>特点：需要编译成二进制格式才能进行</p><ul><li>命名方式：name-VERSION.tar.gz<ul><li>VERSION：主版本号.次版本号.系统发行版本</li></ul></li></ul><p><strong>二进制格式</strong><br>特点：编译好的，安装之后可以直接运行</p><ul><li>软件的作者下载软件的源码，编译配置为二进制软件包</li><li>Redhat和Centos中使用的二进制包为rpm包</li></ul><p><strong>源码格式和二进制格式的区别</strong></p><ul><li>源码格式的包编译为二进制包时可以选择需要的特性，如果未选择，则编译后安装后的软件就不会有相应的功能</li><li>源码包在编译成为二进制包时可以实现软件功能的定制</li><li>二进制包的本版落后于源码包。</li></ul><h1 id="4、rpm简介"><a href="#4、rpm简介" class="headerlink" title="4、rpm简介"></a>4、rpm简介</h1><p>Redhat和Centos中二进制包的扩展包为.rpm，这是由红帽公司最先发布的一种用来打包软件的文件格式，我们叫做rpm包；RPM软件包管理器就是管理rpm包</p><p>4.1 rpm包命名规范</p><h1 id="5、软件包的获取途径"><a href="#5、软件包的获取途径" class="headerlink" title="5、软件包的获取途径"></a>5、软件包的获取途径</h1><h2 id="5-1-系统发行的光盘"><a href="#5-1-系统发行的光盘" class="headerlink" title="5.1 系统发行的光盘"></a>5.1 系统发行的光盘</h2><p>Linux的IOS镜像文件自带了非常多的系统扩展RPM安装包，且这些软件版本最适合当前Linux系统<br>IOS镜像文件自带的扩展RPM安装包的存放目录为：Packages<br>使用IOS镜像文件自带的扩展RPM安装包前必须先挂载ISO镜像，挂在方法如下：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># 创建挂载点，挂载光盘镜像到挂载点</span><br>[root@jlin ~]<span class="hljs-comment"># mkdir /mnt/cdrom</span><br>[root@jlin ~]<span class="hljs-comment"># mount /dev/sr0 /mnt/cdrom/</span><br><br><span class="hljs-comment"># 复制挂载点里面所有的文件到/media/目录，避免光盘断开连接就读取不到扩展RPM安装包</span><br>[root@jlin ~]<span class="hljs-comment"># cp -r /mnt/cdrom/ /media/</span><br>[root@jlin ~]<span class="hljs-comment"># cd /media/cdrom/</span><br>[root@jlin cdrom]<span class="hljs-comment"># ll</span><br>总用量 320<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root    <span class="hljs-number"> 14 </span>7月 <span class="hljs-number"> 10 </span>08:27 CentOS_BuildTag<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root    <span class="hljs-number"> 35 </span>7月 <span class="hljs-number"> 10 </span>08:27 EFI<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 227 </span>7月 <span class="hljs-number"> 10 </span>08:27 EULA<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 18009 </span>7月 <span class="hljs-number"> 10 </span>08:27 GPL<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root    <span class="hljs-number"> 57 </span>7月 <span class="hljs-number"> 10 </span>08:27 images<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root   <span class="hljs-number"> 198 </span>7月 <span class="hljs-number"> 10 </span>08:27 isolinux<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root    <span class="hljs-number"> 43 </span>7月 <span class="hljs-number"> 10 </span>08:27 LiveOS<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 221184 </span>7月 <span class="hljs-number"> 10 </span>08:29 Packages<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root  <span class="hljs-number"> 4096 </span>7月 <span class="hljs-number"> 10 </span>08:29 repodata<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 1690 </span>7月 <span class="hljs-number"> 10 </span>08:29 RPM-GPG-KEY-CentOS-7<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 1690 </span>7月 <span class="hljs-number"> 10 </span>08:29 RPM-GPG-KEY-CentOS-Testing-7<br>-r--r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 2883 </span>7月 <span class="hljs-number"> 10 </span>08:29 TRANS.TBL<br></code></pre></td></tr></table></figure><h2 id="5-2-开源镜像站"><a href="#5-2-开源镜像站" class="headerlink" title="5.2 开源镜像站"></a>5.2 开源镜像站</h2><p>开源镜像站上会存放RPM安装包</p><ul><li>阿里巴巴开源镜像站</li></ul><blockquote><p><a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com</a></p></blockquote><ul><li>网易开源镜像站</li></ul><blockquote><p><a href="http://mirrors.163.com/">http://mirrors.163.com</a></p></blockquote><ul><li>清华大学开源镜像站</li></ul><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn</a></p></blockquote><h2 id="5-3-搜索引擎"><a href="#5-3-搜索引擎" class="headerlink" title="5.3 搜索引擎"></a>5.3 搜索引擎</h2><p>有一些搜索引擎直接提供rpm包搜索功能</p><ul><li>rpmfind</li></ul><blockquote><p><a href="http://rpmfind.net/">http://rpmfind.net</a></p></blockquote><ul><li>rpm pbone</li></ul><blockquote><p><a href="http://rpm.pbone.net/">http://rpm.pbone.net</a></p></blockquote><ul><li>pkgs</li></ul><blockquote><p><a href="http://pkgs.org/">http://pkgs.org/</a></p></blockquote><h1 id="6、rpm包管理"><a href="#6、rpm包管理" class="headerlink" title="6、rpm包管理"></a>6、rpm包管理</h1><h2 id="6-1-RPM包安装"><a href="#6-1-RPM包安装" class="headerlink" title="6.1 RPM包安装"></a>6.1 RPM包安装</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">//</span> 语法：rpm -ivh <span class="hljs-string">/PATH/TO/PACKAGE_FILE</span> <span class="hljs-string">...</span><br><span class="hljs-string">//</span> 选项：<br>-i：安装<br>-v：显示详细信息<br>-h：显示安装进度条<br><span class="hljs-params">--test</span>：测试安装，但不真正执行安装过程<br><span class="hljs-params">--nodeps</span>：忽略依赖关系<br><span class="hljs-params">--force</span>：强行安装，可以实现重装或降级<br><span class="hljs-params">--replacepkgs</span>：重新安装，替换原有安装<br><span class="hljs-params">--oldpackage</span>：降级<br><span class="hljs-params">--nodigest</span>：不检查包的完整性<br><span class="hljs-params">--nosignature</span>：不检查报的来源合法性<br><span class="hljs-params">--noscripts</span>：不执行rpm包自带的四类脚本：<br><span class="hljs-params">--nopre</span>：不执行rpm包自带的preinstall脚本<br><span class="hljs-params">--nopost</span>：不执行rpm包自带的postinstall脚本<br><span class="hljs-params">--nopreun</span>：不执行rpm包自带的preuninstall脚本<br><span class="hljs-params">--nopostun</span>：不执行rpm包自带的postuninstall脚本<br>preinstall：安装过程开始之前运行的脚本，标记为%pre：<span class="hljs-params">--nopre</span><br>postinstall：安装过程完成之后运行的脚本，标记为%post：<span class="hljs-params">--nopost</span><br>preuninstall：卸载过程开始执行之前运行的脚本，标记为%preun：<span class="hljs-params">--nopreun</span><br>postunistall：写在过程完成之后运行的脚本，标记为%postrun：<span class="hljs-params">--nopostun</span><br><br><span class="hljs-string">//</span> 安装软件包，需要指定软件包绝对路径<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 在软件包所在目录下可以不指定绝对路径<br>[root@jlin ~]<span class="hljs-comment"># cd /mnt/cdrom/Packages/</span><br>[root@jlin Packages]<span class="hljs-comment"># rpm -ivh tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 测试一个软件包是否能在该系统上安装<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh --test /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 如果软件包已经安装，强制再次安装<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh --force /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><br><span class="hljs-string">//</span> 安装httpd服务需要依赖其他组件，使用<span class="hljs-params">--nodeps</span>可忽略以来强制安装<br>[root@jlin ~]<span class="hljs-comment"># rpm -ivh --nodeps /mnt/cdrom/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></code></pre></td></tr></table></figure><h2 id="6-2-RPM包查询"><a href="#6-2-RPM包查询" class="headerlink" title="6.2 RPM包查询"></a>6.2 RPM包查询</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 查询httpd的rpm包是否安装</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -q httpd</span><br><br><span class="hljs-comment">// 模糊查找系统已安装的rpm包</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qa | grep ftp</span><br><br><span class="hljs-comment">// 查询已安装的httpd软件包相关信息</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qi httpd</span><br><br><span class="hljs-comment">// 查询已安装的rpm包生成的文件</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -ql httpd</span><br><br><span class="hljs-comment">// 查询已安装的rpm包生成的配置文件</span><br>所有<br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qc httpd</span><br><br><span class="hljs-comment">// 查询配置文件或命令来自于哪个rpm包</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qf /etc/httpd/httpd.conf</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qf /usr/sbin/httpd</span><br><br><span class="hljs-comment">// 查询未安装的软件包会产生哪些文件</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qpl / mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br><br><span class="hljs-comment">// 查询未安装的软件包的说明信息</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qpi /mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></code></pre></td></tr></table></figure><h2 id="6-4-RPM包升级"><a href="#6-4-RPM包升级" class="headerlink" title="6.4 RPM包升级"></a>6.4 RPM包升级</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 升级tree软件包<br>[root@jlin ~]<span class="hljs-comment"># rpm -Uvh /mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></code></pre></td></tr></table></figure><h2 id="6-5-RPM包卸载"><a href="#6-5-RPM包卸载" class="headerlink" title="6.5 RPM包卸载"></a>6.5 RPM包卸载</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 先查询，然后卸载</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -qa lgrep httpd</span><br>[<span class="hljs-meta">root@jlin ~</span>]<span class="hljs-meta"># rpm -e httpd</span><br></code></pre></td></tr></table></figure><h2 id="6-6-RPM包校验"><a href="#6-6-RPM包校验" class="headerlink" title="6.6 RPM包校验"></a>6.6 RPM包校验</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 校验已经安装的软件包的文件是否被修改；如果执行以下命令无内容输出说明安装的软件<br>[root@jlin ~]<span class="hljs-comment"># rpm -v vsftpd</span><br><br>S <span class="hljs-comment">#文件的容量大小是否被改变</span><br>M <span class="hljs-comment">#文件的类型或者文件的属性是否被修改</span><br><span class="hljs-number">5</span> <span class="hljs-comment">#MD5加密的内容已经不同</span><br>D <span class="hljs-comment">#装置的主/次代码已经改变</span><br>L <span class="hljs-comment">#路径已经被改变</span><br>U <span class="hljs-comment">#文件的所属主已被修改</span><br>G <span class="hljs-comment">#文件的所属组已被修改</span><br>T <span class="hljs-comment">#文件的创建时间已被改变</span><br></code></pre></td></tr></table></figure><h2 id="6-7-RPM重建数据库"><a href="#6-7-RPM重建数据库" class="headerlink" title="6.7 RPM重建数据库"></a>6.7 RPM重建数据库</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 数据库信息在<span class="hljs-regexp">/var/</span>lib/rpm目录<br><br><span class="hljs-regexp">//</span> 重建数据库，重建Packages数据库，一定会重建<br>rpm --rebuilddb<br><br><span class="hljs-regexp">//</span> 初始化数据库，重建所有数据库，没有才建立，有就不建立<br>rpm --initdb<br></code></pre></td></tr></table></figure><h2 id="6-8-检查软件包来源合法性"><a href="#6-8-检查软件包来源合法性" class="headerlink" title="6.8 检查软件包来源合法性"></a>6.8 检查软件包来源合法性</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">加密类型:<br>对称加密 <span class="hljs-comment">#加密解密使用同一个密钥</span><br>公钥加密 <span class="hljs-comment">#一对密钥，公钥和私钥。公钥隐含于私钥中，可以提取出来并公布出去</span><br>单向加密 <span class="hljs-comment">#只能加密不能解密</span><br><br><span class="hljs-regexp">//</span> 红帽官方公钥存放位置<br><span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-redhat-release<br><br><span class="hljs-regexp">//</span> 检查指定rpm包合法性，出现oK字样表示包没问题<br>rpm -K PACKAGE_FILE<br><br><span class="hljs-regexp">//</span> 导入密钥文件<br>rpm --import <span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-redhat-release1<br><br>Centos <span class="hljs-number">7</span>发行版光盘提供的密钥文件名为:RPM-GPG-KEY-Centos-<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h1 id="7、yum和dnf"><a href="#7、yum和dnf" class="headerlink" title="7、yum和dnf"></a>7、yum和dnf</h1><p>CentOS 使用 yum, dnf 解决rpm的包依赖关系<br>YUM: Yellowdog Update Modifier，rpm的前端程序，可解决软件包相关依赖性，可在多个库之间定位<br>软件包，up2date的替代工具，CentOS 8 用dnf 代替了yum ,不过保留了和yum的兼容性，配置也是通<br>用的</p><h2 id="7-1-yum-x2F-dnf-工作原理"><a href="#7-1-yum-x2F-dnf-工作原理" class="headerlink" title="7.1 yum&#x2F;dnf 工作原理"></a>7.1 yum&#x2F;dnf 工作原理</h2><p><strong>yum&#x2F;dnf 是基于C&#x2F;S 模式</strong><br>yum 服务器存放rpm包和相关包的元数据库<br>yum 客户端访问yum服务器进行安装或查询等<br><strong>yum 实现过程</strong><br>先在yum服务器上创建 yum repository（仓库），在仓库中事先存储了众多rpm包，以及包的相关的<br>元数据文件（放置于特定目录repodata下），当yum客户端利用yum&#x2F;dnf工具进行安装时包时，会自动<br>下载repodata中的元数据，查询远数据是否存在相关的包及依赖关系，自动从仓库中找到相关包下载并<br>安装。</p><h2 id="7-2-yum客户端配置"><a href="#7-2-yum客户端配置" class="headerlink" title="7.2 yum客户端配置"></a>7.2 yum客户端配置</h2><p><strong>yum客户端配置文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/yum</span>.conf <span class="hljs-comment">#为所有仓库提供公共配置</span><br><span class="hljs-regexp">/etc/yum</span>.repos.d/*.repo： <span class="hljs-comment">#为每个仓库的提供配置文件</span><br></code></pre></td></tr></table></figure><p><strong>帮助参考： man 5 yum.conf</strong><br><strong>repo仓库配置文件指向的定义：</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[repositoryID]<br>name=Some name for this repository<br>baseurl=url://path/to/repository/<br>enabled=&#123;1|0&#125;<br>gpgcheck=&#123;1|0&#125;<br>gpgkey=URL<br>enablegroups=&#123;1|0&#125;<br>failovermethod=&#123;roundrobin|priority&#125;<br>roundrobin：意为随机挑选，默认值<br><span class="hljs-section">priority:按顺序访问</span><br>cost= 默认为1000<br></code></pre></td></tr></table></figure><p><strong>yum服务器的baseurl形式</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">file:<span class="hljs-regexp">//</span> 本地路径<br>http:<span class="hljs-regexp">//</span><br>https:<span class="hljs-regexp">//</span><br>ftp:<span class="hljs-regexp">//</span><br></code></pre></td></tr></table></figure><p><strong>注意：yum仓库指向的路径一定必须是repodata目录所在目录</strong><br><strong>相关变量</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">yum的repo配置文件中可用的变量：<br><span class="hljs-meta"><span class="hljs-keyword">$releasever</span>: 当前OS的发行版的主版本号，如：8，7，6</span><br><span class="hljs-meta"><span class="hljs-keyword">$arch</span>: CPU架构，如：aarch64, i586, i686，x86_64等</span><br><span class="hljs-meta"><span class="hljs-keyword">$basearch</span>：系统基础平台；i386, x86_64</span><br><span class="hljs-meta"><span class="hljs-keyword">$contentdir</span>：表示目录，比如：centos-8，centos-7</span><br><span class="hljs-meta"><span class="hljs-keyword">$YUM0</span>-$YUM9:自定义变量</span><br></code></pre></td></tr></table></figure><h2 id="7-3-yum命令"><a href="#7-3-yum命令" class="headerlink" title="7.3 yum命令"></a>7.3 yum命令</h2><p><strong>yum命令的用法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">yum <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[command]</span> <span class="hljs-selector-attr">[package ...]</span><br></code></pre></td></tr></table></figure><p><strong>yum的命令行选项</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>y <span class="hljs-comment">#自动回答为&quot;yes&quot;</span><br><span class="hljs-literal">-</span>q <span class="hljs-comment">#静默模式</span><br><span class="hljs-literal">-</span>-nogpgcheck <span class="hljs-comment">#禁止进行gpg check</span><br><span class="hljs-literal">-</span>-enablerepo=repoidglob <span class="hljs-comment">#临时启用此处指定的repo，支持通配符，如：&quot;*&quot;</span><br><span class="hljs-literal">-</span>-disablerepo=repoidglob <span class="hljs-comment">#临时禁用此处指定的repo,和上面语句同时使用，放在后面的生效</span><br></code></pre></td></tr></table></figure><h3 id="7-3-1-显示仓库列表"><a href="#7-3-1-显示仓库列表" class="headerlink" title="7.3.1 显示仓库列表"></a>7.3.1 显示仓库列表</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">yum repolist [all|<span class="hljs-type">enabled</span>|<span class="hljs-type">disabled</span>]<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><p><img src="/../image.assets/1660220348105.png" alt="1660220348105"></p><h3 id="7-3-2-显示程序包"><a href="#7-3-2-显示程序包" class="headerlink" title="7.3.2 显示程序包"></a>7.3.2 显示程序包</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">yum list<br>yum list <span class="hljs-comment">[all | glob_exp1]</span> <span class="hljs-comment">[glob_exp2]</span> <span class="hljs-comment">[...]</span><br>yum list &#123;available|installed|updates&#125; <span class="hljs-comment">[glob_exp1]</span> <span class="hljs-comment">[...]</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">yum list<br>yum list <span class="hljs-comment">[all | glob_exp1]</span> <span class="hljs-comment">[glob_exp2]</span> <span class="hljs-comment">[...]</span><br>yum list &#123;available|installed|updates&#125; <span class="hljs-comment">[glob_exp1]</span> <span class="hljs-comment">[...]</span><br></code></pre></td></tr></table></figure><p><strong>范例：只查看安装的包</strong></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@rocky</span> ~]# yum list installed|head<br>Installed Packages<br>NetworkManager.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-config-server.noarch  <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-libnm.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>          <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-team.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>           <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>NetworkManager-tui.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>            <span class="hljs-number">1</span>:<span class="hljs-number">1.32</span>.<span class="hljs-number">10</span><span class="hljs-number">-4</span>.el<span class="hljs-number">8</span>                   <span class="hljs-title">@anaconda</span><br>acl.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                           <span class="hljs-number">2.2</span>.<span class="hljs-number">53</span><span class="hljs-number">-1</span>.el<span class="hljs-number">8.1</span>                    <span class="hljs-title">@anaconda</span><br>adcli.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                         <span class="hljs-number">0.8</span>.<span class="hljs-number">2</span><span class="hljs-number">-12</span>.el<span class="hljs-number">8</span>                      <span class="hljs-title">@anaconda</span><br>alsa-sof-firmware.noarch             <span class="hljs-number">1.8</span><span class="hljs-number">-1</span>.el<span class="hljs-number">8</span>                         <span class="hljs-title">@anaconda</span><br>at.<span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span>                            <span class="hljs-number">3.1</span>.<span class="hljs-number">20</span><span class="hljs-number">-11</span>.el<span class="hljs-number">8</span>                     <span class="hljs-title">@anaconda</span><br>[root<span class="hljs-title">@rocky</span> ~]# <br></code></pre></td></tr></table></figure><p><strong>范例：查看可以安装的包</strong></p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@rocky ~]# yum list available | head<br>Last metadata expiration check: 2:21:04 ago on Tue 09 Aug 2022 09:50:19 AM CST.<br>Available Packages<br>CUnit.i686                                             2.1.3<span class="hljs-string">-17</span>.el8                                              appstream<br>CUnit.x86_64                                           2.1.3<span class="hljs-string">-17</span>.el8                                              appstream<br>GConf2.i686                                            3.2.6<span class="hljs-string">-22</span>.el8                                              appstream<br>GConf2.x86_64                                          3.2.6<span class="hljs-string">-22</span>.el8                                              appstream<br>HdrHistogram.noarch                                    2.1.11<span class="hljs-string">-3</span>.module+el8.4.0<span class="hljs-string">+405</span><span class="hljs-string">+66</span>dfe7da                      appstream<br>HdrHistogram-javadoc.noarch                            2.1.11<span class="hljs-string">-3</span>.module+el8.4.0<span class="hljs-string">+405</span><span class="hljs-string">+66</span>dfe7da                      appstream<br>HdrHistogram_c.i686                                    0.9.13<span class="hljs-string">-2</span>.el8                                              appstream<br>HdrHistogram_c.x86_64                                  0.9.13<span class="hljs-string">-2</span>.el8                                              appstream<br>[root@rocky ~]# <br><br></code></pre></td></tr></table></figure><p><strong>范例：查看可以升级的包</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yum list updates</span><br></code></pre></td></tr></table></figure><p><strong>范例：查看指定的包</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#yum list exim</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sre云计算作业</title>
    <link href="/2022/08/08/homework/"/>
    <url>/2022/08/08/homework/</url>
    
    <content type="html"><![CDATA[<p><strong>第二周作业</strong></p><ol><li>运行脚本可以显示出本机的ip地址</li><li>如果ip地址中有3这个数字，那么就打印出当前的系统时间</li><li>如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组</li><li>打印出&#x2F;etc&#x2F;passwd这个文件中可以登陆的用户（非&#x2F;usr&#x2F;sbin&#x2F;nologin）</li><li>yum安装nginx服务，并且启动该服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--------------------</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">filename:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">author:袁坤</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">data:2022-08-07</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--------------------</span><br><br>set -e -u<br><br>IP=`ifconfig -a |grep inet |grep -v inet6 | grep -v 127.0.0.1 | tr -s &quot; &quot; | cut -d &quot; &quot; -f3`<br><br>echo 本机IP地址为:$&#123;IP&#125;<br><br>if echo $&#123;I&#125; | grep &#x27;3&#x27;;then<br>echo `date +%Y-%m-%d-%T`<br>else<br>groupadd magedu<br>for i in magedu_&#123;0..100&#125;;do<br>useradd $&#123;i&#125; -g magedu<br>done<br>fi;<br><br>NOLOGIN=`grep -v &#x27;/usr/sbin/nologin&#x27; /etc/passwd | cut -d &quot;:&quot; -f1`<br>echo $&#123;NOLOGIN&#125;<br><br>. /etc/os-release<br>if [ $ID = &quot;rocky&quot; -o $ID = &quot;centos&quot; ];then<br>echo os is version $&#123;ID&#125;<br>yum -y install nginx &amp;&amp; systemctl start nginx<br>else [ $ID = &quot;ubuntu&quot; ];<br>echo os is version $ID<br>apt update &amp;&amp; apt -y install nginx &amp;&amp; systemctl start nginx<br><br>fi;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>磁盘存储和文件系统管理</title>
    <link href="/2022/08/07/Disk/"/>
    <url>/2022/08/07/Disk/</url>
    
    <content type="html"><![CDATA[<h1 id="磁盘管理与文件系统"><a href="#磁盘管理与文件系统" class="headerlink" title="磁盘管理与文件系统"></a>磁盘管理与文件系统</h1><p><strong>前言</strong><br>磁盘是计算机主要的存储介质，可以存储大量的二进制数据，并且断电后也能保持数据不丢失，使用磁盘存储数据的时候我们可以将磁盘划分成我们所需要的格式来进行使用</p><h1 id="1-磁盘结构"><a href="#1-磁盘结构" class="headerlink" title="1. 磁盘结构"></a>1. 磁盘结构</h1><p><strong>1、硬盘的物理结构</strong><br>盘片：硬盘有多个盘片，每个盘片有2面<br>磁头：每面有一个磁头</p><p><strong>2.硬盘数据结构</strong><br>扇区：磁盘上的每个磁道被等分为若干个弧段，这些弧段便是硬盘的扇区。硬盘的第一个扇区，叫做引导扇区 ，盘片被分为多个扇形区域，每个扇区存放512字节的数据，是硬盘最小的存储单元<br>磁道：当磁盘旋转时，磁头若保持在一个位置上，则每个磁头都会在磁盘表面划出一个圆形轨迹，这些圆形轨迹就叫做磁道<br>柱面：在有多个盘片构成的盘组中，由不同盘片的面，但处于同一半径圆的多个磁道组成的一个圆柱面</p><p><strong>3、磁盘结构</strong><br>硬盘存储容量 &#x3D; 磁头数 x 磁道（柱面）数 x 每道扇区数 x 每扇区字节数（512字节）<br>可以用柱面&#x2F;磁头&#x2F;扇区来唯一定位磁盘上的每一个区域<br>磁盘的接口类型：IDE、SATA、SCSI、SAS、光纤通道<br>用 fdisk -l 查看分区信息</p><h1 id="2-管理存储"><a href="#2-管理存储" class="headerlink" title="2. 管理存储"></a>2. 管理存储</h1><h2 id="2-1-磁盘分区"><a href="#2-1-磁盘分区" class="headerlink" title="2.1 磁盘分区"></a>2.1 磁盘分区</h2><h3 id="2-1-1-为什么分区"><a href="#2-1-1-为什么分区" class="headerlink" title="2.1.1 为什么分区"></a>2.1.1 为什么分区</h3><ul><li>优化I&#x2F;O性能</li><li>实现磁盘空间配额限制</li><li>提高修复速度</li><li>隔离系统和程序</li><li>安装多个OS</li><li>采用不同文件系统</li></ul><h3 id="2-1-2-分区方式"><a href="#2-1-2-分区方式" class="headerlink" title="2.1.2 分区方式"></a>2.1.2 分区方式</h3><p>两种分区方式：MBR，GPT</p><p><strong>MBR分区</strong></p><p>MBR：Master Boot Record，1982年，使用32位表示扇区数，分区不超过2T<br>划分分区的单位：<br>CentOS 5 之前按整柱面划分<br>CentOS 6 版本后可以按Sector划分<br>0磁道0扇区：512bytes<br>446bytes: boot loader 启动相关<br>64bytes：分区表，其中每16bytes标识一个分区<br>2bytes: 55AA，标识位<br>MBR分区中一块硬盘最多有4个主分区，也可以3主分区+1扩展(N个逻辑分区)<br>MBR分区：主和扩展分区对应的1–4，&#x2F;dev&#x2F;sda3，逻辑分区从5开始，&#x2F;dev&#x2F;sda5</p><p>问题：利用分区策略相同的另一台主机的分区表来还原和恢复当前主机破环的分区表？</p><p><strong>GPT分区</strong><br>GPT：GUID（Globals Unique Identifiers） partition table 支持128个分区，使用64位，支持8Z（<br>512Byte&#x2F;block ）64Z （ 4096Byte&#x2F;block）<br>使用128位UUID(Universally Unique Identifier) 表示磁盘和分区 GPT分区表自动备份在头和尾两份，<br>并有CRC校验位<br>UEFI (Unified Extensible Firmware Interface 统一可扩展固件接口)硬件支持GPT，使得操作系统可以<br>启动</p><p><strong>GPT分区结构分为4个区域：</strong></p><ul><li>GPT头</li><li>分区表</li><li>GPT分区</li><li>备份区域</li></ul><h2 id="2-2-管理分区"><a href="#2-2-管理分区" class="headerlink" title="2.2 管理分区"></a>2.2 管理分区</h2><p><strong>列出块设备</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lsblk</span><br></code></pre></td></tr></table></figure><p><strong>创建分区命令</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">fdisk</span> 管理MBR分区<br>gdisk 管理GPT分区<br>parted 高级分区操作，可以是交互或非交互方式<br></code></pre></td></tr></table></figure><p><strong>重新设置内存中的内核分区表版本，适合于除了CentOS 6 以外的其它版本 5，7，8</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">partprobe</span><br></code></pre></td></tr></table></figure><h3 id="2-2-1-添加并检测新硬盘"><a href="#2-2-1-添加并检测新硬盘" class="headerlink" title="2.2.1 添加并检测新硬盘"></a>2.2.1 添加并检测新硬盘</h3><p>1、添加新硬盘使用lsblk命令显示出块设备</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@ubuntu200404:~<span class="hljs-comment"># lsblk</span><br>NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>loop0                       7:0   <span class="hljs-number"> 0 </span>61.9M <span class="hljs-number"> 1 </span>loop /snap/core20/1328<br>loop1                       7:1   <span class="hljs-number"> 0 </span>67.2M <span class="hljs-number"> 1 </span>loop /snap/lxd/21835<br>loop2                       7:2   <span class="hljs-number"> 0 </span>  62M <span class="hljs-number"> 1 </span>loop /snap/core20/1587<br>loop3                       7:3   <span class="hljs-number"> 0 </span>43.6M <span class="hljs-number"> 1 </span>loop /snap/snapd/14978<br>loop4                       7:4   <span class="hljs-number"> 0 </span>  47M <span class="hljs-number"> 1 </span>loop /snap/snapd/16292<br>loop5                       7:5   <span class="hljs-number"> 0 </span>67.8M <span class="hljs-number"> 1 </span>loop /snap/lxd/22753<br>sda                         8:0   <span class="hljs-number"> 0 </span>  20G <span class="hljs-number"> 0 </span>disk <br>├─sda1                      8:1   <span class="hljs-number"> 0 </span>   1M <span class="hljs-number"> 0 </span>part <br>├─sda2                      8:2   <span class="hljs-number"> 0 </span> 1.5G <span class="hljs-number"> 0 </span>part /boot<br>└─sda3                      8:3   <span class="hljs-number"> 0 </span>18.5G <span class="hljs-number"> 0 </span>part <br>  └─ubuntu--vg-ubuntu--lv 253:0   <span class="hljs-number"> 0 </span>  10G <span class="hljs-number"> 0 </span>lvm  /<br>sr0                        11:0   <span class="hljs-number"> 1 </span> 1.2G <span class="hljs-number"> 0 </span>rom <br></code></pre></td></tr></table></figure><p>发现并没有检测出来新添加的硬盘</p><p> 2、检测新硬盘</p><p>方法1：可以重启电脑</p><p>方法2： 重新扫描存储设备的scsi总线 </p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># host后面的数字不是固定的，以实际为准<br>root@ubuntu200404:~# echo <span class="hljs-string">&#x27;- - -&#x27;</span> &gt; <span class="hljs-regexp">/sys/</span><span class="hljs-keyword">class</span><span class="hljs-regexp">/scsi_host/</span>host32/scan<br></code></pre></td></tr></table></figure><p>再次使用lsblk命令查看发现已经多了sda的硬盘，说明成功了</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@ubuntu200404:~<span class="hljs-comment"># lsblk</span><br>NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>loop0                       7:0   <span class="hljs-number"> 0 </span>61.9M <span class="hljs-number"> 1 </span>loop /snap/core20/1328<br>loop1                       7:1   <span class="hljs-number"> 0 </span>67.2M <span class="hljs-number"> 1 </span>loop /snap/lxd/21835<br>loop2                       7:2   <span class="hljs-number"> 0 </span>  62M <span class="hljs-number"> 1 </span>loop /snap/core20/1587<br>loop3                       7:3   <span class="hljs-number"> 0 </span>43.6M <span class="hljs-number"> 1 </span>loop /snap/snapd/14978<br>loop4                       7:4   <span class="hljs-number"> 0 </span>  47M <span class="hljs-number"> 1 </span>loop /snap/snapd/16292<br>loop5                       7:5   <span class="hljs-number"> 0 </span>67.8M <span class="hljs-number"> 1 </span>loop /snap/lxd/22753<br>sda                         8:0   <span class="hljs-number"> 0 </span>  20G <span class="hljs-number"> 0 </span>disk <br>├─sda1                      8:1   <span class="hljs-number"> 0 </span>   1M <span class="hljs-number"> 0 </span>part <br>├─sda2                      8:2   <span class="hljs-number"> 0 </span> 1.5G <span class="hljs-number"> 0 </span>part /boot<br>└─sda3                      8:3   <span class="hljs-number"> 0 </span>18.5G <span class="hljs-number"> 0 </span>part <br>  └─ubuntu--vg-ubuntu--lv 253:0   <span class="hljs-number"> 0 </span>  10G <span class="hljs-number"> 0 </span>lvm  /<br>sdb                         8:16  <span class="hljs-number"> 0 </span>  20G <span class="hljs-number"> 0 </span>disk<span class="hljs-comment"># 新添加的硬盘 </span><br>sr0                        11:0   <span class="hljs-number"> 1 </span> 1.2G <span class="hljs-number"> 0 </span>rom<br></code></pre></td></tr></table></figure><h3 id="2-2-2-partend命令"><a href="#2-2-2-partend命令" class="headerlink" title="2.2.2 partend命令"></a>2.2.2 partend命令</h3><p><strong>注意：parted的操作都是实时生效的，小心使用</strong></p><p>格式:</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">parted <span class="hljs-comment">[选项]</span>... <span class="hljs-comment">[设备 <span class="hljs-comment">[命令 <span class="hljs-comment">[参数]</span>...]</span>...]</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">parted /dev/sdb mklabel gpt|msdos<br>parted /dev/sdb print<br>parted /dev/sdb mkpart primary 1 200 （默认M）<br>parted /dev/sdb rm 1<br>parted -l 列出所有硬盘分区信息<br></code></pre></td></tr></table></figure><h3 id="2-2-3-分区工具fdisk和gdisk"><a href="#2-2-3-分区工具fdisk和gdisk" class="headerlink" title="2.2.3 分区工具fdisk和gdisk"></a>2.2.3 分区工具fdisk和gdisk</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">fdisk -l [-u] [device.<span class="hljs-string">..</span>] 查看分区<br>fdisk [device.<span class="hljs-string">..</span>] 管理MBR分区<br>gdisk [device.<span class="hljs-string">..</span>] 类fdisk 的GPT分区工具<br><br><span class="hljs-comment"># 范例：</span><br>fdisk <span class="hljs-string">/dev/sdb</span><br></code></pre></td></tr></table></figure><p><strong>子命令：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> 分区列表<br>t 更改分区类型<br>n 创建新分区<br>d 删除分区<br>v 校验分区<br>u 转换单位<br>w 保存并退出<br><span class="hljs-selector-tag">q</span> 不保存并退出<br></code></pre></td></tr></table></figure><p><strong>查看内核是否已经识别新的分区</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>partitions<br></code></pre></td></tr></table></figure><p><strong>CentOS 7,8 同步分区表:</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">partprobe</span><br></code></pre></td></tr></table></figure><h2 id="2-3-文件系统"><a href="#2-3-文件系统" class="headerlink" title="2.3 文件系统"></a>2.3 文件系统</h2><h3 id="2-3-1-文件系统概念"><a href="#2-3-1-文件系统概念" class="headerlink" title="2.3.1 文件系统概念"></a>2.3.1 文件系统概念</h3><p>文件系统是操作系统用于明确存储设备或分区上的文件的方法和数据结构；即在存储设备上组织文件的<br>方法。操作系统中负责管理和存储文件信息的软件结构称为文件管理系统，简称文件系统<br>从系统角度来看，文件系统是对文件存储设备的空间进行组织和分配，负责文件存储并对存入的文件进<br>行保护和检索的系统。具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的<br>存取，安全控制，日志，压缩，加密等<br>支持的文件系统：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/lib/m</span>odules<span class="hljs-regexp">/`uname -r`/</span>kernel/fs<br></code></pre></td></tr></table></figure><p>(各种文件系统)[<a href="https://en.wikipedia.org/wiki/Comparison_of_file_systems]">https://en.wikipedia.org/wiki/Comparison_of_file_systems]</a></p><p><strong>帮助：</strong>man 5 fs</p><h3 id="2-3-2-文件系统类型"><a href="#2-3-2-文件系统类型" class="headerlink" title="2.3.2 文件系统类型"></a>2.3.2 文件系统类型</h3><p><strong>Linux常用文件系统</strong></p><ul><li>ext2：Extended file system 适用于那些分区容量不是太大，更新也不频繁的情况，例如 &#x2F;boot 分<br>区</li><li>ext3：是 ext2 的改进版本，其支持日志功能，能够帮助系统从非正常关机导致的异常中恢复</li><li>ext4：是 ext 文件系统的最新版。提供了很多新的特性，包括纳秒级时间戳、创建和使用巨型文件<br>(16TB)、最大1EB的文件系统，以及速度的提升</li><li>xfs：SGI，支持最大8EB的文件系统</li><li>swap</li><li>iso9660 光盘</li><li>btrfs（Oracle）</li><li>reiserfs</li></ul><p><strong>Windows 常用文件系统</strong></p><ul><li>FAT32</li><li>NTFS</li><li>exFAT</li><li>Unix：</li><li>FFS（fast）</li><li>UFS（unix）</li><li>JFS2</li></ul><p><strong>网络文件系统：</strong></p><ul><li>NFS</li><li>CIFS</li></ul><p><strong>集群文件系统：</strong></p><ul><li>GFS2</li><li>OCFS2（oracle）</li></ul><p><strong>分布式文件系统：</strong></p><ul><li>fastdfs</li><li>ceph</li><li>moosefs</li><li>mogilefs</li><li>glusterfs</li><li>Lustre</li></ul><p><strong>RAW：</strong></p><p>裸文件系统,未经处理或者未经格式化产生的文件系统<br>常用的文件系统特性：</p><p><strong>FAT32</strong></p><ul><li>最多只能支持16TB的文件系统和4GB的文件</li></ul><p><strong>NTFS</strong></p><ul><li>最多只能支持16EB的文件系统和16EB的文件</li></ul><p><strong>EXT3</strong></p><ul><li>最多只能支持32TB的文件系统和2TB的文件，实际只能容纳2TB的文件系统和16GB的文件</li><li>Ext3目前只支持32000个子目录</li><li>Ext3文件系统使用32位空间记录块数量和 inode数量</li><li>当数据写入到Ext3文件系统中时，Ext3的数据块分配器每次只能分配一个4KB的块</li></ul><p><strong>EXT4：</strong></p><ul><li>EXT4是Linux系统下的日志文件系统，是EXT3文件系统的后继版本</li><li>Ext4的文件系统容量达到1EB，而支持单个文件则达到16TB</li><li>理论上支持无限数量的子目录</li><li>Ext4文件系统使用64位空间记录块数量和 inode数量</li><li>Ext4的多块分配器支持一次调用分配多个数据块</li><li>修复速度更快</li></ul><p><strong>XFS</strong></p><ul><li>根据所记录的日志在很短的时间内迅速恢复磁盘文件内容</li><li>用优化算法，日志记录对整体文件操作影响非常小</li><li>是一个全64-bit的文件系统，最大可以支持8EB的文件系统，而支持单个文件则达到8EB</li><li>能以接近裸设备I&#x2F;O的性能存储数据</li></ul><p><strong>查前支持的文件系统：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>filesystems<br></code></pre></td></tr></table></figure><h3 id="2-3-3-文件系统的组成部分"><a href="#2-3-3-文件系统的组成部分" class="headerlink" title="2.3.3 文件系统的组成部分"></a>2.3.3 文件系统的组成部分</h3><p>内核中的模块：ext4, xfs, vfat<br>Linux的虚拟文件系统：VFS<br>用户空间的管理工具：mkfs.ext4, mkfs.xfs,mkfs.vfat</p><h3 id="2-3-4-文件系统选择管理"><a href="#2-3-4-文件系统选择管理" class="headerlink" title="2.3.4 文件系统选择管理"></a>2.3.4 文件系统选择管理</h3><h4 id="2-3-4-1-创建文件系统"><a href="#2-3-4-1-创建文件系统" class="headerlink" title="2.3.4.1 创建文件系统"></a>2.3.4.1 创建文件系统</h4><p><strong>创建文件管理工具</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs命令：<br>(<span class="hljs-number">1</span>) mkfs.FS_TYPE <span class="hljs-regexp">/dev/</span>DEVICE<br>ext4<br>xfs<br>btrfs<br>vfat<br>(<span class="hljs-number">2</span>) mkfs -t FS_TYPE <span class="hljs-regexp">/dev/</span>DEVICE<br>-L <span class="hljs-string">&#x27;LABEL&#x27;</span> 设定卷标<br>mke2fs：ext系列文件系统专用管理工具<br></code></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>t &#123;ext2|ext3|ext4|xfs&#125; 指定文件系统类型<br><span class="hljs-literal">-</span>b &#123;1024|2048|4096&#125; 指定块 block 大小<br><span class="hljs-literal">-</span>L ‘LABEL’ 设置卷标<br><span class="hljs-literal">-</span>j 相当于 -t ext3， mkfs.ext3 = mkfs -t ext3 = mke2fs -j = mke2fs -t ext3<br><span class="hljs-literal">-</span>i <span class="hljs-comment"># 为数据空间中每多少个字节创建一个inode；不应该小于block大</span><br>小<br><span class="hljs-literal">-</span>N <span class="hljs-comment"># 指定分区中创建多少个inode</span><br><span class="hljs-literal">-</span>I 一个inode记录占用的磁盘空间大小，128---4096<br><span class="hljs-literal">-</span>m <span class="hljs-comment"># 默认5%,为管理人员预留空间占总空间的百分比</span><br><span class="hljs-literal">-</span>O FEATURE[,...] 启用指定特性<br><span class="hljs-literal">-</span>O ^FEATURE <br></code></pre></td></tr></table></figure><p><strong>案例：mkfs.ext4 &#x2F;dev&#x2F;sdb1</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">root</span>@ubuntu200404:~# mkfs.ext4 /dev/sdb1<br><span class="hljs-attribute">mke2fs</span> <span class="hljs-number">1</span>.<span class="hljs-number">45</span>.<span class="hljs-number">5</span> (<span class="hljs-number">07</span>-Jan-<span class="hljs-number">2020</span>)<br><span class="hljs-attribute">Creating</span> filesystem with <span class="hljs-number">2621440</span> <span class="hljs-number">4</span>k blocks and <span class="hljs-number">655360</span> inodes<br><span class="hljs-attribute">Filesystem</span> UUID: a7ef4142-<span class="hljs-number">26</span>e5-<span class="hljs-number">43</span>dd-b9d0-<span class="hljs-number">24</span>c4d09155a1<br><span class="hljs-attribute">Superblock</span> backups stored <span class="hljs-literal">on</span> blocks: <br><span class="hljs-attribute">32768</span>, <span class="hljs-number">98304</span>, <span class="hljs-number">163840</span>, <span class="hljs-number">229376</span>, <span class="hljs-number">294912</span>, <span class="hljs-number">819200</span>, <span class="hljs-number">884736</span>, <span class="hljs-number">1605632</span><br><br><span class="hljs-attribute">Allocating</span> group tables: done                            <br><span class="hljs-attribute">Writing</span> inode tables: done                            <br><span class="hljs-attribute">Creating</span> journal (<span class="hljs-number">16384</span> blocks): done<br><span class="hljs-attribute">Writing</span> superblocks and filesystem accounting information: done <br><br><span class="hljs-attribute">root</span>@ubuntu200404:~# <br></code></pre></td></tr></table></figure><h4 id="2-3-4-2-查看和管理分区信息"><a href="#2-3-4-2-查看和管理分区信息" class="headerlink" title="2.3.4.2 查看和管理分区信息"></a>2.3.4.2 查看和管理分区信息</h4><p>blkid 可以查看块设备属性信息<br>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">blkid <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[DEVICE]</span><br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">-U UUID 根据指定的UUID来查找对应的设备<br>-L <span class="hljs-selector-tag">LABEL</span> 根据指定的<span class="hljs-selector-tag">LABEL</span>来查找对应的设备<br>e2label：管理ext系列文件系统的<span class="hljs-selector-tag">LABEL</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">e2label</span> DEVICE<span class="hljs-meta"> [LABEL]</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># blkid /dev/sdb1</span><br>/dev/<span class="hljs-symbol">sdb1:</span> <span class="hljs-title class_">UUID</span>=<span class="hljs-string">&quot;a7ef4142-26e5-43dd-b9d0-24c4d09155a1&quot;</span> <span class="hljs-title class_">TYPE</span>=<span class="hljs-string">&quot;ext4&quot;</span> <span class="hljs-title class_">PARTUUID</span>=<span class="hljs-string">&quot;db60ac71-01&quot;</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>查找分区</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">findfs [<span class="hljs-keyword">options</span>] LABEL=&lt;label&gt;<br>findfs [<span class="hljs-keyword">options</span>] <span class="hljs-type">UUID</span>=&lt;<span class="hljs-type">uuid</span>&gt;<br></code></pre></td></tr></table></figure><p><strong>tune2fs：重新设定ext系列文件系统可调整参数的值</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>l 查看指定文件系统超级块信息；super block<br><span class="hljs-literal">-</span>L &#x27;LABEL’ 修改卷标<br><span class="hljs-literal">-</span>m <span class="hljs-comment"># 修预留给管理员的空间百分比</span><br><span class="hljs-literal">-</span>j 将ext2升级为ext3<br><span class="hljs-literal">-</span>O 文件系统属性启用或禁用, -O ^has_journal<br><span class="hljs-literal">-</span>o 调整文件系统的默认挂载选项，-o ^acl<br><span class="hljs-literal">-</span>U UUID 修改UUID号<br></code></pre></td></tr></table></figure><p><strong>dumpe2fs：显示ext文件系统信息，将磁盘块分组管理</strong><br>-h：查看超级块信息，不显示分组信息</p><p><strong>范例：查看ext文件系统的元数据和块组信息</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs nsis">root@ubuntu200404:~<span class="hljs-comment"># dumpe2fs /dev/sdb1</span><br>dumpe2fs <span class="hljs-number">1.45</span>.<span class="hljs-number">5</span> (<span class="hljs-number">07</span>-Jan-<span class="hljs-number">2020</span>)<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> volume <span class="hljs-keyword">name</span>:   &lt;<span class="hljs-literal">none</span>&gt;<br>Last mounted <span class="hljs-literal">on</span>:          &lt;not available&gt;<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> UUID:          a7ef4142-<span class="hljs-number">26</span>e5-<span class="hljs-number">43</span>dd-b9d0-<span class="hljs-number">24</span>c4d09155a1<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> magic number:  <span class="hljs-number">0</span>xEF53<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> revision <span class="hljs-comment">#:    1 (dynamic)</span><br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> features:      has_journal ext_attr resize_inode dir_index filetype extent <span class="hljs-number">64</span>bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> flags:         signed_directory_hash <br>Default mount options:    user_xattr acl<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> state:         clean<br>Errors behavior:          Continue<br><span class="hljs-keyword">File</span><span class="hljs-params">system</span> OS type:       Linux<br>Inode count:              <span class="hljs-number">655360</span><br>Block count:              <span class="hljs-number">2621440</span><br>Reserved block count:     <span class="hljs-number">131072</span><br>Free blocks:              <span class="hljs-number">2554687</span><br>Free inodes:              <span class="hljs-number">655349</span><br>First block:              <span class="hljs-number">0</span><br>......<br>......<br>......<br></code></pre></td></tr></table></figure><p><strong>xfs_info：显示示挂载或已挂载的 xfs 文件系统信息</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">xfs_info mountpoint<span class="hljs-string">|devname</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">xfs_info <span class="hljs-regexp">/dev/</span>sda1<br></code></pre></td></tr></table></figure><h4 id="2-3-4-3-文件系统检测和修复"><a href="#2-3-4-3-文件系统检测和修复" class="headerlink" title="2.3.4.3 文件系统检测和修复"></a>2.3.4.3 文件系统检测和修复</h4><p>文件系统夹故障常发生于死机或者非正常关机之后，挂载为文件系统标记为“no clean”<br><strong>注意：一定不要在挂载状态下执行下面命令修复</strong></p><p>fsck: File System Check</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">fsck.FS<span class="hljs-emphasis">_TYPE</span><br><span class="hljs-emphasis">fsck -t FS_</span>TYPE<br></code></pre></td></tr></table></figure><p><strong>注意：FS_TYPE 一定要与分区上已经文件类型相同</strong></p><p><strong>常用选项</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a 自动修复</span><br><span class="hljs-deletion">-r 交互式修复错误</span><br></code></pre></td></tr></table></figure><p><strong>e2fsck：ext系列文件专用的检测修复工具</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-y 自动回答为yes</span><br><span class="hljs-deletion">-f 强制修复</span><br><span class="hljs-deletion">-p 自动进行安全的修复文件系统问题</span><br></code></pre></td></tr></table></figure><p><strong>用法：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">e2fsck <span class="hljs-regexp">/dev/</span>sdb2<br></code></pre></td></tr></table></figure><p><strong>xfs_repair：xfs文件系统专用检测修复工具</strong><br><strong>常用选项：</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-f 修复文件，而设备</span><br><span class="hljs-deletion">-n 只检查</span><br><span class="hljs-deletion">-d 允许修复只读的挂载设备，在单用户下修复 / 时使用，然后立即reboot</span><br></code></pre></td></tr></table></figure><p><strong>用法：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">xfs_repair <span class="hljs-regexp">/dev/</span>sda1 <br></code></pre></td></tr></table></figure><h2 id="2-4-挂载"><a href="#2-4-挂载" class="headerlink" title="2.4 挂载"></a>2.4 挂载</h2><p>挂载:将额外文件系统与根文件系统某现存的目录建立起关联关系，进而使得此目录做为其它文件访问入<br>口的行为<br>卸载:为解除此关联关系的过程<br>把设备关联挂载点：mount Point<br>挂载点下原有文件在挂载完成后会被临时隐藏，因此，挂载点目录一般为空<br>进程正在使用中的设备无法被卸载</p><h3 id="2-4-1-挂载文件系统-mount"><a href="#2-4-1-挂载文件系统-mount" class="headerlink" title="2.4.1 挂载文件系统 mount"></a>2.4.1 挂载文件系统 mount</h3><p><strong>格式</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mount <span class="hljs-selector-attr">[-fnrsvw]</span> <span class="hljs-selector-attr">[-t vfstype]</span> <span class="hljs-selector-attr">[-o options]</span> device mountpoint<br></code></pre></td></tr></table></figure><p>device：指明要挂载的设备</p><ul><li>设备文件：例如:&#x2F;dev&#x2F;sda5</li><li>卷标：-L ‘LABEL’, 例如 -L ‘MYDATA’</li><li>UUID： -U ‘UUID’：例如 -U ‘0c50523c-43f1-45e7-85c0-a126711d406e’</li><li>伪文件系统名称：proc, sysfs, devtmpfs, configfs</li></ul><p>mountpoint：挂载点目录必须事先存在，建议使用空目录<br>mount 常用命令选项  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">-t fstype 指定要挂载的设备上的文件系统类型,如:ext4,xfs<br>-r <span class="hljs-built_in">readonly</span>，只读挂载<br>-w <span class="hljs-built_in">read</span> and write, 读写挂载,此为默认设置,可省略<br>-n 不更新/etc/mtab，mount不可见<br>-a 自动挂载所有支持自动挂载的设备(定义在了/etc/fstab文件中，且挂载选项中有<br>auto功能)<br>-L <span class="hljs-string">&#x27;LABEL&#x27;</span> 以卷标指定挂载设备<br>-U <span class="hljs-string">&#x27;UUID&#x27;</span> 以UUID指定要挂载的设备<br>-B, --<span class="hljs-built_in">bind</span> 绑定目录到另一个目录上<br>-o options：(挂载文件系统的选项)，多个选项使用逗号分隔<br>async 异步模式,内存更改时,写入缓存区buffer,过一段时间再写到磁盘中，效率高，但不安全<br><span class="hljs-built_in">sync</span> 同步模式,内存更改时，同时写磁盘，安全，但效率低下<br>atime/noatime 包含目录和文件<br>diratime/nodiratime 目录的访问时间戳<br>auto/noauto 是否支持开机自动挂载，是否支持-a选项<br><span class="hljs-built_in">exec</span>/noexec 是否支持将文件系统上运行应用程序<br>dev/nodev 是否支持在此文件系统上使用设备文件<br>suid/nosuid 是否支持suid和sgid权限<br>remount 重新挂载<br>ro/rw 只读、读写<br>user/nouser 是否允许普通用户挂载此设备，/etc/fstab使用<br>acl/noacl 启用此文件系统上的acl功能<br>loop 使用loop设备<br>_netdev 当网络可用时才对网络资源进行挂载，如：NFS文件系统<br>defaults 相当于rw, suid, dev, <span class="hljs-built_in">exec</span>, auto, nouser, async<br></code></pre></td></tr></table></figure><p><strong>挂载规则:</strong></p><ul><li>一个挂载点同一时间只能挂载一个设备</li><li>一个挂载点同一时间挂载了多个设备，只能看到最后一个设备的数据，其它设备上的数据将被隐藏</li><li>一个设备可以同时挂载到多个挂载点</li><li>通常挂载点一般是已存在空的目录</li></ul><p><strong>范例:挂载案例</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data</span><span class="hljs-comment"># mount /dev/sdb1 /data/mysql_mount/</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data</span><span class="hljs-comment"># df</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1659865748687.png" alt="1659865748687"></p><h3 id="2-4-2-卸载文件系统-umount"><a href="#2-4-2-卸载文件系统-umount" class="headerlink" title="2.4.2 卸载文件系统 umount"></a>2.4.2 卸载文件系统 umount</h3><p>卸载时：可使用设备，也可以使用挂载点</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">umount 设备名<span class="hljs-string">|挂载点</span><br></code></pre></td></tr></table></figure><h3 id="2-4-3-查看挂载情况"><a href="#2-4-3-查看挂载情况" class="headerlink" title="2.4.3 查看挂载情况"></a>2.4.3 查看挂载情况</h3><p><strong>查看挂载</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#通过查看/etc/mtab文件显示当前已挂载的所有设备</span><br>mount<br><span class="hljs-comment">#查看内核追踪到的已挂载的所有设备</span><br>cat <span class="hljs-regexp">/proc/m</span>ounts<br></code></pre></td></tr></table></figure><p><strong>查看挂载点情况</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">findmnt MOUNT_POINT<span class="hljs-string">|device</span><br></code></pre></td></tr></table></figure><p><strong>查看正在访问指定文件系统的进程</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">lsof MOUNT<span class="hljs-emphasis">_POINT</span><br><span class="hljs-emphasis">fuser -v MOUNT_</span>POINT<br></code></pre></td></tr></table></figure><p><strong>终止所有在正访问指定的文件系统的进程</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">fuser -km MOUNT_POINT</span><br></code></pre></td></tr></table></figure><h3 id="2-4-4-持久挂载"><a href="#2-4-4-持久挂载" class="headerlink" title="2.4.4 持久挂载"></a>2.4.4 持久挂载</h3><p>将挂载保存到 &#x2F;etc&#x2F;fstab 中可以下次开机时，自动启用挂载<br>&#x2F;etc&#x2F;fstab格式帮助：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">man</span> <span class="hljs-number">5</span> fstab<br></code></pre></td></tr></table></figure><p>每行定义一个要挂载的文件系统,，其中包括共 6 项</p><ul><li>要挂载的设备或伪文件系统设备文件<br>LABEL：LABEL&#x3D;””<br>UUID：UUID&#x3D;””<br>伪文件系统名称：proc, sysfs</li><li>挂载点：必须是事先存在的目录</li><li>文件系统类型：ext4，xfs，iso9660，nfs，none</li><li>挂载选项：defaults ，acl，bind</li><li>转储频率：0：不做备份 1：每天转储 2：每隔一天转储</li><li>fsck检查的文件系统的顺序：允许的数字是0 1 2<br>0：不自检 ，1：首先自检；一般只有rootfs才用 2：非rootfs使用</li></ul><p><strong>添加新的挂载项，需要执行下面命令生效</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mount -<span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p><strong>范例：centos7, 8 &#x2F;etc&#x2F;fstab 的分区UUID错误，无法启动</strong>*</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">自动进入emergency mode,输入root 密码<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">cat</span> /proc/mounts 可以查看到/ 以rw方式挂载</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">vim /etc/fstab</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">reboot</span><br></code></pre></td></tr></table></figure><p><strong>范例：centos 6 &#x2F;etc&#x2F;fstab 的分区UUID错误，无法启动</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle">如果<span class="hljs-regexp">/etc/</span>fstab 的挂载设备出错，比如文件系统故障，并且文件系统检测项（即第<span class="hljs-number">6</span>项为非<span class="hljs-number">0</span>），将导致无<br>法启动<br>自动进入emergency mode,输入root 密码<br>#cat <span class="hljs-regexp">/proc/m</span>ounts 可以查看到/ 以ro方式挂载，无法直接修改配置文件<br>#mount -o remount,rw /<br>#vim <span class="hljs-regexp">/etc/</span>fstab<br>将故障行的最后<span class="hljs-number">1</span>项，即第<span class="hljs-number">6</span>项修改为<span class="hljs-number">0</span>，开机不检测此项挂载设备的健康性，从而忽略错误，能实现启动<br></code></pre></td></tr></table></figure><p><strong>范例：&#x2F;etc&#x2F;fstab格式</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">root@ubuntu200404:<span class="hljs-regexp">/data# cat /</span>etc/fstab <br><span class="hljs-comment"># /etc/fstab: static file system information.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="hljs-comment"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="hljs-comment"># that works even if disks are added and removed. See fstab(5).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="hljs-comment"># / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-id/</span>dm-uuid-LVM-<span class="hljs-number">3</span>aQ0WgB04ZXwNPYVAYy9ssb3Wd06E34ggUUxCcYQaVwAb0L03K40wpOxbnqqqa3f / ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br><span class="hljs-comment"># /boot was on /dev/sda2 during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-uuid/</span><span class="hljs-number">5</span>e8f9763-<span class="hljs-number">2</span>db8-<span class="hljs-number">48</span>d0-<span class="hljs-number">85</span>e2-a26d76521e2f /boot ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br>/swap.imgnoneswapsw<span class="hljs-number">0</span><span class="hljs-number">0</span><br>root@ubuntu200404:/data<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>范例：添加新的挂载点后修改&#x2F;etc&#x2F;fstab文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># /etc/fstab: static file system information.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="hljs-comment"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="hljs-comment"># that works even if disks are added and removed. See fstab(5).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="hljs-comment"># / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-id/</span>dm-uuid-LVM-<span class="hljs-number">3</span>aQ0WgB04ZXwNPYVAYy9ssb3Wd06E34ggUUxCcYQaVwAb0L03K40wpOxbnqqqa3f / ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br><span class="hljs-comment"># /boot was on /dev/sda2 during curtin installation</span><br><span class="hljs-regexp">/dev/</span>disk<span class="hljs-regexp">/by-uuid/</span><span class="hljs-number">5</span>e8f9763-<span class="hljs-number">2</span>db8-<span class="hljs-number">48</span>d0-<span class="hljs-number">85</span>e2-a26d76521e2f /boot ext4 defaults <span class="hljs-number">0</span> <span class="hljs-number">1</span><br>/swap.img       none    swap    sw      <span class="hljs-number">0</span>       <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 添加该行后、重启系统</span><br>UUID=<span class="hljs-number">0</span>e850a4a-<span class="hljs-number">028</span>d-<span class="hljs-number">48</span>b2-aa18-dd8b16090aa6  <span class="hljs-regexp">/data/my</span>sql_mount  ext4  defaults  <span class="hljs-number">0</span>  <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="2-5-处理交换文件和分区"><a href="#2-5-处理交换文件和分区" class="headerlink" title="2.5 处理交换文件和分区"></a>2.5 处理交换文件和分区</h2><h3 id="2-5-1-swap分区"><a href="#2-5-1-swap分区" class="headerlink" title="2.5.1 swap分区"></a>2.5.1 swap分区</h3><p>swap交换分区是系统RAM的补充，swap 分区支持虚拟内存。当没有足够的 RAM 保存系统处理的数据<br>时会将数据写入 swap 分区，当系统缺乏 swap 空间时，内核会因 RAM 内存耗尽而终止进程。配置过<br>多 swap 空间会造成存储设备处于分配状态但闲置，造成浪费，过多 swap 空间还会掩盖内存泄露<br>注意：为优化性能，可以将swap 分布存放，或高性能磁盘存放  </p><h3 id="2-5-2-交换分区实现过程"><a href="#2-5-2-交换分区实现过程" class="headerlink" title="2.5.2 交换分区实现过程"></a>2.5.2 交换分区实现过程</h3><ol><li>创建交换分区或者文件</li><li>使用mkswap写入特殊签名</li><li>在&#x2F;etc&#x2F;fstab文件中添加适当的条目</li><li>使用swapon -a 激活交换空间</li></ol><p><strong>启用swap分区</strong> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">swapon <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[DEVICE]</span><br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>a <span class="hljs-comment">#激活所有的交换分区</span><br><span class="hljs-literal">-</span>p PRIORITY <span class="hljs-comment">#指定优先级(-1到32767之间)，值越大,优先级越高.也可在/etc/fstab文件中的第4列指</span><br>定：pri=value<br></code></pre></td></tr></table></figure><p><strong>范例:创建swap分区</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#mkswap /dev/sdc1</span><br></code></pre></td></tr></table></figure><p><strong>禁用swap分区</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">swapoff <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[DEVICE]</span><br></code></pre></td></tr></table></figure><p><strong>范例:禁用swap分区</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#sed</span> -<span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.bak</span> <span class="hljs-string">&#x27;/swap/d&#x27;</span> /etc/fstab<br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#swapoff</span> -a<br></code></pre></td></tr></table></figure><h3 id="2-5-3-swap的使用策略"><a href="#2-5-3-swap的使用策略" class="headerlink" title="2.5.3 swap的使用策略"></a>2.5.3 swap的使用策略</h3><p>&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness 的值决定了当内存占用达到一定的百分比时，会启用swap分区的空间<br>使用规则</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">当内存使用率达到<span class="hljs-number">100</span>-swappiness时,会启用交换分区<br>简单地说这个参数定义了系统对<span class="hljs-keyword">swap</span>的使用倾向，此值越大表示越倾向于使用<span class="hljs-keyword">swap</span>。<br>可以设为<span class="hljs-number">0</span>，这样做并不会禁止对<span class="hljs-keyword">swap</span>的使用，只是最大限度地降低了使用<span class="hljs-keyword">swap</span>的可能性<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#说明：CentOS7和<span class="hljs-number">8</span>默认值为<span class="hljs-number">30</span>，内存在使用到<span class="hljs-number">100</span>-<span class="hljs-number">30</span>=<span class="hljs-number">70</span>%的时候，就开始出现有交换分区的使用。<br>[root@centos8 ~]# cat <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/vm/</span>swappiness<br></code></pre></td></tr></table></figure><h2 id="2-6-磁盘常见工具"><a href="#2-6-磁盘常见工具" class="headerlink" title="2.6 磁盘常见工具"></a>2.6 磁盘常见工具</h2><h3 id="2-6-1-df"><a href="#2-6-1-df" class="headerlink" title="2.6.1 df"></a>2.6.1 df</h3><p>文件系统空间实际真正占用等信息的查看工具 df</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">df [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-H 以10为单位</span><br><span class="hljs-deletion">-T 文件系统类型</span><br><span class="hljs-deletion">-h human-readable</span><br><span class="hljs-deletion">-i inodes instead of blocks</span><br><span class="hljs-deletion">-P 以Posix兼容的格式输出</span><br></code></pre></td></tr></table></figure><h3 id="2-6-3-du"><a href="#2-6-3-du" class="headerlink" title="2.6.3 du"></a>2.6.3 du</h3><p>查看某目录总体空间实际占用状态 du</p><p>显示指定目录下面各个子目录的大小,单位为KB</p><p><strong>常用选项</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>a --all 显示所有文件和目录的大小,默认只显示目录大小<br><span class="hljs-literal">-</span>h human-readable<br><span class="hljs-literal">-</span>s summary<br><span class="hljs-literal">-</span>-max-depth=<span class="hljs-comment"># 指定最大目录层级</span><br><span class="hljs-literal">-</span>x, --one-file-system <span class="hljs-comment">#忽略不在同一个文件系统的目录</span><br></code></pre></td></tr></table></figure><p><strong>面试题</strong></p><p>1.df 和 du 区别?什么时候df &gt;du（空分区的时候)<br>df 查看是文件系统的空间使用，包括元数据和数据，删除文件后，如果此文件正在使用，不会立即释放空间;du 查看是文件数据空间使用，不包括元数据，删除文件后空间立即释放。</p><p>2.什么时候df &lt; du?<br>目录内挂载有其它分区时的情况</p><p>3.当删除文件但不释放空间时,有什么不同?<br>du 查看文件空间释放,df不释放</p><h1 id="3-RAID"><a href="#3-RAID" class="headerlink" title="3. RAID"></a>3. RAID</h1>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shell编程</title>
    <link href="/2022/08/03/shell%E7%BC%96%E7%A8%8B/"/>
    <url>/2022/08/03/shell%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="内容简述"><a href="#内容简述" class="headerlink" title="内容简述"></a>内容简述</h1><p>shell 是操作系统的最外层。shell 合并编程语言以控制进程和文件，以及启动和控制其它程序。shell 通过提示您输入，向操作系统解释该输入，然后处理来自操作系统的任何结果输出来管理您与操作系统之间的交互。</p><h1 id="1-编程基础"><a href="#1-编程基础" class="headerlink" title="1.编程基础"></a>1.编程基础</h1><p>Linus：Talk is cheap, show me the code</p><h2 id="1-1-程序组成"><a href="#1-1-程序组成" class="headerlink" title="1.1 程序组成"></a>1.1 程序组成</h2><ul><li>程序：算法+数据结构</li><li>算法：处理数据的方式</li><li>数据结构：数据在计算机中的类型和组织方式</li><li>数据：是程序的核心，程序为数据提供服务</li></ul><h2 id="1-2-程序编程风格"><a href="#1-2-程序编程风格" class="headerlink" title="1.2 程序编程风格"></a>1.2 程序编程风格</h2><ul><li>面向过程语言<ul><li>做一件事情，排出个步骤，第一步干什么，第二步干什么，如果出现情况A，做什么处理，如果出现了情况B，做什么处理</li><li>问题规模小，可以步骤化，按部就班处理</li><li>以指令为中心，数据服务于指令</li><li>C，shell</li></ul></li><li>面向对象语言<ul><li>将编程看成是一个事物，对外界来说，事物是直接使用的,不用关心事物内部的情况。而编程就是设置事物能够完成功能。</li><li>一种认识世界、分析世界的方法论。将万事万物抽象为各种对象</li><li>类是抽象的概念，是万事万物的抽象，是一类事物的共同特征的集合</li><li>对象是类的具体实现，是一个实体</li><li>问题规模大，复杂系统</li><li>以数据为中心，指令服务于数据</li><li>java，C#，python，golang等</li></ul></li></ul><h2 id="1-3-编程语言"><a href="#1-3-编程语言" class="headerlink" title="1.3 编程语言"></a>1.3 编程语言</h2><p><strong>编程语言排行榜链接</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">https://www.tiobe.com/tiobe-index/<br></code></pre></td></tr></table></figure><p>计算机：运行二进制指令<br>编程语言：人与计算机之间交互的语言。分为两种：低级语言和高级语言  </p><ul><li>低级编程语言：  <ul><li>机器：二进制的0和1的序列，称为机器指令。与自然语言差异太大，难懂、难写  </li><li>汇编：用一些助记符号替代机器指令，称为汇编语言<br>如：ADD A,B 将寄存器A的数与寄存器B的数相加得到的数放到寄存器A中<br>汇编语言写好的程序需要汇编程序转换成机器指令<br>汇编语言稍微好理解，即机器指令对应的助记符，助记符更接近自然语言</li></ul></li><li>高级编程语言：  <ul><li>编译：高级语言–&gt;编译器–&gt;机器代码文件–&gt;执行，如：C，C++  </li><li>解释：高级语言–&gt;执行–&gt;解释器–&gt;机器代码，如：shell，python，php，JavaScript，perl</li></ul></li><li>编译和解释型语言<br><img src="/../image.assets/1659747737724.png" alt="1659747737724"></li></ul><h2 id="1-4-编程逻辑处理方式"><a href="#1-4-编程逻辑处理方式" class="headerlink" title="1.4 编程逻辑处理方式"></a>1.4 编程逻辑处理方式</h2><p><img src="/../image.assets/1659747842228.png" alt="1659747842228"></p><p><img src="/../image.assets/1659747863045.png" alt="1659747863045"></p><p><strong>三种处理逻辑</strong></p><ul><li>顺序执行：程序按从上到下顺序执行</li><li>选择执行：程序执行过程中，根据条件的不同，进行选择不同分支继续执行</li><li>循环执行：程序执行过程中需要重复执行多次某段语句</li></ul><h1 id="2-shell-脚本语言的基本用法"><a href="#2-shell-脚本语言的基本用法" class="headerlink" title="2.shell 脚本语言的基本用法"></a>2.shell 脚本语言的基本用法</h1><h2 id="2-1-shell-脚本的用途"><a href="#2-1-shell-脚本的用途" class="headerlink" title="2.1 shell 脚本的用途"></a>2.1 shell 脚本的用途</h2><ul><li>将简单的命令组合完成复杂的工作,自动化执行命令,提高工作效率</li><li>减少手工命令的输入，一定程度上避免人为错误</li><li>将软件或应用的安装及配置实现标准化</li><li>用于实现日常性的,重复性的,非交互式的运维工作,如:文件打包压缩备份,监控系统运行状态并实现告警等</li></ul><h2 id="2-2-shell脚本基本结构"><a href="#2-2-shell脚本基本结构" class="headerlink" title="2.2 shell脚本基本结构"></a>2.2 shell脚本基本结构</h2><p><strong>shell脚本编程：是基于过程式、解释执行的语言</strong>  </p><hr><p><strong>编程语言的基本结构：</strong></p><ul><li>各种系统命令的组合</li><li>数据存储：变量、数组</li><li>表达式：a + b</li><li>控制语句：if</li></ul><p>shell脚本：包含一些命令或声明，并符合一定格式的文本文件<br>格式要求：首行shebang机制</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br>#!/usr/bin/python<br>#!/usr/bin/perl<br>#!/usr/bin/ruby<br>#!/usr/bin/lua<br></code></pre></td></tr></table></figure><h2 id="2-3-shell脚本创建过程"><a href="#2-3-shell脚本创建过程" class="headerlink" title="2.3 shell脚本创建过程"></a>2.3 shell脚本创建过程</h2><p><strong>第一步：使用文本编编辑器来创建文本文件</strong></p><p><strong>第一行必须包括shell声明序列：#!</strong><br>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash<span class="hljs-comment"># 使用bash，添加注释,注释以#开头</span></span><br></code></pre></td></tr></table></figure><p>第二步：加执行权限<br>给予执行权限，在命令行上指定脚本的绝对或相对路径<br>第三步：运行脚本<br>直接运行解释器，将脚本作为解释器程序的参数运行</p><p><strong>扩展：查看当前使用的是何种shell，终端输入：echo $SHELL</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:~# echo $SHELL<br>/bin/bash<br>root@ubuntu200404:~#<br></code></pre></td></tr></table></figure><h2 id="2-4-shell脚本注释规范"><a href="#2-4-shell脚本注释规范" class="headerlink" title="2.4 shell脚本注释规范"></a>2.4 shell脚本注释规范</h2><ul><li>第一行一般为调用使用的语言</li><li>程序名，避免更改文件名为无法找到正确的文件</li><li>版本号</li><li>更改后的时间</li><li>作者相关信息</li><li>该程序的作用，及注意事项</li><li>最后是各版本的更新简要说明</li></ul><h2 id="2-5-第一个shell脚本"><a href="#2-5-第一个shell脚本" class="headerlink" title="2.5 第一个shell脚本"></a>2.5 第一个shell脚本</h2><p><strong>范例：第一个shell脚本hello world</strong></p><p><strong>参考文档：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">https://zh.wikipedia.org/wiki/Hello_World<br>https://zh.wikipedia.org/wiki/Hello_World%E7%A8%8B%E5%BA%8F%E6%A0%B7%E4%BE%8B<br></code></pre></td></tr></table></figure><p>(程序样例)[<a href="https://zh.wikipedia.org/wiki/Hello_World]">https://zh.wikipedia.org/wiki/Hello_World]</a></p><p><strong>第一步：vim创建hello.sh文本</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># vim hello.sh</span><br></code></pre></td></tr></table></figure><p><strong>第二步：声明序列和添加脚本名称、日期等</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">#!/bin/bash<br>#******************<br>#filename:hello.<span class="hljs-keyword">sh</span><br>#Dat<span class="hljs-variable">a:2022</span>-<span class="hljs-number">08</span>-<span class="hljs-number">06</span><br>#author:admin<br>#******************<br></code></pre></td></tr></table></figure><p><strong>第三步：编写代码</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">经典写法</span><br>echo &quot;hello, world&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">流行写法</span><br>echo &#x27;Hello, world!&#x27;<br></code></pre></td></tr></table></figure><p><strong>第四步：执行shell脚本</strong></p><p>方法一：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:~# bash hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:~# <br></code></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# cat /data/scripts/hello.sh | bash<br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><p>方法三：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# bash &lt; /data/scripts/hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p>方法四：添加执行权限使用绝对路径和相对路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">绝对路径</span><br>root@ubuntu200404:/data/scripts# /data/scripts/hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">相对路径</span><br>root@ubuntu200404:/data/scripts# pwd<br>/data/scripts<br>root@ubuntu200404:/data/scripts# ./hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><p>方法五：将脚本添加到path变量中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">当前path位置</span><br>root@ubuntu200404:/data/scripts# echo $PATH<br>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin<br>root@ubuntu200404:/data/scripts#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">给hello.sh文件创建软链接放到/usr/local/bin目录下</span><br>root@ubuntu200404:/data/scripts# ln -s /data/scripts/hello.sh /usr/local/bin/ <br>root@ubuntu200404:/data/scripts# ls /usr/local/bin/<br>hello.sh<br>root@ubuntu200404:/data/scripts#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行shell脚本</span><br>root@ubuntu200404:/data/scripts# hello.sh <br>hello world!<br>******************<br>hello world!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><p>方法六：本方法可以实现执行远程主机的shell脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">扩展：curl加-s选项不显示下载信息</span><br>root@ubuntu200404:/data# curl -s http://wangxiaochun.com/testdir/hello.sh |bash<br>hello, world<br>Hello, world!<br>root@ubuntu200404:/data# <br></code></pre></td></tr></table></figure><p>案例：备份脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">脚本内容</span><br>root@ubuntu200404:/data/scripts# cat -n bacup.sh <br>     1#!/bin/bash<br>     2#------------------<br>     3#filename:bacup.sh<br>     4#备份脚本<br>     5#------------------<br>     6<br>     7<br>     8tar zcf /data/scripts-`date +%F_%s`.tar.gz /data/ &amp;&gt; /dev/null<br>     9<br>    10echo -e &quot;\E[1;32mbacup is success!\E[0m&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行脚本</span><br>root@ubuntu200404:/data/scripts# bash bacup.sh <br>bacup is success!<br>root@ubuntu200404:/data/scripts#<br></code></pre></td></tr></table></figure><h2 id="2-6-shell脚本调试"><a href="#2-6-shell脚本调试" class="headerlink" title="2.6 shell脚本调试"></a>2.6 shell脚本调试</h2><p><strong>只检测脚本中的语法错误，但无法检查出命令错误，但不真正执行脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash -n /path/to/some_script<br></code></pre></td></tr></table></figure><p><strong>调试并执行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash -x /path/to/some_script<br></code></pre></td></tr></table></figure><p><strong>案例1：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# bash -x hello.sh <br>+ echo &#x27;hello world!&#x27;<br>hello world!<br>+ echo &#x27;******************&#x27;<br>******************<br>+ echo &#x27;hello world!&#x27;<br>hello world!<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p><strong>案例2:多行重定向</strong></p><p>脚本内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">多行重定向</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">data:2022-08-06</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">author:admin</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--------------------------------------------</span><br><br>echo start<br><br>cat &gt;/data/demo.conf &lt;&lt;EOF<br>line 1<br>line 2<br>line 3<br>EOF <br><br>echo end<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p>检查错误：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# bash -n demo1.sh <br>demo1.sh: line 17: warning: here-document at line 11 delimited by end-of-file (wanted `EOF&#x27;)<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p>检查出第十七行有错误，肉眼观察没有错误，这是因为有些错误不显示在屏幕上的，可以通过cat -A filename或者在vi命令行模式下输入：set list</p><p><img src="/../image.assets/1659754821095.png" alt="1659754821095"></p><p>使用cat -A filename命令后发现EOF后面多了个空格导致错误。删除掉空格脚本即可成功运行。</p><p>在vi命令行模式下输入set list</p><p><img src="/../image.assets/1659754927224.png" alt="1659754927224"></p><p><strong>总结：脚本错误常见的有三种</strong></p><ul><li>语法错误，会导致后续的命令不继续执行，可以用bash -n 检查错误，提示的出错行数不一定是准<br>确的</li><li>命令错误，默认后续的命令还会继续执行，用bash -n 无法检查出来 ，可以使用 bash -x 进行观察</li><li>逻辑错误：只能使用 bash -x 进行观察</li></ul><h2 id="2-7-变量"><a href="#2-7-变量" class="headerlink" title="2.7 变量"></a>2.7 变量</h2><h3 id="2-7-1-变量"><a href="#2-7-1-变量" class="headerlink" title="2.7.1 变量"></a>2.7.1 变量</h3><p><strong>变量表示命名的内存空间，将数据放在内存空间中，通过变量名引用，获取数据</strong>  </p><hr><h3 id="2-7-2-变量类型"><a href="#2-7-2-变量类型" class="headerlink" title="2.7.2 变量类型"></a>2.7.2 变量类型</h3><p><strong>变量类型：</strong></p><ul><li>内置变量，如：PS1，PATH，UID，HOSTNAME，$$，BASHPID，PPID，$?，HISTSIZE</li><li>用户自定义变量</li></ul><p><strong>不同的变量存放的数据不同，决定了以下</strong></p><ul><li>数据存储方式</li><li>参与的运算</li><li>表示的数据范围</li></ul><p><strong>变量数据类型：</strong></p><ul><li>字符</li><li>数值：整型、浮点型,bash 不支持浮点数</li></ul><h3 id="2-7-3-shell中变量命令规则"><a href="#2-7-3-shell中变量命令规则" class="headerlink" title="2.7.3 shell中变量命令规则"></a>2.7.3 shell中变量命令规则</h3><h4 id="2-7-3-1-命名要求"><a href="#2-7-3-1-命名要求" class="headerlink" title="2.7.3.1 命名要求"></a>2.7.3.1 命名要求</h4><ul><li><p>区分大小写</p></li><li><p>不能使程序中的保留字和内置变量：如：if, for<br>只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线 “ - ”，和主机名相反</p></li><li><p>只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线 “ - ”，和主机名相反</p></li></ul><h4 id="2-7-3-2-命令习惯"><a href="#2-7-3-2-命令习惯" class="headerlink" title="2.7.3.2 命令习惯"></a>2.7.3.2 命令习惯</h4><ul><li>见名知义，用英文单词命名，并体现出实际作用，不要用简写，如：ATM</li><li>变量名大写</li><li>局部变量小写</li><li>函数名小写</li><li>大驼峰StudentFirstName,由多个单词组成，且每个单词的首字母是大写，其它小写</li><li>小驼峰studentFirstName ,由多个单词组成，第一个单词的首字母小写，后续每个单词的首字母是大写，其它小写</li><li>下划线: student_name</li></ul><h3 id="2-7-4-变量定义和引用"><a href="#2-7-4-变量定义和引用" class="headerlink" title="2.7.4 变量定义和引用"></a>2.7.4 变量定义和引用</h3><p><strong>变量的生效范围等标准划分变量类型</strong></p><ul><li>普通变量：生效范围为当前shell进程；对当前shell之外的其它shell进程，包括当前shell的子shell进程均无效</li><li>环境变量：生效范围为当前shell进程及其子进程</li><li>本地变量：生效范围为当前shell进程中某代码片断，通常指函数</li></ul><p><strong>变量赋值：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">name=&#x27;value&#x27;<br></code></pre></td></tr></table></figure><p><strong>value 可以是以下多种形式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">直接字串：name=&#x27;root&#x27;<br>变量引用：name=&quot;$USER&quot;<br>命令引用：name=`COMMAND` 或者 name=$(COMMAND)<br></code></pre></td></tr></table></figure><p><strong>注意：</strong>变量赋值是临时生效，当退出终端后，变量会自动删除，无法持久保存，脚本中的变量会随着脚本结束，也会自动删除</p><p><strong>变量引用：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$</span><span class="language-bash">name</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;name&#125;</span><br></code></pre></td></tr></table></figure><p><strong>弱引用和强引用</strong></p><ul><li>“$name” 弱引用，其中的变量引用会被替换为变量值</li><li>‘$name’ 强引用，其中的变量引用不会被替换为变量值，而保持原字符串</li></ul><p><strong>范例：变量的各种赋值方式和引用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs shell">方式1：<br>root@ubuntu200404:/data/scripts# TITLE=cto<br>root@ubuntu200404:/data/scripts# echo $TITLE<br>cto<br>root@ubuntu200404:/data/scripts#<br><br>方式二：<br>root@ubuntu200404:/data/scripts# T=ceo<br>root@ubuntu200404:/data/scripts# NAME=$T<br>root@ubuntu200404:/data/scripts# echo $NAME<br>ceo<br>root@ubuntu200404:/data/scripts#<br><br>方式三：<br>root@ubuntu200404:/data/scripts# NAME=`whoami`<br>root@ubuntu200404:/data/scripts# echo $NAME<br>root<br>root@ubuntu200404:/data/scripts#<br><br>方式四：<br>root@ubuntu200404:/data/scripts# seq 10<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>root@ubuntu200404:/data/scripts#<br><span class="hljs-meta prompt_"># </span><span class="language-bash">弱引用</span><br>root@ubuntu200404:/data/scripts# echo &quot;$NUM&quot;<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p><strong>删除变量： unset name</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">unset &lt;name&gt;<br>案例：<br>root@ubuntu200404:/data/scripts# NUM=`seq 10`<br>root@ubuntu200404:/data/scripts# echo $NUM<br>1 2 3 4 5 6 7 8 9 10<br>root@ubuntu200404:/data/scripts# unset NUM<br>root@ubuntu200404:/data/scripts# echo $NUM<br><br>root@ubuntu200404:/data/scripts# <br></code></pre></td></tr></table></figure><p><strong>显示已有的变量</strong></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">set</span><br></code></pre></td></tr></table></figure><h3 id="2-7-5-环境变量"><a href="#2-7-5-环境变量" class="headerlink" title="2.7.5 环境变量"></a>2.7.5 环境变量</h3><p><strong>环境变量：</strong></p><ul><li>可以使子进程（包括孙子进程）继承父进程的变量，但是无法让父进程使用子进程的变量</li><li>一旦子进程修改从父进程继承的变量，将会新的值传递给孙子进</li><li>一般只在系统配置文件中使用，在脚本中较少使用</li></ul><p><strong>变量声明和赋值：</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#声明并赋值</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">name</span>=VALUE<br>declare -x <span class="hljs-attribute">name</span>=VALUE<br><span class="hljs-comment">#或者分两步实现</span><br><span class="hljs-attribute">name</span>=VALUE<br><span class="hljs-built_in">export</span> name<br></code></pre></td></tr></table></figure><p><strong>变量引用：</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$name</span></span><br><span class="hljs-symbol">$</span>&#123;name&#125;<br></code></pre></td></tr></table></figure><p><strong>显示所有环境变量：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">env</span><br><span class="hljs-built_in">printenv</span><br><span class="hljs-built_in">export</span><br><span class="hljs-built_in">declare</span> -x<br></code></pre></td></tr></table></figure><p><strong>查看指定进程的环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/<span class="hljs-variable">$PID</span>/environ<br></code></pre></td></tr></table></figure><p><strong>删除变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">unset</span> name<br></code></pre></td></tr></table></figure><p><strong>bash内建的环境变量</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">PATH<br>SHELL<br><span class="hljs-keyword">USER</span><br><span class="hljs-title">UID</span><br>HOME<br>PWD<br>SHLVL <span class="hljs-comment">#shell的嵌套层数，即深度</span><br>LANG<br>MAIL<br>HOSTNAME<br>HISTSIZE<br>_ <span class="hljs-comment">#下划线,表示前一命令的最后一个参数</span><br></code></pre></td></tr></table></figure><p><strong>扩展：pstree -p</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu200404:/data/scripts# pstree -p<br>systemd(1)─┬─VGAuthService(757)<br>           ├─accounts-daemon(811)─┬─&#123;accounts-daemon&#125;(818)<br>           │                      └─&#123;accounts-daemon&#125;(864)<br>           ├─atd(837)<br>           ├─cron(815)<br>           ├─dbus-daemon(817)<br>           ├─irqbalance(824)───&#123;irqbalance&#125;(853)<br>           ├─login(1206)───bash(1402)───sudo(1413)───bash(1420)<br>           ├─multipathd(702)─┬─&#123;multipathd&#125;(703)<br>           │                 ├─&#123;multipathd&#125;(704)<br>           │                 ├─&#123;multipathd&#125;(705)<br>           │                 ├─&#123;multipathd&#125;(706)<br>           │                 ├─&#123;multipathd&#125;(707)<br>           │                 └─&#123;multipathd&#125;(708)<br>           ├─networkd-dispat(825)<br>           ├─polkitd(872)─┬─&#123;polkitd&#125;(875)<br>           │              └─&#123;polkitd&#125;(877)<br>           ├─rsyslogd(826)─┬─&#123;rsyslogd&#125;(839)<br>           │               ├─&#123;rsyslogd&#125;(840)<br>           │               └─&#123;rsyslogd&#125;(841)<br>           ├─snapd(828)─┬─&#123;snapd&#125;(915)<br>           │            ├─&#123;snapd&#125;(916)<br>           │            ├─&#123;snapd&#125;(917)<br>           │            ├─&#123;snapd&#125;(918)<br>           │            ├─&#123;snapd&#125;(919)<br>           │            ├─&#123;snapd&#125;(945)<br>           │            ├─&#123;snapd&#125;(946)<br>           │            ├─&#123;snapd&#125;(952)<br>           │            ├─&#123;snapd&#125;(954)<br>           │            └─&#123;snapd&#125;(975)<br>           ├─sshd(859)─┬─sshd(3292)───bash(3421)───pstree(13708)<br>           │           └─sshd(6603)───bash(6736)<br>           ├─systemd(1477)───(sd-pam)(1478)<br>           ├─systemd(1392)───(sd-pam)(1393)<br>           ├─systemd-journal(495)<br>           ├─systemd-logind(830)<br>           ├─systemd-network(2826)<br>           ├─systemd-resolve(799)<br>           ├─systemd-timesyn(746)───&#123;systemd-timesyn&#125;(778)<br>           ├─systemd-udevd(525)<br>           ├─udisksd(836)─┬─&#123;udisksd&#125;(863)<br>           │              ├─&#123;udisksd&#125;(866)<br>           │              ├─&#123;udisksd&#125;(883)<br>           │              └─&#123;udisksd&#125;(906)<br>           ├─unattended-upgr(878)───&#123;unattended-upgr&#125;(908)<br>           ├─upowerd(2940)─┬─&#123;upowerd&#125;(2942)<br>           │               └─&#123;upowerd&#125;(2943)<br>           └─vmtoolsd(758)─┬─&#123;vmtoolsd&#125;(781)<br>                           └─&#123;vmtoolsd&#125;(2774)<br></code></pre></td></tr></table></figure><h3 id="2-7-6-只读变量"><a href="#2-7-6-只读变量" class="headerlink" title="2.7.6 只读变量"></a>2.7.6 只读变量</h3><p><strong>只读变量：只能声明定义，但后续不能修改和删除，即常量</strong><br><strong>声明只读变量：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">readonly name<br>declare -r name<br></code></pre></td></tr></table></figure><p><strong>查看只读变量：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">readonly [-p]<br>declare -r<br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># readonly PI=3.14159</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $PI</span><br><span class="hljs-number">3.14159</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># PI=3.14</span><br>-<span class="hljs-symbol">bash:</span> <span class="hljs-symbol">PI:</span> readonly variable<br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="2-7-7-位置变量"><a href="#2-7-7-位置变量" class="headerlink" title="2.7.7 位置变量"></a>2.7.7 位置变量</h3><p><strong>位置变量：在bash shell中内置的变量, 在脚本代码中调用通过命令行传递给脚本的参数</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$1</span>, $2, ... 对应第1个、第2个等参数，shift [n]换位置</span><br><span class="hljs-meta"><span class="hljs-keyword">$0</span> 命令本身,包括路径</span><br><span class="hljs-symbol">$</span>* 传递给脚本的所有参数，全部参数合为一个字符串<br><span class="hljs-symbol">$</span>@ 传递给脚本的所有参数，每个参数为独立字符串<br><span class="hljs-symbol">$</span># 传递给脚本的参数的个数<br>注意：<span class="hljs-symbol">$</span>@ <span class="hljs-symbol">$</span>* 只在被双引号包起来的时候才会有差异<br></code></pre></td></tr></table></figure><p><strong>清空所有位置变量</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">set</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1st arg is <span class="hljs-variable">$1</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;2st arg is <span class="hljs-variable">$2</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;3st arg is <span class="hljs-variable">$3</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;10st arg is <span class="hljs-variable">$&#123;10&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;11st arg is <span class="hljs-variable">$&#123;11&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The number of arg is <span class="hljs-variable">$#</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;All args are $*&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;All args are <span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The scriptname is `basename <span class="hljs-variable">$0</span>`&quot;</span><br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># bash args.sh &#123;a..z&#125;</span><br>1st arg is a<br>2st arg is b<br>3st arg is c<br>10st arg is j<br>11st arg is k<br>The number of arg is 26<br>All args are a b c d e f g h i j k l m n o p q r s t u v w x y z<br>All args are a b c d e f g h i j k l m n o p q r s t u v w x y z<br>The scriptname is args.sh<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>范例：删库跑路之安全命令</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># 查看命令</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># cat /data/scripts/rm.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#-----------------</span><br><span class="hljs-comment">#删库跑路之安全命令</span><br><span class="hljs-comment">#-----------------</span><br><span class="hljs-comment">#filename:rm.sh</span><br><span class="hljs-comment">#data:2022-08-06</span><br><span class="hljs-comment">#author:admin</span><br><span class="hljs-comment">#-----------------</span><br><br><span class="hljs-variable constant_">WARNING_COLOR</span>=<span class="hljs-string">&quot;echo -e \E[1;31m&quot;</span><br><br><span class="hljs-variable constant_">END</span>=<span class="hljs-string">&quot;\E[0m&quot;</span><br><br><span class="hljs-variable constant_">DIR</span>=<span class="hljs-regexp">/tmp/</span><span class="hljs-string">`date +%F_%H-%M-%S`</span><br><br>mkdir <span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">DIR</span>&#125;<br><br>mv <span class="hljs-variable">$*</span> <span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">DIR</span>&#125;<br><br><span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">WARNING_COLOR</span>&#125;Move <span class="hljs-variable">$*</span> to <span class="hljs-variable">$&#123;</span><span class="hljs-variable constant_">END</span>&#125;<br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 给/data/scripts/rm.sh添加执行权限</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># chmod a+x /data/scripts/rm.sh</span><br><br><span class="hljs-comment"># 添加别名</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment">#alias rm=&#x27;/data/scripts/rm.sh&#x27;</span><br><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># touch &#123;1..9&#125;.TXT</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># rm *.TXT</span><br>Move <span class="hljs-number">1</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">2</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">3</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">4</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">5</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">6</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">7</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">8</span>.<span class="hljs-variable constant_">TXT</span> <span class="hljs-number">9</span>.<span class="hljs-variable constant_">TXT</span> to <br></code></pre></td></tr></table></figure><p>*<em>范例：$<em>和$@的区别</em></em></p><ol><li>当 $* 和 $@ 不带双引号时它们两个是没有区别的，都是接收所有参数然后分别单独处理每个参数！而当$*带双引号的时候，会把接收的所有参数当成一个字段处理 </li><li>将$@与$* 赋值给变量之后，结果跟不带引号是一样的！这是我们需要注意的地方，当$* 赋值给变量的时候还是跟不带引号的作用是一样的！</li></ol><h3 id="2-7-8-利用软链接实现同一个脚本不同功能"><a href="#2-7-8-利用软链接实现同一个脚本不同功能" class="headerlink" title="2.7.8  利用软链接实现同一个脚本不同功能"></a>2.7.8  利用软链接实现同一个脚本不同功能</h3><p><strong>范例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[root@centos8 ~]#cat test.sh<br><span class="hljs-section">#!/bin/bash</span><br><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br>echo $0<br>[root@centos8 ~]#ln -s test.sh a.sh<br>[root@centos8 ~]#ln -s test.sh b.sh<br>[root@centos8 ~]#./a.sh<br>./a.sh<br>[root@centos8 ~]#./b.sh<br>./b.sh<br></code></pre></td></tr></table></figure><h3 id="2-7-9-退出状态码变量"><a href="#2-7-9-退出状态码变量" class="headerlink" title="2.7.9 退出状态码变量"></a>2.7.9 退出状态码变量</h3><p><strong>进程执行后，将使用变量 $? 保存状态码的相关数字，不同的值反应成功或失败，$?取值范例 0-255</strong></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$?</span>的值为<span class="hljs-number">0</span> <span class="hljs-comment">#代表成功</span><br><span class="hljs-variable">$?</span>的值是<span class="hljs-number">1</span>到<span class="hljs-number">255</span> <span class="hljs-comment">#代表失败</span><br></code></pre></td></tr></table></figure><p><strong>范例：状态码为0</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@ubuntu200404:/data/scripts<span class="hljs-comment"># ll</span><br>total 40<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span>Aug <span class="hljs-number"> 6 </span>07:29 ./<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root<span class="hljs-number"> 4096 </span>Aug <span class="hljs-number"> 6 </span>02:41 ../<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 241 </span>Aug <span class="hljs-number"> 6 </span>06:48 args.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 192 </span>Aug <span class="hljs-number"> 6 </span>02:40 bacup.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 185 </span>Aug <span class="hljs-number"> 6 </span>03:38 demo1.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 85 </span>Aug <span class="hljs-number"> 6 </span>07:26 f1.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 41 </span>Aug <span class="hljs-number"> 6 </span>07:29 file.sh<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 208 </span>Aug <span class="hljs-number"> 6 </span>01:42 hello.sh*<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 285 </span>Aug <span class="hljs-number"> 6 </span>07:20 rm.sh*<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 284 </span>Aug <span class="hljs-number"> 6 </span>07:01 rm.sh.bak*<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># echo $?</span><br>0<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>范例：状态码不是0</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># ls ajdksh</span><br><span class="hljs-symbol">ls:</span> cannot access <span class="hljs-string">&#x27;ajdksh&#x27;</span>: <span class="hljs-title class_">No</span> such file <span class="hljs-keyword">or</span> directory<br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">2</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>用户可以在脚本中使用以下命令自定义退出状态码</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span> [n]<br></code></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># cat exit.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>echo -e `hostname`<br><br><span class="hljs-keyword">exit</span> <span class="hljs-number">200</span><br><br>echo -e <span class="hljs-string">&#x27;success&#x27;</span><br>root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># </span><br>root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># bash exit.sh </span><br>ubuntu200404<br><span class="hljs-keyword">exit</span>.sh: line <span class="hljs-number">4</span>: <span class="hljs-keyword">exit</span>: <span class="hljs-number">200</span>: numeric argument required<br>root@ubuntu200404:<span class="hljs-regexp">/data/</span>scripts<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>脚本中一旦遇到exit命令，脚本会立即终止；终止退出状态取决于exit命令后面的数字</li><li>如果exit后面无数字,终止退出状态取决于exit命令前面命令执行结果</li><li>如果没有exit命令, 即未给脚本指定退出状态码，整个脚本的退出状态码取决于脚本中执行的最后一条命令的状态码</li></ul><h3 id="2-7-10-脚本安全和-set"><a href="#2-7-10-脚本安全和-set" class="headerlink" title="2.7.10 脚本安全和 set"></a>2.7.10 脚本安全和 set</h3><p><strong>set 命令：可以用来定制 shell 环境</strong><br>$- 变量<br>h：hashall，打开选项后，Shell 会将命令所在的路径hash下来，避免每次都要查询。通过set +h将h选<br>项关闭<br>i：interactive-comments，包含这个选项说明当前的 shell 是一个交互式的 shell。所谓的交互式shell,<br>在脚本中，i选项是关闭的<br>m：monitor，打开监控模式，就可以通过Job control来控制进程的停止、继续，后台或者前台执行等<br>B：braceexpand，大括号扩展<br>H：history，H选项打开，可以展开历史列表中的命令，可以通过!感叹号来完成，例如“!!”返回上最近的<br>一个历史命令，“!n”返回第 n 个历史命令</p><p><strong>set 命令实现脚本安全</strong><br>-u 在扩展一个没有设置的变量时，显示错误信息， 等同set -o nounset<br>-e 如果一个命令返回一个非0退出状态值(失败)就退出， 等同set -o errexit<br>-o option 显示，打开或者关闭选项<br>显示选项：set -o<br>打开选项：set -o 选项<br>关闭选项：set +o 选项<br>-x 当执行命令时，打印命令及其参数,类似 bash -x<br>范例：-e -u</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#******************</span><br><span class="hljs-comment">#filename:hello.sh</span><br><span class="hljs-comment">#Data:2022-08-06</span><br><span class="hljs-comment">#author:admin</span><br><span class="hljs-comment">#******************</span><br><br><br><span class="hljs-built_in">set</span> -e -u<br><br><span class="hljs-comment">#echo &quot;经典写法&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello world!&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;******************&#x27;</span><br><br><span class="hljs-comment"># 流行写法</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;hello world!&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="2-8-算术运算"><a href="#2-8-算术运算" class="headerlink" title="2.8 算术运算"></a>2.8 算术运算</h2><p>Shell允许在某些情况下对算术表达式进行求值，比如：let和declare 内置命令，(( ))复合命令和算术扩<br>展。求值以固定宽度的整数进行，不检查溢出，尽管除以0 被困并标记为错误。运算符及其优先级，关联性和值与C语言相同。以下运算符列表分组为等优先级运算符级别。级别按降序排列优先。<br><strong>注意：bash 只支持整数，不支持小数</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">+ - addition, subtraction<br><span class="hljs-bullet">* </span>/ % multiplication, division, remainder, %表示取模，即取余数，示例：9%4=1，5%3=2<br>i++ i-- variable post-increment and post-decrement<br>++i --i variable pre-increment and pre-decrement<br><span class="hljs-section">= *= /= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= |= assignment</span><br><span class="hljs-bullet">- </span>+ unary minus and plus<br>! ~ logical and bitwise negation<br><span class="hljs-bullet">** </span>exponentiation 乘方,即指数运算<br>&lt;&lt; &gt;&gt; left and right bitwise shifts<br>&lt;= &gt;= &lt; &gt; comparison<br><span class="hljs-section">== != equality and inequality</span><br>&amp; bitwise AND<br>| bitwise OR<br>^ bitwise exclusive OR<br>&amp;&amp; logical AND<br>|| logical OR<br>expr?expr:expr conditional operator<br>expr1 , expr2 comma<br></code></pre></td></tr></table></figure><p><strong>乘法符号有些场景中需要转义</strong><br><strong>实现算术运算：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-comment">(1)</span> let var=算术表达式<br><span class="hljs-comment">(2)</span> <span class="hljs-comment">((var=算术表达式)</span>) 和上面等价<br><span class="hljs-comment">(3)</span> var=$[算术表达式]<br><span class="hljs-comment">(4)</span> var=$<span class="hljs-comment">((算术表达式)</span>)<br><span class="hljs-comment">(5)</span> var=$<span class="hljs-comment">(expr arg1 arg2 arg3 ...)</span><br><span class="hljs-comment">(6)</span> declare -i var = 数值<br><span class="hljs-comment">(7)</span> echo <span class="hljs-string">&#x27;算术表达式&#x27;</span> | bc<br></code></pre></td></tr></table></figure><p><strong>内建的随机数生成器变量：</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$RANDOM</span> 取值范围：0-32767</span><br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#生成 0 - 49 之间随机数</span><br>echo $[$RANDOM%<span class="hljs-number">50</span>]<br><span class="hljs-meta">#随机字体颜色</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo -e <span class="hljs-string">&quot;\033[1;$[RANDOM%7+31]mhello\033[0m&quot;</span></span><br>magedu<br></code></pre></td></tr></table></figure><h2 id="2-9-逻辑运算"><a href="#2-9-逻辑运算" class="headerlink" title="2.9 逻辑运算"></a>2.9 逻辑运算</h2><p><img src="/../image.assets/1659774970166.png" alt="1659774970166"></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-number">1</span>,真<br><span class="hljs-number">0</span>,假<br><span class="hljs-meta">#注意,以上为二进制</span><br></code></pre></td></tr></table></figure><p><strong>与或非符号：&amp; | ！</strong></p><p><strong>异或：^</strong></p><p>**异或：^ **<br>异或的两个值，相同为假，不同为真。两个数字X,Y异或得到结果Z，Z再和任意两者之一X异或，将得出另一个值Y</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>^ <span class="hljs-number">0</span> = <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span>^ <span class="hljs-number">1</span> = <span class="hljs-number">1</span><br><span class="hljs-symbol">1 </span>^ <span class="hljs-number">0</span> = <span class="hljs-number">1</span><br><span class="hljs-symbol">1 </span>^ <span class="hljs-number">1</span> = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="2-10-条件测试命令"><a href="#2-10-条件测试命令" class="headerlink" title="2.10 条件测试命令"></a>2.10 条件测试命令</h2><p>条件测试：判断某需求是否满足，需要由测试机制来实现，专用的测试表达式需要由测试命令辅助完成<br>测试过程，实现评估布尔声明，以便用在条件性环境下进行执行<br>若真，则状态码变量 $? 返回0<br>若假，则状态码变量 $? 返回1<br>条件测试命令</p><ul><li>test EXPRESSIO</li><li>[ EXPRESSION ] #和test 等价，建议使用 [ ]</li><li>[[ EXPRESSION ]] 相关于增强版的 [ ], 支持[]的用法,且支持扩展正则表达式和通配</li></ul><p><strong>注意：EXPRESSION前后必须有空白字符</strong></p><p><strong>帮助：</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs applescript">root@ubuntu200404:/data/scripts<span class="hljs-comment"># type [</span><br>[ <span class="hljs-keyword">is</span> a shell builtin<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br><br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># help test</span><br>test: test [expr]<br>    Evaluate conditional expression.<br>    <br>    Exits <span class="hljs-keyword">with</span> a status <span class="hljs-keyword">of</span> <span class="hljs-number">0</span> (<span class="hljs-literal">true</span>) <span class="hljs-keyword">or</span> <span class="hljs-number">1</span> (<span class="hljs-literal">false</span>) depending <span class="hljs-keyword">on</span><br>    <span class="hljs-keyword">the</span> evaluation <span class="hljs-keyword">of</span> EXPR.  Expressions may be unary <span class="hljs-keyword">or</span> binary.  Unary<br>    expressions are often used <span class="hljs-keyword">to</span> examine <span class="hljs-keyword">the</span> status <span class="hljs-keyword">of</span> a <span class="hljs-built_in">file</span>.  There<br>    are <span class="hljs-built_in">string</span> operators <span class="hljs-keyword">and</span> numeric comparison operators <span class="hljs-keyword">as</span> well.<br>    <br>    The behavior <span class="hljs-keyword">of</span> test depends <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> arguments.  Read <span class="hljs-keyword">the</span><br>    bash manual page <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> complete specification.<br>    <br>    File operators:<br>    <br>      -a FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists.<br>      -b FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> block special.<br>      -c FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> <span class="hljs-built_in">character</span> special.<br>      -d FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a directory.<br>      -e FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists.<br>      -f FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> a regular <span class="hljs-built_in">file</span>.<br>      -g FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span>-group-<span class="hljs-built_in">id</span>.<br>      -h FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a symbolic link.<br>      -L FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a symbolic link.<br>      -k FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> has <span class="hljs-keyword">its</span> `sticky&#x27; bit <span class="hljs-keyword">set</span>.<br>      -p FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a named pipe.<br>      -r FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> readable <span class="hljs-keyword">by</span> you.<br>      -s FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> exists <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> empty.<br>      -S FILE        True <span class="hljs-keyword">if</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> a socket.<br>      -t FD          True <span class="hljs-keyword">if</span> FD <span class="hljs-keyword">is</span> opened <span class="hljs-keyword">on</span> a terminal.<br>      -u FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span>-user-<span class="hljs-built_in">id</span>.<br>      -w FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> writable <span class="hljs-keyword">by</span> you.<br>      -x FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> executable <span class="hljs-keyword">by</span> you.<br>      -O FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> effectively owned <span class="hljs-keyword">by</span> you.<br>      -G FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">is</span> effectively owned <span class="hljs-keyword">by</span> your group.<br>      -N FILE        True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> has been modified <span class="hljs-keyword">since</span> <span class="hljs-keyword">it</span> was <span class="hljs-keyword">last</span> <span class="hljs-built_in">read</span>.<br>    <br>      FILE1 -nt FILE2  True <span class="hljs-keyword">if</span> file1 <span class="hljs-keyword">is</span> newer than file2 (according <span class="hljs-keyword">to</span><br>                       modification <span class="hljs-built_in">date</span>).<br>    <br>      FILE1 -ot FILE2  True <span class="hljs-keyword">if</span> file1 <span class="hljs-keyword">is</span> older than file2.<br>    <br>      FILE1 -ef FILE2  True <span class="hljs-keyword">if</span> file1 <span class="hljs-keyword">is</span> a hard link <span class="hljs-keyword">to</span> file2.<br>    <br>    All <span class="hljs-built_in">file</span> operators except -h <span class="hljs-keyword">and</span> -L are acting <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> target <span class="hljs-keyword">of</span> a symbolic<br>    link, <span class="hljs-keyword">not</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">the</span> symlink itself, <span class="hljs-keyword">if</span> FILE <span class="hljs-keyword">is</span> a symbolic link.<br>    <br>    String operators:<br>    <br>      -z STRING      True <span class="hljs-keyword">if</span> <span class="hljs-built_in">string</span> <span class="hljs-keyword">is</span> empty.<br>    <br>      -n STRING<br>         STRING      True <span class="hljs-keyword">if</span> <span class="hljs-built_in">string</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> empty.<br>    <br>      STRING1 = STRING2<br>                     True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> strings are <span class="hljs-keyword">equal</span>.<br>      STRING1 != STRING2<br>                     True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> strings are <span class="hljs-keyword">not</span> <span class="hljs-keyword">equal</span>.<br>      STRING1 &lt; STRING2<br>                     True <span class="hljs-keyword">if</span> STRING1 sorts <span class="hljs-keyword">before</span> STRING2 lexicographically.<br>      STRING1 &gt; STRING2<br>                     True <span class="hljs-keyword">if</span> STRING1 sorts <span class="hljs-keyword">after</span> STRING2 lexicographically.<br>    <br>    Other operators:<br>    <br>      -o OPTION      True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> shell option OPTION <span class="hljs-keyword">is</span> enabled.<br>      -v VAR         True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> shell variable VAR <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span>.<br>      -R VAR         True <span class="hljs-keyword">if</span> <span class="hljs-keyword">the</span> shell variable VAR <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> a <span class="hljs-built_in">name</span><br>                     <span class="hljs-keyword">reference</span>.<br>      ! EXPR         True <span class="hljs-keyword">if</span> expr <span class="hljs-keyword">is</span> <span class="hljs-literal">false</span>.<br>      EXPR1 -a EXPR2 True <span class="hljs-keyword">if</span> both expr1 AND expr2 are <span class="hljs-literal">true</span>.<br>      EXPR1 -o EXPR2 True <span class="hljs-keyword">if</span> either expr1 OR expr2 <span class="hljs-keyword">is</span> <span class="hljs-literal">true</span>.<br>    <br>      arg1 OP arg2   Arithmetic tests.  OP <span class="hljs-keyword">is</span> one <span class="hljs-keyword">of</span> -eq, -ne,<br>                     -lt, -le, -gt, <span class="hljs-keyword">or</span> -ge.<br>    <br>    Arithmetic binary operators <span class="hljs-literal">return</span> <span class="hljs-literal">true</span> <span class="hljs-keyword">if</span> ARG1 <span class="hljs-keyword">is</span> <span class="hljs-keyword">equal</span>, <span class="hljs-keyword">not</span>-<span class="hljs-keyword">equal</span>,<br>    less-than, less-than-<span class="hljs-keyword">or</span>-<span class="hljs-keyword">equal</span>, greater-than, <span class="hljs-keyword">or</span> greater-than-<span class="hljs-keyword">or</span>-<span class="hljs-keyword">equal</span><br>    than ARG2.<br>    <br>    See <span class="hljs-keyword">the</span> bash manual page bash(<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> handling <span class="hljs-keyword">of</span> parameters (i.e.<br>    missing parameters).<br>    <br>    Exit Status:<br>    Returns success <span class="hljs-keyword">if</span> EXPR evaluates <span class="hljs-keyword">to</span> <span class="hljs-literal">true</span>; fails <span class="hljs-keyword">if</span> EXPR evaluates <span class="hljs-keyword">to</span><br>    <span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> an invalid argument <span class="hljs-keyword">is</span> <span class="hljs-keyword">given</span>.<br>root@ubuntu200404:/data/scripts<span class="hljs-comment"># </span><br><br></code></pre></td></tr></table></figure><h3 id="2-10-1-变量测试"><a href="#2-10-1-变量测试" class="headerlink" title="2.10.1 变量测试"></a>2.10.1 变量测试</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi">#判断 <span class="hljs-keyword">NAME</span> 变量是否定义<br>[ -v <span class="hljs-keyword">NAME</span> ]<br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># NAME=&#x27;tom&#x27;</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -v NAME ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -v AGE ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">1</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="2-10-2-数值测试"><a href="#2-10-2-数值测试" class="headerlink" title="2.10.2 数值测试"></a>2.10.2 数值测试</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-eq 是否等于</span><br><span class="hljs-deletion">-ne 是否不等于</span><br><span class="hljs-deletion">-gt 是否大于</span><br><span class="hljs-deletion">-ge 是否大于等于</span><br><span class="hljs-deletion">-lt 是否小于</span><br><span class="hljs-deletion">-le 是否小于等于</span><br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#i=10<br>[root@centos8 ~]#j=8<br>[root@centos8 ~]#[ $i -lt $j ]<br>[root@centos8 ~]#echo $?<br>1<br></code></pre></td></tr></table></figure><h3 id="2-10-3-算术表达式比较"><a href="#2-10-3-算术表达式比较" class="headerlink" title="2.10.3 算术表达式比较"></a>2.10.3 算术表达式比较</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">== 相等</span><br>!= 不相等<br>&lt;=<br>&gt;=<br>&lt;<br>&gt;<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gcode">[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">10</span>;<span class="hljs-comment">(( x == y )</span>);echo $?<br><span class="hljs-number">0</span><br>[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">20</span>;<span class="hljs-comment">(( x == y )</span>);echo $?<br><span class="hljs-number">1</span><br>[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">20</span>;<span class="hljs-comment">(( x != y )</span>);echo $?<br><span class="hljs-number">0</span><br>[root@ce<span class="hljs-symbol">ntos8</span> ~]<span class="hljs-attr">#x=10</span>;y=<span class="hljs-number">10</span>;<span class="hljs-comment">(( x != y )</span>);echo $?<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="2-10-4-字符窜测试"><a href="#2-10-4-字符窜测试" class="headerlink" title="2.10.4 字符窜测试"></a>2.10.4 字符窜测试</h3><p><strong>test和 [ ] 字符串测试用法</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">-z <span class="hljs-built_in">STRING</span> 字符串是否为空，没定义或空为真，不空为假，<br>-n <span class="hljs-built_in">STRING</span> 字符串是否不空，不空为真，空为假<br><span class="hljs-built_in">STRING</span> 同上<br>STRING1 = STRING2 是否等于，注意 = 前后有空格<br>STRING1 != STRING2 是否不等于<br>&gt; ascii码是否大于ascii码<br>&lt; 是否小于<br></code></pre></td></tr></table></figure><p><strong>[[]] 字符串测试用法</strong></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-string">[[ expression ]]</span> 用法<br>== 左侧字符串是否和右侧的PATTERN相同<br>注意:此表达式用于<span class="hljs-string">[[ ]]</span>中，PATTERN为通配符<br>=~ 左侧字符串是否能够被右侧的正则表达式的PATTERN所匹配<br>注意: 此表达式用于<span class="hljs-string">[[ ]]</span>中为扩展的正则表达式<br></code></pre></td></tr></table></figure><p><strong>建议：当使用正则表达式或通配符使用[[ ]]，其它情况一般使用 [ ]</strong>  </p><hr><p><strong>范例：使用 [ ]</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#unset str</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ -z <span class="hljs-string">&quot;$str&quot;</span> ]</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo $?</span><br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><strong>范例：在比较字符串时，建议变量放在“ ”中</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ <span class="hljs-string">&quot;$NAME&quot;</span> ]</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#NAME=<span class="hljs-string">&quot;I love linux&quot;</span></span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ $NAME ]</span><br>-bash: [: love: <span class="hljs-built_in">binary</span> operator expected<br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#[ <span class="hljs-string">&quot;$NAME&quot;</span> ]</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo $?</span><br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><strong>[[]]中如果不想使用通配符*,只想表达*本身,可以用” “引起来</strong>  </p><hr><p><em><em>#[[]]中如果不想使用通配符</em>,只想表达*本身,也可以使用转义符*</em></p><h3 id="2-10-5-文件测试"><a href="#2-10-5-文件测试" class="headerlink" title="2.10.5 文件测试"></a>2.10.5 文件测试</h3><p><strong>存在性测试</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a FILE：同 -e</span><br><span class="hljs-deletion">-e FILE: 文件存在性测试，存在为真，否则为假</span><br><span class="hljs-deletion">-b FILE：是否存在且为块设备文件</span><br><span class="hljs-deletion">-c FILE：是否存在且为字符设备文件</span><br><span class="hljs-deletion">-d FILE：是否存在且为目录文件</span><br><span class="hljs-deletion">-f FILE：是否存在且为普通文件</span><br><span class="hljs-deletion">-h FILE 或 -L FILE：存在且为符号链接文件</span><br><span class="hljs-deletion">-p FILE：是否存在且为命名管道文件</span><br><span class="hljs-deletion">-S FILE：是否存在且为套接字文件</span><br></code></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -e /data/scripts/rm.sh ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>文件权限测试</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmake">-r <span class="hljs-keyword">FILE</span>：是否存在且可读<br>-w <span class="hljs-keyword">FILE</span>: 是否存在且可写<br>-x <span class="hljs-keyword">FILE</span>: 是否存在且可执行<br>-u <span class="hljs-keyword">FILE</span>：是否存在且拥有suid权限<br>-g <span class="hljs-keyword">FILE</span>：是否存在且拥有sgid权限<br>-k <span class="hljs-keyword">FILE</span>：是否存在且拥有sticky权限<br></code></pre></td></tr></table></figure><p><strong>注意：最终结果由用户对文件的实际权限决定，而非文件属性决定</strong>  </p><hr><p><strong>范例:</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -w /data/scripts/rm.sh ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><strong>文件属性测试</strong></p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>s FILE <span class="hljs-comment">#是否存在且非空</span><br><span class="hljs-literal">-</span>t fd <span class="hljs-comment">#fd 文件描述符是否在某终端已经打开</span><br><span class="hljs-literal">-</span>N FILE <span class="hljs-comment">#文件自从上一次被读取之后是否被修改过</span><br><span class="hljs-literal">-</span>O FILE <span class="hljs-comment">#当前有效用户是否为文件属主</span><br><span class="hljs-literal">-</span>G FILE <span class="hljs-comment">#当前有效用户是否为文件属组</span><br>FILE1 -ef FILE2 <span class="hljs-comment">#FILE1是否是FILE2的硬链接</span><br>FILE1 -nt FILE2 <span class="hljs-comment">#FILE1是否新于FILE2（mtime）</span><br>FILE1 -ot FILE2 <span class="hljs-comment">#FILE1是否旧于FILE2</span><br></code></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># [ -s /data/scripts/rm.sh ]</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>root<span class="hljs-variable">@ubuntu200404</span><span class="hljs-symbol">:/data/scripts</span><span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="2-11-关于（）和"><a href="#2-11-关于（）和" class="headerlink" title="2.11 关于（）和{}"></a>2.11 关于（）和{}</h2><p><strong>（CMD1;CMD2;…）和 { CMD1;CMD2;…; } 都可以将多个命令组合在一起，批量执行</strong>**</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs scss">( list ) 会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境<br>帮助参看:man bash 搜索(list)<br>&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境<br>帮助参看:man bash 搜索&#123; list; &#125;<br><br>( list ) 会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境<br>帮助参看:man bash 搜索(list)<br>&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境<br>帮助参看:man bash 搜索&#123; list; &#125;<br><br>#（）会开启子shell<br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#echo</span> <span class="hljs-variable">$BASHPID</span><br><span class="hljs-number">1920</span><br><span class="hljs-selector-attr">[root@centos8 ~]</span>#( echo $BASHPID;sleep <span class="hljs-number">100</span>)<br><span class="hljs-number">1979</span><br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#pstree</span> -<span class="hljs-selector-tag">p</span><br>├─<span class="hljs-built_in">sshd</span>(<span class="hljs-number">719</span>)───<span class="hljs-built_in">sshd</span>(<span class="hljs-number">1906</span>)───<span class="hljs-built_in">sshd</span>(<span class="hljs-number">1919</span>)─┬─<span class="hljs-built_in">bash</span>(<span class="hljs-number">1920</span>)───<span class="hljs-built_in">bash</span>(<span class="hljs-number">1979</span>)───<span class="hljs-built_in">sleep</span>(<span class="hljs-number">1980</span>)<br>#&#123; &#125; 不会开启子shell<br><span class="hljs-selector-attr">[root@centos8 ~]</span><span class="hljs-selector-id">#echo</span> <span class="hljs-variable">$BASHPID</span><br><span class="hljs-number">1920</span><br></code></pre></td></tr></table></figure><h2 id="2-12-组合测试"><a href="#2-12-组合测试" class="headerlink" title="2.12 组合测试"></a>2.12 组合测试</h2><h3 id="2-12-1-第一种方式"><a href="#2-12-1-第一种方式" class="headerlink" title="2.12.1 第一种方式"></a>2.12.1 第一种方式</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">[ EXPRESSION1 -a EXPRESSION2 ] <span class="hljs-meta">#并且，EXPRESSION1和EXPRESSION2都是真，结果才为真</span><br>[ EXPRESSION1 -o EXPRESSION2 ] <span class="hljs-meta">#或者，EXPRESSION1和EXPRESSION2只要有一个真，结果就为</span><br>真<br>[ ! EXPRESSION ] <span class="hljs-meta">#取反</span><br></code></pre></td></tr></table></figure><p><strong>说明： -a 和 -o 需要使用测试命令进行，[[ ]] 不支持</strong></p><h3 id="2-12-2-第二种方式"><a href="#2-12-2-第二种方式" class="headerlink" title="2.12.2 第二种方式"></a>2.12.2 第二种方式</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmake">COMMAND1 &amp;&amp; COMMAND2 <span class="hljs-comment">#并且，短路与，代表条件性的AND THEN</span><br>如果COMMAND1 成功,将执行COMMAND2,否则,将不执行COMMAND2<br>COMMAND1 || COMMAND2 <span class="hljs-comment">#或者，短路或，代表条件性的OR ELSE</span><br>如果COMMAND1 成功,将不执行COMMAND2,否则,将执行COMMAND2<br>! <span class="hljs-keyword">COMMAND</span> <span class="hljs-comment">#非,取反</span><br></code></pre></td></tr></table></figure><p><strong>如果&amp;&amp; 和 || 混合使用，&amp;&amp; 要在前，|| 放在后</strong>  </p><hr><p><strong>练习</strong><br>1、编写脚本 argsnum.sh，接受一个文件路径作为参数；如果参数个数小于1，则提示用户“至少应该给一个参数”，并立即退出；如果参数个数不小于1，则显示第一个参数所指向的文件中的空白行数<br>2、编写脚本 hostping.sh，接受一个主机的IPv4地址做为参数，测试是否可连通。如果能ping通，则提示用户“该IP地址可访问”；如果不可ping通，则提示用户“该IP地址不可访问”<br>3、编写脚本 checkdisk.sh，检查磁盘分区空间和inode使用率，如果超过80%，就发广播警告空间将满<br>4、编写脚本 per.sh，判断当前用户对指定参数文件，是否不可读并且不可写<br>5、编写脚本 excute.sh ，判断参数文件是否为sh后缀的普通文件，如果是，添加所有人可执行权限，否则提示用户非脚本文件<br>6、编写脚本 nologin.sh和 login.sh，实现禁止和允许普通用户登录系统</p><h2 id="2-13-使用read命令来接受输入"><a href="#2-13-使用read命令来接受输入" class="headerlink" title="2.13 使用read命令来接受输入"></a>2.13 使用read命令来接受输入</h2><p>使用read来把输入值分配给一个或多个shell变量，read从标准输入中读取值，给每个单词分配一个变量，所有剩余单词都被分配给最后一个变量，如果变量名没有指定，默认标准输入的值赋值给系统内置变量REPLY<br>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">read <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[name ...]</span><br></code></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-p 指定要显示的提示<br>-s 静默输入，一般用于密码<br>-n N 指定输入的字符长度N<br>-d &#x27;字符&#x27; 输入结束符<br>-t N TIMEOUT为N秒<br></code></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky</span> ~]<span class="hljs-meta"># read -p <span class="hljs-string">&#x27;请输入任意内容&#x27;</span> NAME</span><br>请输入任意内容yuan<br>[root<span class="hljs-symbol">@rocky</span> ~]<span class="hljs-meta"># echo $&#123;NAME&#125;</span><br>yuan<br>[root<span class="hljs-symbol">@rocky</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h1 id="3-条件选择if"><a href="#3-条件选择if" class="headerlink" title="3  条件选择if"></a>3  条件选择if</h1><p><strong>格式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> COMMANDS; <span class="hljs-keyword">then</span> COMMANDS; [ <span class="hljs-keyword">elif</span> COMMANDS; <span class="hljs-keyword">then</span> COMMANDS; ]... [ <span class="hljs-keyword">else</span><br>COMMANDS; ] <span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p><strong>单分支：</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> 判断条件;<span class="hljs-attribute">then</span><br>条件为真的分支代码<br>fi<br></code></pre></td></tr></table></figure><p><strong>双分支：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> 判断条件; <span class="hljs-keyword">then</span><br>条件为真的分支代码<br><span class="hljs-keyword">else</span><br>条件为假的分支代码<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p><strong>多分支：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> 判断条件1; <span class="hljs-keyword">then</span><br>条件1为真的分支代码<br><span class="hljs-keyword">elif</span> 判断条件2; <span class="hljs-keyword">then</span><br>条件2为真的分支代码<br><span class="hljs-keyword">elif</span> 判断条件3; <span class="hljs-keyword">then</span><br>条件3为真的分支代码<br>...<br><span class="hljs-keyword">else</span><br>以上条件都为假的分支代码<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h1 id="4-循环"><a href="#4-循环" class="headerlink" title="4 循环"></a>4 循环</h1><h2 id="4-1-for循环"><a href="#4-1-for循环" class="headerlink" title="4.1 for循环"></a>4.1 for循环</h2><p><strong>帮助：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span><br></code></pre></td></tr></table></figure><p><strong>格式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> NAME [<span class="hljs-keyword">in</span> WORDS ... ] ; <span class="hljs-keyword">do</span> COMMANDS; <span class="hljs-keyword">done</span><br><span class="hljs-comment">#方式1</span><br><span class="hljs-keyword">for</span> 变量名 <span class="hljs-keyword">in</span> 列表;<span class="hljs-keyword">do</span><br>循环体<br><span class="hljs-keyword">done</span><br><span class="hljs-comment">#方式2</span><br><span class="hljs-keyword">for</span> 变量名 <span class="hljs-keyword">in</span> 列表<br><span class="hljs-keyword">do</span><br>循环体<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p><strong>执行机制：</strong></p><ul><li>依次将列表中的元素赋值给“变量名”; 每次赋值后即执行一次循环体; 直到列表中的元素耗尽，循环结束</li><li>如果省略 [in WORDS … ] ，此时使用位置参数变量 in “$@”</li></ul><p><strong>for 循环列表生成方式：</strong></p><ul><li>直接给出列表</li><li>整数列表：</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">&#123;start..<span class="hljs-keyword">end</span>&#125;<br><span class="hljs-constructor">$(<span class="hljs-params">seq</span> [<span class="hljs-params">start</span> [<span class="hljs-params">step</span>]] <span class="hljs-params">end</span>)</span><br></code></pre></td></tr></table></figure><ul><li>返回列表的命令</li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">$(COMMAND)<br></code></pre></td></tr></table></figure><ul><li>使用glob，如：*.sh*</li><li>*变量引用，如：$@，$*，$#</li></ul><p><strong>范例：计算1+···+100的值</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos8 ~]#sum=0;for i in &#123;1..100&#125;;do let sum+=i;done ;echo sum=$sum<br>sum=5050<br>[root@centos8 ~]#seq -s+ 100|bc5050<br>5050<br>[root@centos8 ~]#echo &#123;1..100&#125;|tr &#x27; &#x27; +|bc<br>5050<br>[root@centos8 ~]#seq 100|paste -sd +|bc<br>5050<br></code></pre></td></tr></table></figure><h2 id="4-2-while循环"><a href="#4-2-while循环" class="headerlink" title="4.2 while循环"></a>4.2 while循环</h2><p><strong>格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">while COMMANDS; do COMMANDS; done<br>while CONDITION; do<br>循环体<br>done<br></code></pre></td></tr></table></figure><p><strong>扩展:nc命令</strong></p><p>nc命令 全称netcat，用于设置路由器。它能通过 TCP 和 UDP 在网络中读写数据。通过与其他工具结合和重定向，你可以在脚本中以多种方式使用它。使用 netcat 命令所能完成的事情令人惊讶。</p><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。<br>-G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。<br>-h 在线帮助。<br>-i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描通信端口。<br>-l 使用监听模式，管控传入的资料。<br>-n 直接使用IP地址，而不通过域名服务器。<br>-o&lt;输出文件&gt; 指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。<br>-p&lt;通信端口&gt; 设置本地主机使用的通信端口。<br>-r 乱数指定本地与远端主机的通信端口。<br>-s&lt;来源位址&gt; 设置本地主机送出数据包的IP地址。<br>-u 使用UDP传输协议。<br>-v 显示指令执行过程。<br>-w&lt;超时秒数&gt; 设置等待连线的时间。<br>-z 使用0输入/输出模式，只在扫描通信端口时使用。<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">TCP端口扫描</span><br>[root@rocky ~]# nc -zv 192.168.179.129 80<br>Ncat: Version 7.70 ( https://nmap.org/ncat )<br>Ncat: Connected to 192.168.179.129:80.<br>Ncat: 0 bytes sent, 0 bytes received in 0.01 seconds.<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><p><strong>范例:写一个扫描某个主机端口的状态的脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">变量</span><br>i=1<br><span class="hljs-meta prompt_"># </span><span class="language-bash">主机IP</span><br>host=192.168.179.138<br><span class="hljs-meta prompt_"># </span><span class="language-bash">清空文件内容</span><br>cat /dev/null &gt;port.TXT<br><span class="hljs-meta prompt_"># </span><span class="language-bash">循环端口1-100</span><br>while [ $i -le 100 ];do<br><span class="hljs-meta prompt_"># </span><span class="language-bash">扫描端口并将信息放入垃圾箱</span><br>    if nc -z $&#123;host&#125; $&#123;i&#125; &amp;&gt; /dev/null;then<br>    # 屏幕打印IP+port,输出重定向到port.TXT<br>        echo $&#123;host&#125;:$&#123;i&#125; | tee -a port.TXT<br>    fi<br>    # i++<br>    let i++<br>done<br></code></pre></td></tr></table></figure><h1 id="5-其他脚本相关工具"><a href="#5-其他脚本相关工具" class="headerlink" title="5 其他脚本相关工具"></a>5 其他脚本相关工具</h1><h2 id="5-1-trap命令"><a href="#5-1-trap命令" class="headerlink" title="5.1 trap命令"></a>5.1 trap命令</h2><p>trap命令可以捕捉信号，修改信号原有的功能，实现自定义功能</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 查看信号trap -l 或者kill -l<br>root@ubuntu200404-1:/data/scripts# kill -l<br> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP<br> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1<br>11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM<br>16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP<br>21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ<br>26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR<br>31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3<br>38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8<br>43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13<br>48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12<br>53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7<br>58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2<br>63) SIGRTMAX-164) SIGRTMAX<br>root@ubuntu200404-1:/data/scripts#<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 进程收到系统发出的制定信号后，将执行自定义指令，而不会执原操作</span><br>trap <span class="hljs-string">&#x27;触发指令&#x27;</span> 信号<br><br><span class="hljs-comment"># 忽略信号的操作</span><br>trap <span class="hljs-string">&#x27;&#x27;</span> 信号<br><br><span class="hljs-comment"># 恢复原信号的操作</span><br>trap <span class="hljs-string">&#x27;-&#x27;</span> 信号<br><br><span class="hljs-comment"># 列出自定义的操作</span><br>trap -p<br><br><span class="hljs-comment"># 当脚本退出时，执行finish函数</span><br>trap finish <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br><br># 打印press ctrl+c or ctrl+\   replace int quit<br>trap &quot;echo &#x27;press ctrl+c or ctrl+\ &#x27;&quot; 2 3<br><br># 列出 自定义的操作    <br>trap -p<br><br># 循环并打印1-10<br># 打印1-10键盘按ctrl+c打印press ctrl+c or ctrl<br>for ((i=1;i&lt;=10;i++))<br>do<br>sleep 1<br>echo $&#123;i&#125;<br>done<br><br># 忽略2 3信号操作<br>trap &#x27;&#x27; 2 3<br><br># 打印出自定义操作<br>trap -p<br><br># 打印11-20<br># 打印11-20的时候键盘按ctrl+c没有任何操作<br>for((i=11;i&lt;=20;i++))<br>do<br>sleep 1<br>echo $&#123;i&#125;<br>done<br><br># 恢复原信号操作<br>trap &#x27;-&#x27; int<br><br># 列出信号操作<br>trap -p<br><br># 打印21-30键盘按ctrl+c 退出<br>for((i=21;i&lt;=30;i++))<br>do<br>        sleep 1<br>        echo $&#123;i&#125;<br>done<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br><br>finsh()&#123;<br>echo `date +%F-%T`-finsh | tee -a /data/finsh.log<br><br>&#125;<br># 捕捉到退出执行finsh   trap或者exit<br>trap finsh exit<br><br>while true;do<br>echo running<br>sleep 1<br>done<br></code></pre></td></tr></table></figure><p><strong>创建临时文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># mktemp testXXXX<br>root@ubuntu200404-1:/data/scripts# mktemp testXXXXXX.log<br>testdnlqM9.log<br>root@ubuntu200404-1:/data/scripts# <br><br># 创建临时目录<br>root@ubuntu200404-1:/data/scripts# mktemp -d testXXX<br>testGio<br>root@ubuntu200404-1:/data/scripts#<br></code></pre></td></tr></table></figure><h2 id="5-2-except实现自动化的非交互操作"><a href="#5-2-except实现自动化的非交互操作" class="headerlink" title="5. 2 except实现自动化的非交互操作"></a>5. 2 except实现自动化的非交互操作</h2><p>expect 是由Don Libes基于 Tcl（ Tool Command Language ）语言开发的，主要应用于自动化交互式<br>操作的场景，借助 expect 处理交互的命令，可以将交互过程如：ssh登录，ftp登录等写在一个脚本<br>上，使之自动化完成。尤其适用于需要对多台服务器执行相同操作的环境中，可以大大提高系统管理人<br>员的工作效率。</p><p><strong>expect语法</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">expect [选项] [ -c cmds ] [ [ -[f|b] ] cmdfile ] [ args ]<br></code></pre></td></tr></table></figure><p><strong>常见选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-c：从命令行执行expect脚本，默认expect是交互地执行的<br>-d：可以调试信息<br></code></pre></td></tr></table></figure><p><strong>expect中相关命令</strong></p><ul><li>spawn启动新的进程</li><li>expect    从进程接收字符串</li><li>send 用于向进程发送字符串</li><li>interact 允许用户交互</li><li>exp_continue 匹配多个字符串在执行动作后加此命令</li></ul><p><strong>范例1:自动登录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 创建文件<br>vim filename<br><br># 脚本内容<br>#!/usr/bin/expect<br><br># 启动新的进程<br>spawn ssh 192.168.179.138<br># 从进程接收字符串<br>expect &#123;<br># 匹配到yse/no，输入yes<br>&quot;yes/no&quot; &#123;send &quot;yes\n&quot;;exp_continue &#125;<br>&quot;password&quot; &#123; send &quot;123456\n&quot; &#125;<br>&#125;<br># 允许用户交互<br>interact<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 添加可执行权限<br>chmod +x filename<br># 执行<br>./filename<br></code></pre></td></tr></table></figure><p><strong>扩展：scp命令</strong></p><p><strong>语法</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp 选项 参数<br></code></pre></td></tr></table></figure><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs TXT">-1：使用ssh协议版本1；<br>-2：使用ssh协议版本2；<br>-4：使用ipv4；<br>-6：使用ipv6；<br>-B：以批处理模式运行；<br>-C：使用压缩；<br>-F：指定ssh配置文件；<br>-i：identity_file 从指定文件中读取传输时使用的密钥文件（例如亚马逊云pem），此参数直接传递给ssh；<br>-l：指定宽带限制；<br>-o：指定使用的ssh选项；<br>-P：指定远程主机的端口号；<br>-p：保留文件的最后修改时间，最后访问时间和权限模式；<br>-q：不显示复制进度；<br>-r：以递归方式复制。<br></code></pre></td></tr></table></figure><p><strong>实例</strong><br>从远程复制到本地的scp命令与上面的命令雷同，只要将从本地复制到远程的命令后面2个参数互换顺序就行了。</p><p><strong>从远程机器复制文件到本地目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/<br></code></pre></td></tr></table></figure><p>从10.10.10.10机器上的&#x2F;opt&#x2F;soft&#x2F;的目录中下载nginx-0.5.38.tar.gz 文件到本地&#x2F;opt&#x2F;soft&#x2F;目录中。</p><p><strong>从远程机器复制目录到本地</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp -r root@10.10.10.10:/opt/soft/mongodb /opt/soft/<br></code></pre></td></tr></table></figure><p>从10.10.10.10机器上的&#x2F;opt&#x2F;soft&#x2F;中下载mongodb目录到本地的&#x2F;opt&#x2F;soft&#x2F;目录来。</p><p><strong>上传本地文件到远程机器指定目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest<br># 指定端口 2222<br>scp -rp -P 2222 /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest<br></code></pre></td></tr></table></figure><p>复制本地&#x2F;opt&#x2F;soft&#x2F;目录下的文件nginx-0.5.38.tar.gz到远程机器10.10.10.10的opt&#x2F;soft&#x2F;scptest目录。</p><p><strong>上传本地目录到远程机器指定目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">scp -r /opt/soft/mongodb root@10.10.10.10:/opt/soft/scptest<br></code></pre></td></tr></table></figure><p>上传本地目录&#x2F;opt&#x2F;soft&#x2F;mongodb到远程机器10.10.10.10上&#x2F;opt&#x2F;soft&#x2F;scptest的目录中去。</p><p><strong>范例2:非交互式复制文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 开启新的进程,复制当前主机下的/root/hello.sh到远程主机<br>spawn scp /root/hello.sh root@192.168.179.129:/root<br><br>expect &#123;<br># 匹配到yes/no，输入yes<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;123456\n&quot;&#125;<br>&#125;<br>expect eof<br></code></pre></td></tr></table></figure><p><strong>范例3:变量</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 添加变量<br>set ip 192.168.179.138<br>set user root<br>set passwd 123456<br>set timeout 10<br><br># 启动新的进程<br>spawn ssh $&#123;user&#125;@$&#123;ip&#125;<br><br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;<br>&#125;<br><br># 允许交互式操作<br>interact<br></code></pre></td></tr></table></figure><p><strong>范例4:位置参数</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 添加变量<br>set ip [lindex $argv 0]<br>set user [lindex $argv 1]<br>set passwd [lindex $argv 2]<br>set timeout 10<br><br># 启动新的进程<br>spawn ssh $&#123;user&#125;@$&#123;ip&#125;<br><br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;<br><br><br>&#125;<br># 允许交互式操作<br>interact<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># 添加执行权限<br>[root@centos7 ~]# chmmod +x expect3<br># 后面跟三个参数<br>[root@centos7 ~]# ./expect3 192.168.179.138 root 123456<br></code></pre></td></tr></table></figure><p><strong>范例5:执行多个命令</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/usr/bin/expect<br><br># 添加变量<br>set ip [lindex $argv 0]<br>set user [lindex $argv 1]<br>set passwd [lindex $argv 2]<br>set timeout 10<br><br># 启动新的进程<br>spawn ssh $&#123;user&#125;@$&#123;ip&#125;<br><br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;<br>&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;<br><br>&#125;<br># adduser haha<br>expect &quot;]#&quot; &#123; send &quot;useradd haha\n&quot; &#125;<br># passwd set 123456<br>expect &quot;]#&quot; &#123; send &quot;echo 123456 |passwd --stdin haha\n&quot; &#125;<br># logout<br>send &quot;exit\n&quot;<br>expect eof<br><br>[root@centos7 ~]# ./expect4 192.168.179.141 root 123456<br></code></pre></td></tr></table></figure><p><strong>范例6:shell脚本调用expect</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br>ip=$1<br>user=$2<br>password=$3<br>expect &lt;&lt;EOF<br>set timeout 20<br># 开启新的进程，登录远程主机<br>spawn ssh $user@$ip<br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;<br>&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;<br>&#125;<br><br># 添加新的用户<br>expect &quot;]#&quot; &#123; send &quot;useradd hehe\n&quot; &#125;<br># 设置新密码<br>expect &quot;]#&quot; &#123; send &quot;echo 123456 |passwd --stdin hehe\n&quot; &#125;<br># logout<br>expect &quot;]#&quot; &#123; send &quot;exit\n&quot; &#125;<br>expect eof<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# bash expect5.sh 192.168.179.141 root 123456<br></code></pre></td></tr></table></figure><p><strong>范例7: shell脚本利用循环调用expect在CentOS和Ubuntu上批量创建用户</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs TXT">NET=10.0.0<br>user=root<br>password=magedu<br>IPLIST=&quot;<br>7<br>18<br>101<br>&quot;<br>for ID in $IPLIST;do<br>ip=$NET.$ID<br>expect &lt;&lt;EOF<br>set timeout 20<br>spawn ssh $user@$ip<br>expect &#123;<br>&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;<br>&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;<br>&#125;<br>expect &quot;#&quot; &#123; send &quot;useradd test\n&quot; &#125;<br>expect &quot;#&quot; &#123; send &quot;exit\n&quot; &#125;<br>expect eof<br>EOF<br>done<br></code></pre></td></tr></table></figure><h1 id="6-数组"><a href="#6-数组" class="headerlink" title="6 数组"></a>6 数组</h1><h2 id="6-1-数组介绍"><a href="#6-1-数组介绍" class="headerlink" title="6.1 数组介绍"></a>6.1 数组介绍</h2><p>变量：存储单个元素的内存空间<br>数组：存储多个元素的连续的内存空间，相当于多个变量的集合<br>数组名和索引</p><ul><li>索引的编号从0开始，属于数值索引</li><li>索引可支持使用自定义的格式，而不仅是数值格式，即为关联索引，bash 4.0版本之后开始支持</li><li>bash的数组支持稀疏格式（索引不连续）</li></ul><h2 id="6-2-声明数组"><a href="#6-2-声明数组" class="headerlink" title="6.2 声明数组"></a>6.2 声明数组</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#普通数组可以不事先声明,直接使用<br>declare -a ARRAY_NAME<br>#关联数组必须先声明,再使用<br>declare -A ARRAY_NAME<br></code></pre></td></tr></table></figure><p><strong>注:两者不可相互转换</strong></p><h2 id="6-3-数组赋值"><a href="#6-3-数组赋值" class="headerlink" title="6.3 数组赋值"></a>6.3 数组赋值</h2><p>数组元素的赋值<br>**(1) 一次只赋值一个元素  **</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXt">ARRAY_NAME[INDEX]=VALUE<br></code></pre></td></tr></table></figure><p><strong>范例：</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">weekdays[0]=&quot;Sunday&quot;<br>weekdays[4]=&quot;Thursday&quot;<br></code></pre></td></tr></table></figure><p><strong>(2) 一次赋值全部元素</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ARRAY_NAME=(&quot;VAL1&quot; &quot;VAL2&quot; &quot;VAL3&quot; ...)<br></code></pre></td></tr></table></figure><p><strong>范例:</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT">title=(&quot;ceo&quot; &quot;coo&quot; &quot;cto&quot;)<br>num=(&#123;0..10&#125;)<br>alpha=(&#123;a..g&#125;)<br>file=( *.sh )<br></code></pre></td></tr></table></figure><p><strong>(3)只赋值特定元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ARRAY_NAME=([0]=&quot;VAL1&quot; [3]=&quot;VAL2&quot; ...)<br></code></pre></td></tr></table></figure><p><strong>(4)交互式赋值元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">read -a ARRAY<br></code></pre></td></tr></table></figure><h2 id="6-4-显示所有数组"><a href="#6-4-显示所有数组" class="headerlink" title="6.4 显示所有数组"></a>6.4 显示所有数组</h2><p><strong>显示所有数组</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">declare -a<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# declare -a<br>declare -a BASH_ARGC=&#x27;()&#x27;<br>declare -a BASH_ARGV=&#x27;()&#x27;<br>declare -a BASH_LINENO=&#x27;()&#x27;<br>declare -a BASH_SOURCE=&#x27;()&#x27;<br>declare -ar BASH_VERSINFO=&#x27;([0]=&quot;4&quot; [1]=&quot;2&quot; [2]=&quot;46&quot; [3]=&quot;2&quot; [4]=&quot;release&quot; [5]=&quot;x86_64-redhat-linux-gnu&quot;)&#x27;<br>declare -a DIRSTACK=&#x27;()&#x27;<br>declare -a FUNCNAME=&#x27;()&#x27;<br>declare -a GROUPS=&#x27;()&#x27;<br>declare -a PIPESTATUS=&#x27;([0]=&quot;0&quot;)&#x27;<br>[root@centos7 ~]# <br><br></code></pre></td></tr></table></figure><h2 id="6-5-引用数组"><a href="#6-5-引用数组" class="headerlink" title="6.5 引用数组"></a>6.5 引用数组</h2><p><strong>引用特定的数组元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;ARRAY_NAME[INDEX]&#125;<br>#如果省略[INDEX]表示引用下标为0的元素<br></code></pre></td></tr></table></figure><p><strong>引用所有数组元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;ARRAY_NAME[*]&#125;<br>$&#123;ARRAY_NAME[@]&#125;<br></code></pre></td></tr></table></figure><p><strong>数组的长度，即数组的元素的个数</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;#ARRAY_NAME[*]&#125;<br>$&#123;#ARRAY_NAME[@]&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# title[0]=1<br>[root@centos7 ~]# title[1]=1<br>[root@centos7 ~]# title[2]=1<br>[root@centos7 ~]# echo $&#123;#title[*]&#125;<br>3<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><p><strong>数组的所有下标</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;!ARRAY_NAME[*]&#125;<br>$&#123;!ARRAY_NAME[@]&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos7 ~]# title[0]=1<br>[root@centos7 ~]# title[1]=1<br>[root@centos7 ~]# title[2]=1<br>[root@centos7 ~]# echo $&#123;!title[*]&#125;<br>0 1 2<br>[root@centos7 ~]# <br></code></pre></td></tr></table></figure><h2 id="6-6-删除数组"><a href="#6-6-删除数组" class="headerlink" title="6.6 删除数组"></a>6.6 删除数组</h2><p><strong>删除数组中的某个元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">unset ARRAY[INDEX]<br></code></pre></td></tr></table></figure><p><strong>删除整个数组</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs TXT">unset ARRAY<br></code></pre></td></tr></table></figure><h2 id="6-7-数组数据处理"><a href="#6-7-数组数据处理" class="headerlink" title="6.7 数组数据处理"></a>6.7 数组数据处理</h2><p><strong>数据切片</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TXT">$&#123;ARRAY[@]:offset:number&#125;<br>$&#123;ARRAY[*]:offset:number&#125;<br>offset #要跳过的元素个数<br>number #要取出的元素个数<br>#取偏移量之后的所有元素<br>&#123;ARRAY[@]:offset&#125;<br>&#123;ARRAY[*]:offset&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos8 ~]#num=(&#123;0..10&#125;)<br>[root@centos8 ~]#echo $&#123;num[*]:2:3&#125;<br>2 3 4<br>[root@centos8 ~]#echo $&#123;num[*]:6&#125;<br>6 7 8 9 10<br></code></pre></td></tr></table></figure><p><strong>向数组中追加元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs TXT">ARRAY[$&#123;#ARRAY[*]&#125;]=value<br>ARRAY[$&#123;#ARRAY[@]&#125;]=value<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos8 ~]#num[$&#123;#num[@]&#125;]=11<br>[root@centos8 ~]#echo $&#123;#num[@]&#125;<br>12<br>[root@centos8 ~]#echo $&#123;num[@]&#125;<br>0 1 2 3 4 5 6 7 8 9 10 11<br></code></pre></td></tr></table></figure><p><strong>范例：生成10个随机数保存于数组中，并找出其最大值和最小值</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#!/bin/bash<br>declare -i min max<br>declare -a nums<br>for ((i=0;i&lt;10;i++));do<br>nums[$i]=$RANDOM<br>[ $i -eq 0 ] &amp;&amp; min=$&#123;nums[0]&#125; &amp;&amp; max=$&#123;nums[0]&#125;&amp;&amp; continue<br>[ $&#123;nums[$i]&#125; -gt $max ] &amp;&amp; max=$&#123;nums[$i]&#125; &amp;&amp; continue<br>[ $&#123;nums[$i]&#125; -lt $min ] &amp;&amp; min=$&#123;nums[$i]&#125;<br>done<br>echo &quot;All numbers are $&#123;nums[*]&#125;&quot;<br>echo Max is $max<br>echo Min is $min<br></code></pre></td></tr></table></figure><h1 id="7-字符串处理"><a href="#7-字符串处理" class="headerlink" title="7 字符串处理"></a>7 字符串处理</h1><h2 id="7-1-字符串切片"><a href="#7-1-字符串切片" class="headerlink" title="7.1 字符串切片"></a>7.1 字符串切片</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#返回字符串变量var的字符的长度,一个汉字算一个字符<br>$&#123;#var&#125;<br>#返回字符串变量var中从第offset个字符后（不包括第offset个字符）的字符开始，到最后的部分，<br>offset的取值在0 到 $&#123;#var&#125;-1 之间(bash4.2后，允许为负值)<br>$&#123;var:offset&#125;<br>#返回字符串变量var中从第offset个字符后（不包括第offset个字符）的字符开始，长度为number的部分<br>$&#123;var:offset:number&#125;<br>#取字符串的最右侧几个字符,取字符串的最右侧几个字符, 注意：冒号后必须有一空白字符<br>$&#123;var: -length&#125;<br>#从最左侧跳过offset字符，一直向右取到距离最右侧lengh个字符之前的内容,即:掐头去尾<br>$&#123;var:offset:-length&#125;<br>#先从最右侧向左取到length个字符开始，再向右取到距离最右侧offset个字符之间的内容,注意：-<br>length前空格,并且length必须大于offset<br>$&#123;var: -length:-offset&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs TXT">[root@centos8 script40]#str=abcdef我你他<br>[root@centos8 script40]#echo $&#123;#str&#125;<br>9<br>[root@centos8 script40]#echo $&#123;str:2&#125;<br>cdef我你他<br>[root@centos8 script40]#echo $&#123;str:2:3&#125;<br>cde<br>[root@centos8 script40]#echo $&#123;str:-3&#125;<br>abcdef我你他<br>[root@centos8 script40]#echo $&#123;str: -3&#125;<br>我你他<br>[root@centos8 script40]#echo $&#123;str:2:-3&#125;<br>cdef<br>[root@centos8 script40]#echo $&#123;str: -2:-3&#125;<br>-bash: -3: substring expression &lt; 0<br>[root@centos8 script40]#echo $&#123;str: -3:-2&#125;<br>我<br>[root@centos8 script40]#echo $&#123;str:-3:-2&#125;<br>abcdef我你他<br>[root@centos8 script40]#echo $&#123;str: -3:-2&#125;<br>我<br>[root@centos8 script40]#echo $&#123;str: -5:-2&#125;<br>ef我<br></code></pre></td></tr></table></figure><h2 id="7-2-基于模式取子串"><a href="#7-2-基于模式取子串" class="headerlink" title="7.2 基于模式取子串"></a>7.2 基于模式取子串</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#其中word可以是指定的任意字符,自左而右，查找var变量所存储的字符串中，第一次出现的word, 删除字<br>符串开头至第一次出现word字符串（含）之间的所有字符,即懒惰模式,以第一个word为界删左留右<br>$&#123;var#*word&#125;<br>#从var变量的值中删除以word开头的部分<br>$&#123;var#word&#125;<br>#同上，贪婪模式，不同的是，删除的是字符串开头至最后一次由word指定的字符之间的所有内容,即贪婪模<br>式,以最后一个word为界删左留右<br>$&#123;var##*word&#125;<br>$&#123;var##word&#125;<br></code></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs TXt">[root@centos8 ~]#file=&quot;var/log/messages&quot;<br>[root@centos8 ~]#echo $&#123;file#*/&#125;<br>log/messages<br>[root@centos8 ~]#echo $&#123;file##*/&#125;<br>messages<br></code></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#其中word可以是指定的任意字符,功能：自右而左，查找var变量所存储的字符串中，第一次出现的word,<br>删除字符串最后一个字符向左至第一次出现word字符串（含）之间的所有字符,即懒惰模式,以从右向左的第<br>一个word为界删右留左<br>$&#123;var%word*&#125;<br>$&#123;var%word&#125;<br>#同上，只不过删除字符串最右侧的字符向左至最后一次出现word字符之间的所有字符,即贪婪模式,以从右向<br>左的最后一个word为界删右留左<br>$&#123;var%%word*&#125;<br>$&#123;var%%word&#125;<br></code></pre></td></tr></table></figure><h2 id="7-3-查找和替换"><a href="#7-3-查找和替换" class="headerlink" title="7.3 查找和替换"></a>7.3 查找和替换</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs TXT">#查找var所表示的字符串中，第一次被pattern所匹配到的字符串，以substr替换之<br>$&#123;var/pattern/substr&#125;<br>#查找var所表示的字符串中，所有能被pattern所匹配到的字符串，以substr替换之<br>$&#123;var//pattern/substr&#125;<br>#查找var所表示的字符串中，行首被pattern所匹配到的字符串，以substr替换之<br>$&#123;var/#pattern/substr&#125;<br>#查找var所表示的字符串中，行尾被pattern所匹配到的字符串，以substr替换之<br>$&#123;var/%pattern/substr&#125;<br></code></pre></td></tr></table></figure><h2 id="7-4-查找和删除"><a href="#7-4-查找和删除" class="headerlink" title="7.4 查找和删除"></a>7.4 查找和删除</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var表示的字符串中第一次被pattern匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var/pattern&#125;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var表示的字符串中所有被pattern匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var//pattern&#125;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var表示的字符串中所有以pattern为行首匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var/<span class="hljs-comment">#pattern&#125;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除var所表示的字符串中所有以pattern为行尾所匹配到的字符串</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">&#123;var/%pattern&#125;</span><br></code></pre></td></tr></table></figure><h2 id="7-5-字符大小写转换"><a href="#7-5-字符大小写转换" class="headerlink" title="7.5 字符大小写转换"></a>7.5 字符大小写转换</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXt">#把var中的所有小写字母转换为大写<br>$&#123;var^^&#125;<br>#把var中的所有大写字母转换为小写<br>$&#123;var,,&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件查找和打包压缩</title>
    <link href="/2022/08/01/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E5%92%8C%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/"/>
    <url>/2022/08/01/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E5%92%8C%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="文件查找和打包压缩"><a href="#文件查找和打包压缩" class="headerlink" title="文件查找和打包压缩"></a>文件查找和打包压缩</h1>  <p class="note note-success">内容概述</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">- locate  <br>- find  <br>- xargs  <br>- compress和uncompress  <br>- gzip和gunzip  <br>- bzip2和bunzip2  <br>- xz和unxz  <br>- zip和unzip  <br>- tar <br></code></pre></td></tr></table></figure><h2 id="1-查找工具"><a href="#1-查找工具" class="headerlink" title="1 查找工具"></a>1 查找工具</h2><p>在文件系统上查找符合条件的文件<br>文件查找：</p><ul><li>非实时查找(数据库查找)：locate</li><li>实时查找：find</li></ul><h3 id="1-1-locate"><a href="#1-1-locate" class="headerlink" title="1.1 locate"></a>1.1 locate</h3><p>locate 查询系统上预建的文件索引数据库&#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db<br>索引的构建是在系统较为空闲时自动进行(周期性任务)，执行updatedb可以更新数据库<br>索引构建过程需要遍历整个根文件系统，很消耗资源<br>locate和updatedb命令来自于mlocate包<br>工作特点:</p><ul><li>查找速度快</li><li>模糊查找</li><li>非实时查找</li><li>搜索的是文件的全路径，不仅仅是文件名</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">locate [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">PATTERN</span>]...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-i 不区分大小写的搜索</span><br><span class="hljs-deletion">-n N 只列举前N个匹配项目</span><br><span class="hljs-deletion">-r 使用基本正则表达式</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 终端">#搜索名称或路径中包含“conf&quot;的文件<br>locate conf<br>#使用Regex来搜索以“.conf&quot;结尾的文件<br>locate -r &#x27;\.conf$&#x27;<br></code></pre></td></tr></table></figure><p>范例：创建locatedb数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# updatedb<br>[root@rocky8 data]# locate -n 3 conf<br>/boot/config-4.18.0-372.13.1.el8_6.x86_64<br>/boot/config-4.18.0-372.9.1.el8.x86_64<br>/boot/grub2/i386-pc/configfile.mod<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>范例: 文件新创建和删除,无法马上更新locate数据库</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 创建yuankun.txt文件查找没有结果</span><br>[root@rocky8 data]<span class="hljs-comment"># touch yuankun.txt</span><br>[root@rocky8 data]<span class="hljs-comment"># locate yuankun.txt </span><br>[root@rocky8 data]<span class="hljs-comment"># </span><br><br><span class="hljs-comment"># 已经删除/data/a.txt文件，查找a.txt文件还能找到</span><br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total <span class="hljs-number">8</span><br>-rw-r--r-- <span class="hljs-number">1</span> root root   <span class="hljs-number">22</span> Jul <span class="hljs-number">30</span> <span class="hljs-number">04</span>:<span class="hljs-number">07</span> a.txt<br>-rw-r--r-- <span class="hljs-number">1</span> root root <span class="hljs-number">1511</span> Jul <span class="hljs-number">30</span> <span class="hljs-number">05</span>:<span class="hljs-number">11</span> passwd<br>-rw-r--r-- <span class="hljs-number">1</span> root root    <span class="hljs-number">0</span> Aug  <span class="hljs-number">1</span> <span class="hljs-number">22</span>:<span class="hljs-number">06</span> yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># rm -rf a.txt </span><br>[root@rocky8 data]<span class="hljs-comment"># locate a.txt</span><br><span class="hljs-regexp">/data/</span>a.txt<br><span class="hljs-regexp">/home/yu</span>ankun/a.txt<br><span class="hljs-regexp">/root/</span>a.txt<br><span class="hljs-regexp">/root/</span>data.txt<br><span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/firmware/</span>brcm/brcmfmac43340-sdio.pov-tab-p1006w-data.txt<br><span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/firmware/</span>brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-ultra.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>DEFAULT/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>EMPTY/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>FIPS/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>FUTURE/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/crypto-policies/</span>LEGACY/java.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/doc/</span>perl-CPAN-Meta<span class="hljs-regexp">/t/</span>README-data.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/doc/</span>vim-common/README_extra.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/gnupg/</span>help.ca.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/gnupg/</span>help.da.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/gnupg/</span>help.ja.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/</span>ft_ada.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/i</span>f_lua.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/</span>os_amiga.txt<br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/vim/</span>vim80<span class="hljs-regexp">/doc/ug</span>anda.txt<br><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>pyenv<span class="hljs-regexp">/lib/</span>python3.<span class="hljs-number">7</span><span class="hljs-regexp">/test/</span>test_email<span class="hljs-regexp">/data/m</span>sg_12a.txt<br>[root@rocky8 data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="1-2-find"><a href="#1-2-find" class="headerlink" title="1.2 find"></a>1.2 find</h3><p>find 是实时查找工具，通过遍历指定路径完成文件查找。<br>工作特点：</p><ul><li>查找速度略慢</li><li>精确查找</li><li>实时查找</li><li>查找条件丰富</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">find <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[查找路径]</span> <span class="hljs-selector-attr">[查找条件]</span> <span class="hljs-selector-attr">[处理动作]</span><br></code></pre></td></tr></table></figure><p>查找路径：指定具体目标路径；默认为当前目录<br>查找条件：指定的查找标准，可以文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所<br>有文件<br>处理动作：对符合条件的文件做操作，默认输出至屏幕</p><h4 id="1-2-1-指定搜索目录层级"><a href="#1-2-1-指定搜索目录层级" class="headerlink" title="1.2.1 指定搜索目录层级"></a>1.2.1 指定搜索目录层级</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-maxdepth level 最大搜索目录深度,指定目录下的文件为第1级</span><br><span class="hljs-deletion">-mindepth level 最小搜索目录深度</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">find</span> /etc -maxdepth <span class="hljs-number">2</span> -mindepth <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h4 id="1-2-2-对每个目录先处理目录内的文件，再处理目录本身"><a href="#1-2-2-对每个目录先处理目录内的文件，再处理目录本身" class="headerlink" title="1.2.2 对每个目录先处理目录内的文件，再处理目录本身"></a>1.2.2 对每个目录先处理目录内的文件，再处理目录本身</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">-depth<br>-d #<span class="hljs-built_in">warning</span>: the -d <span class="hljs-keyword">option</span> <span class="hljs-keyword">is</span> deprecated; please use -depth <span class="hljs-keyword">instead</span>, because the latter <span class="hljs-keyword">is</span> a POSIX-compliant feature<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@centos8 data]#tree <span class="hljs-regexp">/data/</span>test<br><span class="hljs-regexp">/data/</span>test<br>├── f1.txt<br>├── f2.txt<br>└── test2<br>└── test3<br>├── f3.txt<br>└── f4.txt<br><span class="hljs-number">4</span> directories, <span class="hljs-number">2</span> files<br>[root@centos8 data]#<span class="hljs-keyword">find</span> <span class="hljs-regexp">/data/</span>test<br><span class="hljs-regexp">/data/</span>test<br><span class="hljs-regexp">/data/</span>test/f1.txt<br><span class="hljs-regexp">/data/</span>test/f2.txt<br><span class="hljs-regexp">/data/</span>test/test2<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f3.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f4.txt<br>[root@centos8 data]#<span class="hljs-keyword">find</span> <span class="hljs-regexp">/data/</span>test -depth<br><span class="hljs-regexp">/data/</span>test/f1.txt<br><span class="hljs-regexp">/data/</span>test/f2.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f3.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3/f4.txt<br><span class="hljs-regexp">/data/</span>test<span class="hljs-regexp">/test2/</span>test3<br><span class="hljs-regexp">/data/</span>test/test2<br><span class="hljs-regexp">/data/</span>test<br></code></pre></td></tr></table></figure><h4 id="1-2-3-根据文件名和inode查找"><a href="#1-2-3-根据文件名和inode查找" class="headerlink" title="1.2.3 根据文件名和inode查找"></a>1.2.3 根据文件名和inode查找</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>name &quot;文件名称&quot; <span class="hljs-comment">#支持使用glob，如：*, ?, [], [^],通配符要加双引号引起来</span><br><span class="hljs-literal">-</span>iname &quot;文件名称&quot; <span class="hljs-comment">#不区分字母大小写</span><br><span class="hljs-literal">-</span>inum n <span class="hljs-comment">#按inode号查找</span><br><span class="hljs-literal">-</span>samefile name <span class="hljs-comment">#相同inode号的文件</span><br><span class="hljs-literal">-</span>links n <span class="hljs-comment">#链接数为n的文件</span><br><span class="hljs-literal">-</span>regex “PATTERN&quot; <span class="hljs-comment">#以PATTERN匹配整个文件路径，而非文件名称</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-根据属主、属组查找"><a href="#1-2-4-根据属主、属组查找" class="headerlink" title="1.2.4 根据属主、属组查找"></a>1.2.4 根据属主、属组查找</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">-<span class="hljs-keyword">user</span> <span class="hljs-title">USERNAME</span> <span class="hljs-comment">#查找属主为指定用户(UID)的文件</span><br>-<span class="hljs-keyword">group</span> <span class="hljs-title">GRPNAME</span> <span class="hljs-comment">#查找属组为指定组(GID)的文件</span><br>-uid UserID <span class="hljs-comment">#查找属主为指定的UID号的文件</span><br>-gid GroupID <span class="hljs-comment">#查找属组为指定的GID号的文件</span><br>-nouser <span class="hljs-comment">#查找没有属主的文件</span><br>-nogroup <span class="hljs-comment">#查找没有属组的文件</span><br></code></pre></td></tr></table></figure><h4 id="1-2-5-根据文件类型查找"><a href="#1-2-5-根据文件类型查找" class="headerlink" title="1.2.5 根据文件类型查找"></a>1.2.5 根据文件类型查找</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>type TYPE<br>TYPE可以是以下形式：<br><span class="hljs-attribute">f</span>: 普通文件<br><span class="hljs-attribute">d</span>: 目录文件<br><span class="hljs-attribute">l</span>: 符号链接文件<br>s：套接字文件<br><span class="hljs-attribute">b</span>: 块设备文件<br><span class="hljs-attribute">c</span>: 字符设备文件<br><span class="hljs-attribute">p</span>: 管道文件<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看/home的目录</span><br>find /home –<span class="hljs-built_in">type</span> d -<span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><h4 id="1-2-6-空文件或目录"><a href="#1-2-6-空文件或目录" class="headerlink" title="1.2.6 空文件或目录"></a>1.2.6 空文件或目录</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-empty</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">[root@centos8 ~]#find /app -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-empty<br></code></pre></td></tr></table></figure><h4 id="1-2-7-组合条件"><a href="#1-2-7-组合条件" class="headerlink" title="1.2.7 组合条件"></a>1.2.7 组合条件</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">与：-<span class="hljs-selector-tag">a</span> ，默认多个条件是与关系，所以可以省略-<span class="hljs-selector-tag">a</span><br>或：-o<br>非：-not !<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">[root@centos8 ~]#find /etc/ -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-o -<span class="hljs-keyword">type</span> <span class="hljs-type">l </span>|wc -l<br><span class="hljs-number">307</span><br>[root@centos8 ~]#find /etc/ -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-o -<span class="hljs-keyword">type</span> <span class="hljs-type">l </span>-ls |wc -l<br><span class="hljs-number">101</span><br>[root@centos8 ~]#find /etc/ \( -<span class="hljs-keyword">type</span> <span class="hljs-type">d </span>-o -<span class="hljs-keyword">type</span> <span class="hljs-type">l </span>\) -ls |wc -l<br><span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><p>德·摩根定律：</p><ul><li>非 A) 且 (非 B) &#x3D; 非(A 或 B)</li><li>(非 A) 或 (非 B) &#x3D; 非(A 且 B)</li></ul><p>示例：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!A -a !B = !(A -o B)<br>!A -o !B = !(A -a B)<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#找出/tmp目录下，属主不是root，且文件名不以f开头的文件</span><br>find /tmp \( -not -user root -a -not -name <span class="hljs-string">&#x27;f*&#x27;</span> \) -<span class="hljs-built_in">ls</span><br>find /tmp -not \( -user root -o -name <span class="hljs-string">&#x27;f*&#x27;</span> \) –<span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><h4 id="1-2-8-排除目录"><a href="#1-2-8-排除目录" class="headerlink" title="1.2.8 排除目录"></a>1.2.8 排除目录</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#查找/etc/下，除/etc/<span class="hljs-keyword">security</span>目录的其它所有.conf后缀的文件<br>find /etc -<span class="hljs-type">path</span> <span class="hljs-string">&#x27;/etc/security&#x27;</span> -a -prune -o -<span class="hljs-type">name</span> &quot;*.conf&quot;<br>#查找/etc/下，除/etc/<span class="hljs-keyword">security</span>和/etc/systemd,/etc/dbus<span class="hljs-number">-1</span>三个目录的所有.conf后缀的文件<br>find /etc \( -<span class="hljs-type">path</span> &quot;/etc/security&quot; -o -<span class="hljs-type">path</span> &quot;/etc/systemd&quot; -o -<span class="hljs-type">path</span> &quot;/etc/dbus-<br>1&quot; \) -a -prune -o -<span class="hljs-type">name</span> &quot;*.conf&quot;<br>#排除/proc和/sys目录<br>find / \( -<span class="hljs-type">path</span> &quot;/sys&quot; -o -<span class="hljs-type">path</span> &quot;/proc&quot; \) -a -prune -o -<span class="hljs-keyword">type</span> f -a -mmin <span class="hljs-number">-1</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span> / -<span class="hljs-keyword">size</span> +<span class="hljs-number">10</span>G<br>[root@centos8 ~]#<span class="hljs-keyword">find</span> / -<span class="hljs-keyword">size</span> +<span class="hljs-number">10</span>G<br><span class="hljs-regexp">/proc/</span>kcore<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/task/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fd/</span><span class="hljs-number">6</span>’: No such <span class="hljs-keyword">file</span> or directory<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/task/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fdinfo/</span><span class="hljs-number">6</span>’: No such <span class="hljs-keyword">file</span> or directory<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fd/</span><span class="hljs-number">5</span>’: No such <span class="hljs-keyword">file</span> or directory<br><span class="hljs-keyword">find</span>: ‘<span class="hljs-regexp">/proc/</span><span class="hljs-number">25229</span><span class="hljs-regexp">/fdinfo/</span><span class="hljs-number">5</span>’: No such <span class="hljs-keyword">file</span> or directory<br>[root@centos8 ~]#ll -h <span class="hljs-regexp">/proc/</span>kcore<br>-r-------- <span class="hljs-number">1</span> root root <span class="hljs-number">128</span>T Dec <span class="hljs-number">14</span> <span class="hljs-number">2020</span> <span class="hljs-regexp">/proc/</span>kcore<br>[root@centos8 ~]#du -sh <span class="hljs-regexp">/proc/</span>kcore<br><span class="hljs-number">0</span> <span class="hljs-regexp">/proc/</span>kcore<br></code></pre></td></tr></table></figure><h4 id="1-2-9-根据时间戳"><a href="#1-2-9-根据时间戳" class="headerlink" title="1.2.9 根据时间戳"></a>1.2.9 根据时间戳</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment">#以“天&quot;为单位</span><br><span class="hljs-literal">-</span>atime [+|-]<span class="hljs-comment">#</span><br><span class="hljs-comment"># #表示[#,#+1)</span><br>+<span class="hljs-comment"># #表示[#+1,∞]</span><br><span class="hljs-literal">-</span><span class="hljs-comment"># #表示[0,#)</span><br><span class="hljs-literal">-</span>mtime<br><span class="hljs-literal">-</span>ctime<br><span class="hljs-comment">#以“分钟&quot;为单位</span><br><span class="hljs-literal">-</span>amin<br><span class="hljs-literal">-</span>mmin<br><span class="hljs-literal">-</span>cmin<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1659365798543.png" alt="1659365798543"></p><h4 id="1-2-10-根据权限查找"><a href="#1-2-10-根据权限查找" class="headerlink" title="1.2.10 根据权限查找"></a>1.2.10 根据权限查找</h4><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>perm [/|-]MODE<br>MODE <span class="hljs-comment">#精确权限匹配</span><br>/MODE <span class="hljs-comment">#任何一类(u,g,o)对象的权限中只要有一位匹配即可，或关系，+ 从CentOS 7开始淘汰</span><br><span class="hljs-literal">-</span>MODE <span class="hljs-comment">#每一类对象都必须同时拥有指定权限，与关系</span><br>0 表示不关注<br></code></pre></td></tr></table></figure><p>说明：<br>find -perm 755 会匹配权限模式恰好是755的文件<br>只要当任意人有写权限时，find -perm &#x2F;222就会匹配<br>只有当每个人都有写权限时，find -perm -222才会匹配<br>只有当其它人（other）有写权限时，find -perm -002才会匹配</p><h4 id="1-2-11-处理动作"><a href="#1-2-11-处理动作" class="headerlink" title="1.2.11 处理动作"></a>1.2.11 处理动作</h4><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mel">-<span class="hljs-keyword">print</span>：默认的处理动作，显示至屏幕<br>-<span class="hljs-keyword">ls</span>：类似于对查找到的文件执行<span class="hljs-string">&quot;ls -dils&quot;</span>命令格式输出<br>-fls <span class="hljs-keyword">file</span>：查找到的所有文件的长格式信息保存至指定文件中，相当于 -<span class="hljs-keyword">ls</span> &gt; <span class="hljs-keyword">file</span><br>-<span class="hljs-keyword">delete</span>：删除查找到的文件，慎用！<br>-ok COMMAND &#123;&#125; \; 对查找到的每个文件执行由COMMAND指定的命令，对于每个文件执行命令之前，都会<br>交互式要求用户确认<br>-<span class="hljs-keyword">exec</span> COMMAND &#123;&#125; \; 对查找到的每个文件执行由COMMAND指定的命令<br>&#123;&#125;: 用于引用查找到的文件名称自身<br></code></pre></td></tr></table></figure><p>关于 {} ;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>askubuntu.com<span class="hljs-regexp">/questions/</span><span class="hljs-number">339015</span>/what-does-mean-<span class="hljs-keyword">in</span>-the-find-command<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment">#备份配置文件，添加.orig这个扩展名</span><br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total 4<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file1.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file2.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file3.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file4.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1511 </span>Jul<span class="hljs-number"> 30 </span>05:11 passwd<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 1 </span>22:06 yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># find ./ -name &#x27;file*.conf&#x27;</span><br>./file1.conf<br>./file2.conf<br>./file3.conf<br>./file4.conf<br>[root@rocky8 data]<span class="hljs-comment"># find ./ -name &#x27;file*.conf&#x27; -exec cp &#123;&#125; &#123;&#125;.orig \;</span><br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total 4<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file1.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file1.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file2.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file2.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file3.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file3.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file4.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file4.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1511 </span>Jul<span class="hljs-number"> 30 </span>05:11 passwd<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 1 </span>22:06 yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提示删除存在时间超过３天以上的joe的临时文件</span><br>find /tmp -ctime +3 -user joe -ok <span class="hljs-built_in">rm</span> &#123;&#125; \;<br><span class="hljs-comment">#在主目录中寻找可被其它用户写入的文件</span><br>find ~ -perm -002 -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">chmod</span> o-w &#123;&#125; \;<br><span class="hljs-comment">#查找/data下的权限为644，后缀为sh的普通文件，增加执行权限</span><br>find /data –<span class="hljs-built_in">type</span> f -perm 644 -name <span class="hljs-string">&quot;*.sh&quot;</span> –<span class="hljs-built_in">exec</span> <span class="hljs-built_in">chmod</span> 755 &#123;&#125; \;<br></code></pre></td></tr></table></figure><h3 id="1-3-参数替换xargs"><a href="#1-3-参数替换xargs" class="headerlink" title="1.3 参数替换xargs"></a>1.3 参数替换xargs</h3><p>由于很多命令不支持管道|来传递参数，xargs用于产生某个命令的参数，xargs 可以读入 stdin 的数<br>据，并且以空格符或回车符将 stdin 的数据分隔成为参数<br>另外，许多命令不能接受过多参数，命令执行可能会失败，xargs 可以解决<br>注意：文件名或者是其他意义的名词内含有空格符的情况<br>find 经常和 xargs 命令进行组合,形式如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">find</span> | xargs COMMAND<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#显示10个数字</span><br>[root@centos8 ~]<span class="hljs-comment">#seq 10 | xargs</span><br>1 2 3 4 5 6 7 8 9 10<br><span class="hljs-comment">#删除当前目录下的大量文件</span><br><span class="hljs-keyword">ls</span> | xargs rm<br><br><span class="hljs-comment">#</span><br>find -name <span class="hljs-string">&quot;*.sh&quot;</span> | xargs <span class="hljs-keyword">ls</span> -Sl<br><br>[root@centos8 data]<span class="hljs-comment">#echo &#123;1..10&#125; |xargs</span><br>1 2 3 4 5 6 7 8 9 10<br>[root@centos8 data]<span class="hljs-comment">#echo &#123;1..10&#125; |xargs -n1</span><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>[root@centos8 data]<span class="hljs-comment">#echo &#123;1..10&#125; |xargs -n2</span><br>1 2<br>3 4<br>5 6<br>7 8<br>9 10<br><br><span class="hljs-comment">#批量创建和删除用户</span><br><span class="hljs-keyword">echo</span> user&#123;1.<span class="hljs-string">.10</span>&#125; |xargs -n1 useradd<br><span class="hljs-keyword">echo</span> user&#123;1.<span class="hljs-string">.100</span>&#125; | xargs -n1 userdel -r<br><br><span class="hljs-comment">#这个命令是错误的</span><br>find <span class="hljs-string">/sbin/</span> -perm <span class="hljs-string">/700</span> | <span class="hljs-keyword">ls</span> -l<br><span class="hljs-comment">#查找有特殊权限的文件，并排序</span><br>find <span class="hljs-string">/bin/</span> -perm <span class="hljs-string">/7000</span> | xargs <span class="hljs-keyword">ls</span> -Sl<br><span class="hljs-comment">#此命令和上面有何区别？</span><br>find <span class="hljs-string">/bin/</span> -perm -7000 | xargs <span class="hljs-keyword">ls</span> -Sl<br><span class="hljs-comment">#以字符nul分隔</span><br>find -type f -name <span class="hljs-string">&quot;*.txt&quot;</span> -print0 | xargs -0 rm<br><span class="hljs-comment">#并发执行多个进程</span><br>seq 100 |xargs -i -P10 wget -P <span class="hljs-string">/data</span> http:<span class="hljs-string">//10.0.0.8/</span>&#123;&#125;<span class="hljs-string">.html</span><br><span class="hljs-comment">#并行下载bilibili视频</span><br>yum install python3-pip -y<br>pip3 install you-get<br>seq 60 | xargs -i -P3 you-get https:<span class="hljs-string">//www.bilibili.com/video/BV14K411W7UF</span>?p=&#123;&#125;<br></code></pre></td></tr></table></figure><p>练习<br>1、查找&#x2F;var目录下属主为root，且属组为mail的所有文件<br>2、查找&#x2F;var目录下不属于root、lp、gdm的所有文件<br>3、查找&#x2F;var目录下最近一周内其内容修改过，同时属主不为root，也不是postfix的文件<br>4、查找当前系统上没有属主或属组，且最近一个周内曾被访问过的文件<br>5、查找&#x2F;etc目录下大于1M且类型为普通文件的所有文件<br>6、查找&#x2F;etc目录下所有用户都没有写权限的文件<br>7、查找&#x2F;etc目录下至少有一类用户没有执行权限的文件<br>8、查找&#x2F;etc&#x2F;init.d目录下，所有用户都有执行权限，且其它用户有写权限的文件</p><h2 id="2-压缩和解压缩"><a href="#2-压缩和解压缩" class="headerlink" title="2 压缩和解压缩"></a>2 压缩和解压缩</h2><p>主要针对单个文件压缩，而非目录</p><h3 id="2-1-compress和uncompress"><a href="#2-1-compress和uncompress" class="headerlink" title="2.1 compress和uncompress"></a>2.1 compress和uncompress</h3><p>此工具来自于ncompress包,此工具目前已经很少使用<br>对应的文件是 .Z 后缀</p><p>常用选项</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-d 解压缩，相当于uncompress</span><br><span class="hljs-deletion">-c 结果输出至标准输出,不删除原文件</span><br><span class="hljs-deletion">-v 显示详情</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs \">compress filename #压缩<br>uncompress filename # 解压缩<br></code></pre></td></tr></table></figure><p>zcat file.Z 不显式解压缩的前提下查看文本文件内容</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">zcat <span class="hljs-built_in">file</span>.Z &gt;<span class="hljs-built_in">file</span><br></code></pre></td></tr></table></figure><h3 id="2-2-gzip和gunzip"><a href="#2-2-gzip和gunzip" class="headerlink" title="2.2 gzip和gunzip"></a>2.2 gzip和gunzip</h3><p>来自于 gzip 包<br>对应的文件是 .gz 后缀<br>格式：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">gzip [<span class="hljs-keyword">OPTION</span>] ···<span class="hljs-keyword">file</span>···<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>k keep, 保留原文件,CentOS 8 新特性<br><span class="hljs-literal">-</span>d 解压缩，相当于gunzip<br><span class="hljs-literal">-</span>c 结果输出至标准输出，保留原文件不改变<br><span class="hljs-literal">-</span><span class="hljs-comment"># 指定压缩比，#取值为1-9，值越大压缩比越大</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tcl"><span class="hljs-comment"># 压缩</span><br>gzip <span class="hljs-keyword">filename</span><br><br><span class="hljs-comment"># 解压缩</span><br>gunzip <span class="hljs-keyword">file</span>.gz<br><br><span class="hljs-comment">#不显式解压缩的前提下查看文本文件内容</span><br>zcat <span class="hljs-keyword">file</span>.gz<br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">gzip -<span class="hljs-keyword">c</span> <span class="hljs-keyword">messages</span> &gt;<span class="hljs-keyword">messages</span>.gz<br>gzip -<span class="hljs-keyword">c</span> -d <span class="hljs-keyword">messages</span>.gz &gt; <span class="hljs-keyword">messages</span><br>zcat <span class="hljs-keyword">messages</span>.gz &gt; <span class="hljs-keyword">messages</span><br><span class="hljs-keyword">cat</span> <span class="hljs-keyword">messages</span> | gzip &gt; <span class="hljs-keyword">m</span>.gz<br></code></pre></td></tr></table></figure><h3 id="2-3-bzip2和bunzip2"><a href="#2-3-bzip2和bunzip2" class="headerlink" title="2.3 bzip2和bunzip2"></a>2.3 bzip2和bunzip2</h3><p>来自于 bzip2 包<br>对应的文件是 .bz2 后缀<br>格式：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">bzip2 [<span class="hljs-keyword">OPTION</span>]... <span class="hljs-keyword">FILE</span> ...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>k keep, 保留原文件<br><span class="hljs-literal">-</span>d 解压缩<br><span class="hljs-literal">-</span>c 结果输出至标准输出，保留原文件不改变<br><span class="hljs-literal">-</span><span class="hljs-comment"># 1-9，压缩比，默认为9</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">bzip2 </span>file <span class="hljs-comment"># 压缩</span><br><span class="hljs-keyword">bunzip2 </span>file.<span class="hljs-keyword">bz2 </span>解压缩<br><span class="hljs-keyword">bzcat </span>file.<span class="hljs-keyword">bz2 </span>不显式解压缩的前提下查看文本文件内容<br></code></pre></td></tr></table></figure><h3 id="2-4-xz和unxz"><a href="#2-4-xz和unxz" class="headerlink" title="2.4 xz和unxz"></a>2.4 xz和unxz</h3><p>来自于 xz 包<br>对应的文件是 .xz 后缀<br>格式:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">xz [<span class="hljs-keyword">OPTION</span>]... <span class="hljs-keyword">FILE</span> ...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>k keep, 保留原文件<br><span class="hljs-literal">-</span>d 解压缩<br><span class="hljs-literal">-</span>c 结果输出至标准输出，保留原文件不改变<br><span class="hljs-literal">-</span><span class="hljs-comment"># 压缩比，取值1-9，默认为6</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">unxz <span class="hljs-built_in">file</span>.xz <span class="hljs-comment">#解压缩</span><br>xzcat <span class="hljs-built_in">file</span>.xz <span class="hljs-comment">#不显式解压缩的前提下查看文本文件内容</span><br></code></pre></td></tr></table></figure><h3 id="2-5-zip和unzip"><a href="#2-5-zip和unzip" class="headerlink" title="2.5 zip和unzip"></a>2.5 zip和unzip</h3><p>zip 可以实现打包目录和多个文件成一个文件并压缩，但可能会丢失文件属性信息，如：所有者和组信<br>息，一般建议使用 tar 代替<br>分别来自于 zip 和 unzip 包<br>对应的文件是 .zip 后缀<br>范例: zip帮助</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#打包并压缩</span><br>zip -r <span class="hljs-regexp">/backup/</span>sysconfig.zip <span class="hljs-regexp">/etc/</span>sysconfig/<br><span class="hljs-comment">#不包括目录本身，只打包目录内的文件和子目录</span><br>cd <span class="hljs-regexp">/etc/</span>sysconfig; zip -r <span class="hljs-regexp">/root/</span>sysconfig.zip *<br><span class="hljs-comment">#默认解压缩至当前目录</span><br>unzip <span class="hljs-regexp">/backup/</span>sysconfig.zip<br><span class="hljs-comment">#解压缩至指定目录,如果指定目录不存在，会在其父目录（必须事先存在）下自动生成</span><br>unzip <span class="hljs-regexp">/backup/</span>sysconfig.zip -d <span class="hljs-regexp">/tmp/</span>config<br>cat <span class="hljs-regexp">/var/</span>log/messages | zip messages -<br><span class="hljs-comment">#-p 表示管道</span><br>unzip -p message.zip &gt; message<br></code></pre></td></tr></table></figure><p>范例: 交互式加密和解密</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@rocky8 data]<span class="hljs-comment"># zip -e file1.conf.zip file1.conf</span><br>Enter password: <br>Verify password: <br>  adding: file1.conf (stored 0%)<br>[root@rocky8 data]<span class="hljs-comment"># unzip file1.conf.zip </span><br>Archive:  file1.conf.zip<br>[file1.conf.zip] file1.conf password: <br>replace file1.conf? [y]es, [n]o, [A]ll, [N]one, [r]ename: y<br> extracting: file1.conf              <br>[root@rocky8 data]<span class="hljs-comment"># ll</span><br>total 8<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file1.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file1.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 198 </span>Aug <span class="hljs-number"> 2 </span>22:06 file1.conf.zip<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file2.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file2.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file3.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file3.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:02 file4.conf<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 2 </span>21:07 file4.conf.orig<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1511 </span>Jul<span class="hljs-number"> 30 </span>05:11 passwd<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root   <span class="hljs-number"> 0 </span>Aug <span class="hljs-number"> 1 </span>22:06 yuankun.txt<br>[root@rocky8 data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>范例: 非交互式加密和解密</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@rocky8 data]# <span class="hljs-keyword">zip</span> -P 123456 file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span> file2.<span class="hljs-keyword">conf</span>  # p是大P<br>  adding: file2.<span class="hljs-keyword">conf</span> (stored 0%)<br># 解压<br>[root@rocky8 data]# unzip file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span> <br>Archive:  file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span><br>[file2.<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">zip</span>] file2.<span class="hljs-keyword">conf</span> password: <br><span class="hljs-keyword">replace</span> file2.<span class="hljs-keyword">conf</span>? [y]es, [<span class="hljs-keyword">n</span>]o, [A]ll, [<span class="hljs-keyword">N</span>]<span class="hljs-keyword">one</span>, [r]ename: y<br> extracting: file2.<span class="hljs-keyword">conf</span>              <br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><h2 id="3-打包和解包"><a href="#3-打包和解包" class="headerlink" title="3 打包和解包"></a>3 打包和解包</h2><h3 id="3-1-tar"><a href="#3-1-tar" class="headerlink" title="3.1 tar"></a>3.1 tar</h3><p>tar 即 Tape ARchive 磁带归档，可以对目录和多个文件打包一个文件，并且可以压缩，保留文件属性不<br>丢失，常用于备份功能，推荐使用<br>对应的文件是 .tar 后缀<br>格式</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs inform7">tar <span class="hljs-comment">[-ABcdgGhiklmMoOpPrRsStuUvwWxzZ]</span><span class="hljs-comment">[-b &lt;区块数目&gt;]</span><span class="hljs-comment">[-C &lt;目的目录&gt;]</span><span class="hljs-comment">[-f &lt;备份文件&gt;]</span><span class="hljs-comment">[-F</span><br><span class="hljs-comment">&lt;Script文件&gt;]</span><span class="hljs-comment">[-K &lt;文件&gt;]</span><span class="hljs-comment">[-L &lt;媒体容量&gt;]</span><span class="hljs-comment">[-N &lt;日期时间&gt;]</span><span class="hljs-comment">[-T &lt;范本文件&gt;]</span><span class="hljs-comment">[-V &lt;卷册名称&gt;]</span><span class="hljs-comment">[-X</span><br><span class="hljs-comment">&lt;范本文件&gt;]</span><span class="hljs-comment">[-&lt;设备编号&gt;&lt;存储密度&gt;]</span><span class="hljs-comment">[--after-date=&lt;日期时间&gt;]</span><span class="hljs-comment">[--atime-preserve]</span><span class="hljs-comment">[--</span><br><span class="hljs-comment">backuup=&lt;备份方式&gt;]</span><span class="hljs-comment">[--checkpoint]</span><span class="hljs-comment">[--concatenate]</span><span class="hljs-comment">[--confirmation]</span><span class="hljs-comment">[--delete]</span><span class="hljs-comment">[--</span><br><span class="hljs-comment">exclude=&lt;范本样式&gt;]</span><span class="hljs-comment">[--force-local]</span><span class="hljs-comment">[--group=&lt;群组名称&gt;]</span><span class="hljs-comment">[--help]</span><span class="hljs-comment">[--ignore-failed-</span><br><span class="hljs-comment">read]</span><span class="hljs-comment">[--new-volume-script=&lt;Script文件&gt;]</span><span class="hljs-comment">[--newer-mtime]</span><span class="hljs-comment">[--no-recursion]</span><span class="hljs-comment">[--null]</span><span class="hljs-comment">[--</span><br><span class="hljs-comment">numeric-owner]</span><span class="hljs-comment">[--owner=&lt;用户名称&gt;]</span><span class="hljs-comment">[--posix]</span><span class="hljs-comment">[--erve]</span><span class="hljs-comment">[--preserve-order]</span><span class="hljs-comment">[--preserve-</span><br><span class="hljs-comment">permissions]</span><span class="hljs-comment">[--record-size=&lt;区块数目&gt;]</span><span class="hljs-comment">[--recursive-unlink]</span><span class="hljs-comment">[--remove-files]</span><span class="hljs-comment">[--rsh-</span><br><span class="hljs-comment">command=&lt;执行指令&gt;]</span><span class="hljs-comment">[--same-owner]</span><span class="hljs-comment">[--suffix=&lt;备份字尾字符串&gt;]</span><span class="hljs-comment">[--totals]</span><span class="hljs-comment">[--use-</span><br><span class="hljs-comment">compress-program=&lt;执行指令&gt;]</span><span class="hljs-comment">[--version]</span><span class="hljs-comment">[--volno-file=&lt;编号文件&gt;]</span><span class="hljs-comment">[文件或目录...]</span><br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">-A或<span class="hljs-params">--catenate</span> 新增文件到已存在的备份文件。<br>-b&lt;区块数目&gt;或<span class="hljs-params">--blocking-factor=</span>&lt;区块数目&gt; 设置每笔记录的区块数目，每个区块大小为12Bytes。<br>-B或<span class="hljs-params">--read-full-records</span> 读取数据时重设区块大小。<br>-c或<span class="hljs-params">--create</span> 建立新的备份文件。<br>-C&lt;目的目录&gt;或<span class="hljs-params">--directory=</span>&lt;目的目录&gt; 切换到指定的目录。<br>-d或<span class="hljs-params">--diff</span>或<span class="hljs-params">--compare</span> 对比备份文件内和文件系统上的文件的差异。<br>-f&lt;备份文件&gt;或<span class="hljs-params">--file=</span>&lt;备份文件&gt; 指定备份文件。<br>-F&lt;Script文件&gt;或<span class="hljs-params">--info-script=</span>&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件。<br>-g或<span class="hljs-params">--listed-incremental</span> 处理GNU格式的大量备份。<br><br>-G或<span class="hljs-params">--incremental</span> 处理旧的GNU格式的大量备份。<br>-h或<span class="hljs-params">--dereference</span> 不建立符号连接，直接复制该连接所指向的原始文件。<br>-i或<span class="hljs-params">--ignore-zeros</span> 忽略备份文件中的0 Byte区块，也就是EOF。<br>-k或<span class="hljs-params">--keep-old-files</span> 解开备份文件时，不覆盖已有的文件。<br>-K&lt;文件&gt;或<span class="hljs-params">--starting-file=</span>&lt;文件&gt; 从指定的文件开始还原。<br>-l或<span class="hljs-params">--one-file-system</span> 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相<br>同，否则不予复制。<br>-L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。<br>-m或<span class="hljs-params">--modification-time</span> 还原文件时，不变更文件的更改时间。<br>-M或<span class="hljs-params">--multi-volume</span> 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。<br>-N&lt;日期格式&gt;或<span class="hljs-params">--newer=</span>&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。<br>-o或<span class="hljs-params">--old-archive</span>或<span class="hljs-params">--portability</span> 将资料写入备份文件时使用V7格式。<br>-O或<span class="hljs-params">--stdout</span> 把从备份文件里还原的文件输出到标准输出设备。<br>-p或<span class="hljs-params">--same-permissions</span> 用原来的文件权限还原文件。<br>-P或<span class="hljs-params">--absolute-names</span> 文件名使用绝对名称，不移除文件名称前的<span class="hljs-string">&quot;/&quot;</span>号。<br>-r或<span class="hljs-params">--append</span> 新增文件到已存在的备份文件的结尾部分。<br>-R或<span class="hljs-params">--block-number</span> 列出每个信息在备份文件中的区块编号。<br>-s或<span class="hljs-params">--same-order</span> 还原文件的顺序和备份文件内的存放顺序相同。<br>-S或<span class="hljs-params">--sparse</span> 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。<br>-t或<span class="hljs-params">--list</span> 列出备份文件的内容。<br>-T&lt;范本文件&gt;或<span class="hljs-params">--files-from=</span>&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或<br>建立符合设置条件的文件。<br>-u或<span class="hljs-params">--update</span> 仅置换较备份文件内的文件更新的文件。<br>-U或<span class="hljs-params">--unlink-first</span> 解开压缩文件还原文件之前，先解除文件的连接。<br>-v或<span class="hljs-params">--verbose</span> 显示指令执行过程。<br>-V&lt;卷册名称&gt;或<span class="hljs-params">--label=</span>&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。<br>-w或<span class="hljs-params">--interactive</span> 遭遇问题时先询问用户。<br>-W或<span class="hljs-params">--verify</span> 写入备份文件后，确认文件正确无误。<br>-x或<span class="hljs-params">--extract</span>或<span class="hljs-params">--get</span> 从备份文件中还原文件。<br>-X&lt;范本文件&gt;或<span class="hljs-params">--exclude-from=</span>&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除<br>符合设置条件的文件。<br>-z或<span class="hljs-params">--gzip</span>或<span class="hljs-params">--ungzip</span> 通过gzip指令处理备份文件。<br>-Z或<span class="hljs-params">--compress</span>或<span class="hljs-params">--uncompress</span> 通过compress指令处理备份文件。<br>-&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。<br><span class="hljs-params">--after-date=</span>&lt;日期时间&gt; 此参数的效果和指定<span class="hljs-string">&quot;-N&quot;</span>参数相同。<br><span class="hljs-params">--atime-preserve</span> 不变更文件的存取时间。<br><span class="hljs-params">--backup=</span>&lt;备份方式&gt;或<span class="hljs-params">--backup</span> 移除文件前先进行备份。<br><span class="hljs-params">--checkpoint</span> 读取备份文件时列出目录名称。<br><span class="hljs-params">--concatenate</span> 此参数的效果和指定<span class="hljs-string">&quot;-A&quot;</span>参数相同。<br><span class="hljs-params">--confirmation</span> 此参数的效果和指定<span class="hljs-string">&quot;-w&quot;</span>参数相同。<br><span class="hljs-params">--delete</span> 从备份文件中删除指定的文件。<br><span class="hljs-params">--exclude=</span>&lt;范本样式&gt; 排除符合范本样式的文件。<br><span class="hljs-params">--group=</span>&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。<br><span class="hljs-params">--help</span> 在线帮助。<br><span class="hljs-params">--ignore-failed-read</span> 忽略数据读取错误，不中断程序的执行。<br><span class="hljs-params">--new-volume-script=</span>&lt;Script文件&gt; 此参数的效果和指定<span class="hljs-string">&quot;-F&quot;</span>参数相同。<br><span class="hljs-params">--newer-mtime</span> 只保存更改过的文件。<br><span class="hljs-params">--no-recursion</span> 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。<br><span class="hljs-params">--null</span> 从null设备读取文件名称。<br><span class="hljs-params">--numeric-owner</span> 以用户识别码及群组识别码取代用户名称和群组名称。<br><span class="hljs-params">--owner=</span>&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。<br><span class="hljs-params">--posix</span> 将数据写入备份文件时使用POSIX格式。<br><span class="hljs-params">--preserve</span> 此参数的效果和指定<span class="hljs-string">&quot;-ps&quot;</span>参数相同。<br><span class="hljs-params">--preserve-order</span> 此参数的效果和指定<span class="hljs-string">&quot;-A&quot;</span>参数相同。<br><span class="hljs-params">--preserve-permissions</span> 此参数的效果和指定<span class="hljs-string">&quot;-p&quot;</span>参数相同。<br><span class="hljs-params">--record-size=</span>&lt;区块数目&gt; 此参数的效果和指定<span class="hljs-string">&quot;-b&quot;</span>参数相同。<br><span class="hljs-params">--recursive-unlink</span> 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。<br><span class="hljs-params">--remove-files</span> 文件加入备份文件后，就将其删除。<br><br><span class="hljs-params">--rsh-command=</span>&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。<br><span class="hljs-params">--same-owner</span> 尝试以相同的文件拥有者还原文件。<br><span class="hljs-params">--suffix=</span>&lt;备份字尾字符串&gt; 移除文件前先行备份。<br><span class="hljs-params">--totals</span> 备份文件建立后，列出文件大小。<br><span class="hljs-params">--use-compress-program=</span>&lt;执行指令&gt; 通过指定的指令处理备份文件。<br><span class="hljs-params">--version</span> 显示版本信息。<br><span class="hljs-params">--volno-file=</span>&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。<br></code></pre></td></tr></table></figure><p>范例：打包并压缩</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">tar zcvf <span class="hljs-keyword">filename</span>.tar.gz <span class="hljs-keyword">filename</span><br></code></pre></td></tr></table></figure><p>范例：解压缩</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">tar</span> xf filename.tar.gz<br></code></pre></td></tr></table></figure><h3 id="3-2-split"><a href="#3-2-split" class="headerlink" title="3.2 split"></a>3.2 split</h3><p>split 命令可以分割一个文件为多个文件<br>范例：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#分割大的 tar 文件为多份小文件</span><br><span class="hljs-built_in">split</span> -b Size –d tar-<span class="hljs-built_in">file</span>-name prefix-name<br>示例:<br><span class="hljs-built_in">split</span> -b <span class="hljs-number">1</span>M mybackup.tgz mybackup-parts<br><span class="hljs-comment">#切换成的多个小分文件使用数字后缀</span><br><span class="hljs-built_in">split</span> -b <span class="hljs-number">1</span>M –d mybackup.tgz mybackup-parts<br></code></pre></td></tr></table></figure><p>将多个切割的小文件合并成一个大文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cat</span> my<span class="hljs-built_in">backup-parts</span>* &gt; mybackup.tar.gz<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文本处理工具和正则表达式</title>
    <link href="/2022/07/26/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2022/07/26/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="1-文本编辑工具之神VIM"><a href="#1-文本编辑工具之神VIM" class="headerlink" title="1.文本编辑工具之神VIM"></a>1.文本编辑工具之神VIM</h1><h2 id="1-1使用vim初步"><a href="#1-1使用vim初步" class="headerlink" title="1.1使用vim初步"></a>1.1使用vim初步</h2><h3 id="1-1-1vim命令格式"><a href="#1-1-1vim命令格式" class="headerlink" title="1.1.1vim命令格式"></a>1.1.1vim命令格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 常用">vim [option]··· FILE ···<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">+# 打开文件后，让光标处于第#行的行首，+默认行尾<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vim</span> +<span class="hljs-number">10</span> passwd<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658842039807.png" alt="1658842039807"></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">+/PATTERN 让光标处于第一个被PATTERN匹配到的行行首<br>-<span class="hljs-keyword">b</span> <span class="hljs-keyword">file</span> 二进制方式打开文件<br>-d file1 file2… 比较多个文件，相当于 vimdiff<br>-<span class="hljs-keyword">m</span> <span class="hljs-keyword">file</span> 只读打开文件<br>-<span class="hljs-keyword">e</span> <span class="hljs-keyword">file</span> 直接进入<span class="hljs-keyword">ex</span>模式，相当于执行<span class="hljs-keyword">ex</span> <span class="hljs-keyword">file</span><br>-<span class="hljs-keyword">y</span> <span class="hljs-keyword">file</span> Easy <span class="hljs-keyword">mode</span> (like <span class="hljs-string">&quot;evim&quot;</span>, modeless)，直接可以操作文件，ctrl+<span class="hljs-keyword">o</span>:<span class="hljs-keyword">wq</span>|q! 保存和不<br>保存退出<br></code></pre></td></tr></table></figure><p>说明：</p><ul><li>如果该文件存在，文件被打开并显示内容</li><li>如果该文件不存在，当编辑后第一次存盘时创建它</li></ul><h3 id="1-1-2三种主要模式"><a href="#1-1-2三种主要模式" class="headerlink" title="1.1.2三种主要模式"></a>1.1.2三种主要模式</h3><p>三种常见模式：</p><ul><li><p>命令或普通(Normal)模式：默认模式，可以实现移动光标，剪切&#x2F;粘贴文本</p></li><li><p>插入(Insert)或编辑模式：用于修改文本</p></li><li><p>扩展命令(extended command )或命令(末)行模式：保存，退出等</p></li><li><p>命令模式–》插入模式</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">i</span> insert, 在光标所在处输入<br><span class="hljs-selector-tag">I</span> 在当前光标所在行的行首输入<br><span class="hljs-selector-tag">a</span> append, 在光标所在处后面输入<br><span class="hljs-selector-tag">A</span> 在当前光标所在行的行尾输入<br>o 在当前光标所在行的下方打开一个新行<br>O 在当前光标所在行的上方打开一个新行<br></code></pre></td></tr></table></figure><ul><li>插入模式 — ESC—–&gt; 命令模式</li><li>命令模式 —- : —-&gt; 扩展命令模式</li><li>扩展命令模式 —-ESC,enter—-&gt; 命令模式</li></ul><p>范例: 插入颜色字符</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>切换至插入模式<br><span class="hljs-symbol">2 </span>按ctrl+v+[ 三个键,显示^[<br><span class="hljs-symbol">3 </span>后续输入颜色信息,如:^[[<span class="hljs-number">32</span>mhello^[[<span class="hljs-number">0</span>m<br><span class="hljs-symbol">4 </span>切换至扩展命令模式,保存退出<br><span class="hljs-symbol">5 </span>cat 文件可以看到下面显示<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658842714254.png" alt="1658842714254"></p><p><img src="/../image.assets/1658842736134.png" alt="1658842736134"></p><h2 id="1-2扩展命令模式"><a href="#1-2扩展命令模式" class="headerlink" title="1.2扩展命令模式"></a>1.2扩展命令模式</h2><p>按“:”（冒号）进入Ex模式，创建一个命令提示符：处于底部的屏幕左侧</p><h3 id="1-2-1扩展模式基本命令"><a href="#1-2-1扩展模式基本命令" class="headerlink" title="1.2.1扩展模式基本命令"></a>1.2.1扩展模式基本命令</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">w 写（存）磁盘文件<br>wq 写入并退出<br>x 写入并退出<br>X 加密<br><span class="hljs-selector-tag">q</span> 退出<br><span class="hljs-selector-tag">q</span>！ 不存盘退出，即使更改都将丢失<br></code></pre></td></tr></table></figure><ul><li>读取文件内容到当前文件中</li></ul><p>用法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">r</span> filename<span class="hljs-comment"># 读文件内容到当前文件中</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs less"># 将当前目录下的<span class="hljs-selector-tag">b</span>文件的内容读取到当前文件中<br><span class="hljs-selector-tag">vim</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br>:<span class="hljs-selector-tag">r</span> <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span><br></code></pre></td></tr></table></figure><ul><li>将当前文件内容写入另一个文件</li></ul><p>用法：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">w</span> filename <span class="hljs-comment"># 将当前文件内容写入另一个文件</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"># 将当前文件(<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span>文件)内容写入到<span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span>中去<br>vim <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br>w c<span class="hljs-selector-class">.txt</span><br></code></pre></td></tr></table></figure><ul><li>执行命令</li></ul><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">!<span class="hljs-built_in">command</span><span class="hljs-comment">#执行命令</span><br></code></pre></td></tr></table></figure><p>范例：</p><p><img src="/../image.assets/1658844469691.png" alt="1658844469691"></p><ul><li>读入命令的输入</li></ul><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">r!<span class="hljs-built_in">command</span><span class="hljs-comment">#读入命令的输入</span><br></code></pre></td></tr></table></figure><p>范例：执行hostname命令输入到当前文件中</p><p><img src="/../image.assets/1658844624368.png" alt="1658844624368"></p><h3 id="1-2-2地址定界"><a href="#1-2-2地址定界" class="headerlink" title="1.2.2地址定界"></a>1.2.2地址定界</h3><p>格式：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">:start_pos,end_pos <span class="hljs-keyword">CMD</span><br></code></pre></td></tr></table></figure><h4 id="1-2-2-1地址定界格式"><a href="#1-2-2-1地址定界格式" class="headerlink" title="1.2.2.1地址定界格式"></a>1.2.2.1地址定界格式</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs clean"># #具体第#行，例如<span class="hljs-number">2</span>表示第<span class="hljs-number">2</span>行<br>#,# #从左侧#表示起始行，到右侧#表示结尾行<br>#,+# #从左侧#表示的起始行，加上右侧#表示的行数，范例：<span class="hljs-number">2</span>,+<span class="hljs-number">3</span> 表示<span class="hljs-number">2</span>到<span class="hljs-number">5</span>行<br>. #当前行<br>$ #最后一行<br>.,$<span class="hljs-number">-1</span> #当前行到倒数第二行<br>% #全文, 相当于<span class="hljs-number">1</span>,$<br>/pattern/ #从当前行向下查找，直到匹配pattern的第一行,即:正则表达式<br>/pat1/,/pat2/ #从第一次被pat1模式匹配到的行开始，一直到第一次被pat2匹配到的行结束<br>#,/pat/ #从指定行开始，一直找到第一个匹配pattern的行结束<br>/pat/,$ #向下找到第一个匹配patttern的行到整个文件的结尾的所有行<br></code></pre></td></tr></table></figure><h4 id="1-2-2-2地址定界后跟一个编辑命令"><a href="#1-2-2-2地址定界后跟一个编辑命令" class="headerlink" title="1.2.2.2地址定界后跟一个编辑命令"></a>1.2.2.2地址定界后跟一个编辑命令</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript">d <span class="hljs-comment">#删除</span><br>y <span class="hljs-comment">#复制</span><br>w <span class="hljs-built_in">file</span> <span class="hljs-comment">#将范围内的行另存至指定文件中</span><br>r <span class="hljs-built_in">file</span> <span class="hljs-comment">#在指定位置插入指定文件中的所有内容</span><br>t<span class="hljs-comment">#行号 将前面指定的行复制到#行后</span><br>m<span class="hljs-comment">#行号 将前面指定的行移动到#行后</span><br></code></pre></td></tr></table></figure><p>范例：</p><ul><li>删除文件内容第几行到第几行</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">:<span class="hljs-number">1</span>,<span class="hljs-number">3</span>d    <span class="hljs-meta">#删除第一行到第三行</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658925029163.png" alt="1658925029163"></p><ul><li>复制文件全部内容</li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">:.,$y<br><span class="hljs-meta"># 通过键盘上下键选择要复制在什么地方，选择后位置后按p键复制</span><br></code></pre></td></tr></table></figure><ul><li>删除文件全部内容</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">:%d</span><br></code></pre></td></tr></table></figure><h3 id="1-2-3查找和替换"><a href="#1-2-3查找和替换" class="headerlink" title="1.2.3查找和替换"></a>1.2.3查找和替换</h3><p>格式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">s<span class="hljs-regexp">/查找的内容/</span>替换为内容/修饰符<br></code></pre></td></tr></table></figure><p>说明：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livescript">要查找的内容：可使用基本正则表达式模式<br>替换为的内容：不能使用模式，但可以使用<span class="hljs-string">\1,</span> <span class="hljs-string">\2,</span> ...等后向引用符号；还可以使用“&amp;”引用前面查找时查<br>找到的整个内容<br></code></pre></td></tr></table></figure><p>修饰符：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">i</span> <span class="hljs-comment">#忽略大小写</span><br>g <span class="hljs-comment">#全局替换，默认情况下，每一行只替换第一次出现</span><br>gc <span class="hljs-comment">#全局替换，每次替换前询问</span><br></code></pre></td></tr></table></figure><p>查找替换中的分隔符&#x2F;可替换为其它字符，如：#,@<br>范例：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">s<span class="hljs-meta">@/etc</span><span class="hljs-meta">@/var</span><span class="hljs-meta">@g</span><br>s<span class="hljs-comment">#/boot#/#i</span><br></code></pre></td></tr></table></figure><ul><li>复制&#x2F;etc&#x2F;passwd到家目录下，将文件内的root全部替换为ROOT</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:%s/root/ROOT/g<br></code></pre></td></tr></table></figure><h3 id="1-2-4定制vim的工作特性"><a href="#1-2-4定制vim的工作特性" class="headerlink" title="1.2.4定制vim的工作特性"></a>1.2.4定制vim的工作特性</h3><p>扩展命令模式的配置只是对当前vim进程有效，可将配置存放在文件中持久保存<br>配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>vimrc <span class="hljs-comment">#全局</span><br>~/.vimrc <span class="hljs-comment">#个人</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-1行号"><a href="#1-2-4-1行号" class="headerlink" title="1.2.4.1行号"></a>1.2.4.1行号</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">显示：<span class="hljs-built_in">set</span> number，简写 <span class="hljs-built_in">set</span> nu<br>取消显示：<span class="hljs-built_in">set</span> nonumber, 简写 <span class="hljs-built_in">set</span> nonu<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658926795326.png" alt="1658926795326"></p><h4 id="1-2-4-2忽略字符的大小写"><a href="#1-2-4-2忽略字符的大小写" class="headerlink" title="1.2.4.2忽略字符的大小写"></a>1.2.4.2忽略字符的大小写</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> ignorecase，简写 <span class="hljs-built_in">set</span> ic<br>不忽略：<span class="hljs-built_in">set</span> noic<br></code></pre></td></tr></table></figure><h4 id="1-2-4-3自动缩进"><a href="#1-2-4-3自动缩进" class="headerlink" title="1.2.4.3自动缩进"></a>1.2.4.3自动缩进</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> autoindent，简写 <span class="hljs-built_in">set</span> ai<br>禁用：<span class="hljs-built_in">set</span> noai<br></code></pre></td></tr></table></figure><h4 id="1-2-4-4复制保留格式"><a href="#1-2-4-4复制保留格式" class="headerlink" title="1.2.4.4复制保留格式"></a>1.2.4.4复制保留格式</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> paste<br>禁用：<span class="hljs-built_in">set</span> nopaste<br></code></pre></td></tr></table></figure><h4 id="1-2-4-5显示Tab-I和换行符-和-显示"><a href="#1-2-4-5显示Tab-I和换行符-和-显示" class="headerlink" title="1.2.4.5显示Tab ^I和换行符 和$显示"></a>1.2.4.5显示Tab ^I和换行符 和$显示</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> list<br>禁用：<span class="hljs-built_in">set</span> nolist<br></code></pre></td></tr></table></figure><h4 id="1-2-4-6高亮搜索"><a href="#1-2-4-6高亮搜索" class="headerlink" title="1.2.4.6高亮搜索"></a>1.2.4.6高亮搜索</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> hlsearch<br>禁用：<span class="hljs-built_in">set</span> nohlsearch 简写：nohl<br></code></pre></td></tr></table></figure><h4 id="1-2-4-7语法高亮"><a href="#1-2-4-7语法高亮" class="headerlink" title="1.2.4.7语法高亮"></a>1.2.4.7语法高亮</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata">启用：<span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br>禁用：<span class="hljs-keyword">syntax</span> off<br></code></pre></td></tr></table></figure><h4 id="1-2-4-8文件格式"><a href="#1-2-4-8文件格式" class="headerlink" title="1.2.4.8文件格式"></a>1.2.4.8文件格式</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用windows格式：<span class="hljs-built_in">set</span> <span class="hljs-attribute">fileformat</span>=dos<br>启用unix格式：<span class="hljs-built_in">set</span> <span class="hljs-attribute">fileformat</span>=unix<br>简写 <span class="hljs-built_in">set</span> <span class="hljs-attribute">ff</span>=dos|unix<br></code></pre></td></tr></table></figure><h4 id="1-2-4-9Tab-用空格代替"><a href="#1-2-4-9Tab-用空格代替" class="headerlink" title="1.2.4.9Tab 用空格代替"></a>1.2.4.9Tab 用空格代替</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams">启用：<span class="hljs-keyword">set</span> expandtab 默认为<span class="hljs-comment">8</span>个空格代替<span class="hljs-comment">Tab</span><br>禁用：<span class="hljs-keyword">set</span> <span class="hljs-comment">noexpandtab</span><br>简写：<span class="hljs-keyword">set</span> <span class="hljs-comment">et</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-10Tab用指定空格的个数代替"><a href="#1-2-4-10Tab用指定空格的个数代替" class="headerlink" title="1.2.4.10Tab用指定空格的个数代替"></a>1.2.4.10Tab用指定空格的个数代替</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> <span class="hljs-attribute">tabstop</span>=# 指定#个空格代替Tab<br>简写：<span class="hljs-built_in">set</span> <span class="hljs-attribute">ts</span>=4<br></code></pre></td></tr></table></figure><h4 id="1-2-4-11设置缩进宽度"><a href="#1-2-4-11设置缩进宽度" class="headerlink" title="1.2.4.11设置缩进宽度"></a>1.2.4.11设置缩进宽度</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#向右缩进 命令模式&gt;&gt;</span><br><span class="hljs-comment">#向左缩进 命令模式&lt;&lt;</span><br><span class="hljs-comment">#设置缩进为4个字符</span><br><span class="hljs-built_in">set</span> <span class="hljs-attribute">shiftwidth</span>=4<br></code></pre></td></tr></table></figure><h4 id="1-2-4-12设置文本宽度"><a href="#1-2-4-12设置文本宽度" class="headerlink" title="1.2.4.12设置文本宽度"></a>1.2.4.12设置文本宽度</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">textwidth</span>=65 (vim only) #从左向右计数<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">wrapmargin</span>=15 #从右到左计数<br></code></pre></td></tr></table></figure><h4 id="1-2-4-13-设置光标所在行的标识线"><a href="#1-2-4-13-设置光标所在行的标识线" class="headerlink" title="1.2.4.13 设置光标所在行的标识线"></a>1.2.4.13 设置光标所在行的标识线</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用：<span class="hljs-built_in">set</span> cursorline，简写 <span class="hljs-built_in">set</span> cul<br>禁用：<span class="hljs-built_in">set</span> nocursorline<br></code></pre></td></tr></table></figure><h4 id="1-2-4-14加密"><a href="#1-2-4-14加密" class="headerlink" title="1.2.4.14加密"></a>1.2.4.14加密</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">启用： <span class="hljs-built_in">set</span> <span class="hljs-attribute">key</span>=password<br>禁用： <span class="hljs-built_in">set</span> key=<br></code></pre></td></tr></table></figure><h4 id="1-2-4-15了解更多"><a href="#1-2-4-15了解更多" class="headerlink" title="1.2.4.15了解更多"></a>1.2.4.15了解更多</h4><p>set帮助</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">:help option-list<br><span class="hljs-meta">:set or :set</span> all<br></code></pre></td></tr></table></figure><h2 id="1-3命令模式"><a href="#1-3命令模式" class="headerlink" title="1.3命令模式"></a>1.3命令模式</h2><h3 id="1-3-1退出vim"><a href="#1-3-1退出vim" class="headerlink" title="1.3.1退出vim"></a>1.3.1退出vim</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ZZ</span> 保存退出<br>ZQ不保存退出<br></code></pre></td></tr></table></figure><h3 id="1-3-2光标跳转"><a href="#1-3-2光标跳转" class="headerlink" title="1.3.2光标跳转"></a>1.3.2光标跳转</h3><ul><li>字符间跳转</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">h:</span> 左<br><span class="hljs-symbol">l:</span> 右<br><span class="hljs-symbol">j:</span> 下<br><span class="hljs-symbol">k:</span> 上<br><span class="hljs-meta">#COMMAND：跳转由#指定的个数的字符如：3l</span><br></code></pre></td></tr></table></figure><ul><li>单词间跳转</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">w：下一个单词的词首<br>e：当前或下一单词的词尾<br>b：当前或前一个单词的词首<br>#COMMAND：由#指定一次跳转的单词数<br></code></pre></td></tr></table></figure><ul><li>当前页跳转</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">H</span>：页首<br>M：页中间行<br>L：页底<br>zt：将光标所在当前行移到屏幕顶端<br>zz：将光标所在当前行移到屏幕中间<br>zb：将光标所在当前行移到屏幕底端<br></code></pre></td></tr></table></figure><ul><li>行首行尾</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crystal">^ 跳转至行首的第一个非空白字符<br><span class="hljs-number">0</span> 跳转至行首<br><span class="hljs-variable">$ </span>跳转至行尾<br></code></pre></td></tr></table></figure><ul><li>行间移动</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">#G 或者扩展命令模式下<br>:# 跳转至由第#行<br>G 最后一行<br><span class="hljs-number">1</span>G, gg 第一行<br></code></pre></td></tr></table></figure><ul><li>句间移动</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">) 下一句<br>( 上一句<br></code></pre></td></tr></table></figure><ul><li>段落间移动</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">&#125; 下一段<br>&#123; 上一段<br></code></pre></td></tr></table></figure><ul><li>命令模式翻屏操作</li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">Ctrl</span>+f 向文件尾部翻一屏,相当于Pagedown<br><span class="hljs-symbol">Ctrl</span>+<span class="hljs-keyword">b</span> 向文件首部翻一屏,相当于Pageup<br><span class="hljs-symbol">Ctrl</span>+d 向文件尾部翻半屏<br><span class="hljs-symbol">Ctrl</span>+u 向文件首部翻半屏<br></code></pre></td></tr></table></figure><h3 id="1-3-3字符编辑"><a href="#1-3-3字符编辑" class="headerlink" title="1.3.3字符编辑"></a>1.3.3字符编辑</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">x</span> 剪切光标处的字符<span class="hljs-comment"># p键可复制剪切的字符</span><br><span class="hljs-comment">#x 剪切光标处起始的#个字符</span><br>xp 交换光标所在处的字符及其后面字符的位置<br><span class="hljs-regexp">~ 转换大小写</span><br>J 删除当前行后的换行符<br></code></pre></td></tr></table></figure><h3 id="1-3-4替换"><a href="#1-3-4替换" class="headerlink" title="1.3.4替换"></a>1.3.4替换</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">r 只替换光标所在处的一个字符<br>R 切换成<span class="hljs-built_in">REPLACE</span>模式（在末行出现-- <span class="hljs-built_in">REPLACE</span> -- 提示）,按ESC回到命令模式<br></code></pre></td></tr></table></figure><h3 id="1-3-5删除命令"><a href="#1-3-5删除命令" class="headerlink" title="1.3.5删除命令"></a>1.3.5删除命令</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell">d 删除命令，可结合光标跳转字符，实现范围删除<br>d<span class="hljs-variable">$</span> 删除到行尾<br>d^ 删除到非空行首<br>d0 删除到行首<br>dw<br>de<br>db<br><span class="hljs-comment">#COMMAND</span><br>dd： 剪切光标所在的行<br><span class="hljs-comment">#dd 多行删除</span><br>D：从当前光标位置一直删除到行尾，等同于d<span class="hljs-variable">$</span><br></code></pre></td></tr></table></figure><h3 id="1-3-6复制命令"><a href="#1-3-6复制命令" class="headerlink" title="1.3.6复制命令"></a>1.3.6复制命令</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs crystal">y 复制，行为相似于d命令<br>y<span class="hljs-variable">$</span><br><span class="hljs-variable"></span>y0<br>y^<br>ye<br>yw<br>yb<br><span class="hljs-comment">#COMMAND</span><br>yy：复制行<br><span class="hljs-comment">#yy 复制多行</span><br>Y：复制整行<br></code></pre></td></tr></table></figure><h3 id="1-3-7粘贴命令"><a href="#1-3-7粘贴命令" class="headerlink" title="1.3.7粘贴命令"></a>1.3.7粘贴命令</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> 缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面<br><span class="hljs-selector-tag">P</span> 缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面<br></code></pre></td></tr></table></figure><h3 id="1-3-8查找"><a href="#1-3-8查找" class="headerlink" title="1.3.8查找"></a>1.3.8查找</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">/PATTERN：从当前光标所在处向文件尾部查找<br>?PATTERN：从当前光标所在处向文件首部查找<br><span class="hljs-built_in">n</span>：与命令同方向<br><span class="hljs-built_in">N</span>：与命令反方向<br></code></pre></td></tr></table></figure><h4 id="1-3-9撤销更改"><a href="#1-3-9撤销更改" class="headerlink" title="1.3.9撤销更改"></a>1.3.9撤销更改</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean">u 撤销最近的更改，相当于windows中ctrl+z<br>#u 撤销之前多次更改<br>U 撤消光标落在这行后所有此行的更改<br>Ctrl-r 重做最后的“撤消”更改，相当于windows中crtl+y<br>. 重复前一个操作<br>#. 重复前一个操作#次<br></code></pre></td></tr></table></figure><h4 id="1-3-10高级用法"><a href="#1-3-10高级用法" class="headerlink" title="1.3.10高级用法"></a>1.3.10高级用法</h4><p>常见Command：y 复制、d 删除、gU 变大写、gu 变小写<br>范例：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-number">0</span>y<span class="hljs-variable">$ </span>命令<br><span class="hljs-number">0</span> → 先到行头<br>y → 从这里开始拷贝<br><span class="hljs-variable">$ </span>→ 拷贝到本行最后一个字符<br></code></pre></td></tr></table></figure><p>范例：粘贴“wang”100次</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">100iwang</span><span class="hljs-meta"> [ESC]</span><br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">di&quot; 光标在” “之间，则删除” “之间的内容<br><span class="hljs-built_in">yi</span>( 光标在()之间，则复制()之间的内容<br>vi<span class="hljs-selector-attr">[ 光标在[]</span>之间，则选中<span class="hljs-selector-attr">[]</span>之间的内容<br>dtx 删除字符直到遇见光标之后的第一个 x 字符<br>ytx 复制字符直到遇见光标之后的第一个 x 字符<br></code></pre></td></tr></table></figure><h2 id="1-4可视化模式"><a href="#1-4可视化模式" class="headerlink" title="1.4可视化模式"></a>1.4可视化模式</h2><p>在末行有”– VISUAL – “指示，表示在可视化模式<br>允许选择的文本块</p><ul><li>v 面向字符，– VISUAL –</li><li>V 面向整行，– VISUAL LINE –</li><li>ctrl-v 面向块，– VISUAL BLOCK –<br>可视化键可用于与移动键结合使用<br>w ) } 箭头等<br>突出显示的文字可被删除，复制，变更，过滤，搜索，替换等<br>范例：在文件指定行的行首插入#</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-number">1</span>、先将光标移动到指定的第一行的行首<br><span class="hljs-number">2</span>、输入ctrl+v 进入可视化模式<br><span class="hljs-number">3</span>、向下移动光标，选中希望操作的每一行的第一个字符<br><span class="hljs-number">4</span>、输入大写字母 I 切换至插入模式<br><span class="hljs-number">5</span>、输入 <span class="hljs-meta">#</span><br><span class="hljs-number">6</span>、按 ESC 键<br></code></pre></td></tr></table></figure><p>范例：在指定的块位置插入相同的内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">1</span>、光标定位到要操作的地方<br><span class="hljs-number">2</span>、CTRL+v 进入“可视块”模式，选取这一列操作多少行<br><span class="hljs-number">3</span>、SHIFT+<span class="hljs-selector-tag">i</span>(<span class="hljs-selector-tag">I</span>)<br><span class="hljs-number">4</span>、输入要插入的内容<br><span class="hljs-number">5</span>、按 ESC 键<br></code></pre></td></tr></table></figure><h2 id="1-5多文件模式"><a href="#1-5多文件模式" class="headerlink" title="1.5多文件模式"></a>1.5多文件模式</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> FILE1 FILE2 FILE3 ...<br>:<span class="hljs-keyword">next</span> 下一个<br>:<span class="hljs-keyword">prev</span> 前一个<br>:<span class="hljs-keyword">first</span> 第一个<br>:<span class="hljs-keyword">last</span> 最后一个<br>:<span class="hljs-keyword">wall</span> 保存所有<br>:<span class="hljs-keyword">qall</span> 不保存退出所有<br>:<span class="hljs-keyword">wqall</span>保存退出所有<br></code></pre></td></tr></table></figure><h2 id="1-6多窗口模式"><a href="#1-6多窗口模式" class="headerlink" title="1.6多窗口模式"></a>1.6多窗口模式</h2><h3 id="1-6-1多文件分割"><a href="#1-6-1多文件分割" class="headerlink" title="1.6.1多文件分割"></a>1.6.1多文件分割</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">vim</span> <span class="hljs-operator">-</span><span class="hljs-variable">o</span><span class="hljs-operator">|-</span><span class="hljs-built_in">O</span> <span class="hljs-variable">FILE1</span> <span class="hljs-variable">FILE2</span> <span class="hljs-operator">...</span><br><span class="hljs-operator">-</span><span class="hljs-variable">o</span><span class="hljs-operator">:</span> 水平或上下分割<br><span class="hljs-operator">-</span><span class="hljs-built_in">O</span><span class="hljs-operator">:</span> 垂直或左右分割（<span class="hljs-variable">vim</span> <span class="hljs-variable">only</span>）<br>在窗口间切换：<span class="hljs-variable">Ctrl</span><span class="hljs-operator">+</span><span class="hljs-variable">w</span><span class="hljs-operator">,</span> <span class="hljs-built_in">Arrow</span><br></code></pre></td></tr></table></figure><h3 id="1-6-2单文件窗口"><a href="#1-6-2单文件窗口" class="headerlink" title="1.6.2单文件窗口"></a>1.6.2单文件窗口</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">Ctrl+<span class="hljs-keyword">w</span>,s：<span class="hljs-keyword">split</span>, 水平分割，上下分屏<br>Ctrl+<span class="hljs-keyword">w</span>,v：<span class="hljs-keyword">vertical</span>, 垂直分割，左右分屏<br>ctrl+<span class="hljs-keyword">w</span>,q：取消相邻窗口<br>ctrl+<span class="hljs-keyword">w</span>,<span class="hljs-keyword">o</span>：取消全部窗口<br>:<span class="hljs-keyword">wqall</span> 退出<br></code></pre></td></tr></table></figure><h2 id="1-7帮助"><a href="#1-7帮助" class="headerlink" title="1.7帮助"></a>1.7帮助</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">:help<br>:help topic<br>Use :q to <span class="hljs-keyword">exit</span> help<br><span class="hljs-comment">#vimtutor</span><br></code></pre></td></tr></table></figure><h1 id="2-常见文本处理工具"><a href="#2-常见文本处理工具" class="headerlink" title="2.常见文本处理工具"></a>2.常见文本处理工具</h1><h2 id="2-1文件内容查看命令"><a href="#2-1文件内容查看命令" class="headerlink" title="2.1文件内容查看命令"></a>2.1文件内容查看命令</h2><h3 id="2-1-1查看文本文件内容"><a href="#2-1-1查看文本文件内容" class="headerlink" title="2.1.1查看文本文件内容"></a>2.1.1查看文本文件内容</h3><h4 id="2-1-1-1-cat"><a href="#2-1-1-1-cat" class="headerlink" title="2.1.1.1 cat"></a>2.1.1.1 cat</h4><p>cat可以查看文本内容</p><p>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">cat [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-E：显示行结束符$</span><br><span class="hljs-deletion">-A：显示所有控制符</span><br><span class="hljs-deletion">-n：对显示出的每一行进行编号</span><br><span class="hljs-deletion">-b：非空行编号</span><br><span class="hljs-deletion">-s：压缩连续的空行成一行</span><br></code></pre></td></tr></table></figure><h4 id="2-1-1-2-nl"><a href="#2-1-1-2-nl" class="headerlink" title="2.1.1.2 nl"></a>2.1.1.2 nl</h4><p>显示行号，相当于cat -b</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># nl data.txt </span><br>     <span class="hljs-number">1</span><span class="hljs-number">1</span><br>     <span class="hljs-number">2</span><span class="hljs-number">2</span><br>     <span class="hljs-number">3</span><span class="hljs-number">3</span><br>     <span class="hljs-number">4</span><span class="hljs-number">4</span><br>     <span class="hljs-number">5</span><span class="hljs-number">5</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h4 id="2-1-1-3-tac"><a href="#2-1-1-3-tac" class="headerlink" title="2.1.1.3 tac"></a>2.1.1.3 tac</h4><p>逆向显示文本内容</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># cat data.txt </span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># tac data.txt </span><br><span class="hljs-number">5</span><br><span class="hljs-number">4</span><br><span class="hljs-number">3</span><br><span class="hljs-number">2</span><br><span class="hljs-number">1</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># </span><br><br></code></pre></td></tr></table></figure><h4 id="2-1-1-4-rev"><a href="#2-1-1-4-rev" class="headerlink" title="2.1.1.4 rev"></a>2.1.1.4 rev</h4><p>将同一行的内容逆向显示</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@rocky8 ~]</span># cat readme<span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span><br><span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">b</span> c d e f<br><span class="hljs-selector-attr">[root@rocky8 ~]</span># rev readme<span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span><br>f e d c <span class="hljs-selector-tag">b</span> <span class="hljs-selector-tag">a</span><br><span class="hljs-selector-attr">[root@rocky8 ~]</span>#<br></code></pre></td></tr></table></figure><h3 id="2-1-2查看非文本文件内容"><a href="#2-1-2查看非文本文件内容" class="headerlink" title="2.1.2查看非文本文件内容"></a>2.1.2查看非文本文件内容</h3><p>范例：hexdump</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hexdump</span> -C -n <span class="hljs-number">512</span> /dev/sda<br><span class="hljs-attribute">00000000</span> eb <span class="hljs-number">63</span> <span class="hljs-number">90</span> <span class="hljs-number">10</span> <span class="hljs-number">8</span>e d0 bc <span class="hljs-number">00</span> b0 b8 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">8</span>e d8 <span class="hljs-number">8</span>e c0 |.c..............|<br><span class="hljs-attribute">echo</span> &#123;a..z&#125; | tr -d &#x27; &#x27;|hexdump -C<br><span class="hljs-attribute">00000000</span> <span class="hljs-number">61</span> <span class="hljs-number">62</span> <span class="hljs-number">63</span> <span class="hljs-number">64</span> <span class="hljs-number">65</span> <span class="hljs-number">66</span> <span class="hljs-number">67</span> <span class="hljs-number">68</span> <span class="hljs-number">69</span> <span class="hljs-number">6</span>a <span class="hljs-number">6</span>b <span class="hljs-number">6</span>c <span class="hljs-number">6</span>d <span class="hljs-number">6</span>e <span class="hljs-number">6</span>f <span class="hljs-number">70</span> |abcdefghijklmnop|<br><span class="hljs-attribute">00000010</span> <span class="hljs-number">71</span> <span class="hljs-number">72</span> <span class="hljs-number">73</span> <span class="hljs-number">74</span> <span class="hljs-number">75</span> <span class="hljs-number">76</span> <span class="hljs-number">77</span> <span class="hljs-number">78</span> <span class="hljs-number">79</span> <span class="hljs-number">7</span>a <span class="hljs-number">0</span>a |qrstuvwxyz.|<br><span class="hljs-attribute">0000001b</span><br></code></pre></td></tr></table></figure><h2 id="2-2-分页查看文件内容"><a href="#2-2-分页查看文件内容" class="headerlink" title="2.2. 分页查看文件内容"></a>2.2. 分页查看文件内容</h2><h3 id="2-2-1-more"><a href="#2-2-1-more" class="headerlink" title="2.2.1 more"></a>2.2.1 more</h3><p>可以实现分页查看文件，可以配合管道符实现输出信息的分页</p><p>格式：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">more [<span class="hljs-keyword">OPTIONS</span>...] <span class="hljs-keyword">FILE</span>...<br></code></pre></td></tr></table></figure><p>选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-d: 显示翻页及退出提示</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">more</span> passwd<br></code></pre></td></tr></table></figure><p>使用空格键往下查看，可显示进度百分比，“q”退出</p><h3 id="2-2-2-less"><a href="#2-2-2-less" class="headerlink" title="2.2.2 less"></a>2.2.2 less</h3><p>less 也可以实现分页查看文件或STDIN输出，less 命令是man命令使用的分页器<br>查看时有用的命令包括：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">/文本 搜索 文本<br><span class="hljs-built_in">n</span>/<span class="hljs-built_in">N</span> 跳到下一个 或 上一个匹配<br></code></pre></td></tr></table></figure><p>范例：#less 配合管道对其它命令的执行结果进行分页显示</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">cat passwd <span class="hljs-string">|less</span><br></code></pre></td></tr></table></figure><h2 id="2-3显示文本前面的或后面的内容"><a href="#2-3显示文本前面的或后面的内容" class="headerlink" title="2.3显示文本前面的或后面的内容"></a>2.3显示文本前面的或后面的内容</h2><h3 id="2-3-1-head"><a href="#2-3-1-head" class="headerlink" title="2.3.1 head"></a>2.3.1 head</h3><p>可以显示文件或标准输入的前面行<br>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">head [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>选项：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">-c # 指定获取前#字节<br>-n # 指定获取前#行,#如果为负数,表示从文件头取到倒数第#前<br>-# 同上<br></code></pre></td></tr></table></figure><p>范例：查看passwd文件前三行</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># head -n 3 passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>范例：查看倒数三行</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># head -3 passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>范例：查看首行到倒数第三行内容</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">head</span> -n -<span class="hljs-number">3</span> passwd<br></code></pre></td></tr></table></figure><h3 id="2-3-2-tail"><a href="#2-3-2-tail" class="headerlink" title="2.3.2 tail"></a>2.3.2 tail</h3><p>tail 和head 相反，查看文件或标准输入的倒数行<br>格式:</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">tail [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>c <span class="hljs-comment"># 指定获取后#字节</span><br><span class="hljs-literal">-</span>n <span class="hljs-comment"># 指定获取后#行,如果#是负数,表示从第#行开始到文件结束</span><br><span class="hljs-literal">-</span><span class="hljs-comment"># 同上</span><br><span class="hljs-literal">-</span>f 跟踪显示文件fd新追加的内容,常用日志监控，相当于 --follow=descriptor,当文件删除再新<br>建同名文件,将无法继续跟踪文件<br><span class="hljs-literal">-</span>F 跟踪文件名，相当于--follow=name --retry，当文件删除再新建同名文件,将可以继续跟踪文<br>件<br>tailf 类似 tail –f，当文件不增长时并不访问文件,节约资源,CentOS8已经无此工具<br></code></pre></td></tr></table></figure><h2 id="2-4按列抽取文本-cut"><a href="#2-4按列抽取文本-cut" class="headerlink" title="2.4按列抽取文本 cut"></a>2.4按列抽取文本 cut</h2><p>cut 命令可以提取文本文件或STDIN数据的指定列<br>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs \">cut [OPTION]... [FILE]...<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean">-d DELIMITER: 指明分隔符，默认tab<br>-f FILEDS:<br>#: 第#个字段,例如:<span class="hljs-number">3</span><br>#,#[,#]：离散的多个字段，例如:<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span><br>#-#：连续的多个字段, 例如:<span class="hljs-number">1</span><span class="hljs-number">-6</span><br>混合使用：<span class="hljs-number">1</span><span class="hljs-number">-3</span>,<span class="hljs-number">7</span><br>-c 按字符切割<br>--output-delimiter=STRING指定输出分隔符<br></code></pre></td></tr></table></figure><h2 id="2-5合并多个文件-paste"><a href="#2-5合并多个文件-paste" class="headerlink" title="2.5合并多个文件 paste"></a>2.5合并多个文件 paste</h2><p>paste 合并多个文件同行号的列到一行<br>格式</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">paste [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">FILE</span>]...<br></code></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>d <span class="hljs-comment">#分隔符：指定分隔符，默认用TAB</span><br><span class="hljs-literal">-</span>s <span class="hljs-comment">#所有行合成一行显示</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># echo &#123;a..d&#125;&gt;alpha.log</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># cat alpha.log </span><br>a b c d<br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># echo &#123;1..4&#125;&gt;seq.log</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># cat seq.log </span><br><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># paste alpha.log seq.log </span><br>a b c d<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br>[root<span class="hljs-symbol">@rocky8</span> ~]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@rocky8 ~]# <span class="hljs-keyword">cat</span> alpha.<span class="hljs-built_in">log</span> <br><span class="hljs-keyword">a</span><br><span class="hljs-keyword">b</span><br><span class="hljs-keyword">c</span><br>d<br>[root@rocky8 ~]# <span class="hljs-keyword">echo</span> &#123;<span class="hljs-number">1</span>..<span class="hljs-number">4</span>&#125; |<span class="hljs-keyword">tr</span> <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&quot;\n&quot;</span>&gt;seq.<span class="hljs-built_in">log</span><br>[root@rocky8 ~]# <span class="hljs-keyword">cat</span> seq.<span class="hljs-built_in">log</span> <br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br>[root@rocky8 ~]# paste -d: alpha.<span class="hljs-built_in">log</span> seq.<span class="hljs-built_in">log</span> <br><span class="hljs-variable">a:1</span><br><span class="hljs-variable">b:2</span><br><span class="hljs-keyword">c</span>:<span class="hljs-number">3</span><br>d:<span class="hljs-number">4</span><br>[root@rocky8 ~]# <br></code></pre></td></tr></table></figure><h2 id="2-6分析文本的工具"><a href="#2-6分析文本的工具" class="headerlink" title="2.6分析文本的工具"></a>2.6分析文本的工具</h2><p>文本数据统计：wc<br>整理文本：sort<br>比较文件：diff和patch</p><h3 id="2-6-1-收集文本统计数据-wc"><a href="#2-6-1-收集文本统计数据-wc" class="headerlink" title="2.6.1 收集文本统计数据 wc"></a>2.6.1 收集文本统计数据 wc</h3><p>wc 命令可用于统计文件的行总数、单词总数、字节总数和字符总数<br>可以对文件或STDIN中的数据统计<br>常用选项</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-l 只计数行数</span><br><span class="hljs-deletion">-w 只计数单词总数</span><br><span class="hljs-deletion">-c 只计数字节总数</span><br><span class="hljs-deletion">-m 只计数字符总数</span><br><span class="hljs-deletion">-L 显示文件中最长行的长度</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@rocky8 ~]# wc <span class="hljs-regexp">/etc/</span>passwd<br>  <span class="hljs-number">30</span>   <span class="hljs-number">58</span> <span class="hljs-number">1511</span> <span class="hljs-regexp">/etc/</span>passwd<br>  行数  单词数  字节数<br>  <br> [root@rocky8 ~]# wc -l <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">30</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -w <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">58</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -c <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">1511</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -m <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">1511</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# wc -L <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-number">85</span> <span class="hljs-regexp">/etc/</span>passwd<br>[root@rocky8 ~]# <br></code></pre></td></tr></table></figure><h3 id="2-6-2-文本排序-sort"><a href="#2-6-2-文本排序-sort" class="headerlink" title="2.6.2 文本排序 sort"></a>2.6.2 文本排序 sort</h3><p>把整理过的文本显示在STDOUT，不改变原始文件<br>格式：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">sort</span> [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">file</span>(s)<br></code></pre></td></tr></table></figure><p>常用选项:</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>r 执行反方向（由上至下）整理<br><span class="hljs-literal">-</span>R 随机排序<br><span class="hljs-literal">-</span>n 执行按数字大小整理<br><span class="hljs-literal">-</span>h 人类可读排序,如: 2K 1G<br><span class="hljs-literal">-</span>f 选项忽略（fold）字符串中的字符大小写<br><span class="hljs-literal">-</span>u 选项（独特，unique），合并重复项，即去重<br><span class="hljs-literal">-</span>t c 选项使用c做为字段界定符<br><span class="hljs-literal">-</span>k <span class="hljs-comment"># 选项按照使用c字符分隔的 # 列来整理能够使用多次</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#统计日志访问量<br>[root@centos8 data]#cut -d<span class="hljs-string">&quot; &quot;</span> -f1 <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/nginx/</span>access_log |<span class="hljs-keyword">sort</span> -u|wc -l<br><span class="hljs-number">201</span><br></code></pre></td></tr></table></figure><p>范例：统计分区利用率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span>| <span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">&#x27;%&#x27;</span>|<span class="hljs-built_in">cut</span> -d% -f5|<span class="hljs-built_in">sort</span> -nr|<span class="hljs-built_in">head</span> -n1<br></code></pre></td></tr></table></figure><h3 id="2-6-3-去重"><a href="#2-6-3-去重" class="headerlink" title="2.6.3 去重"></a>2.6.3 去重</h3><p>uniq命令从输入中删除前后相接的重复的行<br>格式：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">uni<span class="hljs-string">q [OPTION]</span>... [FILE]...<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-c: 显示每行重复出现的次数</span><br><span class="hljs-deletion">-d: 仅显示重复过的行</span><br><span class="hljs-deletion">-u: 仅显示不曾重复的行</span><br></code></pre></td></tr></table></figure><p>uniq常和sort 命令一起配合使用：<br>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sort</span> userlist.txt | <span class="hljs-built_in">uniq</span> -c<br></code></pre></td></tr></table></figure><p>范例：统计日志访问量最多的请求</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@centos8 data]#<span class="hljs-built_in">cut</span> -d<span class="hljs-string">&quot; &quot;</span> -f1 access_log |<span class="hljs-type">sort</span> |<span class="hljs-type">uniq</span> -c|<span class="hljs-type">sort</span> -nr |<span class="hljs-type">head</span> <span class="hljs-number">-3</span><br><span class="hljs-number">4870</span> <span class="hljs-number">172.20</span><span class="hljs-number">.116</span><span class="hljs-number">.228</span><br><span class="hljs-number">3429</span> <span class="hljs-number">172.20</span><span class="hljs-number">.116</span><span class="hljs-number">.208</span><br><span class="hljs-number">2834</span> <span class="hljs-number">172.20</span><span class="hljs-number">.0</span><span class="hljs-number">.222</span><br>[root@centos8 data]#lastb -f btmp<span class="hljs-number">-34</span> | <span class="hljs-type">tr</span> -s &#x27; &#x27; |<span class="hljs-type">cut</span> -d &#x27; &#x27; -f3|<span class="hljs-type">sort</span> |<span class="hljs-type">uniq</span> -c<br>|<span class="hljs-type">sort</span> -nr | <span class="hljs-type">head</span> <span class="hljs-number">-3</span><br><span class="hljs-number">86294</span> <span class="hljs-number">58.218</span><span class="hljs-number">.92</span><span class="hljs-number">.37</span><br><span class="hljs-number">43148</span> <span class="hljs-number">58.218</span><span class="hljs-number">.92</span><span class="hljs-number">.26</span><br><span class="hljs-number">18036</span> <span class="hljs-number">112.85</span><span class="hljs-number">.42</span><span class="hljs-number">.201</span><br></code></pre></td></tr></table></figure><p>范例：并发连接最多的远程主机IP</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@centos8 ~]#ss -nt|<span class="hljs-type">tail</span> -n+<span class="hljs-number">2</span> |<span class="hljs-type">tr</span> -s &#x27; &#x27; : |<span class="hljs-type">cut</span> -d: -f6|<span class="hljs-type">sort</span>|<span class="hljs-type">uniq</span> -c|<span class="hljs-type">sort</span> -<br>nr |<span class="hljs-type">head</span> -n2<br><span class="hljs-number">7</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br><span class="hljs-number">2</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.7</span><br></code></pre></td></tr></table></figure><p>范例：取两个文件的相同和不同的行</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test1</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-selector-tag">a</span><br><span class="hljs-selector-tag">b</span><br><span class="hljs-number">1</span><br><span class="hljs-selector-tag">c</span><br><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test2</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-selector-tag">b</span><br><span class="hljs-selector-tag">e</span><br><span class="hljs-selector-tag">f</span><br><span class="hljs-selector-tag">c</span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br>#取文件的共同行<br><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test1</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">test2</span><span class="hljs-selector-class">.txt</span> | <span class="hljs-selector-tag">sort</span> |<span class="hljs-selector-tag">uniq</span> <span class="hljs-selector-tag">-d</span><br><span class="hljs-number">1</span><br><span class="hljs-selector-tag">b</span><br><span class="hljs-selector-tag">c</span><br>#取文件的不同行<br><span class="hljs-selector-attr">[root@centos8 data]</span><span class="hljs-selector-id">#cat</span> <span class="hljs-selector-tag">test1</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">test2</span><span class="hljs-selector-class">.txt</span> | <span class="hljs-selector-tag">sort</span> |<span class="hljs-selector-tag">uniq</span> <span class="hljs-selector-tag">-u</span><br><span class="hljs-number">2</span><br><span class="hljs-selector-tag">a</span><br><span class="hljs-selector-tag">e</span><br><span class="hljs-selector-tag">f</span><br></code></pre></td></tr></table></figure><h3 id="2-6-4-比较文件"><a href="#2-6-4-比较文件" class="headerlink" title="2.6.4 比较文件"></a>2.6.4 比较文件</h3><h4 id="2-6-4-1-diff"><a href="#2-6-4-1-diff" class="headerlink" title="2.6.4.1 diff"></a>2.6.4.1 diff</h4><p>diff命令比较两个文件之间的区别</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">-u 选项来输出<span class="hljs-string">&quot;统一的(unified)&quot;</span><span class="hljs-built_in">diff</span>格式文件，最适用于补丁文件<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat a.txt </span><br><span class="hljs-string">a</span><br><span class="hljs-string">b</span><br><span class="hljs-string">c</span><br><span class="hljs-string">d</span><br>[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># cat b.txt </span><br><span class="hljs-string">a</span><br><span class="hljs-number">2</span><br><span class="hljs-string">c</span><br><span class="hljs-string">d</span><br>[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># diff a.txt b.txt </span><br><span class="hljs-string">2c2</span><br><span class="hljs-string">&lt;</span> <span class="hljs-string">b</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">&gt;</span> <span class="hljs-number">2</span><br>[<span class="hljs-string">root@rocky8</span> <span class="hljs-string">data</span>]<span class="hljs-comment"># </span><br><br></code></pre></td></tr></table></figure><h4 id="2-6-4-2-patch"><a href="#2-6-4-2-patch" class="headerlink" title="2.6.4.2 patch"></a>2.6.4.2 patch</h4><p><strong>patch 复制在其它文件中进行的改变（要谨慎使用）</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">-<span class="hljs-keyword">b</span> 选项来自动备份改变了的文件<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">diff -u foo<span class="hljs-selector-class">.conf</span> foo2<span class="hljs-selector-class">.conf</span> &gt; foo<span class="hljs-selector-class">.patch</span><br>patch -<span class="hljs-selector-tag">b</span> foo<span class="hljs-selector-class">.conf</span> foo.patch<br></code></pre></td></tr></table></figure><h4 id="2-6-4-3vimdiff"><a href="#2-6-4-3vimdiff" class="headerlink" title="2.6.4.3vimdiff"></a>2.6.4.3vimdiff</h4><p>相当于 vim -d</p><p>范例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@rocky8 data]</span># cat <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-selector-tag">a</span><br><span class="hljs-number">2</span><br>c<br>d<br><span class="hljs-selector-attr">[root@rocky8 data]</span># cat <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-selector-tag">a</span><br><span class="hljs-number">2</span><br>c<br>d<br><span class="hljs-selector-attr">[root@rocky8 data]</span># vimdiff <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">2</span> files <span class="hljs-selector-tag">to</span> edit<br><span class="hljs-selector-attr">[root@rocky8 data]</span># <br><br></code></pre></td></tr></table></figure><h4 id="2-6-4-3cmp"><a href="#2-6-4-3cmp" class="headerlink" title="2.6.4.3cmp"></a>2.6.4.3cmp</h4><p>范例：查看二进制文件的不同</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@centos8 data]#ll <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir /u</span>sr<span class="hljs-regexp">/bin/</span>ls<br>-rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/dir<br>-rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/ls<br>[root@centos8 data]#ll <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir /u</span>sr<span class="hljs-regexp">/bin/</span>ls -i<br><span class="hljs-number">201839444</span> -rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/dir<br><span class="hljs-number">201839465</span> -rwxr-xr-x. <span class="hljs-number">1</span> root root <span class="hljs-number">166448</span> May <span class="hljs-number">12</span> <span class="hljs-number">2019</span> <span class="hljs-regexp">/usr/</span>bin/ls<br>[root@centos8 data]#diff <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir /u</span>sr<span class="hljs-regexp">/bin/</span>ls<br>Binary files <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/dir and /u</span>sr<span class="hljs-regexp">/bin/</span>ls differ<br>[root@centos8 ~]#cmp <span class="hljs-regexp">/bin/</span>dir <span class="hljs-regexp">/bin/</span>ls<br><span class="hljs-regexp">/bin/</span>dir <span class="hljs-regexp">/bin/</span>ls differ: <span class="hljs-keyword">byte</span> <span class="hljs-number">737</span>, line <span class="hljs-number">2</span><br>#跳过前<span class="hljs-number">735</span>个字节,观察后面<span class="hljs-number">30</span>个字节<br>[root@centos8 ~]#hexdump -s <span class="hljs-number">735</span> -Cn <span class="hljs-number">30</span> <span class="hljs-regexp">/bin/</span>ls<br><span class="hljs-number">000002</span>df <span class="hljs-number">00</span> <span class="hljs-number">05</span> <span class="hljs-number">6</span>d da <span class="hljs-number">3</span>f <span class="hljs-number">1</span>b <span class="hljs-number">77</span> <span class="hljs-number">91</span> <span class="hljs-number">91</span> <span class="hljs-number">63</span> a7 de <span class="hljs-number">55</span> <span class="hljs-number">63</span> a2 b9 |..m.?.w..c..Uc..|<br><span class="hljs-number">000002</span>ef d9 d2 <span class="hljs-number">45</span> <span class="hljs-number">55</span> <span class="hljs-number">4</span>c <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">03</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">7</span>d |..EUL........&#125;|<br><span class="hljs-number">000002</span>fd<br>[root@centos8 ~]#hexdump -s <span class="hljs-number">735</span> -Cn <span class="hljs-number">30</span> <span class="hljs-regexp">/bin/</span>dir<br><span class="hljs-number">000002</span>df <span class="hljs-number">00</span> f1 <span class="hljs-number">21</span> <span class="hljs-number">4</span>e f2 <span class="hljs-number">19</span> <span class="hljs-number">7</span>e ef <span class="hljs-number">38</span> <span class="hljs-number">0</span>d <span class="hljs-number">9</span>b <span class="hljs-number">3</span>e d7 <span class="hljs-number">54</span> <span class="hljs-number">08</span> <span class="hljs-number">39</span> |..!N..~.<span class="hljs-number">8</span>..&gt;.T.<span class="hljs-number">9</span>|<br><span class="hljs-number">000002</span>ef e4 <span class="hljs-number">74</span> <span class="hljs-number">4</span>d <span class="hljs-number">69</span> <span class="hljs-number">25</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">03</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">7</span>d |.tMi%........&#125;|<br><span class="hljs-number">000002</span>fd<br></code></pre></td></tr></table></figure><p>练习<br>1、找出ifconfig “网卡名” 命令结果中本机的IPv4地址</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@rocky8 data]# ifconfig | <span class="hljs-type">tail</span> -n +<span class="hljs-number">2</span> |<span class="hljs-type">head</span> -n1|<span class="hljs-type">tr</span> -s <span class="hljs-string">&quot; &quot;</span>|<span class="hljs-type">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f3<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.13</span><br></code></pre></td></tr></table></figure><p>2、查出分区空间使用率的最大百分比值</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq">[root@rocky8 data]# df |<span class="hljs-type">tr</span> -s <span class="hljs-string">&quot; &quot;</span> | <span class="hljs-type">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f5|<span class="hljs-type">sort</span> -nr|<span class="hljs-type">head</span> -n1<br><span class="hljs-number">26</span>%<br></code></pre></td></tr></table></figure><p>3、查出用户UID最大值的用户名、UID及shell类型</p><p>4、查出&#x2F;tmp的权限，以数字方式显示<br>5、统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序</p><h1 id="3-正则表达式"><a href="#3-正则表达式" class="headerlink" title="3 正则表达式"></a>3 正则表达式</h1><p>REGEXP： Regular Expressions，由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）<br>不表示字符字面意义，而表示控制或通配的功能，类似于增强版的通配符功能，但与通配符不同，通配<br>符功能是用来处理文件名，而正则表达式是处理文本内容中字符<br>正则表达式被很多程序和开发语言所广泛支持：vim, less,grep,sed,awk, nginx,mysql 等<br>正则表达式分两类：</p><ul><li><p>基本正则表达式：BRE Basic Regular Expressions</p></li><li><p>扩展正则表达式：ERE Extended Regular Expressions</p></li></ul><p>正则表达式引擎：<br>采用不同算法，检查处理正则表达式的软件模块，如：PCRE（Perl Compatible Regular<br>Expressions）<br>正则表达式的元字符分类：字符匹配、匹配次数、位置锚定、分组<br>帮助：man 7 regex  </p><h2 id="3-1基本正则表达式元字符"><a href="#3-1基本正则表达式元字符" class="headerlink" title="3.1基本正则表达式元字符"></a>3.1基本正则表达式元字符</h2><h3 id="3-1-1字符匹配"><a href="#3-1-1字符匹配" class="headerlink" title="3.1 .1字符匹配"></a>3.1 .1字符匹配</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs txt">. 匹配任意单个字符(除了\n)，可以是一个汉字或其它国家的文字<br>[] 匹配指定范围内的任意单个字符，示例：[wang] [0-9] [a-z] [a-zA-Z]<br>[^] 匹配指定范围外的任意单个字符,示例：[^wang]<br>[:alnum:] 字母和数字<br>[:alpha:] 代表任何英文大小写字符，亦即 A-Z, a-z<br>[:lower:] 小写字母,示例:[[:lower:]],相当于[a-z]<br>[:upper:] 大写字母<br>[:blank:] 空白字符（空格和制表符）<br>[:space:] 包括空格、制表符(水平和垂直)、换行符、回车符等各种类型的空白,比[:blank:]包含的范围<br>广<br>[:cntrl:] 不可打印的控制字符（退格、删除、警铃...）<br>[:digit:] 十进制数字<br>[:xdigit:]十六进制数字<br>[:graph:] 可打印的非空白字符<br>[:print:] 可打印字符<br>[:punct:] 标点符号<br>-----------------<br>\s #匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [\f\r\t\v]。注意 Unicode<br>正则表达式会匹配全角空格符<br>\S #匹配任何非空白字符。等价于 [^\f\r\t\v]<br>\w #匹配一个字母,数字,下划线,汉字,其它国家文字的字符，等价于[_[:alnum:]字]<br>\W #匹配一个非字母,数字,下划线,汉字,其它国家文字的字符，等价于[^_[:alnum:]字]<br></code></pre></td></tr></table></figure><p>案例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># ls /etc/ | grep <span class="hljs-string">&#x27;rc[.0-6]&#x27;</span></span><br>rc0.d<br>rc1.d<br>rc2.d<br>rc3.d<br>rc4.d<br>rc5.d<br>rc6.d<br>rc.d<br>rc.<span class="hljs-keyword">local</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h3 id="3-1-2-匹配次数"><a href="#3-1-2-匹配次数" class="headerlink" title="3.1.2 匹配次数"></a>3.1.2 匹配次数</h3><p>用在要指定次数的字符后面，用于指定前面的字符要出现的次数</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs txt">* #匹配前面的字符任意次，包括0次，贪婪模式：尽可能长的匹配<br>.* #任意长度的任意字符<br>\? #匹配其前面的字符出现0次或1次,即:可有可无<br>\+ #匹配其前面的字符出现最少1次,即:肯定有且 &gt;=1 次<br>\&#123;n\&#125; #匹配前面的字符n次<br>\&#123;m,n\&#125; #匹配前面的字符至少m次，至多n次<br>\&#123;,n\&#125; #匹配前面的字符至多n次,&lt;=n<br>\&#123;n,\&#125; #匹配前面的字符至少n次<br></code></pre></td></tr></table></figure><p>范例: 取IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# ifconfig ens160 | grep -o &quot;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&quot; | head -n1<br>192.168.37.130<br></code></pre></td></tr></table></figure><h3 id="3-1-3-位置锚定"><a href="#3-1-3-位置锚定" class="headerlink" title="3.1.3 位置锚定"></a>3.1.3 位置锚定</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">^ 行首<br>$ 行尾<br>\&lt;或者\b 语首<br>\&gt;,或者\b 语尾<br></code></pre></td></tr></table></figure><p>案例： 行首</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># grep &quot;^root&quot; passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>案例： 行尾</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># grep &quot;bash$&quot; passwd </span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">yuankun:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:yuankun</span><span class="hljs-symbol">:/home/yuankun</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">test:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1002</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/test</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">test1:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1003</span><span class="hljs-symbol">:</span><span class="hljs-number">1003</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/test1</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@rocky8</span> data]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>案例：语首</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># echo <span class="hljs-string">&#x27;yuankunsir&#x27;</span> | grep <span class="hljs-string">&quot;\&lt;yuan&quot;</span></span><br>yuankunsir<br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><p>案例： 语尾</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># echo <span class="hljs-string">&#x27;yuankunsir&#x27;</span> | grep <span class="hljs-string">&quot;sir\&gt;&quot;</span></span><br>yuankunsir<br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h3 id="3-1-4-分组其他"><a href="#3-1-4-分组其他" class="headerlink" title="3.1.4 分组其他"></a>3.1.4 分组其他</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livescript">() 分组<br>后向引用：<span class="hljs-string">\1,</span> <span class="hljs-string">\2,</span> ... 注意: <span class="hljs-string">\0</span> 表示正则表达式匹配的所有字符<br>| 或者<br>a|b <span class="hljs-comment">#a或b</span><br>C|cat <span class="hljs-comment">#C或cat</span><br>(C|c)at <span class="hljs-comment">#Cat或cat</span><br></code></pre></td></tr></table></figure><p>案例：分组</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># abc至少出现三次</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># echo <span class="hljs-string">&#x27;abcabcabc&#x27;</span> | grep <span class="hljs-string">&quot;\(abc\)\&#123;3,\&#125;&quot;</span></span><br>abcabcabc<br></code></pre></td></tr></table></figure><p>案例：或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# echo &#x27;abc&#x27; |grep &#x27;a\|b&#x27;<br>abc<br></code></pre></td></tr></table></figure><h1 id="4-文本处理三剑客"><a href="#4-文本处理三剑客" class="headerlink" title="4 文本处理三剑客"></a>4 文本处理三剑客</h1><p>grep 命令主要对文本的（正则表达式）行基于模式进行过滤<br>sed：stream editor，文本编辑工具<br>awk：Linux上的实现gawk，文本报告生成器</p><h2 id="4-1-文本处理三剑客之grep"><a href="#4-1-文本处理三剑客之grep" class="headerlink" title="4.1 文本处理三剑客之grep"></a>4.1 文本处理三剑客之grep</h2><p>grep: Global search REgular expression and Print out the line<br>作用：文本搜索工具，根据用户指定的“模式”对目标文本逐行进行匹配检查；打印匹配到的行<br>模式：由正则表达式字符及文本字符所编写的过滤条件<br>帮助:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://man7.org/linux/man-pages/man1/grep.1.html<br></code></pre></td></tr></table></figure><p>格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">grep [OPTIONS] PATTERN [FILE...]<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs txt">--color=auto 对匹配到的文本着色显示<br>-m # 匹配#次后停止<br>-v 显示不被pattern匹配到的行,即取反<br>-i 忽略字符大小写<br>-n 显示匹配的行号<br>-c 统计匹配的行数<br>-o 仅显示匹配到的字符串<br>-q 静默模式，不输出任何信息<br>-A # after, 后#行<br>-B # before, 前#行<br>-C # context, 前后各#行<br>-e 实现多个选项间的逻辑or关系,如：grep –e ‘cat &#x27; -e ‘dog&#x27; file<br>-w 匹配整个单词<br>-E 使用ERE，相当于egrep<br>-F 不支持正则表达式，相当于fgrep<br>-P 支持Perl格式的正则表达式<br>-f file 根据模式文件处理<br>-r 递归目录，但不处理软链接<br>-R 递归目录，但处理软链接<br></code></pre></td></tr></table></figure><p>案例：-m</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -m1 root passwd <br>root:x:0:0:root:/root:/bin/bash<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-v</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -v root passwd<br></code></pre></td></tr></table></figure><p>案例：-i</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -i root passwd <br>root:x:0:0:root:/root:/bin/bash<br>operator:x:11:0:operator:/root:/sbin/nologin<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-n</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -n root passwd <br>1:root:x:0:0:root:/root:/bin/bash<br>10:operator:x:11:0:operator:/root:/sbin/nologin<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-o</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -o bash passwd <br>bash<br>bash<br>bash<br>bash<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-q</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -q root passwd <br>[root@rocky8 data]# echo $?<br>0<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例：-A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# cat a.txt <br>a<br>b<br>c<br>d<br>e<br>f<br>g<br>h<br>j<br>k<br>l<br>[root@rocky8 data]# grep -A3 a a.txt <br>a<br>b<br>c<br>d<br>[root@rocky8 data]#<br></code></pre></td></tr></table></figure><p>案例: -B</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# cat a.txt <br>a<br>b<br>c<br>d<br>e<br>f<br>g<br>h<br>j<br>k<br>l<br>[root@rocky8 data]# grep -B3 f a.txt <br>c<br>d<br>e<br>f<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -C</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# cat a.txt <br>a<br>b<br>c<br>d<br>e<br>f<br>g<br>h<br>j<br>k<br>l<br>[root@rocky8 data]# grep -C2 f a.txt <br>d<br>e<br>f<br>g<br>h<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -e root -e yuankun  passwd <br>root:x:0:0:root:/root:/bin/bash<br>operator:x:11:0:operator:/root:/sbin/nologin<br>yuankun:x:1000:1000:yuankun:/home/yuankun:/bin/bash<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -w</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@rocky8 data]# grep -w root passwd <br>root:x:0:0:root:/root:/bin/bash<br>operator:x:11:0:operator:/root:/sbin/nologin<br>[root@rocky8 data]# <br></code></pre></td></tr></table></figure><p>案例： -f</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">取两个文件的相同行</span><br>grep -f a.txt b.txt<br></code></pre></td></tr></table></figure><h2 id="4-2-文本处理工具之sed"><a href="#4-2-文本处理工具之sed" class="headerlink" title="4.2 文本处理工具之sed"></a>4.2 文本处理工具之sed</h2><h3 id="4-2-1-sed基本用法"><a href="#4-2-1-sed基本用法" class="headerlink" title="4.2.1 sed基本用法"></a>4.2.1 sed基本用法</h3><p>格式:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sed [option]<span class="hljs-string">...</span> &#x27;script;script;<span class="hljs-string">...</span>&#x27; [inputfile.<span class="hljs-string">..</span>]<br></code></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>n 不输出模式空间内容到屏幕，即不自动打印<br><span class="hljs-literal">-</span>e 多点编辑<br><span class="hljs-literal">-</span>f FILE 从指定文件中读取编辑脚本<br><span class="hljs-literal">-</span>r, -E 使用扩展正则表达式<br><span class="hljs-literal">-</span>i.bak 备份文件并原处编辑<br><span class="hljs-literal">-</span>s 将多个文件视为独立文件，而不是单个连续的长文件流<br><span class="hljs-comment">#说明:</span><br><span class="hljs-literal">-</span>ir 不支持<br><span class="hljs-literal">-</span>i -r 支持<br><span class="hljs-literal">-</span>ri 支持<br><span class="hljs-literal">-</span>ni 危险选项,会清空文件<br></code></pre></td></tr></table></figure><p>script格式：</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme"><span class="hljs-symbol">&#x27;地址命令</span>&#x27;<br></code></pre></td></tr></table></figure><p>地址格式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span>. 不给地址：对全文进行处理<br><span class="hljs-number">2</span>. 单地址：<br><span class="hljs-comment">#：指定的行，$：最后一行</span><br><span class="hljs-regexp">/pattern/</span>：被此处模式所能够匹配到的每一行<br><span class="hljs-number">3</span>. 地址范围：<br><span class="hljs-comment">#,# #从#行到第#行，3，6 从第3行到第6行</span><br><span class="hljs-comment">#,+# #从#行到+#行，3,+4 表示从3行到第7行</span><br><span class="hljs-regexp">/pat1/</span>,<span class="hljs-regexp">/pat2/</span><br><span class="hljs-comment">#,/pat/</span><br><span class="hljs-regexp">/pat/</span>,<span class="hljs-comment">#</span><br><span class="hljs-number">4</span>. 步进：~<br><span class="hljs-number">1</span>~<span class="hljs-number">2</span> 奇数行<br><span class="hljs-number">2</span>~<span class="hljs-number">2</span> 偶数行<br></code></pre></td></tr></table></figure><p>命令：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs excel">p 打印当前模式空间内容，追加到默认输出之后<br>Ip 忽略大小写输出<br>d 删除模式空间匹配的行，并立即启用下一轮循环<br>a [\]<span class="hljs-built_in">text</span> 在指定行后面追加文本，支持使用\n实现多行追加<br>i [\]<span class="hljs-built_in">text</span> 在行前面插入文本<br>c [\]<span class="hljs-built_in">text</span> 替换行为单行或多行文本<br>w file 保存模式匹配的行至指定文件<br>r file 读取指定文件的文本至模式空间中匹配到的行后<br>= 为模式空间中的行打印行号<br>! 模式空间中匹配行取反处理<br>q 结束或退出sed<br></code></pre></td></tr></table></figure><p>查找和替换：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">s<span class="hljs-regexp">/pattern/</span>string/修饰符 查找替换,支持使用其它分隔符，可以是其它形式：s@@@，s<span class="hljs-comment">###</span><br>替换修饰符：<br>g 行内全局替换<br>p 显示替换成功的行<br>w <span class="hljs-regexp">/PATH/</span>FILE 将替换成功的行保存至文件中<br>I,i 忽略大小写<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-meta"># sed默认会将输入信息输出到屏幕</span><br>[root@rocky8 <span class="hljs-class"><span class="hljs-keyword">data</span>]# sed &quot;&quot;</span><br><span class="hljs-title">hello</span><br><span class="hljs-title">hello</span><br><span class="hljs-title">yuan</span><br><span class="hljs-title">yuan</span><br><span class="hljs-class"><span class="hljs-keyword">data</span></span><br><span class="hljs-class"><span class="hljs-keyword">data</span></span><br></code></pre></td></tr></table></figure><p>案例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 打印第三行，默认会输出所有，-n选项不输出模式空间内容到屏幕，即不自动打印</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed <span class="hljs-string">&#x27;3p&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br><span class="hljs-meta"># p 打印当前模式空间内容，追加到默认输出之后</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;3p&#x27;</span></span><br><span class="hljs-number">3</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 删除第三行</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed  <span class="hljs-string">&#x27;3d&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 输出第三行至最后一行</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n  <span class="hljs-string">&#x27;3,$p&#x27;</span></span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 输出奇数行</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;1~2p&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">3</span><br><span class="hljs-number">5</span><br><span class="hljs-number">7</span><br><span class="hljs-number">9</span><br><br><span class="hljs-meta"># 输出偶数行</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;2~2p&#x27;</span></span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">6</span><br><span class="hljs-number">8</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># </span><br><br><span class="hljs-meta"># 追加，在偶数行追加hello</span><br>[root<span class="hljs-symbol">@rocky8</span> etc]<span class="hljs-meta"># seq 10 | sed  <span class="hljs-string">&#x27;2~2ahello&#x27;</span></span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br>hello<br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br>hello<br><span class="hljs-number">5</span><br><span class="hljs-number">6</span><br>hello<br><span class="hljs-number">7</span><br><span class="hljs-number">8</span><br>hello<br><span class="hljs-number">9</span><br><span class="hljs-number">10</span><br>hello<br></code></pre></td></tr></table></figure><p>案例：行前和行首添加文本</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br>hello my name <span class="hljs-keyword">is</span> lihua<br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# sed -i <span class="hljs-string">&#x27;/hello/a12138&#x27;</span> <span class="hljs-keyword">data</span>.txt <br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br>hello my name <span class="hljs-keyword">is</span> lihua<br><span class="hljs-number">12138</span><br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# sed -i <span class="hljs-string">&#x27;/hello/i12138&#x27;</span> <span class="hljs-keyword">data</span>.txt <br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br><span class="hljs-number">12138</span><br>hello my name <span class="hljs-keyword">is</span> lihua<br><span class="hljs-number">12138</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1659531426952.png" alt="1659531426952"></p><p>案例：替换行为单行或多行文本</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br><span class="hljs-number">852</span>   a<br><span class="hljs-number">852</span>   b<br><span class="hljs-number">852</span>   c<br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# sed -i <span class="hljs-string">&#x27;/852/c hello&#x27;</span> <span class="hljs-keyword">data</span>.txt <br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# cat <span class="hljs-keyword">data</span>.txt <br><br>hello<br>hello<br>hello<br>[<span class="hljs-symbol">root@</span>rocky8 <span class="hljs-keyword">data</span>]# <br></code></pre></td></tr></table></figure><p>案例：保存模式匹配的行至指定文件</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># cat a.txt </span><br><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;1~2w a.txt&#x27;</span></span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># cat a.txt </span><br><span class="hljs-number">1</span><br><span class="hljs-number">3</span><br><span class="hljs-number">5</span><br><span class="hljs-number">7</span><br><span class="hljs-number">9</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><p>案例：读取指定文件的文本至模式空间中匹配到的行后</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@rocky8 data]<span class="hljs-comment"># seq 10 | sed &#x27;1~2r /etc/issue&#x27;</span><br><span class="hljs-number">1</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">6</span><br><span class="hljs-number">7</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">8</span><br><span class="hljs-number">9</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br><br><span class="hljs-number">10</span><br>[root@rocky8 data]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>案例：! 模式空间中匹配行取反处理</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 1~2奇数行，加上！取反就是偶数行</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># seq 10 | sed -n <span class="hljs-string">&#x27;1~2!p&#x27;</span></span><br><span class="hljs-number">2</span><br><span class="hljs-number">4</span><br><span class="hljs-number">6</span><br><span class="hljs-number">8</span><br><span class="hljs-number">10</span><br>[root<span class="hljs-symbol">@rocky8</span> data]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h2 id="4-3-文本处理工具之awk"><a href="#4-3-文本处理工具之awk" class="headerlink" title="4.3 文本处理工具之awk"></a>4.3 文本处理工具之awk</h2>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>权限管理及文本编辑工具</title>
    <link href="/2022/07/25/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%8F%8A%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
    <url>/2022/07/25/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%8F%8A%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="1-新建文件和目录的默认权限"><a href="#1-新建文件和目录的默认权限" class="headerlink" title="1.新建文件和目录的默认权限"></a>1.新建文件和目录的默认权限</h1><p>umask 的值可以用来保留在创建文件权限<br>实现方式：</p><ul><li>新建文件的默认权限: 666-umask，如果所得结果某位存在执行（奇数）权限，则将其权限+1,偶<br>数不变</li><li>新建目录的默认权限: 777-umask</li></ul><p>非特权用户umask默认是002</p><p>root的umask默认是022</p><p>查看umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span><br><span class="hljs-comment">#模式方式显示</span><br><span class="hljs-built_in">umask</span> –S<br><span class="hljs-comment">#输出可被调用</span><br><span class="hljs-built_in">umask</span> –p<br></code></pre></td></tr></table></figure><p>修改umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span> <span class="hljs-comment">#bash</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash<br><span class="hljs-built_in">umask</span> 002<br><span class="hljs-built_in">umask</span> u=rw,g=r,o=<br></code></pre></td></tr></table></figure><p>持久保存umask:</p><ul><li>全局设置：&#x2F;etc&#x2F;bashrc</li><li>用户设置：~&#x2F;.bashrc</li></ul><p>创建临时权限为000的文件三种方法：</p><ul><li>方法一</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> a.txt;<span class="hljs-built_in">chmod</span> 000 a.txt<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span> 777;<span class="hljs-built_in">touch</span> a.txt;<span class="hljs-built_in">umask</span> 022<br></code></pre></td></tr></table></figure><ul><li>方法三</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-built_in">umask</span> 777;<span class="hljs-built_in">touch</span> a.txt)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux运维面试葵花宝典</title>
    <link href="/2022/07/23/TheInterviewQuestions/"/>
    <url>/2022/07/23/TheInterviewQuestions/</url>
    
    <content type="html"><![CDATA[<p><strong>df和du的区别？</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">df 查看是文件系统的空间使用，包括元数据和数据，删除文件后，如果此文件正在使用，不会立即释放空间<br>du 查看是文件数据空间使用，不包括元数据，删除文件后空间立即释放<br></code></pre></td></tr></table></figure><p><strong>RAID0，1，5，6，10,01级别区别</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">1 磁盘利用率<br>2 最少几盘硬盘实现<br>3 容错性，防止几块硬盘损坏<br>4 性能好坏？<br></code></pre></td></tr></table></figure><p><strong>如何判断linux系统网线是联通的还是断了</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">link</span> ok 说明网线是联通的</span><br>root@ubuntu200404:~# mii-tool ens33<br>ens33: negotiated 1000baseT-FD flow-control, link ok<br>root@ubuntu200404:~# <br></code></pre></td></tr></table></figure><p><strong>三次握手过程以及为什么是三次握手</strong></p><p><strong>探测ip冲突arping命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@centos7 /]# arping 192.168.179.129<br>ARPING 192.168.179.129 from 192.168.179.130 ens33<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.689ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.797ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.746ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.874ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.712ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.845ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.706ms<br>Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.741ms<br></code></pre></td></tr></table></figure><p><strong>简述 TCP&#x2F;IP三次握手和四次挥手的工作原理?</strong><br><strong>Centos7,8 Linux操作系统如何临时和永久配置IP地址?请写出操作步骤</strong><br><strong>用一行命令找出ifconfig命令结果中的IP地址?</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig | grep inet |grep -v inet6 | tr -s &quot; &quot; | cut -d&quot; &quot; -f3<br></code></pre></td></tr></table></figure><p><strong>使用tcpdump 监听主机为192.168.1.1,tcp端口为80的数据,同时将输出结果保存成文件?</strong><br><strong>写一个She11脚本,实现判断192.168.1.0&#x2F;24网络里,当前在线的IP有哪些，能ping 通则认为在线</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">变量</span><br>NET=192.168.1.0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">清空文件内容</span><br>cat /dev/null &gt; hosts.txt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">循环</span><br>for i in &#123;1..254&#125;;do<br><span class="hljs-meta prompt_"># </span><span class="language-bash">ping 1秒钟不回应则认为不通</span><br>  if ping -c1 -W1 $NET.$i;then<br><span class="hljs-meta prompt_"># </span><span class="language-bash">屏幕打印，并将结果重定向到hosts.txt中</span><br>    echo $NET.$i is up | tee -a hosts.txt<br>  fi<br>done<br></code></pre></td></tr></table></figure><p><strong>写一个扫描某个主机端口的状态的脚本</strong></p><h1 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h1><p><strong>解释uptime top w命令第一行</strong></p><ul><li>uptime</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs TXT"># uptime命令<br>[root@rocky ~]# uptime<br> 21:14:45 up  1:31,  2 users,  load average: 0.02, 0.01, 0.00<br><br></code></pre></td></tr></table></figure><ul><li>w命令</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs TXt"># w命令<br>[root@rocky ~]# w <br> 21:15:57 up  1:32,  2 users,  load average: 0.00, 0.00, 0.00<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>root     tty1     -                06Aug22  1:19m  0.10s  0.10s -bash<br>root     pts/0    192.168.179.1    19:45    1.00s  0.06s  0.00s w<br>[root@rocky ~]# <br></code></pre></td></tr></table></figure><ul><li>top命令</li></ul><p><img src="/../img/1662383968738.png" alt="1662383968738"></p><table><thead><tr><th>21:15:57</th><th>up  1:32</th><th>2 users</th><th>load average: 0.00, 0.00, 0.00</th></tr></thead><tbody><tr><td>当前系统时间</td><td>系统运行了多长时间</td><td>登录的用户数</td><td>系统1分钟、5分钟、15分钟的平均负载，一般不会超过1，超过5时建议警报</td></tr></tbody></table><p><strong>top命令详解</strong></p><p><img src="/../img/1662383968738.png" alt="1662383968738"></p><p><img src="/../img/1662386034301.png" alt="1662386034301"></p><p><strong>面试题</strong><br>4.1 解释top命令每一行的意义<br>4.2 如果查看一个进程的是否是多线程<br>4.3 如果实现秒级的计划任务<br>4.4 说明cron计划任务的格式</p><h1 id="iptables有几个表以及每个表有几个链？"><a href="#iptables有几个表以及每个表有几个链？" class="headerlink" title="iptables有几个表以及每个表有几个链？"></a>iptables有几个表以及每个表有几个链？</h1><p>五表五链</p><h1 id="MySQL相关面试题"><a href="#MySQL相关面试题" class="headerlink" title="MySQL相关面试题"></a>MySQL相关面试题</h1><p> <strong>面试题: VARCHAR(50) 能存放几个 UTF8 编码的汉字？</strong> </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">存放的汉字个数与版本相关。<br>mysql <span class="hljs-number">4.0</span>以下版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字节，如果存放 UTF8 格式编码的汉字时（每个汉字<span class="hljs-number">3</span>字<br>节），只能存放<span class="hljs-number">16</span> 个。<br>mysql <span class="hljs-number">5.0</span>以上版本，<span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) 指的是 <span class="hljs-number">50</span> 字符，无论存放的是数字、字母还是 UTF8 编码的汉字，<br>都可以存放 <span class="hljs-number">50</span> 个。<br></code></pre></td></tr></table></figure><p><strong>MyISAM与MyISAM 的区别</strong></p><p><strong>面试题: InnoDB中一颗的B+树可以存放多少行数据？</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">假设定义一颗B+树高度为2，即一个根节点和若干叶子节点。那么这棵B+树的存放总行记录数=根节点指针数*<br>单个叶子记录的行数。这里先计算叶子节点，B+树中的单个叶子节点的大小为16K，假设每一条目为1K，那么<br>记录数即为16(16k/<span class="hljs-attribute">1K</span>=16)，然后计算非叶子节点能够存放多少个指针，假设主键ID为bigint类型，那么长<br>度为8字节，而指针大小在InnoDB中是设置为6个字节，这样加起来一共是14个字节。那么通过页大小/(主键<br>ID大小+指针大小），即16384/<span class="hljs-attribute">14</span>=1170个指针，所以一颗高度为2的B+树能存放16*1170=18720条这样的<br>记录。根据这个原理就可以算出一颗高度为3的B+树可以存放16<span class="hljs-number">*1170</span><span class="hljs-number">*1170</span>=21902400条记录。所以在<br>InnoDB中B+树高度一般为2-3层，它就能满足千万级的数据存储<br></code></pre></td></tr></table></figure><p><strong>事务特性</strong></p><p>ACID特性：<br>A：atomicity 原子性；整个事务中的所有操作要么全部成功执行，要么全部失败后回滚<br>C：consistency一致性；数据库总是从一个一致性状态转换为另一个一致性状态,类似于能量守恒定<br>律(N50周启皓语录)<br>I：Isolation隔离性；一个事务所做出的操作在提交之前，是不能为其它事务所见；隔离有多种隔离<br>级别，实现并发<br>D：durability持久性；一旦事务提交，其所做的修改会永久保存于数据库中</p><p><strong>事务隔离级别</strong></p><p><img src="/../image.assets/1668916687561.png" alt="1668916687561"></p><p><img src="/../image.assets/1668916735065.png" alt="1668916735065"></p><p><strong>MySQL 主从数据不一致</strong><br><strong>造成主从不一致的原因</strong>**</p><ul><li>主库binlog格式为Statement，同步到从库执行后可能造成主从不一致。</li><li>主库执行更改前有执行set sql_log_bin&#x3D;0，会使主库不记录binlog，从库也无法变更这部分数据。</li><li>从节点未设置只读，误操作写入数据</li><li>主库或从库意外宕机，宕机可能会造成binlog或者relaylog文件出现损坏，导致主从不一致</li><li>主从实例版本不一致，特别是高版本是主，低版本为从的情况下，主数据库上面支持的功能，从数</li><li>据库上面可能不支持该功能</li><li>主从sql_mode 不一致</li><li>MySQL自身bug导致</li></ul><p><strong>主从不一致修复方法</strong></p><ul><li>将从库重新实现<br>虽然这也是一种解决方法，但是这个方案恢复时间比较慢，而且有时候从库也是承担一部分的查询<br>操作的，不能贸然重建。</li><li>使用percona-toolkit工具辅助<br>PT工具包中包含pt-table-checksum和pt-table-sync两个工具，主要用于检测主从是否一致以及修<br>复数据不一致情况。这种方案优点是修复速度快，不需要停止主从辅助，缺点是需要知识积累，需<br>要时间去学习，去测试，特别是在生产环境，还是要小心使用<br>关于使用方法，可以参考下面链接：<a href="https://www.cnblogs.com/feiren/p/7777218.html">https://www.cnblogs.com/feiren/p/7777218.html</a></li><li>手动重建不一致的表<br>在从库发现某几张表与主库数据不一致，而这几张表数据量也比较大，手工比对数据不现实，并且<br>重做整个库也比较慢，这个时候可以只重做这几张表来修复主从不一致<br>这种方案缺点是在执行导入期间需要暂时停止从库复制，不过也是可以接受的</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux文件管理</title>
    <link href="/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p class="note note-success">文件管理</p># 1.文件系统目录结构<h2 id="1-1常见的文件系统目录功能"><a href="#1-1常见的文件系统目录功能" class="headerlink" title="1.1常见的文件系统目录功能"></a>1.1常见的文件系统目录功能</h2><p><img src="/../image.assets/1658580842757.png" alt="1658580842757"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">/boot：引导文件存放目录，内核文件(vmlinuz)、引导加载器(bootloader, grub)都存放于此目录<br>/bin：所有用户使用的基本命令；不能关联至独立分区，OS启动即会用到的程序<br>/sbin：管理类的基本命令；不能关联至独立分区，OS启动即会用到的程序<br>/lib：启动时程序依赖的基本共享库文件以及内核模块文件(/lib/modules)<br>/lib64：专用于x86_64系统上的辅助共享库文件存放位置<br>/etc：配置文件目录<br>/home/USERNAME：普通用户家目录<br>/root：管理员的家目录<br>/media：便携式移动设备挂载点<br>/mnt：临时文件系统挂载点<br>/dev：设备文件及特殊文件存储位置<br>b: block device，随机访问<br>c: character device，线性访问<br>/opt：第三方应用程序的安装位置<br>/srv：系统上运行的服务用到的数据<br>/tmp：临时文件存储位置<br>/usr: universal shared, read-only data<br>bin: 保证系统拥有完整功能而提供的应用程序<br>sbin:<br>lib：32位使用<br>lib64：只存在64位系统<br>include: C程序的头文件(header files)<br>share：结构化独立的数据，例如doc, man等<br><span class="hljs-built_in">local</span>：第三方应用程序的安装位置<br>bin, sbin, lib, lib64, etc, share<br>/var: variable data files<br>cache: 应用程序缓存数据目录<br>lib: 应用程序状态信息数据<br><span class="hljs-built_in">local</span>：专用于为/usr/local下的应用程序存储可变数据<br>lock: 锁文件<br><span class="hljs-built_in">log</span>: 日志目录及文件<br>opt: 专用于为/opt下的应用程序存储可变数据<br>run: 运行中的进程相关数据,通常用于存储进程pid文件<br>spool: 应用程序数据池<br>tmp: 保存系统两次重启之间产生的临时数据<br>/proc: 用于输出内核与进程信息相关的虚拟文件系统<br>/sys：用于输出当前系统上硬件设备相关信息虚拟文件系统<br>/selinux: security enhanced Linux，selinux相关的安全策略等信息的存储位置<br></code></pre></td></tr></table></figure><h2 id="1-2Linux下的文件类型"><a href="#1-2Linux下的文件类型" class="headerlink" title="1.2Linux下的文件类型"></a>1.2Linux下的文件类型</h2><ul><li>-普通文件</li><li>d 目录文件directory</li><li>I 符号链接文件link</li><li>b 块设备block</li><li>c 字符设备character</li><li>p 管道文件pipe</li><li>s 套接字文件socket</li></ul><p><mark style="background-color：colorName/hexOfColor">注意:面试题目容易出现</mark></p><p><img src="/../image.assets/1658568673282.png" alt="1658568673282"></p><h1 id="2-文件操作命令"><a href="#2-文件操作命令" class="headerlink" title="2.文件操作命令"></a>2.文件操作命令</h1><h2 id="2-1相对路径和绝对路径"><a href="#2-1相对路径和绝对路径" class="headerlink" title="2.1相对路径和绝对路径"></a>2.1相对路径和绝对路径</h2><ul><li>绝对路径<br>以正斜杠&#x2F; 即根目录开始<br>完整的文件的位置路径<br>可用于任何想指定一个文件名的时候</li><li>相对路径名<br>不以斜线开始<br>一般情况下，是指相对于当前工作目录的路径，特殊场景下，是相对于某目录的位置<br>可以作为一个简短的形式指定一个文件名</li><li>基名：basename，只取文件名而不要路径</li><li>目录名：dirname，只取路径，不要文件名<br>范例:</li></ul><p><img src="/../image.assets/1658569417929.png" alt="1658569417929"></p><h2 id="2-2更改目录"><a href="#2-2更改目录" class="headerlink" title="2.2更改目录"></a>2.2更改目录</h2><p>命令 cd ： change directory 改变目录<br>选项：-P 切换至物理路径，而非软链接目录<br>可以使用绝对或相对路径<br>切换至父目录： cd ..<br>切换至当前用户主目录： cd<br>切换至以前的工作目录： cd -</p><h2 id="2-3列出目录内容"><a href="#2-3列出目录内容" class="headerlink" title="2.3列出目录内容"></a>2.3列出目录内容</h2><p>ls 命令可以列出当前目录的内容或指定目录<br>用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ls <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[files_or_dirs]</span><br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-a 包含隐藏文件</span><br><span class="hljs-deletion">-l 显示额外的信息</span><br><span class="hljs-deletion">-R 目录递归</span><br><span class="hljs-deletion">-ld 目录和符号链接信息</span><br><span class="hljs-deletion">-1 文件分行显示</span><br><span class="hljs-deletion">-S 按从大到小排序</span><br><span class="hljs-deletion">-t 按mtime排序</span><br><span class="hljs-deletion">-u 配合-t选项，显示并按atime从新到旧排序</span><br><span class="hljs-deletion">-U 按目录存放顺序显示</span><br><span class="hljs-deletion">-X 按文件后缀排序</span><br><span class="hljs-deletion">-F 对不同类型文件显示时附加不同的符号：*/=&gt;@|</span><br><span class="hljs-deletion">-C 文件多时，以多列的方式显示文件，默认是一列（标准输出）</span><br></code></pre></td></tr></table></figure><p>说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> 查看不同后缀文件时的颜色由 /etc/DIR_COLORS 和@LS_COLORS变量定义<br><span class="hljs-built_in">ls</span> -l 看到文件的大小,不一定是实际文件真正占用空间的大小<br></code></pre></td></tr></table></figure><h2 id="2-4查看文件状态"><a href="#2-4查看文件状态" class="headerlink" title="2.4查看文件状态"></a>2.4查看文件状态</h2><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">stat</span> filename<br></code></pre></td></tr></table></figure><p>每个文件有三个时间戳：</p><ul><li>access time 访问时间，atime，读取文件内容</li><li>modify time 修改时间，mtime，改变文件内容（数据）</li><li>change time 改变时间，ctime，元数据发生改变</li></ul><p><img src="/../image.assets/1658570229648.png" alt="1658570229648"></p><h2 id="2-5查看文件内容"><a href="#2-5查看文件内容" class="headerlink" title="2.5查看文件内容"></a>2.5查看文件内容</h2><p>用法：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">file</span> [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">filename</span><br></code></pre></td></tr></table></figure><p>常用选项：</p><ul><li>-b 列出文件辨识结果时，不显示文件名称</li><li>-f filelist 列出文件filelist中文件名的文件类型</li><li>-F 使用指定分隔符号替换输出文件名后默认的”:”分隔符</li><li>-L 查看对应软链接对应文件的文件类型</li><li>–help 显示命令在线帮助</li></ul><p><img src="/../image.assets/1658570620547.png" alt="1658570620547"></p><h2 id="2-6文件通配符模式"><a href="#2-6文件通配符模式" class="headerlink" title="2.6文件通配符模式"></a>2.6文件通配符模式</h2><p>常见的通配符如下</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs prolog">* 匹配零个或多个字符，但不匹配 <span class="hljs-string">&quot;.&quot;</span> 开头的文件，即隐藏文件<br>? 匹配任何单个字符,一个汉字也算一个字符<br>~ 当前用户家目录<br>~mage 用户mage家目录<br>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>] 匹配数字范围<br>[a-z] 一个字母<br>[<span class="hljs-symbol">A</span>-<span class="hljs-symbol">Z</span>] 一个字母<br>[wang] 匹配列表中的任何的一个字符<br>[^wang] 匹配列表中的所有字符以外的字符<br>[^a-z] 匹配列表中的所有字符以外的字符<br>. 和 ~+ 当前工作目录<br>~- 前一个工作目录<br></code></pre></td></tr></table></figure><h2 id="2-7批量修改文件名"><a href="#2-7批量修改文件名" class="headerlink" title="2.7批量修改文件名"></a>2.7批量修改文件名</h2><p>利用 rename 可以批量修改文件名<br>格式：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">rename</span> [<span class="hljs-keyword">options</span>] <span class="hljs-symbol">&lt;expression&gt;</span> <span class="hljs-symbol">&lt;replacement&gt;</span> <span class="hljs-symbol">&lt;file&gt;</span>...<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#为所有的f开头包含conf的文件加上.bak后缀：</span><br><span class="hljs-built_in">rename</span> <span class="hljs-string">&#x27;conf&#x27;</span> <span class="hljs-string">&#x27;conf.bak&#x27;</span> f*<br><span class="hljs-comment">#去掉所有的bak后缀：</span><br><span class="hljs-built_in">rename</span> <span class="hljs-string">&#x27;.bak&#x27;</span> <span class="hljs-string">&#x27;&#x27;</span> *.bak<br></code></pre></td></tr></table></figure><h1 id="3-硬链接和软链接"><a href="#3-硬链接和软链接" class="headerlink" title="3.硬链接和软链接"></a>3.硬链接和软链接</h1><h2 id="3-1硬链接"><a href="#3-1硬链接" class="headerlink" title="3.1硬链接"></a>3.1硬链接</h2><p>硬链接本质上就给一个文件起一个新的名称，实质是同一个文件<br>硬链接特性</p><ul><li>创建硬链接会在对应的目录中增加额外的记录项以引用文件</li><li>对应于同一文件系统上一个物理文件</li><li>每个目录引用相同的inode号</li><li>创建时链接数递增</li><li>删除文件时：rm命令递减计数的链接，文件要存在，至少有一个链接数，当链接数为零时，该文件被删除</li><li>不能跨越驱动器或分区</li><li>不支持对目录创建硬链接</li></ul><p>格式：  </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ln</span> filename<span class="hljs-meta"> [linkname]</span><br></code></pre></td></tr></table></figure><h2 id="3-2软链接"><a href="#3-2软链接" class="headerlink" title="3.2软链接"></a>3.2软链接</h2><p>一个符号链接指向另一个文件,就像 windows 中快捷方式，软链接文件和原文件本质上不是同一个文件<br>软链接特点</p><ul><li>一个符号链接的内容是它引用文件的名称</li><li>可以对目录创建软链接</li><li>可以跨分区的文件实现</li><li>指向的是另一个文件的路径；其大小为指向的路径字符串的长度；不增加或减少目标文件inode的引用计数</li><li>在创建软链接时, 如果源文件使用相对路径，是相对于软链接文件的路径，而非相对于当前工作目录,但是软链接的路径如果是相对路径,则是相对于当前工作目录<br>格式：  <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ln</span> -s filename<span class="hljs-meta"> [linkname]</span><br></code></pre></td></tr></table></figure>范例： 查看软链接</li></ul><p><img src="/../image.assets/1658588131214.png" alt="1658588131214"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/data/</span>dirlink <span class="hljs-comment">#只删除软链接本身,不会删除源目录内容</span><br>rm -rf <span class="hljs-regexp">/data/</span>dirlink/ <span class="hljs-comment">#删除源目录的文件,但不会删除链接文件,此方法非常危险</span><br><span class="hljs-comment">#注意: 删除此软链接务必不要加-r选项</span><br></code></pre></td></tr></table></figure><h1 id="4-硬链接和软链接区别"><a href="#4-硬链接和软链接区别" class="headerlink" title="4.硬链接和软链接区别"></a>4.硬链接和软链接区别</h1><ol><li>本质：</li></ol><ul><li>硬链接：本质是同一个文件</li><li>软链接：本质不是同一个文件</li></ul><ol start="2"><li>跨设备</li></ol><ul><li>硬链接：不支持</li><li>软链接：支持</li></ul><ol start="3"><li>inode</li></ol><ul><li>硬链接：相同</li><li>软链接：不同</li></ul><ol start="4"><li>链接数</li></ol><ul><li>硬链接：创建新的硬链接,链接数会增加,删除硬链接,链接数减少</li><li>软链接：创建或删除,链接数不会变化</li></ul><ol start="5"><li>文件夹</li></ol><ul><li>硬链接：不支持</li><li>软链接：支持</li></ul><ol start="6"><li>相对路径</li></ol><ul><li>硬链接：原始文件相对路径是相对于当前工作目录</li><li>软链接：原始文件的相对路径是相对于链接文件的相对路径</li></ul><ol start="7"><li>删除源文件</li></ol><ul><li>硬链接：只是链接数减一,但链接文件的访问不受影响</li><li>软链接：链接文件将无法访问</li></ul><ol start="8"><li>文件类型</li></ol><ul><li>硬链接：和源文件相同</li><li>软链接：链接文件,和源文件无关</li></ul><ol start="9"><li>文件大小</li></ol><ul><li>硬链接: 和源文件相同</li><li>软链接: 源文件的路径的长度</li></ul><h1 id="5-生产案例"><a href="#5-生产案例" class="headerlink" title="5.生产案例"></a>5.生产案例</h1><ul><li>案例1：提示空间满 No space left on device，但 df 可以看到空间很多，为什么？<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go">解决方法：节点编号用完了，增加节点编号增加不了，说明你的磁盘上的文件都是小文件；<br><span class="hljs-number">1</span>、删除不用的文件和文件夹释放inode<br><span class="hljs-number">2</span>、迁移数据到新磁盘然后格式化重新指定inode<br>知识点：<br><span class="hljs-number">1.</span>Linux下一个文件夹或者一个文件就会占用一个inode资源<br><span class="hljs-number">2.i</span>node资源数量是在格式化磁盘的时候就指定的（可以不指定，但也会有一个值），要更改这个<br>数量必须格式化磁盘<br><span class="hljs-number">3.</span>如果某个磁盘的inode资源用尽，即便磁盘有空间，也不能进行任何文件或者文件夹的新增<br><span class="hljs-number">4.</span>删除一个文件夹或者文件就能释放一个inode资源<br></code></pre></td></tr></table></figure></li><li>案例2：提示空间快满，使用 rm 删除了很大的无用文件后，df仍然看到空间不足，为什么？如何解决？<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">有其他程序在使用该文件，可以清空该文件内容。使用&gt;清空文件内容<br><span class="hljs-quote">&gt; filename</span><br><span class="hljs-section"># &gt; test.log</span><br></code></pre></td></tr></table></figure></li></ul><p><img src="/../image.assets/1658589334005.png" alt="1658589334005"></p><h1 id="6-重定向和管道"><a href="#6-重定向和管道" class="headerlink" title="6.重定向和管道"></a>6.重定向和管道</h1><h2 id="6-1-标准输入和输出"><a href="#6-1-标准输入和输出" class="headerlink" title="6.1 标准输入和输出"></a>6.1 标准输入和输出</h2><p>程序：指令+数据<br>读入数据：Input<br>输出数据：Output<br>打开的文件都有一个fd: file descriptor (文件描述符)<br>Linux给程序提供三种 I&#x2F;O 设备</p><ul><li>标准输入（STDIN） －0 默认接受来自终端窗口的输入</li><li>标准输出（STDOUT）－1 默认输出到终端窗口</li><li>标准错误（STDERR） －2 默认输出到终端窗口</li></ul><h2 id="6-2标准的输出和错误重定向"><a href="#6-2标准的输出和错误重定向" class="headerlink" title="6.2标准的输出和错误重定向"></a>6.2标准的输出和错误重定向</h2><p>格式：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">命令 操作符号 文件名<br></code></pre></td></tr></table></figure><p>支持的操作符号包括：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl"><span class="hljs-meta prompt_">1&gt; </span>或 &gt; 把STDOUT重定向到文件<br><span class="hljs-meta prompt_">2&gt; </span>把STDERR重定向到文件<br>&amp;&gt; 把标准输出和错误都重定向<br>&gt;&amp; 和上面功能一样，建议使用上面方式<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658627818949.png" alt="1658627818949"></p><p><img src="/../image.assets/1658627951062.png" alt="1658627951062"></p><p><img src="/../image.assets/1658628044574.png" alt="1658628044574"></p><p>以上的文件如果已经存在，文件内容则会覆盖</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># &gt;&gt; 可以在原有的基础内容上追加内容</span><br><span class="hljs-meta prompt_">&gt;&gt;</span> 追加标准输出重定向至文件<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628188096.png" alt="1658628188096"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">2&gt;</span><span class="language-bash">&gt; 追加标准错误重定向至文件</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628249117.png" alt="1658628249117"></p><h2 id="6-3将标准输出和错误输出指定向不同的文件"><a href="#6-3将标准输出和错误输出指定向不同的文件" class="headerlink" title="6.3将标准输出和错误输出指定向不同的文件"></a>6.3将标准输出和错误输出指定向不同的文件</h2><p>格式：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">COMMAND &gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-built_in">file</span>.<span class="hljs-built_in">log</span> <span class="hljs-number">2</span>&gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">error</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628570176.png" alt="1658628570176"></p><h2 id="6-4合并标准输出和错误输出为同一个数据流进行重定向"><a href="#6-4合并标准输出和错误输出为同一个数据流进行重定向" class="headerlink" title="6.4合并标准输出和错误输出为同一个数据流进行重定向"></a>6.4合并标准输出和错误输出为同一个数据流进行重定向</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs delphi">&amp;&gt; 覆盖重定向<br>&amp;&gt;&gt; 追加重定向<br>COMMAND &gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">file</span>.<span class="hljs-keyword">out</span> <span class="hljs-number">2</span>&gt;<span class="hljs-number">&amp;1</span> （顺序很重要）<br>COMMAND &gt;&gt; /path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">file</span>.<span class="hljs-keyword">out</span> <span class="hljs-number">2</span>&gt;<span class="hljs-number">&amp;1</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658628863373.png" alt="1658628863373"></p><p><img src="/../image.assets/1658628910790.png" alt="1658628910790"></p><p><img src="/../image.assets/1658629123843.png" alt="1658629123843"></p><ul><li>错误案例</li></ul><p><img src="/../image.assets/1658629245131.png" alt="1658629245131">  </p><h2 id="6-5标准输入重定向"><a href="#6-5标准输入重定向" class="headerlink" title="6.5标准输入重定向"></a>6.5标准输入重定向</h2><p>实现标准输入重定向的符号</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">COMMAND</span> <span class="hljs-number">0</span>&lt; <span class="hljs-keyword">FILE</span><br><span class="hljs-keyword">COMMAND</span> &lt; <span class="hljs-keyword">FILE</span><br></code></pre></td></tr></table></figure><ul><li>面试题：</li></ul><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-comment"># 求1+2+···+10的和</span><br><span class="hljs-type">seq</span> -s+ <span class="hljs-number">10</span> &gt; <span class="hljs-type">seq</span>.log<br>bc &lt; <span class="hljs-type">seq</span>.log<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658631614537.png" alt="1658631614537"></p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nim">扩展：求<span class="hljs-number">1</span>*<span class="hljs-number">2</span>*···*<span class="hljs-number">10</span>的值：<br><span class="hljs-type">seq</span> -s* <span class="hljs-number">10</span> &gt;<span class="hljs-type">seq</span>.log<br>bc &lt; <span class="hljs-type">seq</span>.log<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658631847010.png" alt="1658631847010"></p><p><img src="/../image.assets/1658631986469.png" alt="1658631986469"></p><h3 id="6-5-1tr命令"><a href="#6-5-1tr命令" class="headerlink" title="6.5.1tr命令"></a>6.5.1tr命令</h3><p>tr 转换和删除字符</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">tr</span> <span class="hljs-selector-attr">[option]</span> ··· SET1 <span class="hljs-selector-attr">[SET2]</span><br></code></pre></td></tr></table></figure><p>选项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs css">-d <span class="hljs-attr">--delete</span>：删除所有属于第一字符集的字符<br>-s <span class="hljs-attr">--squeeze-repeats</span>：把连续重复的字符以单独一个字符表示,即去重<br>-t <span class="hljs-attr">--truncate-set1</span>：将第一个字符集对应字符转化为第二字符集对应的字符<br>-c –C <span class="hljs-attr">--complement</span>：取字符集的补集<br>\NNN character with octal value NNN (<span class="hljs-number">1</span> <span class="hljs-selector-tag">to</span> <span class="hljs-number">3</span> octal digits)<br>\\ backslash<br>\<span class="hljs-selector-tag">a</span> audible BEL<br>\<span class="hljs-selector-tag">b</span> backspace<br>\f <span class="hljs-selector-tag">form</span> feed<br>\n new line<br>\r return<br>\t horizontal tab<br>\v vertical tab<br><span class="hljs-selector-attr">[:alnum:]</span>：字母和数字<br><span class="hljs-selector-attr">[:alpha:]</span>：字母<br><span class="hljs-selector-attr">[:digit:]</span>：数字<br><span class="hljs-selector-attr">[:lower:]</span>：小写字母<br><span class="hljs-selector-attr">[:upper:]</span>：大写字母<br><span class="hljs-selector-attr">[:space:]</span>：空白字符<br><span class="hljs-selector-attr">[:print:]</span>：可打印字符<br><span class="hljs-selector-attr">[:punct:]</span>：标点符号<br><span class="hljs-selector-attr">[:graph:]</span>：图形字符<br><span class="hljs-selector-attr">[:cntrl:]</span>：控制（非打印）字符<br><span class="hljs-selector-attr">[:xdigit:]</span>：十六进制字符<br></code></pre></td></tr></table></figure><p>范例：</p><ul><li>删除字符,删除’abcd’中的’a’</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> abcd | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;a&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658633116721.png" alt="1658633116721"></p><ul><li>将’aaabbbccc‘中字符去重</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> aaabbbccc |<span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27;abc&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658633240146.png" alt="1658633240146"></p><ul><li>输入df将空格用”+”替换</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> | <span class="hljs-built_in">tr</span> -s <span class="hljs-string">&#x27; &#x27;</span> +<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658633697556.png" alt="1658633697556"></p><h3 id="6-5-2多行重定向"><a href="#6-5-2多行重定向" class="headerlink" title="6.5.2多行重定向"></a>6.5.2多行重定向</h3><p>使用 “&lt;&lt;终止词” 命令从键盘把多行重导向给STDIN，直到终止词位置之前的所有文本都发送给<br>STDIN，有时被称为就地文本（here documents）<br>其中终止词可以是任何一个或多个符号，比如：!，@，$，EOF（End Of File），magedu等，其中EOF<br>比较常用</p><p>范例：</p><p><img src="/../image.assets/1658634064057.png" alt="1658634064057"></p><h3 id="6-5-3高级重定向"><a href="#6-5-3高级重定向" class="headerlink" title="6.5.3高级重定向"></a>6.5.3高级重定向</h3><h4 id="6-5-3-1-cmd1-lt-lt-cmd2"><a href="#6-5-3-1-cmd1-lt-lt-cmd2" class="headerlink" title="6.5.3.1 cmd1 &lt; &lt;(cmd2)"></a>6.5.3.1 cmd1 &lt; &lt;(cmd2)</h4><p>名称为 Process substitution ,是由两个部分组成<br>&lt;(cmd2) 表示把cmd2的输出写入一个临时文件, 注意：&lt;和（之间无空格<br>cmd1 &lt; 这是一个标准的stdin重定向<br>把两个合起来，就是把cmd2的输出stdout传递给cmd1作为输入stdin, 中间通过临时文件做传递</p><p><img src="/../image.assets/1658634342387.png" alt="1658634342387"></p><h4 id="6-5-3-2cmd1-lt-lt-lt-’string’"><a href="#6-5-3-2cmd1-lt-lt-lt-’string’" class="headerlink" title="6.5.3.2cmd1&lt;&lt;&lt;’string’"></a>6.5.3.2cmd1&lt;&lt;&lt;’string’</h4><p>含义是 here-string ，表示传给给cmd的stdin的内容从这里开始是一个字符串。<br>范例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bc</span> &lt;&lt;&lt;&#x27;<span class="hljs-number">2</span>+<span class="hljs-number">4</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658634687295.png" alt="1658634687295"></p><h2 id="6-6-tee命令"><a href="#6-6-tee命令" class="headerlink" title="6.6 tee命令"></a>6.6 tee命令</h2><p>tee命令用于读取标准输入的数据，并将其内容输出成文件。</p><p>tee指令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。</p><p>选项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">-<span class="hljs-selector-tag">a</span> 追加<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658643404404.png" alt="1658643404404"></p><h1 id="7-用户和组相关概念"><a href="#7-用户和组相关概念" class="headerlink" title="7.用户和组相关概念"></a>7.用户和组相关概念</h1><h2 id="7-1-用户"><a href="#7-1-用户" class="headerlink" title="7.1 用户"></a>7.1 用户</h2><p>Linux中每个用户是通过 User Id （UID）来唯一标识的</p><ul><li><p>管理员：root, 0</p></li><li><p>普通用户：1-60000 自动分配</p><ul><li>系统用户：1-499 （CentOS 6以前）, 1-999 （CentOS 7以后）<br>对守护进程获取资源进行权限分配</li><li>登录用户：500+ （CentOS6以前）, 1000+（CentOS7以后）<br>给用户进行交互式登录使用</li></ul></li></ul><h2 id="7-2-用户组"><a href="#7-2-用户组" class="headerlink" title="7.2 用户组"></a>7.2 用户组</h2><p>Linux中可以将一个或多个用户加入用户组中，用户组是通过Group ID（GID） 来唯一标识的。</p><ul><li>管理员组：root, 0</li><li>普通组：<ul><li>系统组：1-499（CentOS 6以前）, 1-999（CentOS7以后）, 对守护进程获取资源进行权限分配</li><li>普通组：500+（CentOS 6以前）, 1000+（CentOS7以后）, 给用户使用</li></ul></li></ul><h2 id="7-3-用户和组的关系"><a href="#7-3-用户和组的关系" class="headerlink" title="7.3 用户和组的关系"></a>7.3 用户和组的关系</h2><ul><li>用户的主要组(primary group)：用户必须属于一个且只有一个主组，默认创建用户时会自动创建和用户名同名的组，做为用户的主要组，由于此组中只有一个用户，又称为私有组</li><li>用户的附加组(supplementary group)： 一个用户可以属于零个或多个辅助组，附属组</li></ul><p>范例：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@rocky8 home]# id yuankun<br><span class="hljs-attribute">uid</span>=1000(yuankun) <span class="hljs-attribute">gid</span>=1000(yuankun) <span class="hljs-attribute">groups</span>=1000(yuankun)<br></code></pre></td></tr></table></figure><h2 id="7-4用户和组的配置文件"><a href="#7-4用户和组的配置文件" class="headerlink" title="7.4用户和组的配置文件"></a>7.4用户和组的配置文件</h2><h3 id="7-4-1用户和组的主要配置文件"><a href="#7-4-1用户和组的主要配置文件" class="headerlink" title="7.4.1用户和组的主要配置文件"></a>7.4.1用户和组的主要配置文件</h3><ul><li>&#x2F;etc&#x2F;passwd：用户及其属性信息(名称、UID、主组ID等）</li><li>&#x2F;etc&#x2F;shadow：用户密码及其相关属性</li><li>&#x2F;etc&#x2F;group：组及其属性信息</li><li>&#x2F;etc&#x2F;gshadow：组密码及其相关属性</li></ul><h3 id="7-4-2-passwd文件格式"><a href="#7-4-2-passwd文件格式" class="headerlink" title="7.4.2 passwd文件格式"></a>7.4.2 passwd文件格式</h3><ul><li>login name：登录用名（yuankun）</li><li>passwd：密码 (x)</li><li>UID：用户身份编号 (1000)</li><li>GID：登录默认所在组编号 (1000)</li><li>GECOS：用户全名或注释</li><li>home directory：用户主目录 (&#x2F;home&#x2F;wang)</li><li>shell：用户默认使用shell (&#x2F;bin&#x2F;bash)</li></ul><p><img src="/../image.assets/1658659141980.png" alt="1658659141980"></p><h3 id="7-4-3shadow文件格式"><a href="#7-4-3shadow文件格式" class="headerlink" title="7.4.3shadow文件格式"></a>7.4.3shadow文件格式</h3><ul><li>登录用名</li><li>用户密码:一般用sha512加密</li><li>从1970年1月1日起到密码最近一次被更改的时间</li><li>密码再过几天可以被变更（0表示随时可被变更）</li><li>密码再过几天必须被变更（99999表示永不过期）</li><li>密码过期前几天系统提醒用户（默认为一周）</li><li>密码过期几天后帐号会被锁定</li><li>从1970年1月1日算起，多少天后帐号失效<br><img src="/../image.assets/1658662334418.png" alt="1658662334418"></li></ul><h3 id="7-4-4group文件格式"><a href="#7-4-4group文件格式" class="headerlink" title="7.4.4group文件格式"></a>7.4.4group文件格式</h3><ul><li>群组名称：就是群组名称</li><li>群组密码：通常不需要设定，密码是被记录在 &#x2F;etc&#x2F;gshadow</li><li>GID：就是群组的 ID</li><li>以当前组为附加组的用户列表(分隔符为逗号)</li></ul><p><img src="/../image.assets/1658662552564.png" alt="1658662552564"></p><h3 id="7-4-5gshadow文件格式"><a href="#7-4-5gshadow文件格式" class="headerlink" title="7.4.5gshadow文件格式"></a>7.4.5gshadow文件格式</h3><ul><li>群组名称：就是群的名称</li><li>群组密码：</li><li>组管理员列表：组管理员的列表，更改组密码和成员</li><li>以当前组为附加组的用户列表：多个用户间用逗号分隔</li></ul><p><img src="/../image.assets/1658662641679.png" alt="1658662641679"></p><h2 id="7-5-用户和组管理命令"><a href="#7-5-用户和组管理命令" class="headerlink" title="7.5 用户和组管理命令"></a>7.5 用户和组管理命令</h2><ul><li>用户管理命令<ul><li>useradd(添加用户)</li><li>usermod(修改用户)</li><li>userdel(删除用户)</li></ul></li><li>组账号维护命令<ul><li>groupadd</li><li>groupmod</li><li>groupdel</li></ul></li></ul><p>面试题：添加新用户后家目录下的文件来源什么地方？</p><p>来源于&#x2F;etc&#x2F;skel,进入&#x2F;etc&#x2F;skel下查看文件和进入test用户的家目录下查看文件是一致的</p><p><img src="/../image.assets/1658665374181.png" alt="1658665374181"></p><p><img src="/../image.assets/1658665436871.png" alt="1658665436871"></p><h3 id="7-5-1用户创建"><a href="#7-5-1用户创建" class="headerlink" title="7.5.1用户创建"></a>7.5.1用户创建</h3><p>useradd命令可以创建新的linux用户</p><p>格式：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">useradd [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">login</span><br></code></pre></td></tr></table></figure><p>常见的选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u UID</span><br><span class="hljs-deletion">-o 配合-u 选项，不检查UID的唯一性</span><br><span class="hljs-deletion">-g GID 指明用户所属基本组，可为组名，也可以GID</span><br><span class="hljs-deletion">-c &quot;COMMENT“ 用户的注释信息</span><br><span class="hljs-deletion">-d HOME_DIR 以指定的路径(不存在)为家目录</span><br><span class="hljs-deletion">-s SHELL 指明用户的默认shell程序，可用列表在/etc/shells文件中</span><br><span class="hljs-deletion">-G GROUP1[,GROUP2,...] 为用户指明附加组，组须事先存在</span><br><span class="hljs-deletion">-N 不创建私用组做主组，使用users组做主组</span><br><span class="hljs-deletion">-r 创建系统用户 CentOS 6之前: ID&lt;500，CentOS7 以后: ID&lt;1000</span><br><span class="hljs-deletion">-m 创建家目录，用于系统用户</span><br><span class="hljs-deletion">-M 不创建家目录，用于非系统用户</span><br><span class="hljs-deletion">-p 指定加密的密码</span><br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">[root@rocky8 home]<span class="hljs-meta"># groupadd apache</span><br>[root@rocky8 home]<span class="hljs-meta"># useradd -r -u 48 -g apache -s /sbin/nologin -d /var/www -c <span class="hljs-string">&quot;Apache&quot;</span> apache</span><br></code></pre></td></tr></table></figure><p>useradd命令默认值设置由&#x2F;etc&#x2F;default&#x2F;useradd定义</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@centos8 ~]#cat <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/useradd<br># useradd defaults <span class="hljs-keyword">file</span><br><span class="hljs-keyword">GROUP</span>=<span class="hljs-number">100</span><br>HOME=/home<br>INACTIVE=-<span class="hljs-number">1</span> #对应<span class="hljs-regexp">/etc/</span>shadow文件第<span class="hljs-number">7</span>列，即用户密码过期后的帐号锁定的宽限期,-<span class="hljs-number">1</span>表示不锁定<br>EXPIRE= #对应<span class="hljs-regexp">/etc/</span>shadow文件第<span class="hljs-number">8</span>列，即用户帐号的有效期<br>SHELL=<span class="hljs-regexp">/bin/</span>bash<br>SKEL=<span class="hljs-regexp">/etc/</span>skel #用于生成新建用户家目录的模版文件<br>CREATE_MAIL_SPOOL=yes<br></code></pre></td></tr></table></figure><h3 id="7-5-2用户属性修改"><a href="#7-5-2用户属性修改" class="headerlink" title="7.5.2用户属性修改"></a>7.5.2用户属性修改</h3><p>usermod命令可以修改用户属性</p><p>格式：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">usermod [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">login</span><br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u UID: 新UID</span><br><span class="hljs-deletion">-g GID: 新主组</span><br><span class="hljs-deletion">-G GROUP1[,GROUP2,...[,GROUPN]]]：新附加组，原来的附加组将会被覆盖；若保留原有，则要同时使</span><br>用-a选项<br><span class="hljs-deletion">-s SHELL：新的默认SHELL</span><br><span class="hljs-deletion">-c &#x27;COMMENT&#x27;：新的注释信息</span><br><span class="hljs-deletion">-d HOME: 新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使用-m选项</span><br><span class="hljs-deletion">-l login_name: 新的名字</span><br><span class="hljs-deletion">-L: lock指定用户,在/etc/shadow 密码栏的增加 !</span><br><span class="hljs-deletion">-U: unlock指定用户,将 /etc/shadow 密码栏的 ! 拿掉</span><br><span class="hljs-deletion">-e YYYY-MM-DD: 指明用户账号过期日期</span><br><span class="hljs-deletion">-f INACTIVE: 设定非活动期限，即宽限期</span><br></code></pre></td></tr></table></figure><p>范例：创建test用户，使用id username查看用户的uid,然后修改其uid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@rocky8 home]<span class="hljs-comment"># useradd test   #添加tes用户</span><br>[root@rocky8 home]<span class="hljs-comment"># id test#查看用户信息</span><br>uid=1001(<span class="hljs-built_in">test</span>) gid=1001(<span class="hljs-built_in">test</span>) <span class="hljs-built_in">groups</span>=1001(<span class="hljs-built_in">test</span>)<br>[root@rocky8 home]<span class="hljs-comment"># usermod -u 1002 test   # 将uid修改为1002</span><br>[root@rocky8 home]<span class="hljs-comment"># id test#查看用户信息修改成功</span><br>uid=1002(<span class="hljs-built_in">test</span>) gid=1001(<span class="hljs-built_in">test</span>) <span class="hljs-built_in">groups</span>=1001(<span class="hljs-built_in">test</span>)<br></code></pre></td></tr></table></figure><h3 id="7-5-4删除用户"><a href="#7-5-4删除用户" class="headerlink" title="7.5.4删除用户"></a>7.5.4删除用户</h3><p>userdel可以删除用户</p><p>格式：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">userdel [<span class="hljs-keyword">options</span>] <span class="hljs-keyword">login</span><br></code></pre></td></tr></table></figure><p>常见的选项：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">-f, <span class="hljs-comment">--force 强制</span><br>-r, <span class="hljs-comment">--remove 删除用户家目录和邮箱</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">userdel -f <span class="hljs-built_in">test</span>  <span class="hljs-comment">#强制删除</span><br>userdel -rf <span class="hljs-built_in">test</span> <span class="hljs-comment"># 删除家目录和邮箱</span><br></code></pre></td></tr></table></figure><h3 id="7-5-5查看用户相关ID"><a href="#7-5-5查看用户相关ID" class="headerlink" title="7.5.5查看用户相关ID"></a>7.5.5查看用户相关ID</h3><p>id命令可以查看用户的UID、GID等信息</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">id <span class="hljs-selector-attr">[options]</span> <span class="hljs-selector-attr">[username]</span><br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u: 显示UID</span><br><span class="hljs-deletion">-g: 显示GID</span><br><span class="hljs-deletion">-G: 显示用户所属的组的ID</span><br><span class="hljs-deletion">-n: 显示名称，需配合ugG使用</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id test</span><br>uid=<span class="hljs-number">1002</span>(test) gid=<span class="hljs-number">1001</span>(test) groups=<span class="hljs-number">1001</span>(test)<br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id -u test</span><br><span class="hljs-number">1002</span><br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id -g test</span><br><span class="hljs-number">1001</span><br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># id -G test</span><br><span class="hljs-number">1001</span><br>[root<span class="hljs-symbol">@rocky8</span> home]<span class="hljs-meta"># </span><br></code></pre></td></tr></table></figure><h3 id="7-5-6查看linux所有用户"><a href="#7-5-6查看linux所有用户" class="headerlink" title="7.5.6查看linux所有用户"></a>7.5.6查看linux所有用户</h3><ul><li>查看&#x2F;etc&#x2F;passwd</li></ul><p><img src="/../image.assets/1658664876880.png" alt="1658664876880"></p><ul><li>getent passwd</li></ul><p><img src="/../image.assets/1658664946447.png" alt="1658664946447"></p><h3 id="7-5-7切换用户"><a href="#7-5-7切换用户" class="headerlink" title="7.5.7切换用户"></a>7.5.7切换用户</h3><p>su: 即 switch user，命令可以切换用户身份，并且以指定用户的身份执行命令<br>格式：</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">su <span class="hljs-comment">[options...]</span> <span class="hljs-comment">[-]</span> <span class="hljs-comment">[user <span class="hljs-comment">[args...]</span>]</span><br></code></pre></td></tr></table></figure><p>常见的选项</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">-<span class="hljs-keyword">l</span> --login su -<span class="hljs-keyword">l</span> UserName 相当于 su - UserName<br>-<span class="hljs-keyword">c</span>, --<span class="hljs-keyword">command</span> <span class="hljs-symbol">&lt;command&gt;</span> pass <span class="hljs-keyword">a</span> single <span class="hljs-keyword">command</span> <span class="hljs-keyword">to</span> the <span class="hljs-keyword">shell</span> with -<span class="hljs-keyword">c</span><br></code></pre></td></tr></table></figure><p>切换用户的方式：</p><ul><li>su UserName：非登录式切换，即不会读取目标用户的配置文件，不改变当前工作目录，即不完全切换</li><li>su - UserName：登录式切换，会读取目标用户的配置文件，切换至自已的家目录，即完全切换<br>说明：root su至其他用户无须密码；非root用户切换时需要密码<br>注意：su 切换新用户后，使用 exit 退回至旧的用户身份，而不要再用 su 切换至旧用户，否则会生成很多的bash子进程，环境可能会混乱。</li></ul><p>换个身份执行命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">su</span> - username -c <span class="hljs-string">&#x27;command&#x27;</span><br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crystal">[root<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-comment"># su - test -c &#x27;touch test.log&#x27;</span><br>[root<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-comment"># su test</span><br>[test<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-variable">$ </span>ll<br>total <span class="hljs-number">0</span><br>[test<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-variable">$ </span>ls -a<br>.  ..  .bash_logout  .bash_profile  .bashrc<br>[test<span class="hljs-variable">@rocky8</span> skel]<span class="hljs-variable">$ </span>cd /home/<br>[test<span class="hljs-variable">@rocky8</span> home]<span class="hljs-variable">$ </span>ll<br>total <span class="hljs-number">0</span><br>drwx------. <span class="hljs-number">2</span> test    test     <span class="hljs-number">99</span> Jul <span class="hljs-number">24</span> <span class="hljs-number">11</span>:<span class="hljs-number">38</span> test<br>drwx------. <span class="hljs-number">2</span> test1   test1    <span class="hljs-number">78</span> Jul <span class="hljs-number">24</span> <span class="hljs-number">11</span>:<span class="hljs-number">24</span> test1<br>drwx------. <span class="hljs-number">2</span> yuankun yuankun <span class="hljs-number">114</span> Jul <span class="hljs-number">23</span> <span class="hljs-number">0</span>8:<span class="hljs-number">24</span> yuankun<br>[test<span class="hljs-variable">@rocky8</span> home]<span class="hljs-variable">$ </span>cd test<br>[test<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-variable">$ </span>ll<br>total <span class="hljs-number">0</span><br>-rw-rw-r--. <span class="hljs-number">1</span> test test <span class="hljs-number">0</span> Jul <span class="hljs-number">24</span> <span class="hljs-number">11</span>:<span class="hljs-number">38</span> test.log<br>[test<span class="hljs-variable">@rocky8</span> ~]<span class="hljs-variable">$ </span><br><br></code></pre></td></tr></table></figure><h3 id="7-5-8设置密码"><a href="#7-5-8设置密码" class="headerlink" title="7.5.8设置密码"></a>7.5.8设置密码</h3><p>passwd 可以修改用户密码</p><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">passwd <span class="hljs-selector-attr">[options]</span> username<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-d：删除指定用户密码</span><br><span class="hljs-deletion">-l：锁定指定用户</span><br><span class="hljs-deletion">-u：解锁指定用户</span><br><span class="hljs-deletion">-e：强制用户下次登录修改密码</span><br><span class="hljs-deletion">-f：强制操作</span><br><span class="hljs-deletion">-n mindays：指定最短使用期限</span><br><span class="hljs-deletion">-x maxdays：最大使用期限</span><br><span class="hljs-deletion">-w warndays：提前多少天开始警告</span><br><span class="hljs-deletion">-i inactivedays：非活动期限</span><br><span class="hljs-deletion">--stdin：从标准输入接收用户密码,Ubuntu无此选项</span><br></code></pre></td></tr></table></figure><p>范例：非交互式修改用户密码</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment">#此方式更通用，适用于各种Linux版本，如:ubuntu</span><br>root<span class="hljs-variable">@ununtu2004</span><span class="hljs-symbol">:/home</span><span class="hljs-comment"># echo -e &#x27;123456\n123456&#x27; | passwd test</span><br><span class="hljs-title class_">New</span> <span class="hljs-symbol">password:</span> <span class="hljs-title class_">Retype</span> new <span class="hljs-symbol">password:</span> <span class="hljs-symbol">passwd:</span> password updated successfully<br>root<span class="hljs-variable">@ununtu2004</span><span class="hljs-symbol">:/home</span><span class="hljs-comment"># </span><br><br><span class="hljs-comment">#适用于红帽系列的Linux版本</span><br>[root<span class="hljs-variable">@rocky8</span> home]<span class="hljs-comment"># echo -e &#x27;123456&#x27;| passwd --stdin test</span><br><span class="hljs-title class_">Changing</span> password <span class="hljs-keyword">for</span> user test.<br><span class="hljs-symbol">passwd:</span> all authentication tokens updated successfully.<br>[root<span class="hljs-variable">@rocky8</span> home]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="7-6文件权限管理"><a href="#7-6文件权限管理" class="headerlink" title="7.6文件权限管理"></a>7.6文件权限管理</h2><h3 id="7-6-1文件所有者和属组属性操作"><a href="#7-6-1文件所有者和属组属性操作" class="headerlink" title="7.6.1文件所有者和属组属性操作"></a>7.6.1文件所有者和属组属性操作</h3><h4 id="7-6-1-1设置文件的所有者chown"><a href="#7-6-1-1设置文件的所有者chown" class="headerlink" title="7.6.1.1设置文件的所有者chown"></a>7.6.1.1设置文件的所有者chown</h4><p>chown 命令可以修改文件的属主，也可以修改文件属组<br>格式：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs prolog">chown [<span class="hljs-symbol">OPTION</span>]... [<span class="hljs-symbol">OWNER</span>][:[<span class="hljs-symbol">GROUP</span>]] <span class="hljs-symbol">FILE</span>...<br>chown [<span class="hljs-symbol">OPTION</span>]... --reference=<span class="hljs-symbol">RFILE</span> <span class="hljs-symbol">FILE</span>...<br></code></pre></td></tr></table></figure><p>用法说明：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif">OWNER <span class="hljs-comment">#只修改所有者</span><br><span class="hljs-attribute">OWNER</span>:GROUP <span class="hljs-comment">#同时修改所有者和属组</span><br>:GROUP <span class="hljs-comment">#只修改属组，冒号也可用 . 替换</span><br><span class="hljs-literal">-</span>-reference=RFILE <span class="hljs-comment">#参考指定的的属性，来修改</span><br><span class="hljs-literal">-</span>R<span class="hljs-comment">#递归，此选项慎用，非常危险！</span><br></code></pre></td></tr></table></figure><p>范例：</p><ul><li>修改所有者</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs linux">[root@rocky8 home]# touch data.log<br>[root@rocky8 home]# ll# data.log所有者为root<br>total 0<br>-rw-r--r--. 1 root    root      0 Jul 24 13:16 data.log<br>drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo<br>drwx------. 2 test    test     99 Jul 24 11:38 test<br>drwx------. 2 test1   test1    78 Jul 24 11:24 test1<br>drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun<br>[root@rocky8 home]# chown yuankun data.log # 修改所有者为yuankun<br>[root@rocky8 home]# ll<br>total 0<br>-rw-r--r--. 1 yuankun root      0 Jul 24 13:16 data.log<br>drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo<br>drwx------. 2 test    test     99 Jul 24 11:38 test<br>drwx------. 2 test1   test1    78 Jul 24 11:24 test1<br>drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun<br>[root@rocky8 home]# <br></code></pre></td></tr></table></figure><ul><li>修改所属组</li></ul><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">chown :bin <span class="hljs-keyword">data</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658672497952.png" alt="1658672497952"></p><ul><li>同时修改所有者和所属组</li></ul><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@rocky8 home]<span class="hljs-comment"># touch test.log</span><br>[root@rocky8 home]<span class="hljs-comment"># </span><br>[root@rocky8 home]<span class="hljs-comment"># </span><br>[root@rocky8 home]<span class="hljs-comment"># chown yuankun:bin test.log   # 冒号用.替换也可以</span><br>[root@rocky8 home]<span class="hljs-comment"># ll</span><br>total 0<br>-rw-r--r--.<span class="hljs-number"> 1 </span>yuankun bin      <span class="hljs-number"> 0 </span>Jul<span class="hljs-number"> 24 </span>13:16 data.log<br>drwx------.<span class="hljs-number"> 2 </span>gentoo  gentoo  <span class="hljs-number"> 62 </span>Jul<span class="hljs-number"> 24 </span>12:39 gentoo<br>drwx------.<span class="hljs-number"> 2 </span>test    test    <span class="hljs-number"> 99 </span>Jul<span class="hljs-number"> 24 </span>11:38 test<br>drwx------.<span class="hljs-number"> 2 </span>test1   test1   <span class="hljs-number"> 78 </span>Jul<span class="hljs-number"> 24 </span>11:24 test1<br>-rw-r--r--.<span class="hljs-number"> 1 </span>yuankun bin      <span class="hljs-number"> 0 </span>Jul<span class="hljs-number"> 24 </span>13:22 test.log<br>drwx------.<span class="hljs-number"> 2 </span>yuankun yuankun<span class="hljs-number"> 114 </span>Jul<span class="hljs-number"> 23 </span>08:24 yuankun<br>[root@rocky8 home]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658672628070.png" alt="1658672628070"></p><ul><li>修改为参考的所有者户所属组</li></ul><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">chown --reference=root.<span class="hljs-built_in">log</span> <span class="hljs-keyword">data</span>.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658672912639.png" alt="1658672912639"></p><ul><li>递归修改</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R yuankun:yuankun ./data/mysql/<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658673109132.png" alt="1658673109132"></p><h4 id="7-6-1-2设置文件的属组信息chgrp"><a href="#7-6-1-2设置文件的属组信息chgrp" class="headerlink" title="7.6.1.2设置文件的属组信息chgrp"></a>7.6.1.2设置文件的属组信息chgrp</h4><p>chgrp 命令可以只修改文件的属组<br>格式:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">chgrp [OPTION]<span class="hljs-string">...</span> GROUP FILE.<span class="hljs-string">..</span><br>chgrp [OPTION]<span class="hljs-string">...</span> <span class="hljs-params">--reference=RFILE</span> FILE.<span class="hljs-string">..</span><br></code></pre></td></tr></table></figure><p>-R 递归</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chgrp</span> yuankun data.log<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658673362886.png" alt="1658673362886"></p><h3 id="7-6-2文件权限"><a href="#7-6-2文件权限" class="headerlink" title="7.6.2文件权限"></a>7.6.2文件权限</h3><p>每个文件针对每类访问者都定义了三种权限</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">r</span> Readable <span class="hljs-number">4</span><br><span class="hljs-attribute">w</span> Writable <span class="hljs-number">2</span><br><span class="hljs-attribute">x</span> eXcutable <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>对文件的权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">r</span> 可使用文件查看类工具，比如：<span class="hljs-built_in">cat</span>，可以获取其内容<br>w 可修改其内容,文件的是否被删除和文件的权限无关<br>x 可以把此文件提请内核启动为一个进程，即可以执行（运行）此文件（此文件的内容必须是可执行）<br>文件权限常见组合<br><span class="hljs-literal">---</span> <span class="hljs-number">0</span><br><span class="hljs-built_in">r</span> <span class="hljs-number">4</span><br><span class="hljs-built_in">r</span><span class="hljs-literal">-x</span> <span class="hljs-number">5</span><br>rw <span class="hljs-number">6</span><br>rwx <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>对目录的权限</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs llvm">r 可以使用ls查看此目录中文件名列表<span class="hljs-punctuation">,</span>但无法看到文件的属性meta信息<span class="hljs-punctuation">,</span>包括inode号<span class="hljs-punctuation">,</span>不能查看文件的<br>内容<br>w 可在此目录中创建文件，也可删除此目录中的文件，而和此被删除的文件的权限无关<br><span class="hljs-keyword">x</span> 可以cd进入此目录，可以使用ls -l file或stat file 查看此目录中指定文件的元数据，当预先知<br>道文件名称时<span class="hljs-punctuation">,</span>也可以查看文件的内容<span class="hljs-punctuation">,</span>属于目录的可访问的最小权限<br>X 分配给目录或有部分<span class="hljs-keyword">x</span>权限的文件的<span class="hljs-keyword">x</span>权限，对无任意<span class="hljs-keyword">x</span>权限的文件则不会分配<span class="hljs-keyword">x</span>权限<br>目录权限常见组合<br>- 不能访问目录<br>r-<span class="hljs-keyword">x</span> 只读目录<br>rwx 可读也可写目录<br></code></pre></td></tr></table></figure><p>面试题：Linux中的目录和文件的权限区别？分别说明读，写和执行权限的区别?</p><p>修改文件权限chmod</p><p>面试题：执行 cp &#x2F;etc&#x2F;issue &#x2F;data&#x2F;dir&#x2F; 所需要的最小权限？</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux从入门到放弃</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux基础和常用命令</title>
    <link href="/2022/07/18/linux%E5%9F%BA%E7%A1%80%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/07/18/linux%E5%9F%BA%E7%A1%80%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="1-冯诺依曼体系"><a href="#1-冯诺依曼体系" class="headerlink" title="1.冯诺依曼体系"></a>1.冯诺依曼体系</h1><p>1946年美籍匈牙利数学家冯·诺依曼于提出存储程序原理，把程序本身当作数据来对待，程序和该程序处<br>理的数据用同样的方式储存。 冯·诺依曼体系的要点是：</p><ul><li><p>数字计算机的数制采用二进制，bit 位, byte 字节 1 byte &#x3D;8 bit</p></li><li><p>计算机应该按照程序顺序执行</p></li><li><p>计算机硬件由运算器、控制器、存储器、输入设备和输出设备五大部分组成</p></li></ul><p><strong>计算机的硬件五个组件</strong></p><ul><li><p>控制器: 指挥系统</p></li><li><p>运算器: 数学和逻辑运算</p></li><li><p>存储器: 存储信息</p></li><li><p>输入设备: 接收外部信息</p></li><li><p>输出设备: 输出计算机内部信息到外部设备</p></li></ul><h1 id="2-服务器按外观类型分类"><a href="#2-服务器按外观类型分类" class="headerlink" title="2.服务器按外观类型分类"></a>2.服务器按外观类型分类</h1><p><strong>PC服务器常见的三种外观</strong>  </p><ul><li><p>塔式服务器</p></li><li><p>刀片式服务器</p></li><li><p>机架式服务器</p></li></ul><h1 id="3-操作系统和Linux安装"><a href="#3-操作系统和Linux安装" class="headerlink" title="3.操作系统和Linux安装"></a>3.操作系统和Linux安装</h1><p>**操作系统的作用  **</p><p><img src="/../image.assets/1658235191431.png" alt="1658235191431"></p><p>**主要作用 **</p><ul><li><p>硬件驱动</p></li><li><p>进程管理</p></li><li><p>内存管理</p></li><li><p>网络管理</p></li><li><p>安全管理</p></li><li><p>文件管理</p></li></ul><p>**unix哲学思想 ** </p><ul><li>一切都是一个文件(包括硬件)</li><li>小型，单一用途的程序  </li><li>链接程序，共同完成复杂的任务(shell脚本)</li><li>避免令人困惑的用户界面  </li><li>配置数据存储在文本中</li></ul><h1 id="4-常见面试题"><a href="#4-常见面试题" class="headerlink" title="4.常见面试题"></a>4.常见面试题</h1><p><img src="/../image.assets/1658241769096.png" alt="1658241769096"></p><h1 id="5-基础使用命令"><a href="#5-基础使用命令" class="headerlink" title="5 .基础使用命令"></a>5 .基础使用命令</h1><h2 id="5-1-查看网络ip地址"><a href="#5-1-查看网络ip地址" class="headerlink" title="5.1 查看网络ip地址"></a>5.1 查看网络ip地址</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ip <span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658410435937.png" alt="Rocky8.6"></p><p><img src="/../image.assets/1658410871193.png" alt="ubuntu2004"></p><h2 id="5-2-重启"><a href="#5-2-重启" class="headerlink" title="5.2 重启"></a>5.2 重启</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">reboot</span><br></code></pre></td></tr></table></figure><h2 id="5-3-ubuntu-roo账户进行远程登录修改方法"><a href="#5-3-ubuntu-roo账户进行远程登录修改方法" class="headerlink" title="5.3 ubuntu roo账户进行远程登录修改方法"></a>5.3 ubuntu roo账户进行远程登录修改方法</h2><ul><li>切换到root账户</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo -<span class="hljs-selector-tag">i</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658411472195.png" alt="1658411472195"></p><ul><li>设置密码</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">passwd</span> 用户名  <br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658469211139.png" alt="1658469211139"></p><ul><li>修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config  ,PermitRootlogin yes</li></ul><p> <img src="/../image.assets/1658493609190.png" alt="1658493609190"></p><ul><li>重启sshd</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart sshd</span><br></code></pre></td></tr></table></figure><h2 id="5-4-查看当前所在终端"><a href="#5-4-查看当前所在终端" class="headerlink" title="5.4 查看当前所在终端"></a>5.4 查看当前所在终端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tty</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658494268286.png" alt="1658494268286"></p><h2 id="5-5-查看当前账户"><a href="#5-5-查看当前账户" class="headerlink" title="5.5 查看当前账户"></a>5.5 查看当前账户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">whoami</span><br><br><span class="hljs-built_in">who</span> am i  <br><br><span class="hljs-built_in">who</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658494603337.png" alt="1658494603337"></p><p> <img src="/../image.assets/1658494650023.png" alt="1658494650023"></p><p> <img src="/../image.assets/1658495293952.png#pic_left" alt="1658495293952"></p><h2 id="5-6-查看当前时间"><a href="#5-6-查看当前时间" class="headerlink" title="5.6 查看当前时间"></a>5.6 查看当前时间</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">date</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658494753358.png" alt="1658494753358"></p><h2 id="5-7-修改时区-修改为北京时间"><a href="#5-7-修改时区-修改为北京时间" class="headerlink" title="5.7 修改时区 ,修改为北京时间"></a>5.7 修改时区 ,修改为北京时间</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-timezone</span> <span class="hljs-string">Asia</span>/<span class="hljs-string">Shanghai</span><br><span class="hljs-string">date</span><span class="hljs-comment"># 查看当前时间</span><br></code></pre></td></tr></table></figure><p> <img src="/../image.assets/1658495063470.png#pic_left" alt="1658495063470"></p><h2 id="5-8-查看当前系统使用的shell"><a href="#5-8-查看当前系统使用的shell" class="headerlink" title="5.8 查看当前系统使用的shell"></a>5.8 查看当前系统使用的shell</h2><img src= '../image.assets/1658495913197.png' style='float:left'><h2 id="5-9-查看当前主机名"><a href="#5-9-查看当前主机名" class="headerlink" title="5.9 查看当前主机名"></a>5.9 查看当前主机名</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hostname</span><br></code></pre></td></tr></table></figure><p>   <img src="/../image.assets/1658496336793.png" alt="1658496336793"></p><h2 id="5-10修改当前主机名称，永久修改"><a href="#5-10修改当前主机名称，永久修改" class="headerlink" title="5.10修改当前主机名称，永久修改"></a>5.10修改当前主机名称，永久修改</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> 名称<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 临时修改，重启后变为修改前的主机名称</span><br><span class="hljs-attribute">hostname</span> 主机名<br></code></pre></td></tr></table></figure><h2 id="5-11-查看所有内部命令"><a href="#5-11-查看所有内部命令" class="headerlink" title="5.11 查看所有内部命令"></a>5.11 查看所有内部命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658499412357.png" alt="1658499412357"></p><h2 id="5-12-查看命令为内部还是外部命令"><a href="#5-12-查看命令为内部还是外部命令" class="headerlink" title="5.12 查看命令为内部还是外部命令"></a>5.12 查看命令为内部还是外部命令</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-class"><span class="hljs-keyword">type</span> 命令名称</span><br><span class="hljs-meta"># 示例</span><br><span class="hljs-class"><span class="hljs-keyword">type</span> cd</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658499521622.png" alt="1658499521622"></p><h2 id="5-13-查看系统中所有别名"><a href="#5-13-查看系统中所有别名" class="headerlink" title="5.13 查看系统中所有别名"></a>5.13 查看系统中所有别名</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">alias</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658499933136.png" alt="1658499933136"></p><h2 id="5-14-设置别名"><a href="#5-14-设置别名" class="headerlink" title="5.14 设置别名"></a>5.14 设置别名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> 别名名称 = <span class="hljs-string">&#x27;被设置别名的行为&#x27;</span><br><span class="hljs-comment"># 示例</span><br><span class="hljs-built_in">alias</span> cdnt = <span class="hljs-string">&#x27;cd /root&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="5-15-删除别名"><a href="#5-15-删除别名" class="headerlink" title="5.15 删除别名"></a>5.15 删除别名</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">unalisa</span> 别名名称<br></code></pre></td></tr></table></figure><ul><li><p>命令种类</p><ul><li>alias(优先级最高)</li><li>内部命令(优先级低于alias)</li><li>外部命令(优先级最低)</li></ul></li><li><p>whatis</p></li></ul><p>whatis使用数据库来显示命令的简短描述  </p><p>此工具在系统刚安装后不可立即使用，需要制作数据库后才可使用  </p><p>执行下面的命令生成数据库  </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># centos7版本以后</span><br><span class="hljs-attribute">mandb</span><br><span class="hljs-comment"># centos6版本之前</span><br>makewhatis<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658501366408.png" alt="1658501366408"></p><h2 id="5-16-内部命令查看帮助"><a href="#5-16-内部命令查看帮助" class="headerlink" title="5.16 内部命令查看帮助"></a>5.16 内部命令查看帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用type命令查看是否为内部命令，不是内部命令不能使用该命令</span><br><span class="hljs-built_in">help</span> <span class="hljs-built_in">history</span><br></code></pre></td></tr></table></figure><p>范例  </p><p><img src="/../image.assets/1658501682712.png" alt="1658501682712"></p><h2 id="5-17-外部命令使用帮助"><a href="#5-17-外部命令使用帮助" class="headerlink" title="5.17 外部命令使用帮助"></a>5.17 外部命令使用帮助</h2><p>COMMAND –help 或者 COMMAND -h  </p><p>范例  </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">date</span> <span class="hljs-comment">--help</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658502390672.png" alt="1658502390672"></p><h2 id="5-18-man"><a href="#5-18-man" class="headerlink" title="5.18 man"></a>5.18 man</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">man <span class="hljs-built_in">date</span><br>man <span class="hljs-number">1</span> <span class="hljs-built_in">date</span><br></code></pre></td></tr></table></figure><h1 id="6-查看硬件信息"><a href="#6-查看硬件信息" class="headerlink" title="6.查看硬件信息"></a>6.查看硬件信息</h1><h3 id="6-1查看CPU信息"><a href="#6-1查看CPU信息" class="headerlink" title="6.1查看CPU信息"></a>6.1查看CPU信息</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lscpu</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658503779919.png" alt="1658503779919"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 该命令也可以</span><br>cat <span class="hljs-regexp">/proc/</span>cpuinfo<br></code></pre></td></tr></table></figure><h3 id="6-2-查看内存信息"><a href="#6-2-查看内存信息" class="headerlink" title="6.2 查看内存信息"></a>6.2 查看内存信息</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">free -h<br><span class="hljs-comment"># 或者</span><br>cat <span class="hljs-regexp">/proc/m</span>eminfo<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504083814.png" alt="1658504083814"></p><h3 id="6-3-查看硬盘信息和分区情况"><a href="#6-3-查看硬盘信息和分区情况" class="headerlink" title="6.3 查看硬盘信息和分区情况"></a>6.3 查看硬盘信息和分区情况</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lsblk</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504188384.png" alt="1658504188384"></p><h1 id="7-查看系统信息"><a href="#7-查看系统信息" class="headerlink" title="7.查看系统信息"></a>7.查看系统信息</h1><h3 id="7-1-查看系统架构"><a href="#7-1-查看系统架构" class="headerlink" title="7.1 查看系统架构"></a>7.1 查看系统架构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504368189.png" alt="1658504368189"></p><h3 id="7-2-查看内核版本"><a href="#7-2-查看内核版本" class="headerlink" title="7.2 查看内核版本"></a>7.2 查看内核版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658504429024.png" alt="1658504429024"></p><h3 id="7-3-查看操作系统发行版本"><a href="#7-3-查看操作系统发行版本" class="headerlink" title="7.3 查看操作系统发行版本"></a>7.3 查看操作系统发行版本</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>os-releases<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658543618611.png" alt="1658543618611"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/i</span>ssue<br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658543863373.png" alt="1658543863373"></p><h3 id="7-4-修改登录后显示的内容"><a href="#7-4-修改登录后显示的内容" class="headerlink" title="7.4 修改登录后显示的内容"></a>7.4 修改登录后显示的内容</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># 修改<span class="hljs-regexp">/etc/m</span>otd文件内容<br>vi <span class="hljs-regexp">/etc/m</span>otd<br></code></pre></td></tr></table></figure><h3 id="7-5-查看硬件时间"><a href="#7-5-查看硬件时间" class="headerlink" title="7.5 查看硬件时间"></a>7.5 查看硬件时间</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">clock</span><br></code></pre></td></tr></table></figure><p><img src="/../image.assets/1658544469113.png" alt="1658544469113"></p><h3 id="7-6重启和关机"><a href="#7-6重启和关机" class="headerlink" title="7.6重启和关机"></a>7.6重启和关机</h3><h6 id="7-6-1重启"><a href="#7-6-1重启" class="headerlink" title="7.6.1重启"></a>7.6.1重启</h6><ul><li><p>halt</p></li><li><p>reboot</p></li></ul><h6 id="7-6-2-关机或重启"><a href="#7-6-2-关机或重启" class="headerlink" title="7.6.2 关机或重启"></a>7.6.2 关机或重启</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">shutdown  <br>- r :重启<br>- h :关机<br>指定时间关机或重启<br>shutdown -r 15:00  # 15:00重启<br>shutdown -h 15:00  # 15:00关机<br><br>shutdown -c # 取消<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>看完这篇还敢说你不会git生成ssh密钥</title>
    <link href="/2022/07/13/git-ssh/"/>
    <url>/2022/07/13/git-ssh/</url>
    
    <content type="html"><![CDATA[<!--more--><ul><li>注：以下命令全部在git bash完成</li></ul><h1 id="1-查看是否配置邮箱和用户名"><a href="#1-查看是否配置邮箱和用户名" class="headerlink" title="1.查看是否配置邮箱和用户名"></a>1.查看是否配置邮箱和用户名</h1><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">git config</span> <span class="hljs-literal">--</span><span class="hljs-comment">global</span>  <span class="hljs-literal">--</span><span class="hljs-comment">list</span><br></code></pre></td></tr></table></figure><p>如图所示，则代表已经配置完成<br><img src="/../image.assets/1657717726161.png" alt="1657717726161"></p><h1 id="2-配置用户名和邮箱"><a href="#2-配置用户名和邮箱" class="headerlink" title="2.配置用户名和邮箱"></a>2.配置用户名和邮箱</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span>  user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;这里换上你的用户名&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;这里换上你的邮箱&quot;</span><br></code></pre></td></tr></table></figure><h1 id="3-查看是否已经生成密钥"><a href="#3-查看是否已经生成密钥" class="headerlink" title="3.查看是否已经生成密钥"></a>3.查看是否已经生成密钥</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/.ssh<br>ls -a<br></code></pre></td></tr></table></figure><p>如图所示，代表已经生成密钥  </p><p><img src="/../image.assets/1657718034760.png" alt="1657718034760"></p><ul><li>id_rsa文件是私钥，要保存好，放在本地，私钥可以生产公钥，反之不行。</li><li>id_rsa.pub文件是公钥，可以用于发送到其他服务器，或者git上</li></ul><h1 id="4-生成密钥"><a href="#4-生成密钥" class="headerlink" title="4.生成密钥"></a>4.生成密钥</h1><ul><li>执行ssh-keygen -t rsa -c</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -c <span class="hljs-string">&quot;这是你的邮箱&quot;</span>  <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020061522162896.png">  </p><ul><li>点击enter,输入密码</li></ul><p><img src="https://img-blog.csdnimg.cn/2020061522182269.png">  </p><ul><li>点击enter，确认密码</li></ul><p><img src="https://img-blog.csdnimg.cn/20200615221909168.png">  </p><ul><li>如图，创建成功</li></ul><p><img src="/../image.assets/1657719024137.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题如何添加按钮和标签</title>
    <link href="/2022/07/08/Fluid_hexo_server/"/>
    <url>/2022/07/08/Fluid_hexo_server/</url>
    
    <content type="html"><![CDATA[<!--more--><h1 id="1-hexo添加Button方法"><a href="#1-hexo添加Button方法" class="headerlink" title="1.hexo添加Button方法"></a>1.hexo添加Button方法</h1><p>你可以在 markdown 中加入如下的代码来使用 Button：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs hexo">&#123;% btn url, text, title %&#125; <br></code></pre></td></tr></table></figure><p>或者使用 HTML 形式：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>text<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <br></code></pre></td></tr></table></figure><p>url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选） </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>长河落日袁先生<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>  <br></code></pre></td></tr></table></figure><p class="note note-primary">长河落日袁先生</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-success&quot;</span>&gt;</span>success<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <br><br></code></pre></td></tr></table></figure><p class="note note-success">success</p> ]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于作者</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h1><p>为什么我要搭建这个博客呢？ 因为生命在于折腾 因为平时学习查找资料的时候，偶尔会发现一些非常精致的个人网站，那个时候就在想，什么时候俺也要整一个，然后用来写博客 。无奈由于各种原因 (懒)，一直没有捡起来，后来总算是找到一个不错的应用，折腾着建起来了，也打算督促自己克服懒癌，来记录一些东西。</p>]]></content>
    
  </entry>
  
  
  
</search>
